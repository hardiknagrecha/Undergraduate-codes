

HI-TECH Software PICC Macro Assembler V9.65PL1 build 4898 
                                                      Tue Jul 03 12:58:25 2012

HI-TECH Software Omniscient Code Generator build 4898
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code 
                                 Generator build 4898"
     2                           
     3                           	processor	16F877A
     4                           clrc	macro
     5                           	bcf	status,0
     6  0000                     	endm
     7                           clrz	macro
     8                           	bcf	status,2
     9  0000                     	endm
    10                           setc	macro
    11                           	bsf	status,0
    12  0000                     	endm
    13                           setz	macro
    14                           	bsf	status,2
    15  0000                     	endm
    16                           skipc	macro
    17                           	btfss	status,0
    18  0000                     	endm
    19                           skipz	macro
    20                           	btfss	status,2
    21  0000                     	endm
    22                           skipnc	macro
    23                           	btfsc	status,0
    24  0000                     	endm
    25                           skipnz	macro
    26                           	btfsc	status,2
    27  0000                     	endm
    28  0000                     indf	equ	0
    29  0000                     indf0	equ	0
    30  0000                     pc	equ	2
    31  0000                     pcl	equ	2
    32  0000                     status	equ	3
    33  0000                     fsr	equ	4
    34  0000                     fsr0	equ	4
    35  0000                     c	equ	1
    36  0000                     z	equ	0
    37  0000                     pclath	equ	10
    38                           # 14 "C:\Users\hardik\Desktop\LM35 temp sensor\
                                 main.h"
    39                           	psect config,class=CONFIG,delta=2 ;#
    40                           # 14 "C:\Users\hardik\Desktop\LM35 temp sensor\
                                 main.h"
    41  2007  2F0A               	dw 0x2F0A ;#
    42                           	FNCALL _LCDWriteString,stringtab
    43                           	FNCALL _LCDWriteString,stringtab
    44                           	FNCALL _LCDWriteString,stringtab
    45                           	FNCALL _LCDWriteString,stringtab
    46                           	FNCALL _LCDWriteString,stringtab
    47                           	FNCALL _LCDWriteString,stringtab
    48                           global __tempreg
    49  0000                     __tempreg	set	32
    50                           global __Lrdata_0, __Hrdata_0
    51  0000                     __Lrdata_0	equ	0x78
    52  0000                     __Hrdata_0	equ	0x7E
    53                           global __Lramdata, __Lrdata_0, __Hramdata, __Hr
                                 data_0
    54  0000                     __Lramdata	set	__Lrdata_0
    55  0000                     __Hramdata	set	__Hrdata_0
    56                           	GLOBAL	__databank
    57  0000                     __databank	EQU	-1
    58                           	FNCALL _LCDWriteString,stringtab
    59                           	FNCALL _LCDWriteString,stringtab
    60                           	FNCALL _LCDWriteString,stringtab
    61                           	FNCALL _LCDWriteString,stringtab
    62                           	FNCALL _LCDWriteString,stringtab
    63                           	FNCALL _LCDWriteString,stringtab
    64                           	FNCALL _LCDWriteString,stringtab
    65                           	FNCALL _LCDWriteString,stringtab
    66  0000                     _main_z	equ	??_main+0
    67                           	global	_main_z
    68  0000                     _main_x	equ	??_main+2
    69                           	global	_main_x
    70  0000                     _main_y	equ	??_main+4
    71                           	global	_main_y
    72  0000                     _main_c	equ	??_main+6
    73                           	global	_main_c
    74  0000                     _main_temperature	equ	??_main+8
    75                           	global	_main_temperature
    76  0000                     _main_f	equ	??_main+11
    77                           	global	_main_f
    78  0000                     _main_p	equ	??_main+14
    79                           	global	_main_p
    80  0000                     _main_r	equ	??_main+17
    81                           	global	_main_r
    82  0000                     _main_nettemp	equ	??_main+20
    83                           	global	_main_nettemp
    84  0000                     _main_q	equ	??_main+23
    85                           	global	_main_q
    86  0000                     ___wmul_product	equ	??___wmul+0
    87                           	global	___wmul_product
    88  0000                     ___wmul_multiplier	equ	?___wmul+0
    89                           	global	___wmul_multiplier
    90  0000                     ___wmul_multiplicand	equ	?___wmul+2
    91                           	global	___wmul_multiplicand
    92  0000                     _LCDDisplayInitializing_i	equ	??_LCDDisplayInit
                                 ializing+0
    93                           	global	_LCDDisplayInitializing_i
    94  0000                     ___lwtoft_f1	equ	??___lwtoft+0
    95                           	global	___lwtoft_f1
    96  0000                     ___lwtoft_c	equ	?___lwtoft+0
    97                           	global	___lwtoft_c
    98  0000                     _LCDWriteFloat_i	equ	??_LCDWriteFloat+0
    99                           	global	_LCDWriteFloat_i
   100  0000                     _LCDWriteFloat_Temp	equ	??_LCDWriteFloat+1
   101                           	global	_LCDWriteFloat_Temp
   102  0000                     _LCDWriteFloat_n	equ	??_LCDWriteFloat+3
   103                           	global	_LCDWriteFloat_n
   104  0000                     _LCDWriteFloat_c	equ	??_LCDWriteFloat+5
   105                           	global	_LCDWriteFloat_c
   106  0000                     _LCDWriteFloat_FloatNumber	equ	?_LCDWriteFloat+
                                 0
   107                           	global	_LCDWriteFloat_FloatNumber
   108  0000                     ___ftdiv_exp2	equ	??___ftdiv+0
   109                           	global	___ftdiv_exp2
   110  0000                     ___ftdiv_sign1	equ	??___ftdiv+1
   111                           	global	___ftdiv_sign1
   112  0000                     ___ftdiv_exp1	equ	??___ftdiv+2
   113                           	global	___ftdiv_exp1
   114  0000                     ___ftdiv_sign2	equ	??___ftdiv+3
   115                           	global	___ftdiv_sign2
   116  0000                     ___ftdiv_f3	equ	??___ftdiv+4
   117                           	global	___ftdiv_f3
   118  0000                     ___ftdiv_f1	equ	?___ftdiv+0
   119                           	global	___ftdiv_f1
   120  0000                     ___ftdiv_f2	equ	?___ftdiv+3
   121                           	global	___ftdiv_f2
   122  0000                     _LCDWriteInteger_i	equ	??_LCDWriteInteger+0
   123                           	global	_LCDWriteInteger_i
   124  0000                     _LCDWriteInteger_c	equ	??_LCDWriteInteger+1
   125                           	global	_LCDWriteInteger_c
   126  0000                     _LCDWriteInteger_IntegerNumber	equ	?_LCDWriteIn
                                 teger+0
   127                           	global	_LCDWriteInteger_IntegerNumber
   128  0000                     ___fttol_sign1	equ	??___fttol+0
   129                           	global	___fttol_sign1
   130  0000                     ___fttol_exp1	equ	??___fttol+1
   131                           	global	___fttol_exp1
   132  0000                     ___fttol_lval	equ	??___fttol+2
   133                           	global	___fttol_lval
   134  0000                     ___fttol_f1	equ	?___fttol+0
   135                           	global	___fttol_f1
   136  0000                     ___ftmul_sign1	equ	??___ftmul+0
   137                           	global	___ftmul_sign1
   138  0000                     ___ftmul_exp1	equ	??___ftmul+1
   139                           	global	___ftmul_exp1
   140  0000                     ___ftmul_cntr	equ	??___ftmul+2
   141                           	global	___ftmul_cntr
   142  0000                     ___ftmul_f3	equ	??___ftmul+3
   143                           	global	___ftmul_f3
   144  0000                     ___ftmul_f1	equ	?___ftmul+0
   145                           	global	___ftmul_f1
   146  0000                     ___ftmul_f2	equ	?___ftmul+3
   147                           	global	___ftmul_f2
   148  0000                     ___ftge_ff1	equ	?___ftge+0
   149                           	global	___ftge_ff1
   150  0000                     ___ftge_ff2	equ	?___ftge+3
   151                           	global	___ftge_ff2
   152  0000                     ___awtoft_f1	equ	??___awtoft+0
   153                           	global	___awtoft_f1
   154  0000                     ___awtoft_c	equ	?___awtoft+0
   155                           	global	___awtoft_c
   156  0000                     _LCDWriteString_lcd_string	equ	??_LCDWriteStrin
                                 g+0
   157                           	global	_LCDWriteString_lcd_string
   158  0000                     ___ftsub_f1	equ	?___ftsub+0
   159                           	global	___ftsub_f1
   160  0000                     ___ftsub_f2	equ	?___ftsub+3
   161                           	global	___ftsub_f2
   162  0000                     ___ftadd_sign2	equ	??___ftadd+0
   163                           	global	___ftadd_sign2
   164  0000                     ___ftadd_cntr	equ	??___ftadd+1
   165                           	global	___ftadd_cntr
   166  0000                     ___ftadd_sign1	equ	??___ftadd+2
   167                           	global	___ftadd_sign1
   168  0000                     ___ftadd_exp2	equ	??___ftadd+3
   169                           	global	___ftadd_exp2
   170  0000                     ___ftadd_exp1	equ	??___ftadd+4
   171                           	global	___ftadd_exp1
   172  0000                     ___ftadd_f1	equ	?___ftadd+0
   173                           	global	___ftadd_f1
   174  0000                     ___ftadd_f2	equ	?___ftadd+3
   175                           	global	___ftadd_f2
   176  0000                     ___ftneg_f1	equ	?___ftneg+0
   177                           	global	___ftneg_f1
   178  0000                     _LCDWriteData_LCDData	equ	??_LCDWriteData+0
   179                           	global	_LCDWriteData_LCDData
   180  0000                     ___awdiv_counter	equ	??___awdiv+0
   181                           	global	___awdiv_counter
   182  0000                     ___awdiv_sign	equ	??___awdiv+1
   183                           	global	___awdiv_sign
   184  0000                     ___awdiv_quotient	equ	??___awdiv+2
   185                           	global	___awdiv_quotient
   186  0000                     ___awdiv_dividend	equ	?___awdiv+0
   187                           	global	___awdiv_dividend
   188  0000                     ___awdiv_divisor	equ	?___awdiv+2
   189                           	global	___awdiv_divisor
   190  0000                     ___awmod_sign	equ	??___awmod+0
   191                           	global	___awmod_sign
   192  0000                     ___awmod_counter	equ	??___awmod+1
   193                           	global	___awmod_counter
   194  0000                     ___awmod_dividend	equ	?___awmod+0
   195                           	global	___awmod_dividend
   196  0000                     ___awmod_divisor	equ	?___awmod+2
   197                           	global	___awmod_divisor
   198  0000                     _LCDWriteCommand_LCDData	equ	??_LCDWriteCommand
                                 +0
   199                           	global	_LCDWriteCommand_LCDData
   200  0000                     ___ftpack_arg	equ	??___ftpack+0
   201                           	global	___ftpack_arg
   202  0000                     ___ftpack_exp	equ	?___ftpack+0
   203                           	global	___ftpack_exp
   204  0000                     ___ftunpack_arg	equ	??___ftunpack+0
   205                           	global	___ftunpack_arg
   206  0000                     ___ftunpack_sign	equ	??___ftunpack+1
   207                           	global	___ftunpack_sign
   208  0000                     ___ftunpack_exp	equ	?___ftunpack+0
   209                           	global	___ftunpack_exp
   210  0000                     _LCDWriteByte_LCDData	equ	??_LCDWriteByte+0
   211                           	global	_LCDWriteByte_LCDData
   212  0000                     _Delay_pause	equ	??_Delay+0
   213                           	global	_Delay_pause
   214  0000                     _Delay_time	equ	?_Delay+0
   215                           	global	_Delay_time
   216                           ;Data sizes: Strings 36, constant 0, data 6, bs
                                 s 0, persistent 0 stack 68
   217                           	global	_main
   218                           	global	??_main
   219                           	global	?_main
   220                           
   221                           ; *************** function _main **************
                                 *
   222                           ; Defined at:
   223                           ;		line 6 in file "C:\Users\hardik\Desktop\LM35
                                  temp sensor\main.c"
   224                           ; Parameters:
   225                           ;		None
   226                           ; Auto variables:
   227                           ;		Count       	       	type: unsigned char 
   228                           ;		temp        	       	type: unsigned int 
   229                           ;		y           	       	type: unsigned int 
   230                           ;		c           	       	type: unsigned int 
   231                           ;		z           	       	type: unsigned int 
   232                           ;		x           	       	type: unsigned int 
   233                           ;		g           	       	type: float 
   234                           ;		f           	       	type: float 
   235                           ;		temperature 	       	type: float 
   236                           ;		p           	       	type: float 
   237                           ;		nettemp     	       	type: float 
   238                           ;		r           	       	type: float 
   239                           ;		q           	       	type: float 
   240                           ; Return value:
   241                           ;		type: void 
   242                           ;		size: 0
   243                           ; Registers used:
   244                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
                                 th, cstack
   245                           ; Tracked objects:
   246                           ;		On entry : BFF/0
   247                           ;		On exit  : 0/0
   248                           ;		Unchanged: 0/0
   249                           ; Data sizes:
   250                           ;		Autos:   26
   251                           ;		Params:   0
   252                           ;		Temp:     2
   253                           ;		Total:   28
   254                           ; This function calls:
   255                           ;		_MainSystemInitialize
   256                           ;		_LCDDisplayInitializing
   257                           ;		_LCDWriteCommand
   258                           ;		_LCDWriteString
   259                           ;		___ftge
   260                           ;		_Delay
   261                           ;		___wmul
   262                           ;		___lwtoft
   263                           ;		___ftmul
   264                           ;		___ftdiv
   265                           ;		___ftadd
   266                           ;		_LCDWriteFloat
   267                           ; This function is called by:
   268                           ;		Startup code after reset
   269                           ; This function uses a non-reentrant model
   270                           ; 
   271                           	psect	maintext,class=CODE,delta=2
   272                           	file	"C:\Users\hardik\Desktop\LM35 temp sensor
                                 \main.c"
   273                           	line	6
   274                           	psect	maintext
   275                           ;main.c: 3: int i=48,j=48,k=48;
   276                           ;main.c: 5: void main(void)
   277                           ;main.c: 6: {
   278                           	
   279  0018                     _main:	
   280                           	opt stack 7
   281                           ; Regs used in _main: [wreg-fsr0h+status,2+stat
                                 us,0+pclath+cstack]
   282                           	line	8
   283                           ;main.c: 7: unsigned char Count;
   284                           ;main.c: 8: unsigned int z,temp,x,y,c=0xff;
   285  0018  30FF               	movlw	low(0FFh)
   286                           	
   287  0019  00A6               	movwf	(_main_c)
   288  001A  3000               	movlw	high(0FFh)
   289  001B  00A7               	movwf	((_main_c))+1
   290                           	line	9
   291                           ;main.c: 9: float g,q,r,p=0,f,temperature,nette
                                 mp;
   292                           	
   293  001C  3000               	movlw	0x0
   294  001D  00AE               	movwf	(_main_p)
   295  001E  3000               	movlw	0x0
   296  001F  00AF               	movwf	(_main_p+1)
   297  0020  3000               	movlw	0x0
   298  0021  00B0               	movwf	(_main_p+2)
   299                           	line	10
   300                           ;main.c: 10: MainSystemInitialize();
   301  0022  120A  158A  2562   	fcall	_MainSystemInitialize
              120A  118A         
   302                           	line	11
   303                           ;main.c: 11: LCDDisplayInitializing();
   304  0027  120A  158A  268B   	fcall	_LCDDisplayInitializing
              120A  118A         
   305                           	line	15
   306                           ;main.c: 15: TRISC=0;
   307  002C  1003               	clrc
   308  002D  1683               	bsf	status, 5	;RP0=1, select bank1
   309  002E  1303               	bcf	status, 6	;RP1=0, select bank1
   310                           	
   311  002F  3000               	movlw	0
   312  0030  1803               	btfsc	status,0
   313  0031  3001               	movlw	1
   314  0032  0087               	movwf	(135)^080h	;volatile
   315                           	line	16
   316                           ;main.c: 16: TRISD=0;
   317  0033  1003               	clrc
   318                           	
   319  0034  3000               	movlw	0
   320  0035  1803               	btfsc	status,0
   321  0036  3001               	movlw	1
   322  0037  0088               	movwf	(136)^080h	;volatile
   323                           	line	18
   324                           ;main.c: 18: ADON = 1;
   325  0038  1283               	bcf	status, 5	;RP0=0, select bank0
   326  0039  1303               	bcf	status, 6	;RP1=0, select bank0
   327  003A  141F               	bsf	(248/8),(248)&7
   328                           	line	19
   329                           ;main.c: 19: ADFM = 1;
   330  003B  1683               	bsf	status, 5	;RP0=1, select bank1
   331  003C  1303               	bcf	status, 6	;RP1=0, select bank1
   332  003D  179F               	bsf	(1279/8)^080h,(1279)&7
   333                           	line	20
   334                           ;main.c: 20: ADCS2 = ADCS0 = 0;
   335  003E  1283               	bcf	status, 5	;RP0=0, select bank0
   336  003F  1303               	bcf	status, 6	;RP1=0, select bank0
   337  0040  131F               	bcf	(254/8),(254)&7
   338  0041  1683               	bsf	status, 5	;RP0=1, select bank1
   339  0042  1303               	bcf	status, 6	;RP1=0, select bank1
   340  0043  131F               	bcf	(1278/8)^080h,(1278)&7
   341                           	line	21
   342                           ;main.c: 21: ADCS1 =0;
   343  0044  1283               	bcf	status, 5	;RP0=0, select bank0
   344  0045  1303               	bcf	status, 6	;RP1=0, select bank0
   345  0046  139F               	bcf	(255/8),(255)&7
   346                           	line	22
   347                           ;main.c: 22: PCFG3 = PCFG2 = PCFG1 =0;
   348  0047  1683               	bsf	status, 5	;RP0=1, select bank1
   349  0048  1303               	bcf	status, 6	;RP1=0, select bank1
   350  0049  109F               	bcf	(1273/8)^080h,(1273)&7
   351  004A  111F               	bcf	(1274/8)^080h,(1274)&7
   352  004B  119F               	bcf	(1275/8)^080h,(1275)&7
   353                           	line	23
   354                           ;main.c: 23: PCFG0 = 0;
   355  004C  101F               	bcf	(1272/8)^080h,(1272)&7
   356                           	line	26
   357                           ;main.c: 26: ADON=1;
   358  004D  1283               	bcf	status, 5	;RP0=0, select bank0
   359  004E  1303               	bcf	status, 6	;RP1=0, select bank0
   360  004F  141F               	bsf	(248/8),(248)&7
   361                           	line	28
   362                           ;main.c: 28: LCDWriteCommand(0x01);
   363  0050  3001               	movlw	(01h)
   364  0051  120A  158A  2573   	fcall	_LCDWriteCommand
              120A  118A         
   365+                          	line	29
   366+                          ;main.c: 29: LCDWriteString("Temperature is:");
   367+ 0056  3012               	movlw	((STR_4-__stringbase))&0ffh
   368+ 0057  120A  118A  21CB   	fcall	_LCDWriteString
      +       120A  118A         
   369                           	line	31
   370                           ;main.c: 31: while(1)
   371                           	
   372  005C                     l50:	
   373                           	line	33
   374                           ;main.c: 32: {
   375                           ;main.c: 33: r=0;
   376  005C  1283               	bcf	status, 5	;RP0=0, select bank0
   377  005D  1303               	bcf	status, 6	;RP1=0, select bank0
   378                           	
   379  005E  3000               	movlw	0x0
   380  005F  00B1               	movwf	(_main_r)
   381  0060  3000               	movlw	0x0
   382  0061  00B2               	movwf	(_main_r+1)
   383  0062  3000               	movlw	0x0
   384  0063  00B3               	movwf	(_main_r+2)
   385                           	line	34
   386                           ;main.c: 34: nettemp=0;
   387                           	
   388  0064  3000               	movlw	0x0
   389  0065  00B4               	movwf	(_main_nettemp)
   390  0066  3000               	movlw	0x0
   391  0067  00B5               	movwf	(_main_nettemp+1)
   392  0068  3000               	movlw	0x0
   393  0069  00B6               	movwf	(_main_nettemp+2)
   394                           	line	35
   395                           ;main.c: 35: for(q=0;q<100;q++)
   396                           	
   397  006A  3000               	movlw	0x0
   398  006B  00B7               	movwf	(_main_q)
   399  006C  3000               	movlw	0x0
   400  006D  00B8               	movwf	(_main_q+1)
   401  006E  3000               	movlw	0x0
   402  006F  00B9               	movwf	(_main_q+2)
   403                           	
   404  0070  3000               	movlw	0x0
   405  0071  00CE               	movwf	(0+(?___ftge)+03h)
   406  0072  30C8               	movlw	0xc8
   407  0073  00CF               	movwf	(1+(?___ftge)+03h)
   408  0074  3042               	movlw	0x42
   409  0075  00D0               	movwf	(2+(?___ftge)+03h)
   410                           	
   411                           	
   412  0076  0837               	movf	(_main_q),w
   413  0077  00CB               	movwf	(?___ftge)
   414  0078  0838               	movf	(_main_q+1),w
   415  0079  00CC               	movwf	(?___ftge+1)
   416  007A  0839               	movf	(_main_q+2),w
   417  007B  00CD               	movwf	(?___ftge+2)
   418  007C  120A  158A  26C3   	fcall	___ftge
              120A  118A         
   419  0081  1C03               	btfss	status,0
   420  0082  2884               	goto	u2531
   421  0083  2885               	goto	u2530
   422  0084                     u2531:
   423  0084  2886               	goto	l52
   424  0085                     u2530:
   425  0085  2957               	goto	l53
   426                           	line	36
   427                           	
   428  0086                     l52:	
   429                           	line	37
   430                           ;main.c: 36: {
   431                           ;main.c: 37: Delay(1);
   432  0086  3001               	movlw	low(01h)
   433  0087  1283               	bcf	status, 5	;RP0=0, select bank0
   434  0088  1303               	bcf	status, 6	;RP1=0, select bank0
   435                           	
   436  0089  00D8               	movwf	(?_Delay)
   437  008A  3000               	movlw	high(01h)
   438  008B  00D9               	movwf	((?_Delay))+1
   439  008C  120A  158A  25AA   	fcall	_Delay
              120A  118A         
   440                           	line	38
   441                           ;main.c: 38: ADCON0|=0x04;
   442  0091  1283               	bcf	status, 5	;RP0=0, select bank0
   443  0092  1303               	bcf	status, 6	;RP1=0, select bank0
   444                           	
   445  0093  151F               	bsf	(31)+(2/8),(2)&7	;volatile
   446                           	line	39
   447                           ;main.c: 39: while((ADCON0&0x02)==1);
   448  0094  2895               	goto	l55
   449                           	
   450  0095                     l55:	
   451                           	
   452  0095  081F               	movf	(31),w	;volatile
   453  0096  3902               	andlw	02h
   454  0097  3A01               	xorlw	01h
   455  0098  1903               	skipnz
   456  0099  289B               	goto	u2541
   457  009A  289C               	goto	u2540
   458  009B                     u2541:
   459  009B  2895               	goto	l55
   460  009C                     u2540:
   461                           	
   462  009C                     l57:	
   463                           	line	40
   464                           ;main.c: 40: PORTB=ADRESL;
   465  009C  1683               	bsf	status, 5	;RP0=1, select bank1
   466  009D  1303               	bcf	status, 6	;RP1=0, select bank1
   467                           	
   468  009E  081E               	movf	(158)^080h,w	;volatile
   469  009F  1283               	bcf	status, 5	;RP0=0, select bank0
   470  00A0  1303               	bcf	status, 6	;RP1=0, select bank0
   471                           	
   472  00A1  0086               	movwf	(6)	;volatile
   473                           	line	41
   474                           ;main.c: 41: PORTD=ADRESH;
   475                           	
   476  00A2  081E               	movf	(30),w	;volatile
   477                           	
   478  00A3  0088               	movwf	(8)	;volatile
   479                           	line	42
   480                           ;main.c: 42: x=ADRESH;
   481                           	
   482  00A4  081E               	movf	(30),w	;volatile
   483  00A5  00BA               	movwf	(??_main+26+0)
   484  00A6  01BB               	clrf	(??_main+26+0+1)
   485                           	
   486  00A7  083A               	movf	0+(??_main+26+0),w
   487  00A8  00A2               	movwf	(_main_x)
   488  00A9  083B               	movf	1+(??_main+26+0),w
   489  00AA  00A3               	movwf	(_main_x+1)
   490                           	line	43
   491                           ;main.c: 43: y=ADRESL;
   492  00AB  1683               	bsf	status, 5	;RP0=1, select bank1
   493  00AC  1303               	bcf	status, 6	;RP1=0, select bank1
   494                           	
   495  00AD  081E               	movf	(158)^080h,w	;volatile
   496  00AE  1283               	bcf	status, 5	;RP0=0, select bank0
   497  00AF  1303               	bcf	status, 6	;RP1=0, select bank0
   498  00B0  00BA               	movwf	(??_main+26+0)
   499  00B1  01BB               	clrf	(??_main+26+0+1)
   500                           	
   501  00B2  083A               	movf	0+(??_main+26+0),w
   502  00B3  00A4               	movwf	(_main_y)
   503  00B4  083B               	movf	1+(??_main+26+0),w
   504  00B5  00A5               	movwf	(_main_y+1)
   505                           	line	44
   506                           ;main.c: 44: z=(x*c)+y;
   507                           	
   508                           	
   509                           	
   510  00B6  0827               	movf	(_main_c+1),w
   511  00B7  01BF               	clrf	(1+(?___wmul)+02h)
   512  00B8  07BF               	addwf	(1+(?___wmul)+02h)
   513  00B9  0826               	movf	(_main_c),w
   514  00BA  01BE               	clrf	(0+(?___wmul)+02h)
   515  00BB  07BE               	addwf	(0+(?___wmul)+02h)
   516                           
   517                           	
   518                           	
   519  00BC  0823               	movf	(_main_x+1),w
   520  00BD  01BD               	clrf	(?___wmul+1)
   521  00BE  07BD               	addwf	(?___wmul+1)
   522  00BF  0822               	movf	(_main_x),w
   523  00C0  01BC               	clrf	(?___wmul)
   524  00C1  07BC               	addwf	(?___wmul)
   525                           
   526  00C2  120A  158A  25E0   	fcall	___wmul
              120A  118A         
   527  00C7  1283               	bcf	status, 5	;RP0=0, select bank0
   528  00C8  1303               	bcf	status, 6	;RP1=0, select bank0
   529  00C9  0824               	movf	(_main_y),w
   530  00CA  073C               	addwf	(0+?___wmul),w
   531                           	
   532  00CB  00A0               	movwf	(_main_z)
   533  00CC  0825               	movf	(_main_y+1),w
   534  00CD  1803               	skipnc
   535  00CE  0A25               	incf	(_main_y+1),w
   536  00CF  073D               	addwf	(1+?___wmul),w
   537  00D0  00A1               	movwf	1+(_main_z)
   538                           	line	45
   539                           ;main.c: 45: f=z;
   540                           	
   541                           	
   542  00D1  0821               	movf	(_main_z+1),w
   543  00D2  01BD               	clrf	(?___lwtoft+1)
   544  00D3  07BD               	addwf	(?___lwtoft+1)
   545  00D4  0820               	movf	(_main_z),w
   546  00D5  01BC               	clrf	(?___lwtoft)
   547  00D6  07BC               	addwf	(?___lwtoft)
   548                           
   549  00D7  120A  158A  260A   	fcall	___lwtoft
              120A  118A         
   550  00DC  1283               	bcf	status, 5	;RP0=0, select bank0
   551  00DD  1303               	bcf	status, 6	;RP1=0, select bank0
   552                           	
   553  00DE  083C               	movf	(0+?___lwtoft),w
   554  00DF  00AB               	movwf	(_main_f)
   555  00E0  083D               	movf	(1+?___lwtoft),w
   556  00E1  00AC               	movwf	(_main_f+1)
   557  00E2  083E               	movf	(2+?___lwtoft),w
   558  00E3  00AD               	movwf	(_main_f+2)
   559                           	line	46
   560                           ;main.c: 46: p =(f*5.79)/1023;
   561                           	
   562  00E4  3048               	movlw	0x48
   563  00E5  00CE               	movwf	(0+(?___ftmul)+03h)
   564  00E6  30B9               	movlw	0xb9
   565  00E7  00CF               	movwf	(1+(?___ftmul)+03h)
   566  00E8  3040               	movlw	0x40
   567  00E9  00D0               	movwf	(2+(?___ftmul)+03h)
   568                           	
   569                           	
   570  00EA  082B               	movf	(_main_f),w
   571  00EB  00CB               	movwf	(?___ftmul)
   572  00EC  082C               	movf	(_main_f+1),w
   573  00ED  00CC               	movwf	(?___ftmul+1)
   574  00EE  082D               	movf	(_main_f+2),w
   575  00EF  00CD               	movwf	(?___ftmul+2)
   576  00F0  120A  118A  23E1   	fcall	___ftmul
              120A  118A         
   577  00F5  1283               	bcf	status, 5	;RP0=0, select bank0
   578  00F6  1303               	bcf	status, 6	;RP1=0, select bank0
   579                           	
   580  00F7  084B               	movf	(0+?___ftmul),w
   581  00F8  00BC               	movwf	(?___ftdiv)
   582  00F9  084C               	movf	(1+?___ftmul),w
   583  00FA  00BD               	movwf	(?___ftdiv+1)
   584  00FB  084D               	movf	(2+?___ftmul),w
   585  00FC  00BE               	movwf	(?___ftdiv+2)
   586                           	
   587  00FD  30C0               	movlw	0xc0
   588  00FE  00BF               	movwf	(0+(?___ftdiv)+03h)
   589  00FF  307F               	movlw	0x7f
   590  0100  00C0               	movwf	(1+(?___ftdiv)+03h)
   591  0101  3044               	movlw	0x44
   592  0102  00C1               	movwf	(2+(?___ftdiv)+03h)
   593  0103  120A  118A  2352   	fcall	___ftdiv
              120A  118A         
   594  0108  1283               	bcf	status, 5	;RP0=0, select bank0
   595  0109  1303               	bcf	status, 6	;RP1=0, select bank0
   596                           	
   597  010A  083C               	movf	(0+?___ftdiv),w
   598  010B  00AE               	movwf	(_main_p)
   599  010C  083D               	movf	(1+?___ftdiv),w
   600  010D  00AF               	movwf	(_main_p+1)
   601  010E  083E               	movf	(2+?___ftdiv),w
   602  010F  00B0               	movwf	(_main_p+2)
   603                           	line	47
   604                           ;main.c: 47: r=r+p;
   605                           	
   606                           	
   607  0110  082E               	movf	(_main_p),w
   608  0111  00D4               	movwf	(0+(?___ftadd)+03h)
   609  0112  082F               	movf	(_main_p+1),w
   610  0113  00D5               	movwf	(1+(?___ftadd)+03h)
   611  0114  0830               	movf	(_main_p+2),w
   612  0115  00D6               	movwf	(2+(?___ftadd)+03h)
   613                           	
   614                           	
   615  0116  0831               	movf	(_main_r),w
   616  0117  00D1               	movwf	(?___ftadd)
   617  0118  0832               	movf	(_main_r+1),w
   618  0119  00D2               	movwf	(?___ftadd+1)
   619  011A  0833               	movf	(_main_r+2),w
   620  011B  00D3               	movwf	(?___ftadd+2)
   621  011C  120A  118A  2484   	fcall	___ftadd
              120A  118A         
   622  0121  1283               	bcf	status, 5	;RP0=0, select bank0
   623  0122  1303               	bcf	status, 6	;RP1=0, select bank0
   624                           	
   625  0123  0851               	movf	(0+?___ftadd),w
   626  0124  00B1               	movwf	(_main_r)
   627  0125  0852               	movf	(1+?___ftadd),w
   628  0126  00B2               	movwf	(_main_r+1)
   629  0127  0853               	movf	(2+?___ftadd),w
   630  0128  00B3               	movwf	(_main_r+2)
   631                           	line	35
   632                           	
   633  0129  3000               	movlw	0x0
   634  012A  00D4               	movwf	(0+(?___ftadd)+03h)
   635  012B  3080               	movlw	0x80
   636  012C  00D5               	movwf	(1+(?___ftadd)+03h)
   637  012D  303F               	movlw	0x3f
   638  012E  00D6               	movwf	(2+(?___ftadd)+03h)
   639                           	
   640                           	
   641  012F  0837               	movf	(_main_q),w
   642  0130  00D1               	movwf	(?___ftadd)
   643  0131  0838               	movf	(_main_q+1),w
   644  0132  00D2               	movwf	(?___ftadd+1)
   645  0133  0839               	movf	(_main_q+2),w
   646  0134  00D3               	movwf	(?___ftadd+2)
   647  0135  120A  118A  2484   	fcall	___ftadd
              120A  118A         
   648  013A  1283               	bcf	status, 5	;RP0=0, select bank0
   649  013B  1303               	bcf	status, 6	;RP1=0, select bank0
   650                           	
   651  013C  0851               	movf	(0+?___ftadd),w
   652  013D  00B7               	movwf	(_main_q)
   653  013E  0852               	movf	(1+?___ftadd),w
   654  013F  00B8               	movwf	(_main_q+1)
   655  0140  0853               	movf	(2+?___ftadd),w
   656  0141  00B9               	movwf	(_main_q+2)
   657                           	
   658  0142  3000               	movlw	0x0
   659  0143  00CE               	movwf	(0+(?___ftge)+03h)
   660  0144  30C8               	movlw	0xc8
   661  0145  00CF               	movwf	(1+(?___ftge)+03h)
   662  0146  3042               	movlw	0x42
   663  0147  00D0               	movwf	(2+(?___ftge)+03h)
   664                           	
   665                           	
   666  0148  0837               	movf	(_main_q),w
   667  0149  00CB               	movwf	(?___ftge)
   668  014A  0838               	movf	(_main_q+1),w
   669  014B  00CC               	movwf	(?___ftge+1)
   670  014C  0839               	movf	(_main_q+2),w
   671  014D  00CD               	movwf	(?___ftge+2)
   672  014E  120A  158A  26C3   	fcall	___ftge
              120A  118A         
   673  0153  1C03               	btfss	status,0
   674  0154  2956               	goto	u2551
   675  0155  2957               	goto	u2550
   676  0156                     u2551:
   677  0156  2886               	goto	l52
   678  0157                     u2550:
   679                           	
   680  0157                     l53:	
   681                           	line	50
   682                           ;main.c: 48: }
   683                           ;main.c: 50: nettemp=r/100;
   684  0157  1283               	bcf	status, 5	;RP0=0, select bank0
   685  0158  1303               	bcf	status, 6	;RP1=0, select bank0
   686                           	
   687  0159  3000               	movlw	0x0
   688  015A  00BF               	movwf	(0+(?___ftdiv)+03h)
   689  015B  30C8               	movlw	0xc8
   690  015C  00C0               	movwf	(1+(?___ftdiv)+03h)
   691  015D  3042               	movlw	0x42
   692  015E  00C1               	movwf	(2+(?___ftdiv)+03h)
   693                           	
   694                           	
   695  015F  0831               	movf	(_main_r),w
   696  0160  00BC               	movwf	(?___ftdiv)
   697  0161  0832               	movf	(_main_r+1),w
   698  0162  00BD               	movwf	(?___ftdiv+1)
   699  0163  0833               	movf	(_main_r+2),w
   700  0164  00BE               	movwf	(?___ftdiv+2)
   701  0165  120A  118A  2352   	fcall	___ftdiv
              120A  118A         
   702  016A  1283               	bcf	status, 5	;RP0=0, select bank0
   703  016B  1303               	bcf	status, 6	;RP1=0, select bank0
   704                           	
   705  016C  083C               	movf	(0+?___ftdiv),w
   706  016D  00B4               	movwf	(_main_nettemp)
   707  016E  083D               	movf	(1+?___ftdiv),w
   708  016F  00B5               	movwf	(_main_nettemp+1)
   709  0170  083E               	movf	(2+?___ftdiv),w
   710  0171  00B6               	movwf	(_main_nettemp+2)
   711                           	line	51
   712                           ;main.c: 51: temperature=nettemp*100;
   713                           	
   714  0172  3000               	movlw	0x0
   715  0173  00CE               	movwf	(0+(?___ftmul)+03h)
   716  0174  30C8               	movlw	0xc8
   717  0175  00CF               	movwf	(1+(?___ftmul)+03h)
   718  0176  3042               	movlw	0x42
   719  0177  00D0               	movwf	(2+(?___ftmul)+03h)
   720                           	
   721                           	
   722  0178  0834               	movf	(_main_nettemp),w
   723  0179  00CB               	movwf	(?___ftmul)
   724  017A  0835               	movf	(_main_nettemp+1),w
   725  017B  00CC               	movwf	(?___ftmul+1)
   726  017C  0836               	movf	(_main_nettemp+2),w
   727  017D  00CD               	movwf	(?___ftmul+2)
   728  017E  120A  118A  23E1   	fcall	___ftmul
              120A  118A         
   729  0183  1283               	bcf	status, 5	;RP0=0, select bank0
   730  0184  1303               	bcf	status, 6	;RP1=0, select bank0
   731                           	
   732  0185  084B               	movf	(0+?___ftmul),w
   733  0186  00A8               	movwf	(_main_temperature)
   734  0187  084C               	movf	(1+?___ftmul),w
   735  0188  00A9               	movwf	(_main_temperature+1)
   736  0189  084D               	movf	(2+?___ftmul),w
   737  018A  00AA               	movwf	(_main_temperature+2)
   738                           	line	59
   739                           ;main.c: 59: LCDWriteCommand(0x01);
   740  018B  3001               	movlw	(01h)
   741  018C  120A  158A  2573   	fcall	_LCDWriteCommand
              120A  118A         
   742                           	line	60
   743                           ;main.c: 60: LCDWriteCommand(0x80);
   744  0191  3080               	movlw	(080h)
   745  0192  120A  158A  2573   	fcall	_LCDWriteCommand
              120A  118A         
   746                           	line	61
   747                           ;main.c: 61: LCDWriteFloat(nettemp);
   748  0197  1283               	bcf	status, 5	;RP0=0, select bank0
   749  0198  1303               	bcf	status, 6	;RP1=0, select bank0
   750                           	
   751                           	
   752  0199  0834               	movf	(_main_nettemp),w
   753  019A  00BC               	movwf	(?_LCDWriteFloat)
   754  019B  0835               	movf	(_main_nettemp+1),w
   755  019C  00BD               	movwf	(?_LCDWriteFloat+1)
   756  019D  0836               	movf	(_main_nettemp+2),w
   757  019E  00BE               	movwf	(?_LCDWriteFloat+2)
   758  019F  120A  118A  25A2   	fcall	_LCDWriteFloat
              120A  118A         
   759                           	line	62
   760                           ;main.c: 62: LCDWriteCommand(0xC0);
   761  01A4  30C0               	movlw	(0C0h)
   762  01A5  120A  158A  2573   	fcall	_LCDWriteCommand
              120A  118A         
   763                           	line	63
   764                           ;main.c: 63: LCDWriteFloat(temperature);
   765  01AA  1283               	bcf	status, 5	;RP0=0, select bank0
   766  01AB  1303               	bcf	status, 6	;RP1=0, select bank0
   767                           	
   768                           	
   769  01AC  0828               	movf	(_main_temperature),w
   770  01AD  00BC               	movwf	(?_LCDWriteFloat)
   771  01AE  0829               	movf	(_main_temperature+1),w
   772  01AF  00BD               	movwf	(?_LCDWriteFloat+1)
   773  01B0  082A               	movf	(_main_temperature+2),w
   774  01B1  00BE               	movwf	(?_LCDWriteFloat+2)
   775  01B2  120A  118A  25A2   	fcall	_LCDWriteFloat
              120A  118A         
   776                           	line	64
   777                           ;main.c: 64: Delay(2000);
   778  01B7  30D0               	movlw	low(07D0h)
   779  01B8  1283               	bcf	status, 5	;RP0=0, select bank0
   780  01B9  1303               	bcf	status, 6	;RP1=0, select bank0
   781                           	
   782  01BA  00D8               	movwf	(?_Delay)
   783  01BB  3007               	movlw	high(07D0h)
   784  01BC  00D9               	movwf	((?_Delay))+1
   785  01BD  120A  158A  25AA   	fcall	_Delay
              120A  118A         
   786                           	line	66
   787                           	
   788  01C2                     l49:	
   789                           	line	31
   790  01C2  285C               	goto	l50
   791                           	global	start
   792  01C3  120A  118A  2800   	ljmp	start
   793                           ; =============== function _main ends =========
                                 ======
   794                           
   795                           GLOBAL __end_of_main
   796  01C6                     	__end_of_main:
   797                           	FNSIZE	_main,28,0
   798                           	psect	maintext
   799                           	line	68
   800                           	signat	_main,88
   801                           	global	___wmul
   802                           	global	??___wmul
   803                           	global	?___wmul
   804                           
   805                           ; *************** function ___wmul ************
                                 ***
   806                           ; Defined at:
   807                           ;		line 3 in file "C:\Program Files (x86)\HI-TE
                                 CH Software\PICC\PRO\9.65\sources\wmul.c"
   808                           ; Parameters:
   809                           ;		multiplier  	offs:   0	type: unsigned int 
   810                           ;		multiplicand	offs:   2	type: unsigned int 
   811                           ; Auto variables:
   812                           ;		product     	       	type: unsigned int 
   813                           ; Return value:
   814                           ;		type: unsigned int 
   815                           ;		size: 2
   816                           ; Registers used:
   817                           ;		wreg, status,2, status,0
   818                           ; Tracked objects:
   819                           ;		On entry : 300/0
   820                           ;		On exit  : 0/0
   821                           ;		Unchanged: 0/0
   822                           ; Data sizes:
   823                           ;		Autos:    2
   824                           ;		Params:   4
   825                           ;		Temp:     0
   826                           ;		Total:    6
   827                           ; This function calls:
   828                           ;		Nothing
   829                           ; This function is called by:
   830                           ;		_main
   831                           ; This function uses a non-reentrant model
   832                           ; 
   833                           	psect	text193,local,class=CODE,delta=2
   834                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\wmul.c"
   835                           	line	3
   836                           	
   837  0DE0                     ___wmul:	
   838                           	opt stack 6
   839                           ; Regs used in ___wmul: [wreg+status,2+status,0
                                 ]
   840                           	line	4
   841  0DE0  3000               	movlw	low(0)
   842                           	
   843  0DE1  00C0               	movwf	(___wmul_product)
   844  0DE2  3000               	movlw	high(0)
   845  0DE3  00C1               	movwf	((___wmul_product))+1
   846                           	line	6
   847                           	
   848  0DE4                     l67:	
   849                           	line	7
   850                           	
   851  0DE4  1C3C               	btfss	(___wmul_multiplier),(0)&7
   852  0DE5  2DE7               	goto	u2721
   853  0DE6  2DE8               	goto	u2720
   854  0DE7                     u2721:
   855  0DE7  2DEE               	goto	l68
   856  0DE8                     u2720:
   857                           	line	8
   858                           	
   859                           	
   860  0DE8  083E               	movf	(___wmul_multiplicand),w
   861  0DE9  07C0               	addwf	(___wmul_product),f
   862  0DEA  1803               	skipnc
   863  0DEB  0AC1               	incf	(___wmul_product+1),f
   864  0DEC  083F               	movf	(___wmul_multiplicand+1),w
   865  0DED  07C1               	addwf	(___wmul_product+1),f
   866                           	
   867  0DEE                     l68:	
   868                           	line	9
   869                           	
   870  0DEE  3001               	movlw	01h
   871  0DEF                     u2735:
   872  0DEF  1003               	clrc
   873  0DF0  0DBE               	rlf	(___wmul_multiplicand),f
   874  0DF1  0DBF               	rlf	(___wmul_multiplicand+1),f
   875  0DF2  3EFF               	addlw	-1
   876  0DF3  1D03               	skipz
   877  0DF4  2DEF               	goto	u2735
   878                           	line	10
   879                           	
   880  0DF5  3001               	movlw	01h
   881  0DF6                     u2745:
   882  0DF6  1003               	clrc
   883  0DF7  0CBD               	rrf	(___wmul_multiplier+1),f
   884  0DF8  0CBC               	rrf	(___wmul_multiplier),f
   885  0DF9  3EFF               	addlw	-1
   886  0DFA  1D03               	skipz
   887  0DFB  2DF6               	goto	u2745
   888                           	line	11
   889                           	
   890  0DFC  083D               	movf	((___wmul_multiplier+1)),w
   891  0DFD  043C               	iorwf	((___wmul_multiplier)),w
   892  0DFE  1D03               	skipz
   893  0DFF  2E01               	goto	u2751
   894  0E00  2E02               	goto	u2750
   895  0E01                     u2751:
   896  0E01  2DE4               	goto	l67
   897  0E02                     u2750:
   898                           	
   899  0E02                     l66:	
   900                           	line	12
   901                           	
   902                           	
   903  0E02  0841               	movf	(___wmul_product+1),w
   904  0E03  01BD               	clrf	(?___wmul+1)
   905  0E04  07BD               	addwf	(?___wmul+1)
   906  0E05  0840               	movf	(___wmul_product),w
   907  0E06  01BC               	clrf	(?___wmul)
   908  0E07  07BC               	addwf	(?___wmul)
   909                           
   910  0E08  2E09               	goto	l64
   911                           	line	13
   912  0E09                     l64:	
   913  0E09  0008               	return
   914                           ; =============== function ___wmul ends =======
                                 ========
   915                           
   916                           GLOBAL __end_of___wmul
   917  0E0A                     	__end_of___wmul:
   918                           	FNSIZE	___wmul,2,4
   919                           	signat	___wmul,8314
   920                           	global	_LCDDisplayInitializing
   921                           	global	??_LCDDisplayInitializing
   922                           	global	?_LCDDisplayInitializing
   923                           
   924                           ; *************** function _LCDDisplayInitializ
                                 ing ***************
   925                           ; Defined at:
   926                           ;		line 53 in file "C:\Users\hardik\Desktop\LM3
                                 5 temp sensor\LCD.c"
   927                           ; Parameters:
   928                           ;		None
   929                           ; Auto variables:
   930                           ;		i           	       	type: unsigned char 
   931                           ; Return value:
   932                           ;		type: void 
   933                           ;		size: 0
   934                           ; Registers used:
   935                           ;		wreg, status,2, status,0, pclath, cstack
   936                           ; Tracked objects:
   937                           ;		On entry : 0/0
   938                           ;		On exit  : 0/0
   939                           ;		Unchanged: 0/0
   940                           ; Data sizes:
   941                           ;		Autos:    1
   942                           ;		Params:   0
   943                           ;		Temp:     1
   944                           ;		Total:    2
   945                           ; This function calls:
   946                           ;		_LCDWriteString
   947                           ;		_LCDWriteCommand
   948                           ;		_LCDWriteData
   949                           ;		_Delay
   950                           ; This function is called by:
   951                           ;		_main
   952                           ; This function uses a non-reentrant model
   953                           ; 
   954                           	psect	text194,local,class=CODE,delta=2
   955                           	file	"C:\Users\hardik\Desktop\LM35 temp sensor
                                 \LCD.c"
   956                           	line	53
   957                           ;LCD.c: 52: void LCDDisplayInitializing(void)
   958                           ;LCD.c: 53: {
   959                           	
   960  0E8B                     _LCDDisplayInitializing:	
   961                           	opt stack 6
   962                           ; Regs used in _LCDDisplayInitializing: [wreg+s
                                 tatus,2+status,0+pclath+cstack]
   963                           	line	56
   964                           ;LCD.c: 55: LCDubyte i;
   965                           ;LCD.c: 56: LCDWriteString("INITIALIZING....");
   966  0E8B  3001               	movlw	((STR_1-__stringbase))&0ffh
   967  0E8C  120A  118A  21CB   	fcall	_LCDWriteString
              120A  158A         
   968                           	line	57
   969                           ;LCD.c: 57: LCDWriteCommand(0xC0);
   970  0E91  30C0               	movlw	(0C0h)
   971  0E92  120A  158A  2573   	fcall	_LCDWriteCommand
              120A  158A         
   972                           	line	58
   973                           ;LCD.c: 58: for(i = 0 ; i < 16; i++)
   974  0E97  1003               	clrc
   975  0E98  1283               	bcf	status, 5	;RP0=0, select bank0
   976  0E99  1303               	bcf	status, 6	;RP1=0, select bank0
   977                           	
   978  0E9A  3000               	movlw	0
   979  0E9B  1803               	btfsc	status,0
   980  0E9C  3001               	movlw	1
   981  0E9D  00BC               	movwf	(_LCDDisplayInitializing_i)
   982  0E9E  2E9F               	goto	l18
   983                           	line	59
   984                           	
   985  0E9F                     l18:	
   986                           	line	60
   987                           ;LCD.c: 59: {
   988                           ;LCD.c: 60: LCDWriteData(46);
   989  0E9F  302E               	movlw	(02Eh)
   990  0EA0  120A  158A  257E   	fcall	_LCDWriteData
              120A  158A         
   991                           	line	61
   992                           ;LCD.c: 61: Delay(100);
   993  0EA5  3064               	movlw	low(064h)
   994  0EA6  1283               	bcf	status, 5	;RP0=0, select bank0
   995  0EA7  1303               	bcf	status, 6	;RP1=0, select bank0
   996                           	
   997  0EA8  00D8               	movwf	(?_Delay)
   998  0EA9  3000               	movlw	high(064h)
   999  0EAA  00D9               	movwf	((?_Delay))+1
  1000  0EAB  120A  158A  25AA   	fcall	_Delay
              120A  158A         
  1001                           	line	58
  1002  0EB0  3001               	movlw	(01h)
  1003  0EB1  1283               	bcf	status, 5	;RP0=0, select bank0
  1004  0EB2  1303               	bcf	status, 6	;RP1=0, select bank0
  1005  0EB3  00BD               	movwf	(??_LCDDisplayInitializing+1+0)
  1006                           	
  1007  0EB4  083D               	movf	(??_LCDDisplayInitializing+1+0),w
  1008  0EB5  07BC               	addwf	(_LCDDisplayInitializing_i),f
  1009  0EB6  3010               	movlw	(010h)
  1010                           	
  1011  0EB7  023C               	subwf	(_LCDDisplayInitializing_i),w
  1012  0EB8  1C03               	skipc
  1013  0EB9  2EBB               	goto	u2571
  1014  0EBA  2EBC               	goto	u2570
  1015  0EBB                     u2571:
  1016  0EBB  2E9F               	goto	l18
  1017  0EBC                     u2570:
  1018                           	
  1019  0EBC                     l19:	
  1020                           	line	63
  1021                           ;LCD.c: 62: }
  1022                           ;LCD.c: 63: LCDWriteCommand(0x01);
  1023  0EBC  3001               	movlw	(01h)
  1024  0EBD  120A  158A  2573   	fcall	_LCDWriteCommand
              120A  158A         
  1025                           	line	64
  1026                           ;LCD.c: 64: }
  1027  0EC2                     l17:	
  1028  0EC2  0008               	return
  1029                           ; =============== function _LCDDisplayInitializ
                                 ing ends ===============
  1030                           
  1031                           GLOBAL __end_of_LCDDisplayInitializing
  1032  0EC3                     	__end_of_LCDDisplayInitializing:
  1033                           	FNSIZE	_LCDDisplayInitializing,2,0
  1034                           	signat	_LCDDisplayInitializing,88
  1035                           	global	___lwtoft
  1036                           	global	??___lwtoft
  1037                           	global	?___lwtoft
  1038                           
  1039                           ; *************** function ___lwtoft **********
                                 *****
  1040                           ; Defined at:
  1041                           ;		line 16 in file "C:\Program Files (x86)\HI-T
                                 ECH Software\PICC\PRO\9.65\sources\lwtoft.c"
  1042                           ; Parameters:
  1043                           ;		c           	offs:   0	type: unsigned int 
  1044                           ; Auto variables:
  1045                           ;		f1          	       	type: float 
  1046                           ; Return value:
  1047                           ;		type: float 
  1048                           ;		size: 3
  1049                           ; Registers used:
  1050                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
                                 th, cstack
  1051                           ; Tracked objects:
  1052                           ;		On entry : 300/0
  1053                           ;		On exit  : 0/0
  1054                           ;		Unchanged: 0/0
  1055                           ; Data sizes:
  1056                           ;		Autos:    3
  1057                           ;		Params:   3
  1058                           ;		Temp:     3
  1059                           ;		Total:    9
  1060                           ; This function calls:
  1061                           ;		___ftpack
  1062                           ; This function is called by:
  1063                           ;		_main
  1064                           ; This function uses a non-reentrant model
  1065                           ; 
  1066                           	psect	text195,local,class=CODE,delta=2
  1067                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\lwtoft.c"
  1068                           	line	16
  1069                           	
  1070  0E0A                     ___lwtoft:	
  1071                           	opt stack 6
  1072                           ; Regs used in ___lwtoft: [wreg-fsr0h+status,2+
                                 status,0+pclath+cstack]
  1073                           	line	19
  1074                           	
  1075  0E0A  083D               	movf	((___lwtoft_c+1)),w
  1076  0E0B  043C               	iorwf	((___lwtoft_c)),w
  1077  0E0C  1D03               	skipz
  1078  0E0D  2E0F               	goto	u2761
  1079  0E0E  2E10               	goto	u2760
  1080  0E0F                     u2761:
  1081  0E0F  2E17               	goto	l318
  1082  0E10                     u2760:
  1083                           	line	20
  1084                           	
  1085  0E10  3000               	movlw	0x0
  1086  0E11  00BC               	movwf	(?___lwtoft)
  1087  0E12  3000               	movlw	0x0
  1088  0E13  00BD               	movwf	(?___lwtoft+1)
  1089  0E14  3000               	movlw	0x0
  1090  0E15  00BE               	movwf	(?___lwtoft+2)
  1091  0E16  2E33               	goto	l317
  1092                           	
  1093  0E17                     l318:	
  1094                           	line	21
  1095                           	
  1096  0E17  083C               	movf	(___lwtoft_c),w
  1097  0E18  00C2               	movwf	(??___lwtoft+3+0)
  1098  0E19  083D               	movf	(___lwtoft_c+1),w
  1099  0E1A  00C3               	movwf	(??___lwtoft+3+0+1)
  1100  0E1B  01C4               	clrf	(??___lwtoft+3+0+2)
  1101                           	
  1102  0E1C  0842               	movf	(??___lwtoft+3+0),w
  1103  0E1D  00BF               	movwf	(___lwtoft_f1)
  1104  0E1E  0843               	movf	(??___lwtoft+3+1),w
  1105  0E1F  00C0               	movwf	(___lwtoft_f1+1)
  1106  0E20  0844               	movf	(??___lwtoft+3+2),w
  1107  0E21  00C1               	movwf	(___lwtoft_f1+2)
  1108                           	line	22
  1109  0E22  308E               	movlw	(08Eh)
  1110                           	
  1111  0E23  00DD               	movwf	(?___ftpack)
  1112                           	
  1113  0E24  303F               	movlw	((___lwtoft_f1))&0ffh
  1114  0E25  120A  118A  2739   	fcall	___ftpack
              120A  158A         
  1115                           	line	23
  1116  0E2A  1283               	bcf	status, 5	;RP0=0, select bank0
  1117  0E2B  1303               	bcf	status, 6	;RP1=0, select bank0
  1118                           	
  1119                           	
  1120  0E2C  083F               	movf	(___lwtoft_f1),w
  1121  0E2D  00BC               	movwf	(?___lwtoft)
  1122  0E2E  0840               	movf	(___lwtoft_f1+1),w
  1123  0E2F  00BD               	movwf	(?___lwtoft+1)
  1124  0E30  0841               	movf	(___lwtoft_f1+2),w
  1125  0E31  00BE               	movwf	(?___lwtoft+2)
  1126  0E32  2E33               	goto	l317
  1127                           	line	24
  1128  0E33                     l317:	
  1129  0E33  0008               	return
  1130                           ; =============== function ___lwtoft ends =====
                                 ==========
  1131                           
  1132                           GLOBAL __end_of___lwtoft
  1133  0E34                     	__end_of___lwtoft:
  1134                           	FNSIZE	___lwtoft,6,3
  1135                           	signat	___lwtoft,4219
  1136                           	global	_LCDWriteFloat
  1137                           	global	??_LCDWriteFloat
  1138                           	global	?_LCDWriteFloat
  1139                           
  1140                           ; *************** function _LCDWriteFloat *****
                                 **********
  1141                           ; Defined at:
  1142                           ;		line 93 in file "C:\Users\hardik\Desktop\LM3
                                 5 temp sensor\LCD.c"
  1143                           ; Parameters:
  1144                           ;		FloatNumber 	offs:   0	type: float 
  1145                           ; Auto variables:
  1146                           ;		i           	       	type: unsigned char 
  1147                           ;		Temp        	       	type: int 
  1148                           ;		n           	       	type: int 
  1149                           ;		c           	       	type: unsigned char [6]
  1150                           ; Return value:
  1151                           ;		type: void 
  1152                           ;		size: 0
  1153                           ; Registers used:
  1154                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
                                 th, cstack
  1155                           ; Tracked objects:
  1156                           ;		On entry : 300/0
  1157                           ;		On exit  : 0/0
  1158                           ;		Unchanged: 0/0
  1159                           ; Data sizes:
  1160                           ;		Autos:   11
  1161                           ;		Params:   3
  1162                           ;		Temp:     1
  1163                           ;		Total:   15
  1164                           ; This function calls:
  1165                           ;		___ftge
  1166                           ;		_LCDWriteData
  1167                           ;		___ftneg
  1168                           ;		___fttol
  1169                           ;		_LCDWriteInteger
  1170                           ;		___awtoft
  1171                           ;		___ftsub
  1172                           ;		___ftadd
  1173                           ;		___ftmul
  1174                           ;		___awmod
  1175                           ;		___awdiv
  1176                           ;		_LCDWriteCommand
  1177                           ;		_LCDWriteString
  1178                           ; This function is called by:
  1179                           ;		_main
  1180                           ; This function uses a non-reentrant model
  1181                           ; 
  1182                           	psect	text196,local,class=CODE,delta=2
  1183                           	file	"C:\Users\hardik\Desktop\LM35 temp sensor
                                 \LCD.c"
  1184                           	line	93
  1185                           ;LCD.c: 92: void LCDWriteFloat(float FloatNumbe
                                 r)
  1186                           ;LCD.c: 93: {
  1187                           	
  1188  05A2                     _LCDWriteFloat:	
  1189                           	opt stack 6
  1190                           ; Regs used in _LCDWriteFloat: [wreg-fsr0h+stat
                                 us,2+status,0+pclath+cstack]
  1191                           	line	95
  1192                           ;LCD.c: 94: unsigned char c[6];
  1193                           ;LCD.c: 95: unsigned char i = 0;
  1194  05A2  1003               	clrc
  1195                           	
  1196  05A3  3000               	movlw	0
  1197  05A4  1803               	btfsc	status,0
  1198  05A5  3001               	movlw	1
  1199  05A6  00BF               	movwf	(_LCDWriteFloat_i)
  1200                           	line	97
  1201                           ;LCD.c: 96: int n, Temp;
  1202                           ;LCD.c: 97: if(FloatNumber < 0)
  1203                           	
  1204  05A7  3000               	movlw	0x0
  1205  05A8  00CE               	movwf	(0+(?___ftge)+03h)
  1206  05A9  3000               	movlw	0x0
  1207  05AA  00CF               	movwf	(1+(?___ftge)+03h)
  1208  05AB  3000               	movlw	0x0
  1209  05AC  00D0               	movwf	(2+(?___ftge)+03h)
  1210                           	
  1211                           	
  1212  05AD  083C               	movf	(_LCDWriteFloat_FloatNumber),w
  1213  05AE  00CB               	movwf	(?___ftge)
  1214  05AF  083D               	movf	(_LCDWriteFloat_FloatNumber+1),w
  1215  05B0  00CC               	movwf	(?___ftge+1)
  1216  05B1  083E               	movf	(_LCDWriteFloat_FloatNumber+2),w
  1217  05B2  00CD               	movwf	(?___ftge+2)
  1218  05B3  120A  158A  26C3   	fcall	___ftge
              120A  118A         
  1219  05B8  1803               	btfsc	status,0
  1220  05B9  2DBB               	goto	u2581
  1221  05BA  2DBC               	goto	u2580
  1222  05BB                     u2581:
  1223  05BB  2DD7               	goto	l30
  1224  05BC                     u2580:
  1225                           	line	99
  1226                           ;LCD.c: 98: {
  1227                           ;LCD.c: 99: LCDWriteData('-');
  1228  05BC  302D               	movlw	(02Dh)
  1229  05BD  120A  158A  257E   	fcall	_LCDWriteData
              120A  118A         
  1230                           	line	100
  1231                           ;LCD.c: 100: FloatNumber = -(FloatNumber);
  1232  05C2  1283               	bcf	status, 5	;RP0=0, select bank0
  1233  05C3  1303               	bcf	status, 6	;RP1=0, select bank0
  1234                           	
  1235                           	
  1236  05C4  083C               	movf	(_LCDWriteFloat_FloatNumber),w
  1237  05C5  00D4               	movwf	(?___ftneg)
  1238  05C6  083D               	movf	(_LCDWriteFloat_FloatNumber+1),w
  1239  05C7  00D5               	movwf	(?___ftneg+1)
  1240  05C8  083E               	movf	(_LCDWriteFloat_FloatNumber+2),w
  1241  05C9  00D6               	movwf	(?___ftneg+2)
  1242  05CA  120A  158A  2568   	fcall	___ftneg
              120A  118A         
  1243  05CF  1283               	bcf	status, 5	;RP0=0, select bank0
  1244  05D0  1303               	bcf	status, 6	;RP1=0, select bank0
  1245                           	
  1246  05D1  0854               	movf	(0+?___ftneg),w
  1247  05D2  00BC               	movwf	(_LCDWriteFloat_FloatNumber)
  1248  05D3  0855               	movf	(1+?___ftneg),w
  1249  05D4  00BD               	movwf	(_LCDWriteFloat_FloatNumber+1)
  1250  05D5  0856               	movf	(2+?___ftneg),w
  1251  05D6  00BE               	movwf	(_LCDWriteFloat_FloatNumber+2)
  1252                           	line	101
  1253                           	
  1254  05D7                     l30:	
  1255                           	line	102
  1256                           ;LCD.c: 101: }
  1257                           ;LCD.c: 102: n = FloatNumber;
  1258  05D7  1283               	bcf	status, 5	;RP0=0, select bank0
  1259  05D8  1303               	bcf	status, 6	;RP1=0, select bank0
  1260                           	
  1261                           	
  1262  05D9  083C               	movf	(_LCDWriteFloat_FloatNumber),w
  1263  05DA  00CB               	movwf	(?___fttol)
  1264  05DB  083D               	movf	(_LCDWriteFloat_FloatNumber+1),w
  1265  05DC  00CC               	movwf	(?___fttol+1)
  1266  05DD  083E               	movf	(_LCDWriteFloat_FloatNumber+2),w
  1267  05DE  00CD               	movwf	(?___fttol+2)
  1268  05DF  120A  118A  21EE   	fcall	___fttol
              120A  118A         
  1269  05E4  1283               	bcf	status, 5	;RP0=0, select bank0
  1270  05E5  1303               	bcf	status, 6	;RP1=0, select bank0
  1271                           	
  1272  05E6  084C               	movf	(1+?___fttol),w
  1273  05E7  01C3               	clrf	(_LCDWriteFloat_n+1)
  1274  05E8  07C3               	addwf	(_LCDWriteFloat_n+1)
  1275  05E9  084B               	movf	(0+?___fttol),w
  1276  05EA  01C2               	clrf	(_LCDWriteFloat_n)
  1277  05EB  07C2               	addwf	(_LCDWriteFloat_n)
  1278                           
  1279                           	line	103
  1280                           ;LCD.c: 103: Temp = n;
  1281                           	
  1282                           	
  1283  05EC  0843               	movf	(_LCDWriteFloat_n+1),w
  1284  05ED  01C1               	clrf	(_LCDWriteFloat_Temp+1)
  1285  05EE  07C1               	addwf	(_LCDWriteFloat_Temp+1)
  1286  05EF  0842               	movf	(_LCDWriteFloat_n),w
  1287  05F0  01C0               	clrf	(_LCDWriteFloat_Temp)
  1288  05F1  07C0               	addwf	(_LCDWriteFloat_Temp)
  1289                           
  1290                           	line	104
  1291                           ;LCD.c: 104: LCDWriteInteger(n);
  1292                           	
  1293                           	
  1294  05F2  0843               	movf	(_LCDWriteFloat_n+1),w
  1295  05F3  01CC               	clrf	(?_LCDWriteInteger+1)
  1296  05F4  07CC               	addwf	(?_LCDWriteInteger+1)
  1297  05F5  0842               	movf	(_LCDWriteFloat_n),w
  1298  05F6  01CB               	clrf	(?_LCDWriteInteger)
  1299  05F7  07CB               	addwf	(?_LCDWriteInteger)
  1300                           
  1301  05F8  120A  118A  22D5   	fcall	_LCDWriteInteger
              120A  118A         
  1302                           	line	105
  1303                           ;LCD.c: 105: LCDWriteData('.');
  1304  05FD  302E               	movlw	(02Eh)
  1305  05FE  120A  158A  257E   	fcall	_LCDWriteData
              120A  118A         
  1306                           	line	106
  1307                           ;LCD.c: 106: FloatNumber = ((FloatNumber - n) +
                                  1) * 1000;
  1308  0603  1283               	bcf	status, 5	;RP0=0, select bank0
  1309  0604  1303               	bcf	status, 6	;RP1=0, select bank0
  1310                           	
  1311                           	
  1312  0605  0843               	movf	(_LCDWriteFloat_n+1),w
  1313  0606  01CC               	clrf	(?___awtoft+1)
  1314  0607  07CC               	addwf	(?___awtoft+1)
  1315  0608  0842               	movf	(_LCDWriteFloat_n),w
  1316  0609  01CB               	clrf	(?___awtoft)
  1317  060A  07CB               	addwf	(?___awtoft)
  1318                           
  1319  060B  120A  158A  26FB   	fcall	___awtoft
              120A  118A         
  1320  0610  1283               	bcf	status, 5	;RP0=0, select bank0
  1321  0611  1303               	bcf	status, 6	;RP1=0, select bank0
  1322                           	
  1323  0612  084B               	movf	(0+?___awtoft),w
  1324  0613  00CE               	movwf	(0+(?___ftsub)+03h)
  1325  0614  084C               	movf	(1+?___awtoft),w
  1326  0615  00CF               	movwf	(1+(?___ftsub)+03h)
  1327  0616  084D               	movf	(2+?___awtoft),w
  1328  0617  00D0               	movwf	(2+(?___ftsub)+03h)
  1329                           	
  1330                           	
  1331  0618  083C               	movf	(_LCDWriteFloat_FloatNumber),w
  1332  0619  00CB               	movwf	(?___ftsub)
  1333  061A  083D               	movf	(_LCDWriteFloat_FloatNumber+1),w
  1334  061B  00CC               	movwf	(?___ftsub+1)
  1335  061C  083E               	movf	(_LCDWriteFloat_FloatNumber+2),w
  1336  061D  00CD               	movwf	(?___ftsub+2)
  1337  061E  120A  158A  25C3   	fcall	___ftsub
              120A  118A         
  1338  0623  1283               	bcf	status, 5	;RP0=0, select bank0
  1339  0624  1303               	bcf	status, 6	;RP1=0, select bank0
  1340                           	
  1341  0625  084B               	movf	(0+?___ftsub),w
  1342  0626  00D1               	movwf	(?___ftadd)
  1343  0627  084C               	movf	(1+?___ftsub),w
  1344  0628  00D2               	movwf	(?___ftadd+1)
  1345  0629  084D               	movf	(2+?___ftsub),w
  1346  062A  00D3               	movwf	(?___ftadd+2)
  1347                           	
  1348  062B  3000               	movlw	0x0
  1349  062C  00D4               	movwf	(0+(?___ftadd)+03h)
  1350  062D  3080               	movlw	0x80
  1351  062E  00D5               	movwf	(1+(?___ftadd)+03h)
  1352  062F  303F               	movlw	0x3f
  1353  0630  00D6               	movwf	(2+(?___ftadd)+03h)
  1354  0631  120A  118A  2484   	fcall	___ftadd
              120A  118A         
  1355  0636  1283               	bcf	status, 5	;RP0=0, select bank0
  1356  0637  1303               	bcf	status, 6	;RP1=0, select bank0
  1357                           	
  1358  0638  0851               	movf	(0+?___ftadd),w
  1359  0639  00CB               	movwf	(?___ftmul)
  1360  063A  0852               	movf	(1+?___ftadd),w
  1361  063B  00CC               	movwf	(?___ftmul+1)
  1362  063C  0853               	movf	(2+?___ftadd),w
  1363  063D  00CD               	movwf	(?___ftmul+2)
  1364                           	
  1365  063E  3000               	movlw	0x0
  1366  063F  00CE               	movwf	(0+(?___ftmul)+03h)
  1367  0640  307A               	movlw	0x7a
  1368  0641  00CF               	movwf	(1+(?___ftmul)+03h)
  1369  0642  3044               	movlw	0x44
  1370  0643  00D0               	movwf	(2+(?___ftmul)+03h)
  1371  0644  120A  118A  23E1   	fcall	___ftmul
              120A  118A         
  1372  0649  1283               	bcf	status, 5	;RP0=0, select bank0
  1373  064A  1303               	bcf	status, 6	;RP1=0, select bank0
  1374                           	
  1375  064B  084B               	movf	(0+?___ftmul),w
  1376  064C  00BC               	movwf	(_LCDWriteFloat_FloatNumber)
  1377  064D  084C               	movf	(1+?___ftmul),w
  1378  064E  00BD               	movwf	(_LCDWriteFloat_FloatNumber+1)
  1379  064F  084D               	movf	(2+?___ftmul),w
  1380  0650  00BE               	movwf	(_LCDWriteFloat_FloatNumber+2)
  1381                           	line	107
  1382                           ;LCD.c: 107: n = FloatNumber;
  1383                           	
  1384                           	
  1385  0651  083C               	movf	(_LCDWriteFloat_FloatNumber),w
  1386  0652  00CB               	movwf	(?___fttol)
  1387  0653  083D               	movf	(_LCDWriteFloat_FloatNumber+1),w
  1388  0654  00CC               	movwf	(?___fttol+1)
  1389  0655  083E               	movf	(_LCDWriteFloat_FloatNumber+2),w
  1390  0656  00CD               	movwf	(?___fttol+2)
  1391  0657  120A  118A  21EE   	fcall	___fttol
              120A  118A         
  1392  065C  1283               	bcf	status, 5	;RP0=0, select bank0
  1393  065D  1303               	bcf	status, 6	;RP1=0, select bank0
  1394                           	
  1395  065E  084C               	movf	(1+?___fttol),w
  1396  065F  01C3               	clrf	(_LCDWriteFloat_n+1)
  1397  0660  07C3               	addwf	(_LCDWriteFloat_n+1)
  1398  0661  084B               	movf	(0+?___fttol),w
  1399  0662  01C2               	clrf	(_LCDWriteFloat_n)
  1400  0663  07C2               	addwf	(_LCDWriteFloat_n)
  1401                           
  1402                           	line	109
  1403                           ;LCD.c: 109: while(n > 0)
  1404  0664  2E9A               	goto	l31
  1405                           	
  1406  0665                     l32:	
  1407                           	line	111
  1408                           ;LCD.c: 110: {
  1409                           ;LCD.c: 111: c[i++] = (n % 10) + 48;
  1410  0665  300A               	movlw	low(0Ah)
  1411                           	
  1412  0666  00D7               	movwf	(0+(?___awmod)+02h)
  1413  0667  3000               	movlw	high(0Ah)
  1414  0668  00D8               	movwf	((0+(?___awmod)+02h))+1
  1415                           	
  1416                           	
  1417  0669  0843               	movf	(_LCDWriteFloat_n+1),w
  1418  066A  01D6               	clrf	(?___awmod+1)
  1419  066B  07D6               	addwf	(?___awmod+1)
  1420  066C  0842               	movf	(_LCDWriteFloat_n),w
  1421  066D  01D5               	clrf	(?___awmod)
  1422  066E  07D5               	addwf	(?___awmod)
  1423                           
  1424  066F  120A  158A  27A5   	fcall	___awmod
              120A  118A         
  1425  0674  1283               	bcf	status, 5	;RP0=0, select bank0
  1426  0675  1303               	bcf	status, 6	;RP1=0, select bank0
  1427  0676  0855               	movf	(0+?___awmod),w
  1428  0677  3E30               	addlw	030h
  1429  0678  00CA               	movwf	(??_LCDWriteFloat+11+0)
  1430                           	
  1431  0679  083F               	movf	(_LCDWriteFloat_i),w
  1432  067A  3E44               	addlw	(_LCDWriteFloat_c)&0ffh
  1433  067B  1383               	bcf	status, 7	;select IRP bank0
  1434                           	
  1435  067C  0084               	movwf	fsr0
  1436  067D  084A               	movf	(??_LCDWriteFloat+11+0),w
  1437  067E  0080               	movwf	indf
  1438  067F  3001               	movlw	(01h)
  1439  0680  00CA               	movwf	(??_LCDWriteFloat+11+0)
  1440                           	
  1441  0681  084A               	movf	(??_LCDWriteFloat+11+0),w
  1442  0682  07BF               	addwf	(_LCDWriteFloat_i),f
  1443                           	line	112
  1444                           ;LCD.c: 112: n /= 10;
  1445  0683  300A               	movlw	low(0Ah)
  1446                           	
  1447  0684  00D7               	movwf	(0+(?___awdiv)+02h)
  1448  0685  3000               	movlw	high(0Ah)
  1449  0686  00D8               	movwf	((0+(?___awdiv)+02h))+1
  1450                           	
  1451                           	
  1452  0687  0843               	movf	(_LCDWriteFloat_n+1),w
  1453  0688  01D6               	clrf	(?___awdiv+1)
  1454  0689  07D6               	addwf	(?___awdiv+1)
  1455  068A  0842               	movf	(_LCDWriteFloat_n),w
  1456  068B  01D5               	clrf	(?___awdiv)
  1457  068C  07D5               	addwf	(?___awdiv)
  1458                           
  1459  068D  120A  118A  2261   	fcall	___awdiv
              120A  118A         
  1460  0692  1283               	bcf	status, 5	;RP0=0, select bank0
  1461  0693  1303               	bcf	status, 6	;RP1=0, select bank0
  1462                           	
  1463  0694  0856               	movf	(1+?___awdiv),w
  1464  0695  01C3               	clrf	(_LCDWriteFloat_n+1)
  1465  0696  07C3               	addwf	(_LCDWriteFloat_n+1)
  1466  0697  0855               	movf	(0+?___awdiv),w
  1467  0698  01C2               	clrf	(_LCDWriteFloat_n)
  1468  0699  07C2               	addwf	(_LCDWriteFloat_n)
  1469                           
  1470                           	line	113
  1471                           	
  1472  069A                     l31:	
  1473                           	line	109
  1474                           	
  1475  069A  0843               	movf	(_LCDWriteFloat_n+1),w
  1476  069B  3A80               	xorlw	80h
  1477  069C  00CA               	movwf	(??_LCDWriteFloat+11+0)
  1478  069D  3080               	movlw	(high(01h))^80h
  1479  069E  024A               	subwf	(??_LCDWriteFloat+11+0),w
  1480  069F  1D03               	skipz
  1481  06A0  2EA3               	goto	u25910
  1482  06A1                     u25915:
  1483  06A1  3001               	movlw	low(01h)
  1484  06A2  0242               	subwf	(_LCDWriteFloat_n),w
  1485  06A3                     u25910:
  1486                           
  1487  06A3  1803               	skipnc
  1488  06A4  2EA6               	goto	u2591
  1489  06A5  2EA7               	goto	u2590
  1490  06A6                     u2591:
  1491  06A6  2E65               	goto	l32
  1492  06A7                     u2590:
  1493                           	
  1494  06A7                     l33:	
  1495                           	line	114
  1496                           ;LCD.c: 113: }
  1497                           ;LCD.c: 114: i -= 1;
  1498                           	
  1499                           	
  1500  06A7  3001               	movlw	low(01h)
  1501  06A8  02BF               	subwf	(_LCDWriteFloat_i),f
  1502                           	line	115
  1503                           ;LCD.c: 115: while(i-- > 1)
  1504  06A9  2EB4               	goto	l34
  1505                           	
  1506  06AA                     l35:	
  1507                           	line	116
  1508                           ;LCD.c: 116: LCDWriteData(c[i]);
  1509                           	
  1510  06AA  083F               	movf	(_LCDWriteFloat_i),w
  1511  06AB  3E44               	addlw	(_LCDWriteFloat_c)&0ffh
  1512  06AC  1383               	bcf	status, 7	;select IRP bank0
  1513                           	
  1514  06AD  0084               	movwf	fsr0
  1515  06AE  0800               	movf	indf,w
  1516  06AF  120A  158A  257E   	fcall	_LCDWriteData
              120A  118A         
  1517                           	
  1518  06B4                     l34:	
  1519                           	line	115
  1520                           	
  1521  06B4  1283               	bcf	status, 5	;RP0=0, select bank0
  1522  06B5  1303               	bcf	status, 6	;RP1=0, select bank0
  1523                           	
  1524  06B6  3001               	movlw	low(01h)
  1525  06B7  02BF               	subwf	(_LCDWriteFloat_i),f
  1526  06B8  3001               	movlw	(01h)
  1527  06B9  023F               	subwf	((_LCDWriteFloat_i))&07fh,w
  1528  06BA  1803               	skipnc
  1529  06BB  2EBD               	goto	u2601
  1530  06BC  2EBE               	goto	u2600
  1531  06BD                     u2601:
  1532  06BD  2EAA               	goto	l35
  1533  06BE                     u2600:
  1534                           	
  1535  06BE                     l36:	
  1536                           	line	118
  1537                           ;LCD.c: 118: if(Temp < 10)
  1538                           	
  1539  06BE  0841               	movf	(_LCDWriteFloat_Temp+1),w
  1540  06BF  3A80               	xorlw	80h
  1541  06C0  00CA               	movwf	(??_LCDWriteFloat+11+0)
  1542  06C1  3080               	movlw	(high(0Ah))^80h
  1543  06C2  024A               	subwf	(??_LCDWriteFloat+11+0),w
  1544  06C3  1D03               	skipz
  1545  06C4  2EC7               	goto	u26110
  1546  06C5                     u26115:
  1547  06C5  300A               	movlw	low(0Ah)
  1548  06C6  0240               	subwf	(_LCDWriteFloat_Temp),w
  1549  06C7                     u26110:
  1550                           
  1551  06C7  1803               	skipnc
  1552  06C8  2ECA               	goto	u2611
  1553  06C9  2ECB               	goto	u2610
  1554  06CA                     u2611:
  1555  06CA  2ED7               	goto	l37
  1556  06CB                     u2610:
  1557                           	line	120
  1558                           ;LCD.c: 119: {
  1559                           ;LCD.c: 120: LCDWriteCommand(0xcc);
  1560  06CB  30CC               	movlw	(0CCh)
  1561  06CC  120A  158A  2573   	fcall	_LCDWriteCommand
              120A  118A         
  1562                           	line	121
  1563                           ;LCD.c: 121: LCDWriteString("  ");
  1564  06D1  3022               	movlw	((STR_2-__stringbase))&0ffh
  1565  06D2  120A  118A  21CB   	fcall	_LCDWriteString
              120A  118A         
  1566                           	line	123
  1567                           	
  1568  06D7                     l37:	
  1569                           	line	124
  1570                           ;LCD.c: 123: }
  1571                           ;LCD.c: 124: if(Temp >= 10 && Temp < 100)
  1572  06D7  1283               	bcf	status, 5	;RP0=0, select bank0
  1573  06D8  1303               	bcf	status, 6	;RP1=0, select bank0
  1574                           	
  1575  06D9  0841               	movf	(_LCDWriteFloat_Temp+1),w
  1576  06DA  3A80               	xorlw	80h
  1577  06DB  00CA               	movwf	(??_LCDWriteFloat+11+0)
  1578  06DC  3080               	movlw	(high(0Ah))^80h
  1579  06DD  024A               	subwf	(??_LCDWriteFloat+11+0),w
  1580  06DE  1D03               	skipz
  1581  06DF  2EE2               	goto	u26210
  1582  06E0                     u26215:
  1583  06E0  300A               	movlw	low(0Ah)
  1584  06E1  0240               	subwf	(_LCDWriteFloat_Temp),w
  1585  06E2                     u26210:
  1586                           
  1587  06E2  1C03               	skipc
  1588  06E3  2EE5               	goto	u2621
  1589  06E4  2EE6               	goto	u2620
  1590  06E5                     u2621:
  1591  06E5  2EFF               	goto	l38
  1592  06E6                     u2620:
  1593                           	
  1594  06E6  0841               	movf	(_LCDWriteFloat_Temp+1),w
  1595  06E7  3A80               	xorlw	80h
  1596  06E8  00CA               	movwf	(??_LCDWriteFloat+11+0)
  1597  06E9  3080               	movlw	(high(064h))^80h
  1598  06EA  024A               	subwf	(??_LCDWriteFloat+11+0),w
  1599  06EB  1D03               	skipz
  1600  06EC  2EEF               	goto	u26310
  1601  06ED                     u26315:
  1602  06ED  3064               	movlw	low(064h)
  1603  06EE  0240               	subwf	(_LCDWriteFloat_Temp),w
  1604  06EF                     u26310:
  1605                           
  1606  06EF  1803               	skipnc
  1607  06F0  2EF2               	goto	u2631
  1608  06F1  2EF3               	goto	u2630
  1609  06F2                     u2631:
  1610  06F2  2EFF               	goto	l38
  1611  06F3                     u2630:
  1612                           	line	126
  1613                           ;LCD.c: 125: {
  1614                           ;LCD.c: 126: LCDWriteCommand(0xcd);
  1615  06F3  30CD               	movlw	(0CDh)
  1616  06F4  120A  158A  2573   	fcall	_LCDWriteCommand
              120A  118A         
  1617                           	line	127
  1618                           ;LCD.c: 127: LCDWriteString(" ");
  1619  06F9  3023               	movlw	((STR_3-__stringbase))&0ffh
  1620  06FA  120A  118A  21CB   	fcall	_LCDWriteString
              120A  118A         
  1621                           	line	129
  1622                           	
  1623  06FF                     l38:	
  1624                           	line	130
  1625                           ;LCD.c: 129: }
  1626                           ;LCD.c: 130: }
  1627  06FF                     l29:	
  1628  06FF  0008               	return
  1629                           ; =============== function _LCDWriteFloat ends 
                                 ===============
  1630                           
  1631                           GLOBAL __end_of_LCDWriteFloat
  1632  0700                     	__end_of_LCDWriteFloat:
  1633                           	FNSIZE	_LCDWriteFloat,12,3
  1634                           	signat	_LCDWriteFloat,4216
  1635                           	global	___ftdiv
  1636                           	global	??___ftdiv
  1637                           	global	?___ftdiv
  1638                           
  1639                           ; *************** function ___ftdiv ***********
                                 ****
  1640                           ; Defined at:
  1641                           ;		line 19 in file "C:\Program Files (x86)\HI-T
                                 ECH Software\PICC\PRO\9.65\sources\ftdiv.c"
  1642                           ; Parameters:
  1643                           ;		f1          	offs:   0	type: float 
  1644                           ;		f2          	offs:   3	type: float 
  1645                           ; Auto variables:
  1646                           ;		exp2        	       	type: unsigned char 
  1647                           ;		sign1       	       	type: unsigned char 
  1648                           ;		sign2       	       	type: unsigned char 
  1649                           ;		exp1        	       	type: unsigned char 
  1650                           ;		f3          	       	type: float 
  1651                           ; Return value:
  1652                           ;		type: float 
  1653                           ;		size: 3
  1654                           ; Registers used:
  1655                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
                                 th, cstack
  1656                           ; Tracked objects:
  1657                           ;		On entry : 300/0
  1658                           ;		On exit  : 0/0
  1659                           ;		Unchanged: 0/0
  1660                           ; Data sizes:
  1661                           ;		Autos:    7
  1662                           ;		Params:   6
  1663                           ;		Temp:     1
  1664                           ;		Total:   14
  1665                           ; This function calls:
  1666                           ;		___ftunpack
  1667                           ;		___ftpack
  1668                           ; This function is called by:
  1669                           ;		_main
  1670                           ; This function uses a non-reentrant model
  1671                           ; 
  1672                           	psect	text197,local,class=CODE,delta=2
  1673                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\ftdiv.c"
  1674                           	line	19
  1675                           	
  1676  0352                     ___ftdiv:	
  1677                           	opt stack 6
  1678                           ; Regs used in ___ftdiv: [wreg-fsr0h+status,2+s
                                 tatus,0+pclath+cstack]
  1679                           	line	23
  1680                           	
  1681  0352  3000               	movlw	0
  1682  0353  00C6               	movwf	(___ftdiv_f3)
  1683  0354  3000               	movlw	0
  1684  0355  00C7               	movwf	(___ftdiv_f3+1)
  1685  0356  3000               	movlw	0
  1686  0357  00C8               	movwf	(___ftdiv_f3+2)
  1687                           	line	24
  1688                           	
  1689  0358  3044               	movlw	((___ftdiv_exp1))&0ffh
  1690                           	
  1691  0359  00DD               	movwf	(?___ftunpack)
  1692                           	
  1693  035A  303C               	movlw	((___ftdiv_f1))&0ffh
  1694  035B  120A  158A  274B   	fcall	___ftunpack
              120A  118A         
  1695  0360  1283               	bcf	status, 5	;RP0=0, select bank0
  1696  0361  1303               	bcf	status, 6	;RP1=0, select bank0
  1697                           	
  1698  0362  00C3               	movwf	(___ftdiv_sign1)
  1699                           	line	25
  1700                           	
  1701  0363  08C4               	movf	(___ftdiv_exp1),f
  1702  0364  1D03               	skipz
  1703  0365  2B67               	goto	u2771
  1704  0366  2B68               	goto	u2770
  1705  0367                     u2771:
  1706  0367  2B6F               	goto	l135
  1707  0368                     u2770:
  1708                           	line	26
  1709                           	
  1710                           	
  1711  0368  0846               	movf	(___ftdiv_f3),w
  1712  0369  00BC               	movwf	(?___ftdiv)
  1713  036A  0847               	movf	(___ftdiv_f3+1),w
  1714  036B  00BD               	movwf	(?___ftdiv+1)
  1715  036C  0848               	movf	(___ftdiv_f3+2),w
  1716  036D  00BE               	movwf	(?___ftdiv+2)
  1717  036E  2BE0               	goto	l134
  1718                           	
  1719  036F                     l135:	
  1720                           	line	27
  1721                           	
  1722  036F  3042               	movlw	((___ftdiv_exp2))&0ffh
  1723                           	
  1724  0370  00DD               	movwf	(?___ftunpack)
  1725                           	
  1726  0371  303F               	movlw	((___ftdiv_f2))&0ffh
  1727  0372  120A  158A  274B   	fcall	___ftunpack
              120A  118A         
  1728  0377  1283               	bcf	status, 5	;RP0=0, select bank0
  1729  0378  1303               	bcf	status, 6	;RP1=0, select bank0
  1730                           	
  1731  0379  00C5               	movwf	(___ftdiv_sign2)
  1732                           	line	28
  1733                           	
  1734  037A  08C2               	movf	(___ftdiv_exp2),f
  1735  037B  1D03               	skipz
  1736  037C  2B7E               	goto	u2781
  1737  037D  2B7F               	goto	u2780
  1738  037E                     u2781:
  1739  037E  2B86               	goto	l136
  1740  037F                     u2780:
  1741                           	line	29
  1742                           	
  1743                           	
  1744  037F  0846               	movf	(___ftdiv_f3),w
  1745  0380  00BC               	movwf	(?___ftdiv)
  1746  0381  0847               	movf	(___ftdiv_f3+1),w
  1747  0382  00BD               	movwf	(?___ftdiv+1)
  1748  0383  0848               	movf	(___ftdiv_f3+2),w
  1749  0384  00BE               	movwf	(?___ftdiv+2)
  1750  0385  2BE0               	goto	l134
  1751                           	
  1752  0386                     l136:	
  1753                           	line	30
  1754                           	
  1755  0386  0842               	movf	(___ftdiv_exp2),w
  1756  0387  3E89               	addlw	089h
  1757  0388  00C9               	movwf	(??___ftdiv+7+0)
  1758                           	
  1759  0389  0849               	movf	(??___ftdiv+7+0),w
  1760  038A  02C4               	subwf	(___ftdiv_exp1),f
  1761                           	line	31
  1762                           	
  1763  038B  0845               	movf	(___ftdiv_sign2),w
  1764  038C  00C9               	movwf	(??___ftdiv+7+0)
  1765                           	
  1766  038D  0849               	movf	(??___ftdiv+7+0),w
  1767  038E  06C3               	xorwf	(___ftdiv_sign1),f
  1768                           	line	32
  1769  038F  3018               	movlw	(018h)
  1770                           	
  1771  0390  00C5               	movwf	(___ftdiv_sign2)
  1772                           	line	33
  1773                           	
  1774  0391                     l139:	
  1775                           	line	34
  1776                           	
  1777  0391  3001               	movlw	01h
  1778  0392                     u2795:
  1779  0392  1003               	clrc
  1780  0393  0DC6               	rlf	(___ftdiv_f3),f
  1781  0394  0DC7               	rlf	(___ftdiv_f3+1),f
  1782  0395  0DC8               	rlf	(___ftdiv_f3+2),f
  1783  0396  3EFF               	addlw	-1
  1784  0397  1D03               	skipz
  1785  0398  2B92               	goto	u2795
  1786                           	line	35
  1787                           	
  1788                           	
  1789  0399  0841               	movf	(___ftdiv_f2+2),w
  1790  039A  023E               	subwf	(___ftdiv_f1+2),w
  1791  039B  1D03               	skipz
  1792  039C  2BA3               	goto	u2805
  1793  039D  0840               	movf	(___ftdiv_f2+1),w
  1794  039E  023D               	subwf	(___ftdiv_f1+1),w
  1795  039F  1D03               	skipz
  1796  03A0  2BA3               	goto	u2805
  1797  03A1  083F               	movf	(___ftdiv_f2),w
  1798  03A2  023C               	subwf	(___ftdiv_f1),w
  1799  03A3                     u2805:
  1800  03A3  1C03               	skipc
  1801  03A4  2BA6               	goto	u2801
  1802  03A5  2BA7               	goto	u2800
  1803  03A6                     u2801:
  1804  03A6  2BB7               	goto	l140
  1805  03A7                     u2800:
  1806                           	line	36
  1807                           	
  1808                           	
  1809  03A7  083F               	movf	(___ftdiv_f2),w
  1810  03A8  02BC               	subwf	(___ftdiv_f1),f
  1811  03A9  0840               	movf	(___ftdiv_f2+1),w
  1812  03AA  1C03               	skipc
  1813  03AB  0F40               	incfsz	(___ftdiv_f2+1),w
  1814  03AC  02BD               	subwf	(___ftdiv_f1+1),f
  1815  03AD  0841               	movf	(___ftdiv_f2+2),w
  1816  03AE  1C03               	skipc
  1817  03AF  0A41               	incf	(___ftdiv_f2+2),w
  1818  03B0  02BE               	subwf	(___ftdiv_f1+2),f
  1819                           	line	37
  1820                           	
  1821  03B1  3001               	movlw	01h
  1822  03B2  04C6               	iorwf	(___ftdiv_f3),f
  1823  03B3  3000               	movlw	0
  1824  03B4  04C7               	iorwf	(___ftdiv_f3+1),f
  1825  03B5  3000               	movlw	0
  1826  03B6  04C8               	iorwf	(___ftdiv_f3+2),f
  1827                           	line	38
  1828                           	
  1829  03B7                     l140:	
  1830                           	line	39
  1831                           	
  1832  03B7  3001               	movlw	01h
  1833  03B8                     u2815:
  1834  03B8  1003               	clrc
  1835  03B9  0DBC               	rlf	(___ftdiv_f1),f
  1836  03BA  0DBD               	rlf	(___ftdiv_f1+1),f
  1837  03BB  0DBE               	rlf	(___ftdiv_f1+2),f
  1838  03BC  3EFF               	addlw	-1
  1839  03BD  1D03               	skipz
  1840  03BE  2BB8               	goto	u2815
  1841                           	line	40
  1842                           	
  1843                           	
  1844  03BF  3001               	movlw	low(01h)
  1845  03C0  02C5               	subwf	(___ftdiv_sign2),f
  1846  03C1  1D03               	btfss	status,2
  1847  03C2  2BC4               	goto	u2821
  1848  03C3  2BC5               	goto	u2820
  1849  03C4                     u2821:
  1850  03C4  2B91               	goto	l139
  1851  03C5                     u2820:
  1852                           	
  1853  03C5                     l138:	
  1854                           	line	41
  1855                           	
  1856  03C5  0844               	movf	(___ftdiv_exp1),w
  1857                           	
  1858  03C6  00DD               	movwf	(?___ftpack)
  1859                           	
  1860  03C7  3046               	movlw	((___ftdiv_f3))&0ffh
  1861  03C8  120A  118A  2739   	fcall	___ftpack
              120A  118A         
  1862                           	line	42
  1863  03CD  1283               	bcf	status, 5	;RP0=0, select bank0
  1864  03CE  1303               	bcf	status, 6	;RP1=0, select bank0
  1865                           	
  1866  03CF  08C3               	movf	(___ftdiv_sign1),f
  1867  03D0  1D03               	skipz
  1868  03D1  2BD3               	goto	u2830
  1869  03D2  2BD9               	goto	l141
  1870  03D3                     u2830:
  1871                           	line	43
  1872                           	
  1873  03D3  3000               	movlw	0
  1874  03D4  04C6               	iorwf	(___ftdiv_f3),f
  1875  03D5  3000               	movlw	0
  1876  03D6  04C7               	iorwf	(___ftdiv_f3+1),f
  1877  03D7  3080               	movlw	080h
  1878  03D8  04C8               	iorwf	(___ftdiv_f3+2),f
  1879                           	
  1880  03D9                     l141:	
  1881                           	line	44
  1882                           	
  1883                           	
  1884  03D9  0846               	movf	(___ftdiv_f3),w
  1885  03DA  00BC               	movwf	(?___ftdiv)
  1886  03DB  0847               	movf	(___ftdiv_f3+1),w
  1887  03DC  00BD               	movwf	(?___ftdiv+1)
  1888  03DD  0848               	movf	(___ftdiv_f3+2),w
  1889  03DE  00BE               	movwf	(?___ftdiv+2)
  1890  03DF  2BE0               	goto	l134
  1891                           	line	45
  1892  03E0                     l134:	
  1893  03E0  0008               	return
  1894                           ; =============== function ___ftdiv ends ======
                                 =========
  1895                           
  1896                           GLOBAL __end_of___ftdiv
  1897  03E1                     	__end_of___ftdiv:
  1898                           	FNSIZE	___ftdiv,8,6
  1899                           	signat	___ftdiv,8315
  1900                           	global	_MainSystemInitialize
  1901                           	global	??_MainSystemInitialize
  1902                           	global	?_MainSystemInitialize
  1903                           
  1904                           ; *************** function _MainSystemInitializ
                                 e ***************
  1905                           ; Defined at:
  1906                           ;		line 71 in file "C:\Users\hardik\Desktop\LM3
                                 5 temp sensor\main.c"
  1907                           ; Parameters:
  1908                           ;		None
  1909                           ; Auto variables:
  1910                           ;		None
  1911                           ; Return value:
  1912                           ;		type: void 
  1913                           ;		size: 0
  1914                           ; Registers used:
  1915                           ;		wreg, status,2, status,0, pclath, cstack
  1916                           ; Tracked objects:
  1917                           ;		On entry : BFF/0
  1918                           ;		On exit  : 0/0
  1919                           ;		Unchanged: 0/0
  1920                           ; Data sizes:
  1921                           ;		Autos:    0
  1922                           ;		Params:   0
  1923                           ;		Temp:     0
  1924                           ;		Total:    0
  1925                           ; This function calls:
  1926                           ;		_LCDInitialize
  1927                           ; This function is called by:
  1928                           ;		_main
  1929                           ; This function uses a non-reentrant model
  1930                           ; 
  1931                           	psect	text198,local,class=CODE,delta=2
  1932                           	file	"C:\Users\hardik\Desktop\LM35 temp sensor
                                 \main.c"
  1933                           	line	71
  1934                           ;main.c: 70: static void MainSystemInitialize(v
                                 oid)
  1935                           ;main.c: 71: {
  1936                           	
  1937  0D62                     _MainSystemInitialize:	
  1938                           	opt stack 6
  1939                           ; Regs used in _MainSystemInitialize: [wreg+sta
                                 tus,2+status,0+pclath+cstack]
  1940                           	line	72
  1941                           ;main.c: 72: LCDInitialize();
  1942  0D62  120A  158A  2634   	fcall	_LCDInitialize
              120A  158A         
  1943                           	line	73
  1944                           ;main.c: 73: }
  1945  0D67                     l58:	
  1946  0D67  0008               	return
  1947                           ; =============== function _MainSystemInitializ
                                 e ends ===============
  1948                           
  1949                           GLOBAL __end_of_MainSystemInitialize
  1950  0D68                     	__end_of_MainSystemInitialize:
  1951                           	FNSIZE	_MainSystemInitialize,0,0
  1952                           	signat	_MainSystemInitialize,88
  1953                           	global	_LCDInitialize
  1954                           	global	??_LCDInitialize
  1955                           	global	?_LCDInitialize
  1956                           
  1957                           ; *************** function _LCDInitialize *****
                                 **********
  1958                           ; Defined at:
  1959                           ;		line 34 in file "C:\Users\hardik\Desktop\LM3
                                 5 temp sensor\LCD.c"
  1960                           ; Parameters:
  1961                           ;		None
  1962                           ; Auto variables:
  1963                           ;		None
  1964                           ; Return value:
  1965                           ;		type: void 
  1966                           ;		size: 0
  1967                           ; Registers used:
  1968                           ;		wreg, status,2, status,0, pclath, cstack
  1969                           ; Tracked objects:
  1970                           ;		On entry : BFF/0
  1971                           ;		On exit  : 0/0
  1972                           ;		Unchanged: 0/0
  1973                           ; Data sizes:
  1974                           ;		Autos:    0
  1975                           ;		Params:   0
  1976                           ;		Temp:     1
  1977                           ;		Total:    1
  1978                           ; This function calls:
  1979                           ;		_LCDReset
  1980                           ;		_LCDWriteCommand
  1981                           ; This function is called by:
  1982                           ;		_MainSystemInitialize
  1983                           ; This function uses a non-reentrant model
  1984                           ; 
  1985                           	psect	text199,local,class=CODE,delta=2
  1986                           	file	"C:\Users\hardik\Desktop\LM35 temp sensor
                                 \LCD.c"
  1987                           	line	34
  1988                           ;LCD.c: 33: void LCDInitialize(void)
  1989                           ;LCD.c: 34: {
  1990                           	
  1991  0E34                     _LCDInitialize:	
  1992                           	opt stack 5
  1993                           ; Regs used in _LCDInitialize: [wreg+status,2+s
                                 tatus,0+pclath+cstack]
  1994                           	line	35
  1995                           ;LCD.c: 35: TRISD = TRISD & 0x03;
  1996  0E34  1683               	bsf	status, 5	;RP0=1, select bank1
  1997  0E35  1303               	bcf	status, 6	;RP1=0, select bank1
  1998                           	
  1999  0E36  0808               	movf	(136)^080h,w	;volatile
  2000  0E37  3903               	andlw	03h
  2001                           	
  2002  0E38  0088               	movwf	(136)^080h	;volatile
  2003                           	line	36
  2004                           ;LCD.c: 36: RD3 = 0;
  2005  0E39  1283               	bcf	status, 5	;RP0=0, select bank0
  2006  0E3A  1303               	bcf	status, 6	;RP1=0, select bank0
  2007  0E3B  1188               	bcf	(67/8),(67)&7
  2008                           	line	37
  2009                           ;LCD.c: 37: RD2 = 0;
  2010  0E3C  1108               	bcf	(66/8),(66)&7
  2011                           	line	38
  2012                           ;LCD.c: 38: PORTD &= 0x0f;
  2013  0E3D  300F               	movlw	(0Fh)
  2014  0E3E  00BC               	movwf	(??_LCDInitialize+0+0)
  2015                           	
  2016  0E3F  083C               	movf	(??_LCDInitialize+0+0),w
  2017  0E40  0588               	andwf	(8),f	;volatile
  2018                           	line	39
  2019                           ;LCD.c: 39: LCDReset();
  2020  0E41  120A  158A  2597   	fcall	_LCDReset
              120A  158A         
  2021                           	line	40
  2022                           ;LCD.c: 40: LCDWriteCommand(0x28);
  2023  0E46  3028               	movlw	(028h)
  2024  0E47  120A  158A  2573   	fcall	_LCDWriteCommand
              120A  158A         
  2025                           	line	41
  2026                           ;LCD.c: 41: LCDWriteCommand(0x0C);
  2027  0E4C  300C               	movlw	(0Ch)
  2028  0E4D  120A  158A  2573   	fcall	_LCDWriteCommand
              120A  158A         
  2029                           	line	42
  2030                           ;LCD.c: 42: LCDWriteCommand(0x06);
  2031  0E52  3006               	movlw	(06h)
  2032  0E53  120A  158A  2573   	fcall	_LCDWriteCommand
              120A  158A         
  2033                           	line	43
  2034                           ;LCD.c: 43: LCDWriteCommand(0x01);
  2035  0E58  3001               	movlw	(01h)
  2036  0E59  120A  158A  2573   	fcall	_LCDWriteCommand
              120A  158A         
  2037                           	line	45
  2038                           ;LCD.c: 45: }
  2039  0E5E                     l15:	
  2040  0E5E  0008               	return
  2041                           ; =============== function _LCDInitialize ends 
                                 ===============
  2042                           
  2043                           GLOBAL __end_of_LCDInitialize
  2044  0E5F                     	__end_of_LCDInitialize:
  2045                           	FNSIZE	_LCDInitialize,1,0
  2046                           	signat	_LCDInitialize,88
  2047                           	global	_LCDWriteInteger
  2048                           	global	??_LCDWriteInteger
  2049                           	global	?_LCDWriteInteger
  2050                           
  2051                           ; *************** function _LCDWriteInteger ***
                                 ************
  2052                           ; Defined at:
  2053                           ;		line 132 in file "C:\Users\hardik\Desktop\LM
                                 35 temp sensor\LCD.c"
  2054                           ; Parameters:
  2055                           ;		IntegerNumbe	offs:   0	type: int 
  2056                           ; Auto variables:
  2057                           ;		i           	       	type: unsigned char 
  2058                           ;		c           	       	type: unsigned char [6]
  2059                           ; Return value:
  2060                           ;		type: void 
  2061                           ;		size: 0
  2062                           ; Registers used:
  2063                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
                                 th, cstack
  2064                           ; Tracked objects:
  2065                           ;		On entry : 300/0
  2066                           ;		On exit  : 0/0
  2067                           ;		Unchanged: 0/0
  2068                           ; Data sizes:
  2069                           ;		Autos:    7
  2070                           ;		Params:   2
  2071                           ;		Temp:     1
  2072                           ;		Total:   10
  2073                           ; This function calls:
  2074                           ;		_LCDWriteData
  2075                           ;		___awmod
  2076                           ;		___awdiv
  2077                           ; This function is called by:
  2078                           ;		_LCDWriteFloat
  2079                           ; This function uses a non-reentrant model
  2080                           ; 
  2081                           	psect	text200,local,class=CODE,delta=2
  2082                           	file	"C:\Users\hardik\Desktop\LM35 temp sensor
                                 \LCD.c"
  2083                           	line	132
  2084                           ;LCD.c: 131: void LCDWriteInteger(int IntegerNu
                                 mber)
  2085                           ;LCD.c: 132: {
  2086                           	
  2087  02D5                     _LCDWriteInteger:	
  2088                           	opt stack 5
  2089                           ; Regs used in _LCDWriteInteger: [wreg-fsr0h+st
                                 atus,2+status,0+pclath+cstack]
  2090                           	line	134
  2091                           ;LCD.c: 133: unsigned char c[6];
  2092                           ;LCD.c: 134: unsigned char i = 0;
  2093  02D5  1003               	clrc
  2094                           	
  2095  02D6  3000               	movlw	0
  2096  02D7  1803               	btfsc	status,0
  2097  02D8  3001               	movlw	1
  2098  02D9  00CD               	movwf	(_LCDWriteInteger_i)
  2099                           	line	136
  2100                           ;LCD.c: 136: if(IntegerNumber < 0)
  2101                           	
  2102  02DA  1FCC               	btfss	(_LCDWriteInteger_IntegerNumber+1),7
  2103  02DB  2ADD               	goto	u2661
  2104  02DC  2ADE               	goto	u2660
  2105  02DD                     u2661:
  2106  02DD  2AEB               	goto	l40
  2107  02DE                     u2660:
  2108                           	line	138
  2109                           ;LCD.c: 137: {
  2110                           ;LCD.c: 138: LCDWriteData('-');
  2111  02DE  302D               	movlw	(02Dh)
  2112  02DF  120A  158A  257E   	fcall	_LCDWriteData
              120A  118A         
  2113                           	line	139
  2114                           ;LCD.c: 139: IntegerNumber = - (IntegerNumber);
  2115  02E4  1283               	bcf	status, 5	;RP0=0, select bank0
  2116  02E5  1303               	bcf	status, 6	;RP1=0, select bank0
  2117                           	
  2118  02E6  09CB               	comf	(_LCDWriteInteger_IntegerNumber),f
  2119  02E7  09CC               	comf	(_LCDWriteInteger_IntegerNumber+1),f
  2120  02E8  0ACB               	incf	(_LCDWriteInteger_IntegerNumber),f
  2121  02E9  1903               	skipnz
  2122  02EA  0ACC               	incf	(_LCDWriteInteger_IntegerNumber+1),f
  2123                           	
  2124                           	line	140
  2125                           	
  2126  02EB                     l40:	
  2127                           	line	142
  2128                           ;LCD.c: 140: }
  2129                           ;LCD.c: 142: if(IntegerNumber == 0)
  2130                           	
  2131  02EB  084C               	movf	((_LCDWriteInteger_IntegerNumber+1)),w
  2132  02EC  044B               	iorwf	((_LCDWriteInteger_IntegerNumber)),w
  2133  02ED  1D03               	skipz
  2134  02EE  2AF0               	goto	u2671
  2135  02EF  2AF1               	goto	u2670
  2136  02F0                     u2671:
  2137  02F0  2AF7               	goto	l41
  2138  02F1                     u2670:
  2139                           	line	143
  2140                           ;LCD.c: 143: LCDWriteData(0x30);
  2141  02F1  3030               	movlw	(030h)
  2142  02F2  120A  158A  257E   	fcall	_LCDWriteData
              120A  118A         
  2143                           	
  2144  02F7                     l41:	
  2145                           	line	145
  2146                           ;LCD.c: 145: while( IntegerNumber > 0)
  2147  02F7  2B2D               	goto	l42
  2148                           	
  2149  02F8                     l43:	
  2150                           	line	147
  2151                           ;LCD.c: 146: {
  2152                           ;LCD.c: 147: c[i++] = ((IntegerNumber % 10) | 0
                                 x30);
  2153  02F8  300A               	movlw	low(0Ah)
  2154                           	
  2155  02F9  00D7               	movwf	(0+(?___awmod)+02h)
  2156  02FA  3000               	movlw	high(0Ah)
  2157  02FB  00D8               	movwf	((0+(?___awmod)+02h))+1
  2158                           	
  2159                           	
  2160  02FC  084C               	movf	(_LCDWriteInteger_IntegerNumber+1),w
  2161  02FD  01D6               	clrf	(?___awmod+1)
  2162  02FE  07D6               	addwf	(?___awmod+1)
  2163  02FF  084B               	movf	(_LCDWriteInteger_IntegerNumber),w
  2164  0300  01D5               	clrf	(?___awmod)
  2165  0301  07D5               	addwf	(?___awmod)
  2166                           
  2167  0302  120A  158A  27A5   	fcall	___awmod
              120A  118A         
  2168  0307  1283               	bcf	status, 5	;RP0=0, select bank0
  2169  0308  1303               	bcf	status, 6	;RP1=0, select bank0
  2170  0309  0855               	movf	(0+?___awmod),w
  2171  030A  3830               	iorlw	030h
  2172  030B  00D4               	movwf	(??_LCDWriteInteger+7+0)
  2173                           	
  2174  030C  084D               	movf	(_LCDWriteInteger_i),w
  2175  030D  3E4E               	addlw	(_LCDWriteInteger_c)&0ffh
  2176  030E  1383               	bcf	status, 7	;select IRP bank0
  2177                           	
  2178  030F  0084               	movwf	fsr0
  2179  0310  0854               	movf	(??_LCDWriteInteger+7+0),w
  2180  0311  0080               	movwf	indf
  2181  0312  3001               	movlw	(01h)
  2182  0313  00D4               	movwf	(??_LCDWriteInteger+7+0)
  2183                           	
  2184  0314  0854               	movf	(??_LCDWriteInteger+7+0),w
  2185  0315  07CD               	addwf	(_LCDWriteInteger_i),f
  2186                           	line	148
  2187                           ;LCD.c: 148: IntegerNumber /= 10;
  2188  0316  300A               	movlw	low(0Ah)
  2189                           	
  2190  0317  00D7               	movwf	(0+(?___awdiv)+02h)
  2191  0318  3000               	movlw	high(0Ah)
  2192  0319  00D8               	movwf	((0+(?___awdiv)+02h))+1
  2193                           	
  2194                           	
  2195  031A  084C               	movf	(_LCDWriteInteger_IntegerNumber+1),w
  2196  031B  01D6               	clrf	(?___awdiv+1)
  2197  031C  07D6               	addwf	(?___awdiv+1)
  2198  031D  084B               	movf	(_LCDWriteInteger_IntegerNumber),w
  2199  031E  01D5               	clrf	(?___awdiv)
  2200  031F  07D5               	addwf	(?___awdiv)
  2201                           
  2202  0320  120A  118A  2261   	fcall	___awdiv
              120A  118A         
  2203  0325  1283               	bcf	status, 5	;RP0=0, select bank0
  2204  0326  1303               	bcf	status, 6	;RP1=0, select bank0
  2205                           	
  2206  0327  0856               	movf	(1+?___awdiv),w
  2207  0328  01CC               	clrf	(_LCDWriteInteger_IntegerNumber+1)
  2208  0329  07CC               	addwf	(_LCDWriteInteger_IntegerNumber+1)
  2209  032A  0855               	movf	(0+?___awdiv),w
  2210  032B  01CB               	clrf	(_LCDWriteInteger_IntegerNumber)
  2211  032C  07CB               	addwf	(_LCDWriteInteger_IntegerNumber)
  2212                           
  2213                           	line	149
  2214                           	
  2215  032D                     l42:	
  2216                           	line	145
  2217  032D  1283               	bcf	status, 5	;RP0=0, select bank0
  2218  032E  1303               	bcf	status, 6	;RP1=0, select bank0
  2219                           	
  2220  032F  084C               	movf	(_LCDWriteInteger_IntegerNumber+1),w
  2221  0330  3A80               	xorlw	80h
  2222  0331  00D4               	movwf	(??_LCDWriteInteger+7+0)
  2223  0332  3080               	movlw	(high(01h))^80h
  2224  0333  0254               	subwf	(??_LCDWriteInteger+7+0),w
  2225  0334  1D03               	skipz
  2226  0335  2B38               	goto	u26810
  2227  0336                     u26815:
  2228  0336  3001               	movlw	low(01h)
  2229  0337  024B               	subwf	(_LCDWriteInteger_IntegerNumber),w
  2230  0338                     u26810:
  2231                           
  2232  0338  1803               	skipnc
  2233  0339  2B3B               	goto	u2681
  2234  033A  2B3C               	goto	u2680
  2235  033B                     u2681:
  2236  033B  2AF8               	goto	l43
  2237  033C                     u2680:
  2238                           	
  2239  033C                     l44:	
  2240                           	line	151
  2241                           ;LCD.c: 149: }
  2242                           ;LCD.c: 151: while(i-- > 0)
  2243  033C  2B47               	goto	l45
  2244                           	
  2245  033D                     l46:	
  2246                           	line	152
  2247                           ;LCD.c: 152: LCDWriteData(c[i]);
  2248                           	
  2249  033D  084D               	movf	(_LCDWriteInteger_i),w
  2250  033E  3E4E               	addlw	(_LCDWriteInteger_c)&0ffh
  2251  033F  1383               	bcf	status, 7	;select IRP bank0
  2252                           	
  2253  0340  0084               	movwf	fsr0
  2254  0341  0800               	movf	indf,w
  2255  0342  120A  158A  257E   	fcall	_LCDWriteData
              120A  118A         
  2256                           	
  2257  0347                     l45:	
  2258                           	line	151
  2259                           	
  2260  0347  1283               	bcf	status, 5	;RP0=0, select bank0
  2261  0348  1303               	bcf	status, 6	;RP1=0, select bank0
  2262                           	
  2263  0349  3001               	movlw	low(01h)
  2264  034A  02CD               	subwf	(_LCDWriteInteger_i),f
  2265  034B  084D               	movf	((_LCDWriteInteger_i))&07fh,w
  2266  034C  3AFF               	xorlw	0FFh
  2267  034D  1D03               	skipz
  2268  034E  2B50               	goto	u2691
  2269  034F  2B51               	goto	u2690
  2270  0350                     u2691:
  2271  0350  2B3D               	goto	l46
  2272  0351                     u2690:
  2273                           	
  2274  0351                     l47:	
  2275                           	line	155
  2276                           ;LCD.c: 155: }
  2277  0351                     l39:	
  2278  0351  0008               	return
  2279                           ; =============== function _LCDWriteInteger end
                                 s ===============
  2280                           
  2281                           GLOBAL __end_of_LCDWriteInteger
  2282  0352                     	__end_of_LCDWriteInteger:
  2283                           	FNSIZE	_LCDWriteInteger,8,2
  2284                           	signat	_LCDWriteInteger,4216
  2285                           	global	___fttol
  2286                           	global	??___fttol
  2287                           	global	?___fttol
  2288                           
  2289                           ; *************** function ___fttol ***********
                                 ****
  2290                           ; Defined at:
  2291                           ;		line 16 in file "C:\Program Files (x86)\HI-T
                                 ECH Software\PICC\PRO\9.65\sources\fttol.c"
  2292                           ; Parameters:
  2293                           ;		f1          	offs:   0	type: float 
  2294                           ; Auto variables:
  2295                           ;		sign1       	       	type: unsigned char 
  2296                           ;		exp1        	       	type: unsigned char 
  2297                           ;		lval        	       	type: unsigned long 
  2298                           ; Return value:
  2299                           ;		type: long 
  2300                           ;		size: 4
  2301                           ; Registers used:
  2302                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
                                 th, cstack
  2303                           ; Tracked objects:
  2304                           ;		On entry : 300/0
  2305                           ;		On exit  : 0/0
  2306                           ;		Unchanged: 0/0
  2307                           ; Data sizes:
  2308                           ;		Autos:    6
  2309                           ;		Params:   4
  2310                           ;		Temp:     1
  2311                           ;		Total:   11
  2312                           ; This function calls:
  2313                           ;		___ftunpack
  2314                           ; This function is called by:
  2315                           ;		_LCDWriteFloat
  2316                           ; This function uses a non-reentrant model
  2317                           ; 
  2318                           	psect	text201,local,class=CODE,delta=2
  2319                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\fttol.c"
  2320                           	line	16
  2321                           	
  2322  01EE                     ___fttol:	
  2323                           	opt stack 5
  2324                           ; Regs used in ___fttol: [wreg-fsr0h+status,2+s
                                 tatus,0+pclath+cstack]
  2325                           	line	20
  2326                           	
  2327  01EE  3050               	movlw	((___fttol_exp1))&0ffh
  2328                           	
  2329  01EF  00DD               	movwf	(?___ftunpack)
  2330                           	
  2331  01F0  304B               	movlw	((___fttol_f1))&0ffh
  2332  01F1  120A  158A  274B   	fcall	___ftunpack
              120A  118A         
  2333  01F6  1283               	bcf	status, 5	;RP0=0, select bank0
  2334  01F7  1303               	bcf	status, 6	;RP1=0, select bank0
  2335                           	
  2336  01F8  00CF               	movwf	(___fttol_sign1)
  2337                           	line	21
  2338                           	
  2339  01F9  084B               	movf	(___fttol_f1),w
  2340                           	
  2341  01FA  00D1               	movwf	(___fttol_lval)
  2342  01FB  084C               	movf	(___fttol_f1+1),w
  2343  01FC  00D2               	movwf	((___fttol_lval))+1
  2344                           	
  2345  01FD  084D               	movf	(___fttol_f1+2),w
  2346  01FE  00D3               	movwf	((___fttol_lval))+2
  2347                           	
  2348  01FF  01D4               	clrf	3+(___fttol_lval)
  2349                           	line	22
  2350                           	
  2351                           	
  2352  0200  308E               	movlw	low(08Eh)
  2353  0201  02D0               	subwf	(___fttol_exp1),f
  2354                           	line	23
  2355                           	
  2356  0202  1FD0               	btfss	(___fttol_exp1),7
  2357  0203  2A05               	goto	u2841
  2358  0204  2A06               	goto	u2840
  2359  0205                     u2841:
  2360  0205  2A28               	goto	l201
  2361  0206                     u2840:
  2362                           	line	24
  2363                           	
  2364  0206  0850               	movf	(___fttol_exp1),w
  2365  0207  3A80               	xorlw	80h
  2366  0208  3E8F               	addlw	-((-15)^80h)
  2367  0209  1803               	skipnc
  2368  020A  2A0C               	goto	u2851
  2369  020B  2A0D               	goto	u2850
  2370  020C                     u2851:
  2371  020C  2A16               	goto	l205
  2372  020D                     u2850:
  2373                           	line	25
  2374                           	
  2375  020D  3000               	movlw	0
  2376  020E  00CE               	movwf	(?___fttol+3)
  2377  020F  3000               	movlw	0
  2378  0210  00CD               	movwf	(?___fttol+2)
  2379  0211  3000               	movlw	0
  2380  0212  00CC               	movwf	(?___fttol+1)
  2381  0213  3000               	movlw	0
  2382  0214  00CB               	movwf	(?___fttol)
  2383                           
  2384  0215  2A60               	goto	l200
  2385                           	line	26
  2386                           	
  2387  0216                     l205:	
  2388                           	line	27
  2389                           	
  2390  0216  3001               	movlw	01h
  2391  0217                     u2865:
  2392  0217  1003               	clrc
  2393  0218  0CD4               	rrf	(___fttol_lval+3),f
  2394  0219  0CD3               	rrf	(___fttol_lval+2),f
  2395  021A  0CD2               	rrf	(___fttol_lval+1),f
  2396  021B  0CD1               	rrf	(___fttol_lval),f
  2397  021C  3EFF               	addlw	-1
  2398  021D  1D03               	skipz
  2399  021E  2A17               	goto	u2865
  2400                           
  2401                           	line	28
  2402  021F  3001               	movlw	(01h)
  2403  0220  00D5               	movwf	(??___fttol+6+0)
  2404                           	
  2405  0221  0855               	movf	(??___fttol+6+0),w
  2406  0222  07D0               	addwf	(___fttol_exp1),f
  2407  0223  1D03               	btfss	status,2
  2408  0224  2A26               	goto	u2871
  2409  0225  2A27               	goto	u2870
  2410  0226                     u2871:
  2411  0226  2A16               	goto	l205
  2412  0227                     u2870:
  2413                           	
  2414  0227                     l204:	
  2415                           	line	29
  2416  0227  2A48               	goto	l206
  2417                           	
  2418  0228                     l201:	
  2419                           	line	30
  2420  0228  3020               	movlw	(020h)
  2421                           	
  2422  0229  0250               	subwf	(___fttol_exp1),w
  2423  022A  1C03               	skipc
  2424  022B  2A2D               	goto	u2881
  2425  022C  2A2E               	goto	u2880
  2426  022D                     u2881:
  2427  022D  2A37               	goto	l207
  2428  022E                     u2880:
  2429                           	line	31
  2430                           	
  2431  022E  3000               	movlw	0
  2432  022F  00CE               	movwf	(?___fttol+3)
  2433  0230  3000               	movlw	0
  2434  0231  00CD               	movwf	(?___fttol+2)
  2435  0232  3000               	movlw	0
  2436  0233  00CC               	movwf	(?___fttol+1)
  2437  0234  3000               	movlw	0
  2438  0235  00CB               	movwf	(?___fttol)
  2439                           
  2440  0236  2A60               	goto	l200
  2441                           	
  2442  0237                     l207:	
  2443                           	line	32
  2444  0237  2A43               	goto	l208
  2445                           	
  2446  0238                     l209:	
  2447                           	line	33
  2448                           	
  2449  0238  3001               	movlw	01h
  2450  0239  00D5               	movwf	(??___fttol+6+0)
  2451  023A                     u2895:
  2452  023A  1003               	clrc
  2453  023B  0DD1               	rlf	(___fttol_lval),f
  2454  023C  0DD2               	rlf	(___fttol_lval+1),f
  2455  023D  0DD3               	rlf	(___fttol_lval+2),f
  2456  023E  0DD4               	rlf	(___fttol_lval+3),f
  2457  023F  0BD5               	decfsz	(??___fttol+6+0)
  2458  0240  2A3A               	goto	u2895
  2459                           	line	34
  2460                           	
  2461                           	
  2462  0241  3001               	movlw	low(01h)
  2463  0242  02D0               	subwf	(___fttol_exp1),f
  2464                           	line	35
  2465                           	
  2466  0243                     l208:	
  2467                           	line	32
  2468                           	
  2469  0243  08D0               	movf	(___fttol_exp1),f
  2470  0244  1D03               	skipz
  2471  0245  2A47               	goto	u2901
  2472  0246  2A48               	goto	u2900
  2473  0247                     u2901:
  2474  0247  2A38               	goto	l209
  2475  0248                     u2900:
  2476                           	
  2477  0248                     l210:	
  2478                           	line	36
  2479                           	
  2480  0248                     l206:	
  2481                           	line	37
  2482                           	
  2483  0248  08CF               	movf	(___fttol_sign1),f
  2484  0249  1D03               	skipz
  2485  024A  2A4C               	goto	u2910
  2486  024B  2A57               	goto	l211
  2487  024C                     u2910:
  2488                           	line	38
  2489                           	
  2490  024C  09D1               	comf	(___fttol_lval),f
  2491  024D  09D2               	comf	(___fttol_lval+1),f
  2492  024E  09D3               	comf	(___fttol_lval+2),f
  2493  024F  09D4               	comf	(___fttol_lval+3),f
  2494  0250  0AD1               	incf	(___fttol_lval),f
  2495  0251  1903               	skipnz
  2496  0252  0AD2               	incf	(___fttol_lval+1),f
  2497  0253  1903               	skipnz
  2498  0254  0AD3               	incf	(___fttol_lval+2),f
  2499  0255  1903               	skipnz
  2500  0256  0AD4               	incf	(___fttol_lval+3),f
  2501                           	
  2502                           	
  2503  0257                     l211:	
  2504                           	line	39
  2505                           	
  2506                           	
  2507  0257  0854               	movf	(___fttol_lval+3),w
  2508  0258  00CE               	movwf	(?___fttol+3)
  2509  0259  0853               	movf	(___fttol_lval+2),w
  2510  025A  00CD               	movwf	(?___fttol+2)
  2511  025B  0852               	movf	(___fttol_lval+1),w
  2512  025C  00CC               	movwf	(?___fttol+1)
  2513  025D  0851               	movf	(___fttol_lval),w
  2514  025E  00CB               	movwf	(?___fttol)
  2515                           
  2516  025F  2A60               	goto	l200
  2517                           	line	40
  2518  0260                     l200:	
  2519  0260  0008               	return
  2520                           ; =============== function ___fttol ends ======
                                 =========
  2521                           
  2522                           GLOBAL __end_of___fttol
  2523  0261                     	__end_of___fttol:
  2524                           	FNSIZE	___fttol,7,4
  2525                           	signat	___fttol,4220
  2526                           	global	___ftmul
  2527                           	global	??___ftmul
  2528                           	global	?___ftmul
  2529                           
  2530                           ; *************** function ___ftmul ***********
                                 ****
  2531                           ; Defined at:
  2532                           ;		line 18 in file "C:\Program Files (x86)\HI-T
                                 ECH Software\PICC\PRO\9.65\sources\ftmul.c"
  2533                           ; Parameters:
  2534                           ;		f1          	offs:   0	type: float 
  2535                           ;		f2          	offs:   3	type: float 
  2536                           ; Auto variables:
  2537                           ;		sign1       	       	type: unsigned char 
  2538                           ;		exp1        	       	type: unsigned char 
  2539                           ;		cntr        	       	type: unsigned char 
  2540                           ;		f3          	       	type: float 
  2541                           ; Return value:
  2542                           ;		type: float 
  2543                           ;		size: 3
  2544                           ; Registers used:
  2545                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
                                 th, cstack
  2546                           ; Tracked objects:
  2547                           ;		On entry : 300/0
  2548                           ;		On exit  : 0/0
  2549                           ;		Unchanged: 0/0
  2550                           ; Data sizes:
  2551                           ;		Autos:    6
  2552                           ;		Params:   6
  2553                           ;		Temp:     1
  2554                           ;		Total:   13
  2555                           ; This function calls:
  2556                           ;		___ftunpack
  2557                           ;		___ftpack
  2558                           ; This function is called by:
  2559                           ;		_LCDWriteFloat
  2560                           ;		_main
  2561                           ; This function uses a non-reentrant model
  2562                           ; 
  2563                           	psect	text202,local,class=CODE,delta=2
  2564                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\ftmul.c"
  2565                           	line	18
  2566                           	
  2567  03E1                     ___ftmul:	
  2568                           	opt stack 5
  2569                           ; Regs used in ___ftmul: [wreg-fsr0h+status,2+s
                                 tatus,0+pclath+cstack]
  2570                           	line	22
  2571                           	
  2572  03E1  3000               	movlw	0
  2573  03E2  00D4               	movwf	(___ftmul_f3)
  2574  03E3  3000               	movlw	0
  2575  03E4  00D5               	movwf	(___ftmul_f3+1)
  2576  03E5  3000               	movlw	0
  2577  03E6  00D6               	movwf	(___ftmul_f3+2)
  2578                           	line	23
  2579                           	
  2580  03E7  3052               	movlw	((___ftmul_exp1))&0ffh
  2581                           	
  2582  03E8  00DD               	movwf	(?___ftunpack)
  2583                           	
  2584  03E9  304B               	movlw	((___ftmul_f1))&0ffh
  2585  03EA  120A  158A  274B   	fcall	___ftunpack
              120A  118A         
  2586  03EF  1283               	bcf	status, 5	;RP0=0, select bank0
  2587  03F0  1303               	bcf	status, 6	;RP1=0, select bank0
  2588                           	
  2589  03F1  00D1               	movwf	(___ftmul_sign1)
  2590                           	line	24
  2591                           	
  2592  03F2  3053               	movlw	((___ftmul_cntr))&0ffh
  2593                           	
  2594  03F3  00DD               	movwf	(?___ftunpack)
  2595                           	
  2596  03F4  304E               	movlw	((___ftmul_f2))&0ffh
  2597  03F5  120A  158A  274B   	fcall	___ftunpack
              120A  118A         
  2598  03FA  1283               	bcf	status, 5	;RP0=0, select bank0
  2599  03FB  1303               	bcf	status, 6	;RP1=0, select bank0
  2600  03FC  00D7               	movwf	(??___ftmul+6+0)
  2601                           	
  2602  03FD  0857               	movf	(??___ftmul+6+0),w
  2603  03FE  06D1               	xorwf	(___ftmul_sign1),f
  2604                           	line	25
  2605                           	
  2606  03FF  08D3               	movf	(___ftmul_cntr),f
  2607  0400  1D03               	skipz
  2608  0401  2C03               	goto	u2920
  2609  0402  2C08               	goto	l600000846
  2610  0403                     u2920:
  2611                           	
  2612  0403  08D2               	movf	(___ftmul_exp1),f
  2613  0404  1D03               	skipz
  2614  0405  2C07               	goto	u2931
  2615  0406  2C08               	goto	u2930
  2616  0407                     u2931:
  2617  0407  2C0F               	goto	l143
  2618  0408                     u2930:
  2619                           	
  2620  0408                     l600000846:	
  2621                           	line	26
  2622                           	
  2623                           	
  2624  0408  0854               	movf	(___ftmul_f3),w
  2625  0409  00CB               	movwf	(?___ftmul)
  2626  040A  0855               	movf	(___ftmul_f3+1),w
  2627  040B  00CC               	movwf	(?___ftmul+1)
  2628  040C  0856               	movf	(___ftmul_f3+2),w
  2629  040D  00CD               	movwf	(?___ftmul+2)
  2630  040E  2C83               	goto	l142
  2631                           	
  2632  040F                     l143:	
  2633                           	line	27
  2634                           	
  2635  040F  0853               	movf	(___ftmul_cntr),w
  2636  0410  3E7B               	addlw	07Bh
  2637  0411  00D7               	movwf	(??___ftmul+6+0)
  2638                           	
  2639  0412  0857               	movf	(??___ftmul+6+0),w
  2640  0413  07D2               	addwf	(___ftmul_exp1),f
  2641                           	line	28
  2642  0414  3007               	movlw	(07h)
  2643                           	
  2644  0415  00D3               	movwf	(___ftmul_cntr)
  2645                           	line	29
  2646                           	
  2647  0416                     l146:	
  2648                           	line	30
  2649                           	
  2650  0416  1C4B               	btfss	(___ftmul_f1),(0)&7
  2651  0417  2C19               	goto	u2941
  2652  0418  2C1A               	goto	u2940
  2653  0419                     u2941:
  2654  0419  2C28               	goto	l147
  2655  041A                     u2940:
  2656                           	line	31
  2657                           	
  2658                           	
  2659  041A  084E               	movf	(___ftmul_f2),w
  2660  041B  07D4               	addwf	(___ftmul_f3),f
  2661  041C  084F               	movf	(___ftmul_f2+1),w
  2662  041D  1103               	clrz
  2663  041E  1803               	skipnc
  2664  041F  0A4F               	incf	(___ftmul_f2+1),w
  2665  0420  1D03               	skipz
  2666  0421  07D5               	addwf	(___ftmul_f3+1),f
  2667  0422  0850               	movf	(___ftmul_f2+2),w
  2668  0423  1103               	clrz
  2669  0424  1803               	skipnc
  2670  0425  0A50               	incf	(___ftmul_f2+2),w
  2671  0426  1D03               	skipz
  2672  0427  07D6               	addwf	(___ftmul_f3+2),f
  2673                           	
  2674  0428                     l147:	
  2675                           	line	32
  2676                           	
  2677  0428  3001               	movlw	01h
  2678  0429                     u2955:
  2679  0429  1003               	clrc
  2680  042A  0CCD               	rrf	(___ftmul_f1+2),f
  2681  042B  0CCC               	rrf	(___ftmul_f1+1),f
  2682  042C  0CCB               	rrf	(___ftmul_f1),f
  2683  042D  3EFF               	addlw	-1
  2684  042E  1D03               	skipz
  2685  042F  2C29               	goto	u2955
  2686                           
  2687                           	line	33
  2688                           	
  2689  0430  3001               	movlw	01h
  2690  0431                     u2965:
  2691  0431  1003               	clrc
  2692  0432  0DCE               	rlf	(___ftmul_f2),f
  2693  0433  0DCF               	rlf	(___ftmul_f2+1),f
  2694  0434  0DD0               	rlf	(___ftmul_f2+2),f
  2695  0435  3EFF               	addlw	-1
  2696  0436  1D03               	skipz
  2697  0437  2C31               	goto	u2965
  2698                           	line	34
  2699                           	
  2700                           	
  2701  0438  3001               	movlw	low(01h)
  2702  0439  02D3               	subwf	(___ftmul_cntr),f
  2703  043A  1D03               	btfss	status,2
  2704  043B  2C3D               	goto	u2971
  2705  043C  2C3E               	goto	u2970
  2706  043D                     u2971:
  2707  043D  2C16               	goto	l146
  2708  043E                     u2970:
  2709                           	
  2710  043E                     l145:	
  2711                           	line	35
  2712  043E  3009               	movlw	(09h)
  2713                           	
  2714  043F  00D3               	movwf	(___ftmul_cntr)
  2715                           	line	36
  2716                           	
  2717  0440                     l150:	
  2718                           	line	37
  2719                           	
  2720  0440  1C4B               	btfss	(___ftmul_f1),(0)&7
  2721  0441  2C43               	goto	u2981
  2722  0442  2C44               	goto	u2980
  2723  0443                     u2981:
  2724  0443  2C52               	goto	l151
  2725  0444                     u2980:
  2726                           	line	38
  2727                           	
  2728                           	
  2729  0444  084E               	movf	(___ftmul_f2),w
  2730  0445  07D4               	addwf	(___ftmul_f3),f
  2731  0446  084F               	movf	(___ftmul_f2+1),w
  2732  0447  1103               	clrz
  2733  0448  1803               	skipnc
  2734  0449  0A4F               	incf	(___ftmul_f2+1),w
  2735  044A  1D03               	skipz
  2736  044B  07D5               	addwf	(___ftmul_f3+1),f
  2737  044C  0850               	movf	(___ftmul_f2+2),w
  2738  044D  1103               	clrz
  2739  044E  1803               	skipnc
  2740  044F  0A50               	incf	(___ftmul_f2+2),w
  2741  0450  1D03               	skipz
  2742  0451  07D6               	addwf	(___ftmul_f3+2),f
  2743                           	
  2744  0452                     l151:	
  2745                           	line	39
  2746                           	
  2747  0452  3001               	movlw	01h
  2748  0453                     u2995:
  2749  0453  1003               	clrc
  2750  0454  0CCD               	rrf	(___ftmul_f1+2),f
  2751  0455  0CCC               	rrf	(___ftmul_f1+1),f
  2752  0456  0CCB               	rrf	(___ftmul_f1),f
  2753  0457  3EFF               	addlw	-1
  2754  0458  1D03               	skipz
  2755  0459  2C53               	goto	u2995
  2756                           
  2757                           	line	40
  2758                           	
  2759  045A  3001               	movlw	01h
  2760  045B                     u3005:
  2761  045B  1003               	clrc
  2762  045C  0CD6               	rrf	(___ftmul_f3+2),f
  2763  045D  0CD5               	rrf	(___ftmul_f3+1),f
  2764  045E  0CD4               	rrf	(___ftmul_f3),f
  2765  045F  3EFF               	addlw	-1
  2766  0460  1D03               	skipz
  2767  0461  2C5B               	goto	u3005
  2768                           
  2769                           	line	41
  2770                           	
  2771                           	
  2772  0462  3001               	movlw	low(01h)
  2773  0463  02D3               	subwf	(___ftmul_cntr),f
  2774  0464  1D03               	btfss	status,2
  2775+ 0465  2C67               	goto	u3011
  2776+ 0466  2C68               	goto	u3010
  2777+ 0467                     u3011:
  2778+ 0467  2C40               	goto	l150
  2779+ 0468                     u3010:
  2780+                          	
  2781+ 0468                     l149:	
  2782+                          	line	42
  2783+                          	
  2784+ 0468  0852               	movf	(___ftmul_exp1),w
  2785+                          	
  2786+ 0469  00DD               	movwf	(?___ftpack)
  2787+                          	
  2788+ 046A  3054               	movlw	((___ftmul_f3))&0ffh
  2789+ 046B  120A  118A  2739   	fcall	___ftpack
      +       120A  118A         
  2790+                          	line	43
  2791+ 0470  1283               	bcf	status, 5	;RP0=0, select bank0
  2792+ 0471  1303               	bcf	status, 6	;RP1=0, select bank0
  2793+                          	
  2794+ 0472  08D1               	movf	(___ftmul_sign1),f
  2795+ 0473  1D03               	skipz
  2796+ 0474  2C76               	goto	u3020
  2797+ 0475  2C7C               	goto	l152
  2798+ 0476                     u3020:
  2799+                          	line	44
  2800+                          	
  2801+ 0476  3000               	movlw	0
  2802+ 0477  04D4               	iorwf	(___ftmul_f3),f
  2803+ 0478  3000               	movlw	0
  2804+ 0479  04D5               	iorwf	(___ftmul_f3+1),f
  2805+ 047A  3080               	movlw	080h
  2806+ 047B  04D6               	iorwf	(___ftmul_f3+2),f
  2807+                          	
  2808+ 047C                     l152:	
  2809+                          	line	45
  2810+                          	
  2811+                          	
  2812+ 047C  0854               	movf	(___ftmul_f3),w
  2813+ 047D  00CB               	movwf	(?___ftmul)
  2814+ 047E  0855               	movf	(___ftmul_f3+1),w
  2815+ 047F  00CC               	movwf	(?___ftmul+1)
  2816+ 0480  0856               	movf	(___ftmul_f3+2),w
  2817+ 0481  00CD               	movwf	(?___ftmul+2)
  2818+ 0482  2C83               	goto	l142
  2819+                          	line	46
  2820+ 0483                     l142:	
  2821+ 0483  0008               	return
  2822+                          ; =============== function ___ftmul ends ======
      +                          =========
  2823+                          
  2824+                          GLOBAL __end_of___ftmul
  2825+ 0484                     	__end_of___ftmul:
  2826+                          	FNSIZE	___ftmul,7,6
  2827+                          	signat	___ftmul,8315
  2828+                          	global	___ftge
  2829+                          	global	??___ftge
  2830+                          	global	?___ftge
  2831+                          
  2832+                          ; *************** function ___ftge ************
      +                          ***
  2833+                          ; Defined at:
  2834+                          ;		line 5 in file "C:\Program Files (x86)\HI-TE
      +                          CH Software\PICC\PRO\9.65\sources\ftge.c"
  2835+                          ; Parameters:
  2836+                          ;		ff1         	offs:   0	type: float 
  2837+                          ;		ff2         	offs:   3	type: float 
  2838+                          ; Auto variables:
  2839+                          ;		None
  2840+                          ; Return value:
  2841+                          ;		type: bit 
  2842+                          ;		size: 0
  2843+                          ; Registers used:
  2844+                          ;		wreg, status,2, status,0
  2845+                          ; Tracked objects:
  2846+                          ;		On entry : 300/0
  2847+                          ;		On exit  : 0/0
  2848+                          ;		Unchanged: 0/0
  2849+                          ; Data sizes:
  2850+                          ;		Autos:    0
  2851+                          ;		Params:   6
  2852+                          ;		Temp:     0
  2853+                          ;		Total:    6
  2854+                          ; This function calls:
  2855+                          ;		Nothing
  2856+                          ; This function is called by:
  2857+                          ;		_LCDWriteFloat
  2858+                          ;		_main
  2859+                          ; This function uses a non-reentrant model
  2860+                          ; 
  2861+                          	psect	text203,local,class=CODE,delta=2
  2862+                          	file	"C:\Program Files (x86)\HI-TECH Software\
      +                          PICC\PRO\9.65\sources\ftge.c"
  2863+                          	line	5
  2864+                          	
  2865+ 0EC3                     ___ftge:	
  2866+                          	opt stack 5
  2867+                          ; Regs used in ___ftge: [wreg+status,2+status,0
      +                          ]
  2868+                          	line	6
  2869+                          	
  2870+ 0EC3  1FCD               	btfss	(___ftge_ff1+2),(23)&7
  2871+ 0EC4  2EC6               	goto	u3031
  2872+ 0EC5  2EC7               	goto	u3030
  2873+ 0EC6                     u3031:
  2874+ 0EC6  2ED4               	goto	l270
  2875+ 0EC7                     u3030:
  2876+                          	line	7
  2877+                          	
  2878+ 0EC7  084B               	movf	(___ftge_ff1),w
  2879+ 0EC8  3C00               	sublw	low(0800000h)
  2880+                          	
  2881+ 0EC9  00CB               	movwf	(___ftge_ff1)
  2882+ 0ECA  084C               	movf	(___ftge_ff1+1),w
  2883+ 0ECB  1C03               	skipc
  2884+ 0ECC  0A4C               	incf	(___ftge_ff1+1),w
  2885+ 0ECD  3C00               	sublw	high(0800000h)
  2886+ 0ECE  00CC               	movwf	1+(___ftge_ff1)
  2887+ 0ECF  084D               	movf	(___ftge_ff1+2),w
  2888+ 0ED0  1C03               	skipc
  2889+ 0ED1  0A4D               	incf	(___ftge_ff1+2),w
  2890+ 0ED2  3C80               	sublw	low highword(0800000h)
  2891+ 0ED3  00CD               	movwf	2+(___ftge_ff1)
  2892+                          	
  2893+ 0ED4                     l270:	
  2894+                          	line	8
  2895+                          	
  2896+ 0ED4  1FD0               	btfss	(___ftge_ff2+2),(23)&7
  2897+ 0ED5  2ED7               	goto	u3041
  2898+ 0ED6  2ED8               	goto	u3040
  2899+ 0ED7                     u3041:
  2900+ 0ED7  2EE5               	goto	l271
  2901+ 0ED8                     u3040:
  2902+                          	line	9
  2903+                          	
  2904+ 0ED8  084E               	movf	(___ftge_ff2),w
  2905+ 0ED9  3C00               	sublw	low(0800000h)
  2906+                          	
  2907+ 0EDA  00CE               	movwf	(___ftge_ff2)
  2908+ 0EDB  084F               	movf	(___ftge_ff2+1),w
  2909+ 0EDC  1C03               	skipc
  2910+ 0EDD  0A4F               	incf	(___ftge_ff2+1),w
  2911+ 0EDE  3C00               	sublw	high(0800000h)
  2912+ 0EDF  00CF               	movwf	1+(___ftge_ff2)
  2913+ 0EE0  0850               	movf	(___ftge_ff2+2),w
  2914+ 0EE1  1C03               	skipc
  2915+ 0EE2  0A50               	incf	(___ftge_ff2+2),w
  2916+ 0EE3  3C80               	sublw	low highword(0800000h)
  2917+ 0EE4  00D0               	movwf	2+(___ftge_ff2)
  2918+                          	
  2919+ 0EE5                     l271:	
  2920+                          	line	10
  2921+                          	
  2922+ 0EE5  3080               	movlw	080h
  2923+ 0EE6  06CD               	xorwf	(___ftge_ff1+2),f
  2924+                          	line	11
  2925+                          	
  2926+ 0EE7  3080               	movlw	080h
  2927+ 0EE8  06D0               	xorwf	(___ftge_ff2+2),f
  2928+                          	line	12
  2929+                          	
  2930+                          	
  2931+ 0EE9  0850               	movf	(___ftge_ff2+2),w
  2932+ 0EEA  024D               	subwf	(___ftge_ff1+2),w
  2933+ 0EEB  1D03               	skipz
  2934+ 0EEC  2EF3               	goto	u3055
  2935+ 0EED  084F               	movf	(___ftge_ff2+1),w
  2936+ 0EEE  024C               	subwf	(___ftge_ff1+1),w
  2937+ 0EEF  1D03               	skipz
  2938+ 0EF0  2EF3               	goto	u3055
  2939+ 0EF1  084E               	movf	(___ftge_ff2),w
  2940+ 0EF2  024B               	subwf	(___ftge_ff1),w
  2941+ 0EF3                     u3055:
  2942+ 0EF3  1803               	skipnc
  2943+ 0EF4  2EF6               	goto	u3067
  2944+ 0EF5  2EF8               	goto	u3068
  2945+ 0EF6                     u3067:
  2946+ 0EF6  1403               	bsf	status,0
  2947+ 0EF7  2EF9               	goto	u3069
  2948+ 0EF8                     u3068:
  2949+ 0EF8  1003               	bcf	status,0
  2950+ 0EF9                     u3069:
  2951+ 0EF9  2EFA               	goto	l269
  2952+                          	line	13
  2953+ 0EFA                     l269:	
  2954+ 0EFA  0008               	return
  2955+                          ; =============== function ___ftge ends =======
      +                          ========
  2956+                          
  2957+                          GLOBAL __end_of___ftge
  2958+ 0EFB                     	__end_of___ftge:
  2959+                          	FNSIZE	___ftge,0,6
  2960+                          	signat	___ftge,8312
  2961+                          	global	___awtoft
  2962+                          	global	??___awtoft
  2963+                          	global	?___awtoft
  2964+                          
  2965+                          ; *************** function ___awtoft **********
      +                          *****
  2966+                          ; Defined at:
  2967+                          ;		line 16 in file "C:\Program Files (x86)\HI-T
      +                          ECH Software\PICC\PRO\9.65\sources\awtoft.c"
  2968+                          ; Parameters:
  2969+                          ;		c           	offs:   0	type: int 
  2970+                          ; Auto variables:
  2971+                          ;		f1          	       	type: float 
  2972+                          ; Return value:
  2973+                          ;		type: float 
  2974+                          ;		size: 3
  2975+                          ; Registers used:
  2976+                          ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
      +                          th, cstack
  2977+                          ; Tracked objects:
  2978+                          ;		On entry : 300/0
  2979+                          ;		On exit  : 0/0
  2980+                          ;		Unchanged: 0/0
  2981+                          ; Data sizes:
  2982+                          ;		Autos:    3
  2983+                          ;		Params:   3
  2984+                          ;		Temp:     3
  2985+                          ;		Total:    9
  2986+                          ; This function calls:
  2987+                          ;		___ftpack
  2988+                          ;		___ftneg
  2989+                          ; This function is called by:
  2990+                          ;		_LCDWriteFloat
  2991+                          ; This function uses a non-reentrant model
  2992+                          ; 
  2993+                          	psect	text204,local,class=CODE,delta=2
  2994+                          	file	"C:\Program Files (x86)\HI-TECH Software\
      +                          PICC\PRO\9.65\sources\awtoft.c"
  2995+                          	line	16
  2996+                          	
  2997+ 0EFB                     ___awtoft:	
  2998+                          	opt stack 5
  2999+                          ; Regs used in ___awtoft: [wreg-fsr0h+status,2+
      +                          status,0+pclath+cstack]
  3000+                          	line	19
  3001+                          	
  3002+ 0EFB  084C               	movf	((___awtoft_c+1)),w
  3003+ 0EFC  044B               	iorwf	((___awtoft_c)),w
  3004+ 0EFD  1D03               	skipz
  3005+ 0EFE  2F00               	goto	u3071
  3006+ 0EFF  2F01               	goto	u3070
  3007+ 0F00                     u3071:
  3008+ 0F00  2F08               	goto	l220
  3009+ 0F01                     u3070:
  3010+                          	line	20
  3011+                          	
  3012+ 0F01  3000               	movlw	0x0
  3013+ 0F02  00CB               	movwf	(?___awtoft)
  3014+ 0F03  3000               	movlw	0x0
  3015+ 0F04  00CC               	movwf	(?___awtoft+1)
  3016+ 0F05  3000               	movlw	0x0
  3017+ 0F06  00CD               	movwf	(?___awtoft+2)
  3018+ 0F07  2F4A               	goto	l219
  3019+                          	
  3020+ 0F08                     l220:	
  3021+                          	line	21
  3022+                          	
  3023+ 0F08  084B               	movf	(___awtoft_c),w
  3024+ 0F09  00D1               	movwf	(??___awtoft+3+0)
  3025+ 0F0A  084C               	movf	(___awtoft_c+1),w
  3026+ 0F0B  00D2               	movwf	(??___awtoft+3+0+1)
  3027+ 0F0C  3000               	movlw	0
  3028+ 0F0D  1BD2               	btfsc	(??___awtoft+3+0+1),7
  3029+ 0F0E  30FF               	movlw	255
  3030+ 0F0F  00D3               	movwf	(??___awtoft+3+0+2)
  3031+                          	
  3032+ 0F10  0851               	movf	(??___awtoft+3+0),w
  3033+ 0F11  00CE               	movwf	(___awtoft_f1)
  3034+ 0F12  0852               	movf	(??___awtoft+3+1),w
  3035+ 0F13  00CF               	movwf	(___awtoft_f1+1)
  3036+ 0F14  0853               	movf	(??___awtoft+3+2),w
  3037+ 0F15  00D0               	movwf	(___awtoft_f1+2)
  3038+                          	line	22
  3039+                          	
  3040+ 0F16  1FCC               	btfss	(___awtoft_c+1),7
  3041+ 0F17  2F19               	goto	u3081
  3042+ 0F18  2F1A               	goto	u3080
  3043+ 0F19                     u3081:
  3044+ 0F19  2F22               	goto	l221
  3045+ 0F1A                     u3080:
  3046+                          	line	23
  3047+                          	
  3048+ 0F1A  09CE               	comf	(___awtoft_f1),f
  3049+ 0F1B  09CF               	comf	(___awtoft_f1+1),f
  3050+ 0F1C  09D0               	comf	(___awtoft_f1+2),f
  3051+ 0F1D  0ACE               	incf	(___awtoft_f1),f
  3052+ 0F1E  1903               	skipnz
  3053+ 0F1F  0ACF               	incf	(___awtoft_f1+1),f
  3054+ 0F20  1903               	skipnz
  3055+ 0F21  0AD0               	incf	(___awtoft_f1+2),f
  3056+                          	
  3057+                          	
  3058+ 0F22                     l221:	
  3059+                          	line	24
  3060+ 0F22  308E               	movlw	(08Eh)
  3061+                          	
  3062+ 0F23  00DD               	movwf	(?___ftpack)
  3063+                          	
  3064+ 0F24  304E               	movlw	((___awtoft_f1))&0ffh
  3065+ 0F25  120A  118A  2739   	fcall	___ftpack
      +       120A  158A         
  3066+                          	line	25
  3067+ 0F2A  1283               	bcf	status, 5	;RP0=0, select bank0
  3068+ 0F2B  1303               	bcf	status, 6	;RP1=0, select bank0
  3069+                          	
  3070+ 0F2C  1FCC               	btfss	(___awtoft_c+1),7
  3071+ 0F2D  2F2F               	goto	u3091
  3072+ 0F2E  2F30               	goto	u3090
  3073+ 0F2F                     u3091:
  3074+ 0F2F  2F43               	goto	l222
  3075+ 0F30                     u3090:
  3076+                          	line	26
  3077+                          	
  3078+                          	
  3079+ 0F30  084E               	movf	(___awtoft_f1),w
  3080+ 0F31  00D4               	movwf	(?___ftneg)
  3081+ 0F32  084F               	movf	(___awtoft_f1+1),w
  3082+ 0F33  00D5               	movwf	(?___ftneg+1)
  3083+ 0F34  0850               	movf	(___awtoft_f1+2),w
  3084+ 0F35  00D6               	movwf	(?___ftneg+2)
  3085+ 0F36  120A  158A  2568   	fcall	___ftneg
      +       120A  158A         
  3086+ 0F3B  1283               	bcf	status, 5	;RP0=0, select bank0
  3087+ 0F3C  1303               	bcf	status, 6	;RP1=0, select bank0
  3088+                          	
  3089+ 0F3D  0854               	movf	(0+?___ftneg),w
  3090+ 0F3E  00CE               	movwf	(___awtoft_f1)
  3091+ 0F3F  0855               	movf	(1+?___ftneg),w
  3092+ 0F40  00CF               	movwf	(___awtoft_f1+1)
  3093+ 0F41  0856               	movf	(2+?___ftneg),w
  3094+ 0F42  00D0               	movwf	(___awtoft_f1+2)
  3095+                          	
  3096+ 0F43                     l222:	
  3097+                          	line	27
  3098+                          	
  3099+                          	
  3100+ 0F43  084E               	movf	(___awtoft_f1),w
  3101+ 0F44  00CB               	movwf	(?___awtoft)
  3102+ 0F45  084F               	movf	(___awtoft_f1+1),w
  3103+ 0F46  00CC               	movwf	(?___awtoft+1)
  3104+ 0F47  0850               	movf	(___awtoft_f1+2),w
  3105+ 0F48  00CD               	movwf	(?___awtoft+2)
  3106+ 0F49  2F4A               	goto	l219
  3107+                          	line	28
  3108+ 0F4A                     l219:	
  3109+ 0F4A  0008               	return
  3110+                          ; =============== function ___awtoft ends =====
      +                          ==========
  3111+                          
  3112+                          GLOBAL __end_of___awtoft
  3113+ 0F4B                     	__end_of___awtoft:
  3114+                          	FNSIZE	___awtoft,6,3
  3115+                          	signat	___awtoft,4219
  3116+                          	global	_LCDWriteString
  3117+                          	global	??_LCDWriteString
  3118+                          	global	?_LCDWriteString
  3119+                          
  3120+                          ; *************** function _LCDWriteString ****
      +                          ***********
  3121+                          ; Defined at:
  3122+                          ;		line 25 in file "C:\Users\hardik\Desktop\LM3
      +                          5 temp sensor\LCD.c"
  3123+                          ; Parameters:
  3124+                          ;		lcd_string  	reg:   wr	type: PTR const unsig
      +                          ned char ; Largest target is 17
  3125+                          ;		 -> STR_4(16), STR_3(2), STR_2(3), STR_1(17)
      +                          , 
  3126+                          ; Auto variables:
  3127+                          ;		lcd_string  	       	type: PTR const unsigne
      +                          d char ; Largest target is 17
  3128+                          ;		 -> STR_4(16), STR_3(2), STR_2(3), STR_1(17)
      +                          , 
  3129+                          ; Return value:
  3130+                          ;		type: void 
  3131+                          ;		size: 0
  3132+                          ; Registers used:
  3133+                          ;		wreg, status,2, status,0, pclath, cstack
  3134+                          ; Tracked objects:
  3135+                          ;		On entry : 0/0
  3136+                          ;		On exit  : 0/0
  3137+                          ;		Unchanged: 0/0
  3138+                          ; Data sizes:
  3139+                          ;		Autos:    1
  3140+                          ;		Params:   0
  3141+                          ;		Temp:     1
  3142+                          ;		Total:    2
  3143+                          ; This function calls:
  3144+                          ;		_LCDWriteData
  3145+                          ; This function is called by:
  3146+                          ;		_LCDDisplayInitializing
  3147+                          ;		_LCDWriteFloat
  3148+                          ;		_main
  3149+                          ; This function uses a non-reentrant model
  3150+                          ; 
  3151+                          	psect	text205,local,class=CODE,delta=2
  3152+                          	file	"C:\Users\hardik\Desktop\LM35 temp sensor
      +                          \LCD.c"
  3153+                          	line	25
  3154+                          ;LCD.c: 24: void LCDWriteString(const char *lcd
      +                          _string)
  3155+                          ;LCD.c: 25: {
  3156+                          	
  3157+ 01CB                     _LCDWriteString:	
  3158+                          	opt stack 5
  3159+                          ; Regs used in _LCDWriteString: [wreg+status,2+
      +                          status,0+pclath+cstack]
  3160+                          ;_LCDWriteString_lcd_string stored from wreg
  3161+ 01CB  1283               	bcf	status, 5	;RP0=0, select bank0
  3162+ 01CC  1303               	bcf	status, 6	;RP1=0, select bank0
  3163+                          	
  3164+ 01CD  00CB               	movwf	(_LCDWriteString_lcd_string)
  3165+                          	line	26
  3166+                          ;LCD.c: 26: while(*lcd_string)
  3167+ 01CE  29E0               	goto	l12
  3168+                          	
  3169+ 01CF                     l13:	
  3170+                          	line	28
  3171+                          ;LCD.c: 27: {
  3172+                          ;LCD.c: 28: LCDWriteData(*lcd_string++);
  3173+                          	
  3174+ 01CF  084B               	movf	(_LCDWriteString_lcd_string),w
  3175+                          	FNCALL _LCDWriteString,stringtab
  3176+ 01D0  120A  118A  2709   	fcall	stringdir
      +       120A  118A         
  3177+ 01D5  120A  158A  257E   	fcall	_LCDWriteData
      +       120A  118A         
  3178+ 01DA  3001               	movlw	(01h)
  3179+ 01DB  1283               	bcf	status, 5	;RP0=0, select bank0
  3180+ 01DC  1303               	bcf	status, 6	;RP1=0, select bank0
  3181+ 01DD  00CC               	movwf	(??_LCDWriteString+1+0)
  3182+                          	
  3183+ 01DE  084C               	movf	(??_LCDWriteString+1+0),w
  3184+ 01DF  07CB               	addwf	(_LCDWriteString_lcd_string),f
  3185+                          	line	29
  3186+                          	
  3187+ 01E0                     l12:	
  3188+                          	line	26
  3189+ 01E0  1283               	bcf	status, 5	;RP0=0, select bank0
  3190+ 01E1  1303               	bcf	status, 6	;RP1=0, select bank0
  3191+                          	
  3192+ 01E2  084B               	movf	(_LCDWriteString_lcd_string),w
  3193+                          	FNCALL _LCDWriteString,stringtab
  3194+ 01E3  120A  118A  2709   	fcall	stringdir
      +       120A  118A         
  3195+ 01E8  3800               	iorlw	0
  3196+ 01E9  1D03               	skipz
  3197+ 01EA  29EC               	goto	u2651
  3198+ 01EB  29ED               	goto	u2650
  3199+ 01EC                     u2651:
  3200+ 01EC  29CF               	goto	l13
  3201+ 01ED                     u2650:
  3202+                          	
  3203+ 01ED                     l14:	
  3204+                          	line	30
  3205+                          ;LCD.c: 29: }
  3206+                          ;LCD.c: 30: }
  3207+ 01ED                     l11:	
  3208+ 01ED  0008               	return
  3209+                          ; =============== function _LCDWriteString ends
      +                           ===============
  3210+                          
  3211+                          GLOBAL __end_of_LCDWriteString
  3212+ 01EE                     	__end_of_LCDWriteString:
  3213+                          	FNSIZE	_LCDWriteString,2,0
  3214+                          	signat	_LCDWriteString,4216
  3215+                          	global	___ftsub
  3216+                          	global	??___ftsub
  3217+                          	global	?___ftsub
  3218+                          
  3219+                          ; *************** function ___ftsub ***********
      +                          ****
  3220+                          ; Defined at:
  3221+                          ;		line 17 in file "C:\Program Files (x86)\HI-T
      +                          ECH Software\PICC\PRO\9.65\sources\ftsub.c"
  3222+                          ; Parameters:
  3223+                          ;		f1          	offs:   0	type: float 
  3224+                          ;		f2          	offs:   3	type: float 
  3225+                          ; Auto variables:
  3226+                          ;		None
  3227+                          ; Return value:
  3228+                          ;		type: float 
  3229+                          ;		size: 3
  3230+                          ; Registers used:
  3231+                          ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
      +                          th, cstack
  3232+                          ; Tracked objects:
  3233+                          ;		On entry : 300/0
  3234+                          ;		On exit  : 0/0
  3235+                          ;		Unchanged: 0/0
  3236+                          ; Data sizes:
  3237+                          ;		Autos:    0
  3238+                          ;		Params:   6
  3239+                          ;		Temp:     0
  3240+                          ;		Total:    6
  3241+                          ; This function calls:
  3242+                          ;		___ftadd
  3243+                          ; This function is called by:
  3244+                          ;		_LCDWriteFloat
  3245+                          ; This function uses a non-reentrant model
  3246+                          ; 
  3247+                          	psect	text206,local,class=CODE,delta=2
  3248+                          	file	"C:\Program Files (x86)\HI-TECH Software\
      +                          PICC\PRO\9.65\sources\ftsub.c"
  3249+                          	line	17
  3250+                          	
  3251+ 0DC3                     ___ftsub:	
  3252+                          	opt stack 5
  3253+                          ; Regs used in ___ftsub: [wreg-fsr0h+status,2+s
      +                          tatus,0+pclath+cstack]
  3254+                          	line	18
  3255+                          	
  3256+ 0DC3  3080               	movlw	080h
  3257+ 0DC4  06D0               	xorwf	(___ftsub_f2+2),f
  3258+                          	line	19
  3259+                          	
  3260+                          	
  3261+ 0DC5  084E               	movf	(___ftsub_f2),w
  3262+ 0DC6  00D4               	movwf	(0+(?___ftadd)+03h)
  3263+ 0DC7  084F               	movf	(___ftsub_f2+1),w
  3264+ 0DC8  00D5               	movwf	(1+(?___ftadd)+03h)
  3265+ 0DC9  0850               	movf	(___ftsub_f2+2),w
  3266+ 0DCA  00D6               	movwf	(2+(?___ftadd)+03h)
  3267+                          	
  3268+                          	
  3269+ 0DCB  084B               	movf	(___ftsub_f1),w
  3270+ 0DCC  00D1               	movwf	(?___ftadd)
  3271+ 0DCD  084C               	movf	(___ftsub_f1+1),w
  3272+ 0DCE  00D2               	movwf	(?___ftadd+1)
  3273+ 0DCF  084D               	movf	(___ftsub_f1+2),w
  3274+ 0DD0  00D3               	movwf	(?___ftadd+2)
  3275+ 0DD1  120A  118A  2484   	fcall	___ftadd
      +       120A  158A         
  3276+ 0DD6  1283               	bcf	status, 5	;RP0=0, select bank0
  3277+ 0DD7  1303               	bcf	status, 6	;RP1=0, select bank0
  3278+                          	
  3279+ 0DD8  0851               	movf	(0+?___ftadd),w
  3280+ 0DD9  00CB               	movwf	(?___ftsub)
  3281+ 0DDA  0852               	movf	(1+?___ftadd),w
  3282+ 0DDB  00CC               	movwf	(?___ftsub+1)
  3283+ 0DDC  0853               	movf	(2+?___ftadd),w
  3284+ 0DDD  00CD               	movwf	(?___ftsub+2)
  3285+ 0DDE  2DDF               	goto	l133
  3286+                          	line	20
  3287+ 0DDF                     l133:	
  3288+ 0DDF  0008               	return
  3289+                          ; =============== function ___ftsub ends ======
      +                          =========
  3290+                          
  3291+                          GLOBAL __end_of___ftsub
  3292+ 0DE0                     	__end_of___ftsub:
  3293+                          	FNSIZE	___ftsub,0,6
  3294+                          	signat	___ftsub,8315
  3295+                          	global	___ftadd
  3296+                          	global	??___ftadd
  3297+                          	global	?___ftadd
  3298+                          
  3299+                          ; *************** function ___ftadd ***********
      +                          ****
  3300+                          ; Defined at:
  3301+                          ;		line 17 in file "C:\Program Files (x86)\HI-T
      +                          ECH Software\PICC\PRO\9.65\sources\ftadd.c"
  3302+                          ; Parameters:
  3303+                          ;		f1          	offs:   0	type: float 
  3304+                          ;		f2          	offs:   3	type: float 
  3305+                          ; Auto variables:
  3306+                          ;		sign2       	       	type: unsigned char 
  3307+                          ;		cntr        	       	type: unsigned char 
  3308+                          ;		sign1       	       	type: unsigned char 
  3309+                          ;		exp2        	       	type: unsigned char 
  3310+                          ;		exp1        	       	type: unsigned char 
  3311+                          ; Return value:
  3312+                          ;		type: float 
  3313+                          ;		size: 3
  3314+                          ; Registers used:
  3315+                          ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
      +                          th, cstack
  3316+                          ; Tracked objects:
  3317+                          ;		On entry : 300/0
  3318+                          ;		On exit  : 0/0
  3319+                          ;		Unchanged: 0/0
  3320+                          ; Data sizes:
  3321+                          ;		Autos:    5
  3322+                          ;		Params:   6
  3323+                          ;		Temp:     1
  3324+                          ;		Total:   12
  3325+                          ; This function calls:
  3326+                          ;		___ftunpack
  3327+                          ;		___ftpack
  3328+                          ; This function is called by:
  3329+                          ;		_LCDWriteFloat
  3330+                          ;		_main
  3331+                          ;		___ftsub
  3332+                          ; This function uses a non-reentrant model
  3333+                          ; 
  3334+                          	psect	text207,local,class=CODE,delta=2
  3335+                          	file	"C:\Program Files (x86)\HI-TECH Software\
      +                          PICC\PRO\9.65\sources\ftadd.c"
  3336+                          	line	17
  3337+                          	
  3338+ 0484                     ___ftadd:	
  3339+                          	opt stack 4
  3340+                          ; Regs used in ___ftadd: [wreg-fsr0h+status,2+s
      +                          tatus,0+pclath+cstack]
  3341+                          	line	20
  3342+ 0484  2C85               	goto	l102
  3343+                          	line	21
  3344+                          	
  3345+ 0485                     l102:	
  3346+                          	line	22
  3347+                          	
  3348+ 0485  305B               	movlw	((___ftadd_exp1))&0ffh
  3349+                          	
  3350+ 0486  00DD               	movwf	(?___ftunpack)
  3351+                          	
  3352+ 0487  3051               	movlw	((___ftadd_f1))&0ffh
  3353+ 0488  120A  158A  274B   	fcall	___ftunpack
      +       120A  118A         
  3354+ 048D  1283               	bcf	status, 5	;RP0=0, select bank0
  3355+ 048E  1303               	bcf	status, 6	;RP1=0, select bank0
  3356+                          	
  3357+ 048F  00D9               	movwf	(___ftadd_sign1)
  3358+                          	line	23
  3359+                          	
  3360+ 0490  08DB               	movf	(___ftadd_exp1),f
  3361+ 0491  1D03               	skipz
  3362+ 0492  2C94               	goto	u3101
  3363+ 0493  2C95               	goto	u3100
  3364+ 0494                     u3101:
  3365+ 0494  2C9C               	goto	l103
  3366+ 0495                     u3100:
  3367+                          	line	24
  3368+                          	
  3369+                          	
  3370+ 0495  0854               	movf	(___ftadd_f2),w
  3371+ 0496  00D1               	movwf	(?___ftadd)
  3372+ 0497  0855               	movf	(___ftadd_f2+1),w
  3373+ 0498  00D2               	movwf	(?___ftadd+1)
  3374+ 0499  0856               	movf	(___ftadd_f2+2),w
  3375+ 049A  00D3               	movwf	(?___ftadd+2)
  3376+ 049B  2DA1               	goto	l101
  3377+                          	
  3378+ 049C                     l103:	
  3379+                          	line	25
  3380+                          	
  3381+ 049C  305A               	movlw	((___ftadd_exp2))&0ffh
  3382+                          	
  3383+ 049D  00DD               	movwf	(?___ftunpack)
  3384+                          	
  3385+ 049E  3054               	movlw	((___ftadd_f2))&0ffh
  3386+ 049F  120A  158A  274B   	fcall	___ftunpack
      +       120A  118A         
  3387+ 04A4  1283               	bcf	status, 5	;RP0=0, select bank0
  3388+ 04A5  1303               	bcf	status, 6	;RP1=0, select bank0
  3389+                          	
  3390+ 04A6  00D7               	movwf	(___ftadd_sign2)
  3391+                          	line	26
  3392+                          	
  3393+ 04A7  08DA               	movf	(___ftadd_exp2),f
  3394+ 04A8  1D03               	skipz
  3395+ 04A9  2CAB               	goto	u3110
  3396+ 04AA  2D90               	goto	l104
  3397+ 04AB                     u3110:
  3398+                          	line	27
  3399+ 04AB  3006               	movlw	(06h)
  3400+                          	
  3401+ 04AC  00D8               	movwf	(___ftadd_cntr)
  3402+                          	line	29
  3403+                          	
  3404+ 04AD  085A               	movf	(___ftadd_exp2),w
  3405+                          	
  3406+ 04AE  025B               	subwf	(___ftadd_exp1),w
  3407+ 04AF  1803               	skipnc
  3408+ 04B0  2CB2               	goto	u3121
  3409+ 04B1  2CB3               	goto	u3120
  3410+ 04B2                     u3121:
  3411+ 04B2  2CF2               	goto	l105
  3412+ 04B3                     u3120:
  3413+                          	line	30
  3414+                          	
  3415+                          	
  3416+ 04B3  085A               	movf	(___ftadd_exp2),w
  3417+ 04B4  00DC               	movwf	(??___ftadd+5+0)
  3418+ 04B5  085B               	movf	(___ftadd_exp1),w
  3419+ 04B6  02DC               	subwf	(??___ftadd+5+0),f
  3420+ 04B7  3019               	movlw	(019h)
  3421+ 04B8  025C               	subwf	0+(??___ftadd+5+0),w
  3422+ 04B9  1C03               	skipc
  3423  04BA  2CBC               	goto	u3131
  3424  04BB  2CBD               	goto	u3130
  3425  04BC                     u3131:
  3426  04BC  2CC8               	goto	l110
  3427  04BD                     u3130:
  3428                           	line	32
  3429                           	
  3430  04BD  3000               	movlw	0
  3431  04BE  00D1               	movwf	(___ftadd_f1)
  3432  04BF  3000               	movlw	0
  3433  04C0  00D2               	movwf	(___ftadd_f1+1)
  3434  04C1  3000               	movlw	0
  3435  04C2  00D3               	movwf	(___ftadd_f1+2)
  3436                           	line	33
  3437                           	
  3438  04C3  085A               	movf	(___ftadd_exp2),w
  3439                           	
  3440  04C4  00DB               	movwf	(___ftadd_exp1)
  3441                           	line	34
  3442                           	
  3443  04C5  0857               	movf	(___ftadd_sign2),w
  3444                           	
  3445  04C6  00D9               	movwf	(___ftadd_sign1)
  3446                           	line	35
  3447  04C7  2CF1               	goto	l107
  3448                           	line	38
  3449                           	
  3450  04C8                     l110:	
  3451                           	line	39
  3452                           	
  3453  04C8  3001               	movlw	01h
  3454  04C9                     u3145:
  3455  04C9  1003               	clrc
  3456  04CA  0DD4               	rlf	(___ftadd_f2),f
  3457  04CB  0DD5               	rlf	(___ftadd_f2+1),f
  3458  04CC  0DD6               	rlf	(___ftadd_f2+2),f
  3459  04CD  3EFF               	addlw	-1
  3460  04CE  1D03               	skipz
  3461  04CF  2CC9               	goto	u3145
  3462                           	line	40
  3463                           	
  3464                           	
  3465  04D0  3001               	movlw	low(01h)
  3466  04D1  02DA               	subwf	(___ftadd_exp2),f
  3467                           	line	41
  3468                           	
  3469                           	
  3470  04D2  085A               	movf	(___ftadd_exp2),w
  3471  04D3  065B               	xorwf	(___ftadd_exp1),w
  3472  04D4  1903               	skipnz
  3473  04D5  2CD7               	goto	u3151
  3474  04D6  2CD8               	goto	u3150
  3475  04D7                     u3151:
  3476  04D7  2CDE               	goto	l109
  3477  04D8                     u3150:
  3478                           	
  3479                           	
  3480  04D8  3001               	movlw	low(01h)
  3481  04D9  02D8               	subwf	(___ftadd_cntr),f
  3482  04DA  1D03               	btfss	status,2
  3483  04DB  2CDD               	goto	u3161
  3484  04DC  2CDE               	goto	u3160
  3485  04DD                     u3161:
  3486  04DD  2CC8               	goto	l110
  3487  04DE                     u3160:
  3488                           	
  3489  04DE                     l600000848:	
  3490                           	
  3491  04DE                     l109:	
  3492                           	line	42
  3493  04DE  2CEB               	goto	l111
  3494                           	
  3495  04DF                     l112:	
  3496                           	line	43
  3497                           	
  3498  04DF  3001               	movlw	01h
  3499  04E0                     u3175:
  3500  04E0  1003               	clrc
  3501  04E1  0CD3               	rrf	(___ftadd_f1+2),f
  3502  04E2  0CD2               	rrf	(___ftadd_f1+1),f
  3503  04E3  0CD1               	rrf	(___ftadd_f1),f
  3504  04E4  3EFF               	addlw	-1
  3505  04E5  1D03               	skipz
  3506  04E6  2CE0               	goto	u3175
  3507                           
  3508                           	line	44
  3509  04E7  3001               	movlw	(01h)
  3510  04E8  00DC               	movwf	(??___ftadd+5+0)
  3511                           	
  3512  04E9  085C               	movf	(??___ftadd+5+0),w
  3513  04EA  07DB               	addwf	(___ftadd_exp1),f
  3514                           	line	45
  3515                           	
  3516  04EB                     l111:	
  3517                           	line	42
  3518                           	
  3519                           	
  3520  04EB  085B               	movf	(___ftadd_exp1),w
  3521  04EC  065A               	xorwf	(___ftadd_exp2),w
  3522  04ED  1D03               	skipz
  3523  04EE  2CF0               	goto	u3181
  3524  04EF  2CF1               	goto	u3180
  3525  04F0                     u3181:
  3526  04F0  2CDF               	goto	l112
  3527  04F1                     u3180:
  3528                           	
  3529  04F1                     l113:	
  3530                           	line	46
  3531                           	
  3532  04F1                     l107:	
  3533                           	line	47
  3534  04F1  2D32               	goto	l114
  3535                           	
  3536  04F2                     l105:	
  3537                           	
  3538                           	
  3539  04F2  085B               	movf	(___ftadd_exp1),w
  3540  04F3  065A               	xorwf	(___ftadd_exp2),w
  3541  04F4  1903               	skipnz
  3542  04F5  2CF7               	goto	u3191
  3543  04F6  2CF8               	goto	u3190
  3544  04F7                     u3191:
  3545  04F7  2D32               	goto	l114
  3546  04F8                     u3190:
  3547                           	line	48
  3548                           	
  3549                           	
  3550  04F8  085B               	movf	(___ftadd_exp1),w
  3551  04F9  00DC               	movwf	(??___ftadd+5+0)
  3552  04FA  085A               	movf	(___ftadd_exp2),w
  3553  04FB  02DC               	subwf	(??___ftadd+5+0),f
  3554  04FC  3019               	movlw	(019h)
  3555  04FD  025C               	subwf	0+(??___ftadd+5+0),w
  3556  04FE  1C03               	skipc
  3557  04FF  2D01               	goto	u3201
  3558  0500  2D02               	goto	u3200
  3559  0501                     u3201:
  3560  0501  2D09               	goto	l120
  3561  0502                     u3200:
  3562                           	line	49
  3563                           	
  3564  0502  3000               	movlw	0
  3565  0503  00D4               	movwf	(___ftadd_f2)
  3566  0504  3000               	movlw	0
  3567  0505  00D5               	movwf	(___ftadd_f2+1)
  3568  0506  3000               	movlw	0
  3569  0507  00D6               	movwf	(___ftadd_f2+2)
  3570  0508  2D32               	goto	l114
  3571                           	line	53
  3572                           	
  3573  0509                     l120:	
  3574                           	line	54
  3575                           	
  3576  0509  3001               	movlw	01h
  3577  050A                     u3215:
  3578  050A  1003               	clrc
  3579  050B  0DD1               	rlf	(___ftadd_f1),f
  3580  050C  0DD2               	rlf	(___ftadd_f1+1),f
  3581  050D  0DD3               	rlf	(___ftadd_f1+2),f
  3582  050E  3EFF               	addlw	-1
  3583  050F  1D03               	skipz
  3584  0510  2D0A               	goto	u3215
  3585                           	line	55
  3586                           	
  3587                           	
  3588  0511  3001               	movlw	low(01h)
  3589  0512  02DB               	subwf	(___ftadd_exp1),f
  3590                           	line	56
  3591                           	
  3592                           	
  3593  0513  085A               	movf	(___ftadd_exp2),w
  3594  0514  065B               	xorwf	(___ftadd_exp1),w
  3595  0515  1903               	skipnz
  3596  0516  2D18               	goto	u3221
  3597  0517  2D19               	goto	u3220
  3598  0518                     u3221:
  3599  0518  2D1F               	goto	l119
  3600  0519                     u3220:
  3601                           	
  3602                           	
  3603  0519  3001               	movlw	low(01h)
  3604  051A  02D8               	subwf	(___ftadd_cntr),f
  3605  051B  1D03               	btfss	status,2
  3606  051C  2D1E               	goto	u3231
  3607  051D  2D1F               	goto	u3230
  3608  051E                     u3231:
  3609  051E  2D09               	goto	l120
  3610  051F                     u3230:
  3611                           	
  3612  051F                     l600000849:	
  3613                           	
  3614  051F                     l119:	
  3615                           	line	57
  3616  051F  2D2C               	goto	l121
  3617                           	
  3618  0520                     l122:	
  3619                           	line	58
  3620                           	
  3621  0520  3001               	movlw	01h
  3622  0521                     u3245:
  3623  0521  1003               	clrc
  3624  0522  0CD6               	rrf	(___ftadd_f2+2),f
  3625  0523  0CD5               	rrf	(___ftadd_f2+1),f
  3626  0524  0CD4               	rrf	(___ftadd_f2),f
  3627  0525  3EFF               	addlw	-1
  3628  0526  1D03               	skipz
  3629  0527  2D21               	goto	u3245
  3630                           
  3631                           	line	59
  3632  0528  3001               	movlw	(01h)
  3633  0529  00DC               	movwf	(??___ftadd+5+0)
  3634                           	
  3635  052A  085C               	movf	(??___ftadd+5+0),w
  3636  052B  07DA               	addwf	(___ftadd_exp2),f
  3637                           	line	60
  3638                           	
  3639  052C                     l121:	
  3640                           	line	57
  3641                           	
  3642                           	
  3643  052C  085B               	movf	(___ftadd_exp1),w
  3644  052D  065A               	xorwf	(___ftadd_exp2),w
  3645  052E  1D03               	skipz
  3646  052F  2D31               	goto	u3251
  3647  0530  2D32               	goto	u3250
  3648  0531                     u3251:
  3649  0531  2D20               	goto	l122
  3650  0532                     u3250:
  3651                           	
  3652  0532                     l123:	
  3653                           	line	61
  3654                           	
  3655  0532                     l117:	
  3656                           	line	62
  3657                           	
  3658  0532                     l115:	
  3659                           	line	63
  3660                           	
  3661  0532                     l114:	
  3662                           	
  3663  0532  08D9               	movf	(___ftadd_sign1),f
  3664  0533  1D03               	skipz
  3665  0534  2D36               	goto	u3260
  3666  0535  2D4A               	goto	l124
  3667  0536                     u3260:
  3668                           	line	64
  3669                           	
  3670  0536  30FF               	movlw	0FFh
  3671  0537  06D1               	xorwf	(___ftadd_f1),f
  3672  0538  30FF               	movlw	0FFh
  3673  0539  06D2               	xorwf	(___ftadd_f1+1),f
  3674  053A  30FF               	movlw	0FFh
  3675  053B  06D3               	xorwf	(___ftadd_f1+2),f
  3676                           	line	65
  3677                           	
  3678  053C  3001               	movlw	01h
  3679  053D  07D1               	addwf	(___ftadd_f1),f
  3680  053E  3000               	movlw	0
  3681  053F  1103               	clrz
  3682  0540  1803               	skipnc
  3683  0541  3E01               	addlw	1
  3684  0542  1D03               	skipz
  3685  0543  07D2               	addwf	(___ftadd_f1+1),f
  3686  0544  3000               	movlw	0
  3687  0545  1103               	clrz
  3688  0546  1803               	skipnc
  3689  0547  3E01               	addlw	1
  3690  0548  1D03               	skipz
  3691  0549  07D3               	addwf	(___ftadd_f1+2),f
  3692                           	line	66
  3693                           	
  3694  054A                     l124:	
  3695                           	line	67
  3696                           	
  3697  054A  08D7               	movf	(___ftadd_sign2),f
  3698  054B  1D03               	skipz
  3699  054C  2D4E               	goto	u3270
  3700  054D  2D62               	goto	l125
  3701  054E                     u3270:
  3702                           	line	68
  3703                           	
  3704  054E  30FF               	movlw	0FFh
  3705  054F  06D4               	xorwf	(___ftadd_f2),f
  3706  0550  30FF               	movlw	0FFh
  3707  0551  06D5               	xorwf	(___ftadd_f2+1),f
  3708  0552  30FF               	movlw	0FFh
  3709  0553  06D6               	xorwf	(___ftadd_f2+2),f
  3710                           	line	69
  3711                           	
  3712  0554  3001               	movlw	01h
  3713  0555  07D4               	addwf	(___ftadd_f2),f
  3714  0556  3000               	movlw	0
  3715  0557  1103               	clrz
  3716  0558  1803               	skipnc
  3717  0559  3E01               	addlw	1
  3718  055A  1D03               	skipz
  3719  055B  07D5               	addwf	(___ftadd_f2+1),f
  3720  055C  3000               	movlw	0
  3721  055D  1103               	clrz
  3722  055E  1803               	skipnc
  3723  055F  3E01               	addlw	1
  3724  0560  1D03               	skipz
  3725  0561  07D6               	addwf	(___ftadd_f2+2),f
  3726                           	line	70
  3727                           	
  3728  0562                     l125:	
  3729                           	line	71
  3730  0562  1003               	clrc
  3731                           	
  3732  0563  3000               	movlw	0
  3733  0564  1803               	btfsc	status,0
  3734  0565  3001               	movlw	1
  3735  0566  00D9               	movwf	(___ftadd_sign1)
  3736                           	line	72
  3737                           	
  3738                           	
  3739  0567  0854               	movf	(___ftadd_f2),w
  3740  0568  07D1               	addwf	(___ftadd_f1),f
  3741  0569  0855               	movf	(___ftadd_f2+1),w
  3742  056A  1103               	clrz
  3743  056B  1803               	skipnc
  3744  056C  0A55               	incf	(___ftadd_f2+1),w
  3745  056D  1D03               	skipz
  3746  056E  07D2               	addwf	(___ftadd_f1+1),f
  3747  056F  0856               	movf	(___ftadd_f2+2),w
  3748  0570  1103               	clrz
  3749  0571  1803               	skipnc
  3750  0572  0A56               	incf	(___ftadd_f2+2),w
  3751  0573  1D03               	skipz
  3752  0574  07D3               	addwf	(___ftadd_f1+2),f
  3753                           	line	73
  3754                           	
  3755  0575  1FD3               	btfss	(___ftadd_f1+2),(23)&7
  3756  0576  2D78               	goto	u3281
  3757  0577  2D79               	goto	u3280
  3758  0578                     u3281:
  3759  0578  2D90               	goto	l104
  3760  0579                     u3280:
  3761                           	line	74
  3762                           	
  3763  0579  30FF               	movlw	0FFh
  3764  057A  06D1               	xorwf	(___ftadd_f1),f
  3765  057B  30FF               	movlw	0FFh
  3766  057C  06D2               	xorwf	(___ftadd_f1+1),f
  3767  057D  30FF               	movlw	0FFh
  3768  057E  06D3               	xorwf	(___ftadd_f1+2),f
  3769                           	line	75
  3770                           	
  3771  057F  3001               	movlw	01h
  3772  0580  07D1               	addwf	(___ftadd_f1),f
  3773  0581  3000               	movlw	0
  3774  0582  1103               	clrz
  3775  0583  1803               	skipnc
  3776  0584  3E01               	addlw	1
  3777  0585  1D03               	skipz
  3778  0586  07D2               	addwf	(___ftadd_f1+1),f
  3779  0587  3000               	movlw	0
  3780  0588  1103               	clrz
  3781  0589  1803               	skipnc
  3782  058A  3E01               	addlw	1
  3783  058B  1D03               	skipz
  3784  058C  07D3               	addwf	(___ftadd_f1+2),f
  3785                           	line	76
  3786                           	
  3787  058D  01D9               	clrf	(___ftadd_sign1)
  3788  058E  1403               	bsf	status,0
  3789  058F  0DD9               	rlf	(___ftadd_sign1),f
  3790                           	line	77
  3791                           	
  3792  0590                     l126:	
  3793                           	line	78
  3794                           	
  3795  0590                     l104:	
  3796                           	line	79
  3797                           	
  3798  0590  085B               	movf	(___ftadd_exp1),w
  3799                           	
  3800  0591  00DD               	movwf	(?___ftpack)
  3801                           	
  3802  0592  3051               	movlw	((___ftadd_f1))&0ffh
  3803  0593  120A  118A  2739   	fcall	___ftpack
              120A  118A         
  3804                           	line	80
  3805  0598  1283               	bcf	status, 5	;RP0=0, select bank0
  3806  0599  1303               	bcf	status, 6	;RP1=0, select bank0
  3807                           	
  3808  059A  08D9               	movf	(___ftadd_sign1),f
  3809  059B  1D03               	skipz
  3810  059C  2D9E               	goto	u3290
  3811  059D  2DA0               	goto	l127
  3812  059E                     u3290:
  3813                           	line	81
  3814                           	
  3815  059E  3080               	movlw	080h
  3816  059F  06D3               	xorwf	(___ftadd_f1+2),f
  3817                           	
  3818  05A0                     l127:	
  3819                           	line	82
  3820  05A0  2DA1               	goto	l101
  3821                           	line	83
  3822  05A1                     l101:	
  3823  05A1  0008               	return
  3824                           ; =============== function ___ftadd ends ======
                                 =========
  3825                           
  3826                           GLOBAL __end_of___ftadd
  3827  05A2                     	__end_of___ftadd:
  3828                           	FNSIZE	___ftadd,6,6
  3829                           	signat	___ftadd,8315
  3830                           	global	___ftneg
  3831                           	global	??___ftneg
  3832                           	global	?___ftneg
  3833                           
  3834                           ; *************** function ___ftneg ***********
                                 ****
  3835                           ; Defined at:
  3836                           ;		line 16 in file "C:\Program Files (x86)\HI-T
                                 ECH Software\PICC\PRO\9.65\sources\ftneg.c"
  3837                           ; Parameters:
  3838                           ;		f1          	offs:   0	type: float 
  3839                           ; Auto variables:
  3840                           ;		None
  3841                           ; Return value:
  3842                           ;		type: float 
  3843                           ;		size: 3
  3844                           ; Registers used:
  3845                           ;		wreg
  3846                           ; Tracked objects:
  3847                           ;		On entry : 300/0
  3848                           ;		On exit  : 0/0
  3849                           ;		Unchanged: 0/0
  3850                           ; Data sizes:
  3851                           ;		Autos:    0
  3852                           ;		Params:   3
  3853                           ;		Temp:     0
  3854                           ;		Total:    3
  3855                           ; This function calls:
  3856                           ;		Nothing
  3857                           ; This function is called by:
  3858                           ;		_LCDWriteFloat
  3859                           ;		___awtoft
  3860                           ; This function uses a non-reentrant model
  3861                           ; 
  3862                           	psect	text208,local,class=CODE,delta=2
  3863                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\ftneg.c"
  3864                           	line	16
  3865                           	
  3866  0D68                     ___ftneg:	
  3867                           	opt stack 4
  3868                           ; Regs used in ___ftneg: [wreg]
  3869                           	line	17
  3870                           	
  3871  0D68  0856               	movf	(___ftneg_f1+2),w
  3872  0D69  0455               	iorwf	(___ftneg_f1+1),w
  3873  0D6A  0454               	iorwf	(___ftneg_f1),w
  3874  0D6B  1903               	skipnz
  3875  0D6C  2D6E               	goto	u3301
  3876  0D6D  2D6F               	goto	u3300
  3877  0D6E                     u3301:
  3878  0D6E  2D71               	goto	l245
  3879  0D6F                     u3300:
  3880                           	line	18
  3881                           	
  3882  0D6F  3080               	movlw	080h
  3883  0D70  06D6               	xorwf	(___ftneg_f1+2),f
  3884                           	
  3885  0D71                     l245:	
  3886                           	line	19
  3887  0D71  2D72               	goto	l244
  3888                           	line	20
  3889  0D72                     l244:	
  3890  0D72  0008               	return
  3891                           ; =============== function ___ftneg ends ======
                                 =========
  3892                           
  3893                           GLOBAL __end_of___ftneg
  3894  0D73                     	__end_of___ftneg:
  3895                           	FNSIZE	___ftneg,0,3
  3896                           	signat	___ftneg,4219
  3897                           	global	_LCDWriteData
  3898                           	global	??_LCDWriteData
  3899                           	global	?_LCDWriteData
  3900                           
  3901                           ; *************** function _LCDWriteData ******
                                 *********
  3902                           ; Defined at:
  3903                           ;		line 18 in file "C:\Users\hardik\Desktop\LM3
                                 5 temp sensor\LCD.c"
  3904                           ; Parameters:
  3905                           ;		LCDData     	reg:   wr	type: unsigned char 
  3906                           ; Auto variables:
  3907                           ;		LCDData     	       	type: unsigned char 
  3908                           ; Return value:
  3909                           ;		type: void 
  3910                           ;		size: 0
  3911                           ; Registers used:
  3912                           ;		wreg, status,2, status,0, pclath, cstack
  3913                           ; Tracked objects:
  3914                           ;		On entry : 0/0
  3915                           ;		On exit  : 0/0
  3916                           ;		Unchanged: 0/0
  3917                           ; Data sizes:
  3918                           ;		Autos:    1
  3919                           ;		Params:   0
  3920                           ;		Temp:     0
  3921                           ;		Total:    1
  3922                           ; This function calls:
  3923                           ;		_LCDWriteByte
  3924                           ; This function is called by:
  3925                           ;		_LCDWriteString
  3926                           ;		_LCDDisplayInitializing
  3927                           ;		_LCDWriteFloat
  3928                           ;		_LCDWriteInteger
  3929                           ; This function uses a non-reentrant model
  3930                           ; 
  3931                           	psect	text209,local,class=CODE,delta=2
  3932                           	file	"C:\Users\hardik\Desktop\LM35 temp sensor
                                 \LCD.c"
  3933                           	line	18
  3934                           ;LCD.c: 17: void LCDWriteData(LCDubyte LCDData)
  3935                           ;LCD.c: 18: {
  3936                           	
  3937  0D7E                     _LCDWriteData:	
  3938                           	opt stack 4
  3939                           ; Regs used in _LCDWriteData: [wreg+status,2+st
                                 atus,0+pclath+cstack]
  3940                           ;_LCDWriteData_LCDData stored from wreg
  3941  0D7E  1283               	bcf	status, 5	;RP0=0, select bank0
  3942  0D7F  1303               	bcf	status, 6	;RP1=0, select bank0
  3943                           	
  3944  0D80  00D5               	movwf	(_LCDWriteData_LCDData)
  3945                           	line	19
  3946                           ;LCD.c: 19: RD2 = 1;
  3947  0D81  1508               	bsf	(66/8),(66)&7
  3948                           	line	20
  3949                           ;LCD.c: 20: LCDWriteByte(LCDData);
  3950                           	
  3951  0D82  0855               	movf	(_LCDWriteData_LCDData),w
  3952  0D83  120A  158A  265F   	fcall	_LCDWriteByte
              120A  158A         
  3953                           	line	21
  3954                           ;LCD.c: 21: }
  3955  0D88                     l10:	
  3956  0D88  0008               	return
  3957                           ; =============== function _LCDWriteData ends =
                                 ==============
  3958                           
  3959                           GLOBAL __end_of_LCDWriteData
  3960  0D89                     	__end_of_LCDWriteData:
  3961                           	FNSIZE	_LCDWriteData,1,0
  3962                           	signat	_LCDWriteData,4216
  3963                           	global	___awdiv
  3964                           	global	??___awdiv
  3965                           	global	?___awdiv
  3966                           
  3967                           ; *************** function ___awdiv ***********
                                 ****
  3968                           ; Defined at:
  3969                           ;		line 5 in file "C:\Program Files (x86)\HI-TE
                                 CH Software\PICC\PRO\9.65\sources\awdiv.c"
  3970                           ; Parameters:
  3971                           ;		dividend    	offs:   0	type: int 
  3972                           ;		divisor     	offs:   2	type: int 
  3973                           ; Auto variables:
  3974                           ;		sign        	       	type: unsigned char 
  3975                           ;		counter     	       	type: unsigned char 
  3976                           ;		quotient    	       	type: int 
  3977                           ; Return value:
  3978                           ;		type: int 
  3979                           ;		size: 2
  3980                           ; Registers used:
  3981                           ;		wreg, status,2, status,0
  3982                           ; Tracked objects:
  3983                           ;		On entry : B00/0
  3984                           ;		On exit  : 0/0
  3985                           ;		Unchanged: 0/0
  3986                           ; Data sizes:
  3987                           ;		Autos:    4
  3988                           ;		Params:   4
  3989                           ;		Temp:     1
  3990                           ;		Total:    9
  3991                           ; This function calls:
  3992                           ;		Nothing
  3993                           ; This function is called by:
  3994                           ;		_LCDWriteFloat
  3995                           ;		_LCDWriteInteger
  3996                           ; This function uses a non-reentrant model
  3997                           ; 
  3998                           	psect	text210,local,class=CODE,delta=2
  3999                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\awdiv.c"
  4000                           	line	5
  4001                           	
  4002  0261                     ___awdiv:	
  4003                           	opt stack 4
  4004                           ; Regs used in ___awdiv: [wreg+status,2+status,
                                 0]
  4005                           	line	9
  4006  0261  1003               	clrc
  4007                           	
  4008  0262  3000               	movlw	0
  4009  0263  1803               	btfsc	status,0
  4010  0264  3001               	movlw	1
  4011  0265  00DA               	movwf	(___awdiv_sign)
  4012                           	line	10
  4013                           	
  4014  0266  1FD8               	btfss	(___awdiv_divisor+1),7
  4015  0267  2A69               	goto	u3311
  4016  0268  2A6A               	goto	u3310
  4017  0269                     u3311:
  4018  0269  2A72               	goto	l224
  4019  026A                     u3310:
  4020                           	line	11
  4021                           	
  4022  026A  09D7               	comf	(___awdiv_divisor),f
  4023  026B  09D8               	comf	(___awdiv_divisor+1),f
  4024  026C  0AD7               	incf	(___awdiv_divisor),f
  4025  026D  1903               	skipnz
  4026  026E  0AD8               	incf	(___awdiv_divisor+1),f
  4027                           	
  4028                           	line	12
  4029                           	
  4030  026F  01DA               	clrf	(___awdiv_sign)
  4031  0270  1403               	bsf	status,0
  4032  0271  0DDA               	rlf	(___awdiv_sign),f
  4033                           	line	13
  4034                           	
  4035  0272                     l224:	
  4036                           	line	14
  4037                           	
  4038  0272  1FD6               	btfss	(___awdiv_dividend+1),7
  4039  0273  2A75               	goto	u3321
  4040  0274  2A76               	goto	u3320
  4041  0275                     u3321:
  4042  0275  2A7F               	goto	l225
  4043  0276                     u3320:
  4044                           	line	15
  4045                           	
  4046  0276  09D5               	comf	(___awdiv_dividend),f
  4047  0277  09D6               	comf	(___awdiv_dividend+1),f
  4048  0278  0AD5               	incf	(___awdiv_dividend),f
  4049  0279  1903               	skipnz
  4050  027A  0AD6               	incf	(___awdiv_dividend+1),f
  4051                           	
  4052                           	line	16
  4053  027B  3001               	movlw	(01h)
  4054  027C  00DD               	movwf	(??___awdiv+4+0)
  4055                           	
  4056  027D  085D               	movf	(??___awdiv+4+0),w
  4057  027E  06DA               	xorwf	(___awdiv_sign),f
  4058                           	line	17
  4059                           	
  4060  027F                     l225:	
  4061                           	line	18
  4062  027F  3000               	movlw	low(0)
  4063                           	
  4064  0280  00DB               	movwf	(___awdiv_quotient)
  4065  0281  3000               	movlw	high(0)
  4066  0282  00DC               	movwf	((___awdiv_quotient))+1
  4067                           	line	19
  4068                           	
  4069  0283  0858               	movf	(___awdiv_divisor+1),w
  4070  0284  0457               	iorwf	(___awdiv_divisor),w
  4071  0285  1903               	skipnz
  4072  0286  2A88               	goto	u3331
  4073  0287  2A89               	goto	u3330
  4074  0288                     u3331:
  4075  0288  2AC4               	goto	l226
  4076  0289                     u3330:
  4077                           	line	20
  4078                           	
  4079  0289  01D9               	clrf	(___awdiv_counter)
  4080  028A  1403               	bsf	status,0
  4081  028B  0DD9               	rlf	(___awdiv_counter),f
  4082                           	line	21
  4083  028C  2A98               	goto	l227
  4084                           	
  4085  028D                     l228:	
  4086                           	line	22
  4087                           	
  4088  028D  3001               	movlw	01h
  4089  028E                     u3345:
  4090  028E  1003               	clrc
  4091  028F  0DD7               	rlf	(___awdiv_divisor),f
  4092  0290  0DD8               	rlf	(___awdiv_divisor+1),f
  4093  0291  3EFF               	addlw	-1
  4094  0292  1D03               	skipz
  4095  0293  2A8E               	goto	u3345
  4096                           	line	23
  4097  0294  3001               	movlw	(01h)
  4098  0295  00DD               	movwf	(??___awdiv+4+0)
  4099                           	
  4100  0296  085D               	movf	(??___awdiv+4+0),w
  4101  0297  07D9               	addwf	(___awdiv_counter),f
  4102                           	line	24
  4103                           	
  4104  0298                     l227:	
  4105                           	line	21
  4106                           	
  4107  0298  1FD8               	btfss	(___awdiv_divisor+1),(15)&7
  4108  0299  2A9B               	goto	u3351
  4109  029A  2A9C               	goto	u3350
  4110  029B                     u3351:
  4111  029B  2A8D               	goto	l228
  4112  029C                     u3350:
  4113                           	
  4114  029C                     l229:	
  4115                           	line	25
  4116                           	
  4117  029C                     l232:	
  4118                           	line	26
  4119                           	
  4120  029C  3001               	movlw	01h
  4121  029D                     u3365:
  4122  029D  1003               	clrc
  4123  029E  0DDB               	rlf	(___awdiv_quotient),f
  4124  029F  0DDC               	rlf	(___awdiv_quotient+1),f
  4125  02A0  3EFF               	addlw	-1
  4126  02A1  1D03               	skipz
  4127  02A2  2A9D               	goto	u3365
  4128                           	line	27
  4129                           	
  4130                           	
  4131  02A3  0858               	movf	(___awdiv_divisor+1),w
  4132  02A4  0256               	subwf	(___awdiv_dividend+1),w
  4133  02A5  1D03               	skipz
  4134  02A6  2AA9               	goto	u3375
  4135  02A7  0857               	movf	(___awdiv_divisor),w
  4136  02A8  0255               	subwf	(___awdiv_dividend),w
  4137  02A9                     u3375:
  4138  02A9  1C03               	skipc
  4139  02AA  2AAC               	goto	u3371
  4140  02AB  2AAD               	goto	u3370
  4141  02AC                     u3371:
  4142  02AC  2AB7               	goto	l233
  4143  02AD                     u3370:
  4144                           	line	28
  4145                           	
  4146                           	
  4147  02AD  0857               	movf	(___awdiv_divisor),w
  4148  02AE  02D5               	subwf	(___awdiv_dividend),f
  4149  02AF  0858               	movf	(___awdiv_divisor+1),w
  4150  02B0  1C03               	skipc
  4151  02B1  03D6               	decf	(___awdiv_dividend+1),f
  4152  02B2  02D6               	subwf	(___awdiv_dividend+1),f
  4153                           	line	29
  4154                           	
  4155  02B3  3001               	movlw	low(01h)
  4156  02B4  04DB               	iorwf	(___awdiv_quotient),f
  4157  02B5  3000               	movlw	high(01h)
  4158  02B6  04DC               	iorwf	(___awdiv_quotient+1),f
  4159                           	line	30
  4160                           	
  4161  02B7                     l233:	
  4162                           	line	31
  4163                           	
  4164  02B7  3001               	movlw	01h
  4165  02B8                     u3385:
  4166  02B8  1003               	clrc
  4167  02B9  0CD8               	rrf	(___awdiv_divisor+1),f
  4168  02BA  0CD7               	rrf	(___awdiv_divisor),f
  4169  02BB  3EFF               	addlw	-1
  4170  02BC  1D03               	skipz
  4171  02BD  2AB8               	goto	u3385
  4172                           	line	32
  4173                           	
  4174                           	
  4175  02BE  3001               	movlw	low(01h)
  4176  02BF  02D9               	subwf	(___awdiv_counter),f
  4177  02C0  1D03               	btfss	status,2
  4178  02C1  2AC3               	goto	u3391
  4179  02C2  2AC4               	goto	u3390
  4180  02C3                     u3391:
  4181  02C3  2A9C               	goto	l232
  4182  02C4                     u3390:
  4183                           	
  4184  02C4                     l231:	
  4185                           	line	33
  4186                           	
  4187  02C4                     l226:	
  4188                           	line	34
  4189                           	
  4190  02C4  08DA               	movf	(___awdiv_sign),f
  4191  02C5  1D03               	skipz
  4192  02C6  2AC8               	goto	u3400
  4193  02C7  2ACD               	goto	l234
  4194  02C8                     u3400:
  4195                           	line	35
  4196                           	
  4197  02C8  09DB               	comf	(___awdiv_quotient),f
  4198  02C9  09DC               	comf	(___awdiv_quotient+1),f
  4199  02CA  0ADB               	incf	(___awdiv_quotient),f
  4200  02CB  1903               	skipnz
  4201  02CC  0ADC               	incf	(___awdiv_quotient+1),f
  4202                           	
  4203                           	
  4204  02CD                     l234:	
  4205                           	line	36
  4206                           	
  4207                           	
  4208  02CD  085C               	movf	(___awdiv_quotient+1),w
  4209  02CE  01D6               	clrf	(?___awdiv+1)
  4210  02CF  07D6               	addwf	(?___awdiv+1)
  4211  02D0  085B               	movf	(___awdiv_quotient),w
  4212  02D1  01D5               	clrf	(?___awdiv)
  4213  02D2  07D5               	addwf	(?___awdiv)
  4214                           
  4215  02D3  2AD4               	goto	l223
  4216                           	line	37
  4217  02D4                     l223:	
  4218  02D4  0008               	return
  4219                           ; =============== function ___awdiv ends ======
                                 =========
  4220                           
  4221                           GLOBAL __end_of___awdiv
  4222  02D5                     	__end_of___awdiv:
  4223                           	FNSIZE	___awdiv,5,4
  4224                           	signat	___awdiv,8314
  4225                           	global	_LCDReset
  4226                           	global	??_LCDReset
  4227                           	global	?_LCDReset
  4228                           
  4229                           ; *************** function _LCDReset **********
                                 *****
  4230                           ; Defined at:
  4231                           ;		line 47 in file "C:\Users\hardik\Desktop\LM3
                                 5 temp sensor\LCD.c"
  4232                           ; Parameters:
  4233                           ;		None
  4234                           ; Auto variables:
  4235                           ;		None
  4236                           ; Return value:
  4237                           ;		type: void 
  4238                           ;		size: 0
  4239                           ; Registers used:
  4240                           ;		wreg, status,2, status,0, pclath, cstack
  4241                           ; Tracked objects:
  4242                           ;		On entry : BFF/0
  4243                           ;		On exit  : 0/0
  4244                           ;		Unchanged: 0/0
  4245                           ; Data sizes:
  4246                           ;		Autos:    0
  4247                           ;		Params:   0
  4248                           ;		Temp:     0
  4249                           ;		Total:    0
  4250                           ; This function calls:
  4251                           ;		_LCDWriteCommand
  4252                           ; This function is called by:
  4253                           ;		_LCDInitialize
  4254                           ; This function uses a non-reentrant model
  4255                           ; 
  4256                           	psect	text211,local,class=CODE,delta=2
  4257                           	file	"C:\Users\hardik\Desktop\LM35 temp sensor
                                 \LCD.c"
  4258                           	line	47
  4259                           ;LCD.c: 46: static void LCDReset(void)
  4260                           ;LCD.c: 47: {
  4261                           	
  4262  0D97                     _LCDReset:	
  4263                           	opt stack 4
  4264                           ; Regs used in _LCDReset: [wreg+status,2+status
                                 ,0+pclath+cstack]
  4265                           	line	48
  4266                           ;LCD.c: 48: LCDWriteCommand(0x33);
  4267  0D97  3033               	movlw	(033h)
  4268  0D98  120A  158A  2573   	fcall	_LCDWriteCommand
              120A  158A         
  4269                           	line	49
  4270                           ;LCD.c: 49: LCDWriteCommand(0x33);
  4271  0D9D  3033               	movlw	(033h)
  4272  0D9E  120A  158A  2573   	fcall	_LCDWriteCommand
              120A  158A         
  4273                           	line	50
  4274                           ;LCD.c: 50: LCDWriteCommand(0x32);
  4275  0DA3  3032               	movlw	(032h)
  4276  0DA4  120A  158A  2573   	fcall	_LCDWriteCommand
              120A  158A         
  4277                           	line	51
  4278                           ;LCD.c: 51: }
  4279  0DA9                     l16:	
  4280  0DA9  0008               	return
  4281                           ; =============== function _LCDReset ends =====
                                 ==========
  4282                           
  4283                           GLOBAL __end_of_LCDReset
  4284  0DAA                     	__end_of_LCDReset:
  4285                           	FNSIZE	_LCDReset,0,0
  4286                           	signat	_LCDReset,88
  4287                           	global	___awmod
  4288                           	global	??___awmod
  4289                           	global	?___awmod
  4290                           
  4291                           ; *************** function ___awmod ***********
                                 ****
  4292                           ; Defined at:
  4293                           ;		line 5 in file "C:\Program Files (x86)\HI-TE
                                 CH Software\PICC\PRO\9.65\sources\awmod.c"
  4294                           ; Parameters:
  4295                           ;		dividend    	offs:   0	type: int 
  4296                           ;		divisor     	offs:   2	type: int 
  4297                           ; Auto variables:
  4298                           ;		sign        	       	type: unsigned char 
  4299                           ;		counter     	       	type: unsigned char 
  4300                           ; Return value:
  4301                           ;		type: int 
  4302                           ;		size: 2
  4303                           ; Registers used:
  4304                           ;		wreg, status,2, status,0
  4305                           ; Tracked objects:
  4306                           ;		On entry : 300/0
  4307                           ;		On exit  : 0/0
  4308                           ;		Unchanged: 0/0
  4309                           ; Data sizes:
  4310                           ;		Autos:    2
  4311                           ;		Params:   4
  4312                           ;		Temp:     1
  4313                           ;		Total:    7
  4314                           ; This function calls:
  4315                           ;		Nothing
  4316                           ; This function is called by:
  4317                           ;		_LCDWriteFloat
  4318                           ;		_LCDWriteInteger
  4319                           ; This function uses a non-reentrant model
  4320                           ; 
  4321                           	psect	text212,local,class=CODE,delta=2
  4322                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\awmod.c"
  4323                           	line	5
  4324                           	
  4325  0FA5                     ___awmod:	
  4326                           	opt stack 4
  4327                           ; Regs used in ___awmod: [wreg+status,2+status,
                                 0]
  4328                           	line	8
  4329  0FA5  1003               	clrc
  4330                           	
  4331  0FA6  3000               	movlw	0
  4332  0FA7  1803               	btfsc	status,0
  4333  0FA8  3001               	movlw	1
  4334  0FA9  00D9               	movwf	(___awmod_sign)
  4335                           	line	9
  4336                           	
  4337  0FAA  1FD6               	btfss	(___awmod_dividend+1),7
  4338  0FAB  2FAD               	goto	u3411
  4339  0FAC  2FAE               	goto	u3410
  4340  0FAD                     u3411:
  4341  0FAD  2FB6               	goto	l306
  4342  0FAE                     u3410:
  4343                           	line	10
  4344                           	
  4345  0FAE  09D5               	comf	(___awmod_dividend),f
  4346  0FAF  09D6               	comf	(___awmod_dividend+1),f
  4347  0FB0  0AD5               	incf	(___awmod_dividend),f
  4348  0FB1  1903               	skipnz
  4349  0FB2  0AD6               	incf	(___awmod_dividend+1),f
  4350                           	
  4351                           	line	11
  4352                           	
  4353  0FB3  01D9               	clrf	(___awmod_sign)
  4354  0FB4  1403               	bsf	status,0
  4355  0FB5  0DD9               	rlf	(___awmod_sign),f
  4356                           	line	12
  4357                           	
  4358  0FB6                     l306:	
  4359                           	line	13
  4360                           	
  4361  0FB6  1FD8               	btfss	(___awmod_divisor+1),7
  4362  0FB7  2FB9               	goto	u3421
  4363  0FB8  2FBA               	goto	u3420
  4364  0FB9                     u3421:
  4365  0FB9  2FBF               	goto	l307
  4366  0FBA                     u3420:
  4367                           	line	14
  4368                           	
  4369  0FBA  09D7               	comf	(___awmod_divisor),f
  4370  0FBB  09D8               	comf	(___awmod_divisor+1),f
  4371  0FBC  0AD7               	incf	(___awmod_divisor),f
  4372  0FBD  1903               	skipnz
  4373  0FBE  0AD8               	incf	(___awmod_divisor+1),f
  4374                           	
  4375                           	
  4376  0FBF                     l307:	
  4377                           	line	15
  4378                           	
  4379  0FBF  0858               	movf	(___awmod_divisor+1),w
  4380  0FC0  0457               	iorwf	(___awmod_divisor),w
  4381  0FC1  1903               	skipnz
  4382  0FC2  2FC4               	goto	u3431
  4383  0FC3  2FC5               	goto	u3430
  4384  0FC4                     u3431:
  4385  0FC4  2FF5               	goto	l308
  4386  0FC5                     u3430:
  4387                           	line	16
  4388                           	
  4389  0FC5  01DA               	clrf	(___awmod_counter)
  4390  0FC6  1403               	bsf	status,0
  4391  0FC7  0DDA               	rlf	(___awmod_counter),f
  4392                           	line	17
  4393  0FC8  2FD4               	goto	l309
  4394                           	
  4395  0FC9                     l310:	
  4396                           	line	18
  4397                           	
  4398  0FC9  3001               	movlw	01h
  4399  0FCA                     u3445:
  4400  0FCA  1003               	clrc
  4401  0FCB  0DD7               	rlf	(___awmod_divisor),f
  4402  0FCC  0DD8               	rlf	(___awmod_divisor+1),f
  4403  0FCD  3EFF               	addlw	-1
  4404  0FCE  1D03               	skipz
  4405  0FCF  2FCA               	goto	u3445
  4406                           	line	19
  4407  0FD0  3001               	movlw	(01h)
  4408  0FD1  00DB               	movwf	(??___awmod+2+0)
  4409                           	
  4410  0FD2  085B               	movf	(??___awmod+2+0),w
  4411  0FD3  07DA               	addwf	(___awmod_counter),f
  4412                           	line	20
  4413                           	
  4414  0FD4                     l309:	
  4415                           	line	17
  4416                           	
  4417  0FD4  1FD8               	btfss	(___awmod_divisor+1),(15)&7
  4418  0FD5  2FD7               	goto	u3451
  4419  0FD6  2FD8               	goto	u3450
  4420  0FD7                     u3451:
  4421  0FD7  2FC9               	goto	l310
  4422  0FD8                     u3450:
  4423                           	
  4424  0FD8                     l311:	
  4425                           	line	21
  4426                           	
  4427  0FD8                     l314:	
  4428                           	line	22
  4429                           	
  4430                           	
  4431  0FD8  0858               	movf	(___awmod_divisor+1),w
  4432  0FD9  0256               	subwf	(___awmod_dividend+1),w
  4433  0FDA  1D03               	skipz
  4434  0FDB  2FDE               	goto	u3465
  4435  0FDC  0857               	movf	(___awmod_divisor),w
  4436  0FDD  0255               	subwf	(___awmod_dividend),w
  4437  0FDE                     u3465:
  4438  0FDE  1C03               	skipc
  4439  0FDF  2FE1               	goto	u3461
  4440  0FE0  2FE2               	goto	u3460
  4441  0FE1                     u3461:
  4442  0FE1  2FE8               	goto	l315
  4443  0FE2                     u3460:
  4444                           	line	23
  4445                           	
  4446                           	
  4447  0FE2  0857               	movf	(___awmod_divisor),w
  4448  0FE3  02D5               	subwf	(___awmod_dividend),f
  4449  0FE4  0858               	movf	(___awmod_divisor+1),w
  4450  0FE5  1C03               	skipc
  4451  0FE6  03D6               	decf	(___awmod_dividend+1),f
  4452  0FE7  02D6               	subwf	(___awmod_dividend+1),f
  4453                           	
  4454  0FE8                     l315:	
  4455                           	line	24
  4456                           	
  4457  0FE8  3001               	movlw	01h
  4458  0FE9                     u3475:
  4459  0FE9  1003               	clrc
  4460  0FEA  0CD8               	rrf	(___awmod_divisor+1),f
  4461  0FEB  0CD7               	rrf	(___awmod_divisor),f
  4462  0FEC  3EFF               	addlw	-1
  4463  0FED  1D03               	skipz
  4464  0FEE  2FE9               	goto	u3475
  4465                           	line	25
  4466                           	
  4467                           	
  4468  0FEF  3001               	movlw	low(01h)
  4469  0FF0  02DA               	subwf	(___awmod_counter),f
  4470  0FF1  1D03               	btfss	status,2
  4471  0FF2  2FF4               	goto	u3481
  4472  0FF3  2FF5               	goto	u3480
  4473  0FF4                     u3481:
  4474  0FF4  2FD8               	goto	l314
  4475  0FF5                     u3480:
  4476                           	
  4477  0FF5                     l313:	
  4478                           	line	26
  4479                           	
  4480  0FF5                     l308:	
  4481                           	line	27
  4482                           	
  4483  0FF5  08D9               	movf	(___awmod_sign),f
  4484  0FF6  1D03               	skipz
  4485  0FF7  2FF9               	goto	u3490
  4486  0FF8  2FFE               	goto	l316
  4487  0FF9                     u3490:
  4488                           	line	28
  4489                           	
  4490  0FF9  09D5               	comf	(___awmod_dividend),f
  4491  0FFA  09D6               	comf	(___awmod_dividend+1),f
  4492  0FFB  0AD5               	incf	(___awmod_dividend),f
  4493  0FFC  1903               	skipnz
  4494  0FFD  0AD6               	incf	(___awmod_dividend+1),f
  4495                           	
  4496                           	
  4497  0FFE                     l316:	
  4498                           	line	29
  4499  0FFE  2FFF               	goto	l305
  4500                           	line	30
  4501  0FFF                     l305:	
  4502  0FFF  0008               	return
  4503                           ; =============== function ___awmod ends ======
                                 =========
  4504                           
  4505                           GLOBAL __end_of___awmod
  4506  1000                     	__end_of___awmod:
  4507                           	FNSIZE	___awmod,3,4
  4508                           	signat	___awmod,8314
  4509                           	global	_LCDWriteCommand
  4510                           	global	??_LCDWriteCommand
  4511                           	global	?_LCDWriteCommand
  4512                           
  4513                           ; *************** function _LCDWriteCommand ***
                                 ************
  4514                           ; Defined at:
  4515                           ;		line 12 in file "C:\Users\hardik\Desktop\LM3
                                 5 temp sensor\LCD.c"
  4516                           ; Parameters:
  4517                           ;		LCDData     	reg:   wr	type: unsigned char 
  4518                           ; Auto variables:
  4519                           ;		LCDData     	       	type: unsigned char 
  4520                           ; Return value:
  4521                           ;		type: void 
  4522                           ;		size: 0
  4523                           ; Registers used:
  4524                           ;		wreg, status,2, status,0, pclath, cstack
  4525                           ; Tracked objects:
  4526                           ;		On entry : 0/0
  4527                           ;		On exit  : 0/0
  4528                           ;		Unchanged: 0/0
  4529                           ; Data sizes:
  4530                           ;		Autos:    1
  4531                           ;		Params:   0
  4532                           ;		Temp:     0
  4533                           ;		Total:    1
  4534                           ; This function calls:
  4535                           ;		_LCDWriteByte
  4536                           ; This function is called by:
  4537                           ;		_LCDInitialize
  4538                           ;		_LCDReset
  4539                           ;		_LCDDisplayInitializing
  4540                           ;		_LCDWriteFloat
  4541                           ;		_main
  4542                           ; This function uses a non-reentrant model
  4543                           ; 
  4544                           	psect	text213,local,class=CODE,delta=2
  4545                           	file	"C:\Users\hardik\Desktop\LM35 temp sensor
                                 \LCD.c"
  4546                           	line	12
  4547                           ;LCD.c: 11: void LCDWriteCommand(LCDubyte LCDDa
                                 ta)
  4548                           ;LCD.c: 12: {
  4549                           	
  4550  0D73                     _LCDWriteCommand:	
  4551                           	opt stack 3
  4552                           ; Regs used in _LCDWriteCommand: [wreg+status,2
                                 +status,0+pclath+cstack]
  4553                           ;_LCDWriteCommand_LCDData stored from wreg
  4554  0D73  1283               	bcf	status, 5	;RP0=0, select bank0
  4555  0D74  1303               	bcf	status, 6	;RP1=0, select bank0
  4556                           	
  4557  0D75  00CB               	movwf	(_LCDWriteCommand_LCDData)
  4558                           	line	13
  4559                           ;LCD.c: 13: RD2 = 0;
  4560  0D76  1108               	bcf	(66/8),(66)&7
  4561                           	line	14
  4562                           ;LCD.c: 14: LCDWriteByte(LCDData);
  4563                           	
  4564  0D77  084B               	movf	(_LCDWriteCommand_LCDData),w
  4565  0D78  120A  158A  265F   	fcall	_LCDWriteByte
              120A  158A         
  4566                           	line	15
  4567                           ;LCD.c: 15: }
  4568  0D7D                     l9:	
  4569  0D7D  0008               	return
  4570                           ; =============== function _LCDWriteCommand end
                                 s ===============
  4571                           
  4572                           GLOBAL __end_of_LCDWriteCommand
  4573  0D7E                     	__end_of_LCDWriteCommand:
  4574                           	FNSIZE	_LCDWriteCommand,1,0
  4575                           	signat	_LCDWriteCommand,4216
  4576                           	global	___ftpack
  4577                           	global	??___ftpack
  4578                           	global	?___ftpack
  4579                           
  4580                           ; *************** function ___ftpack **********
                                 *****
  4581                           ; Defined at:
  4582                           ;		line 33 in file "C:\Program Files (x86)\HI-T
                                 ECH Software\PICC\PRO\9.65\sources\float.c"
  4583                           ; Parameters:
  4584                           ;		arg         	reg:   wr	type: PTR unsigned um
                                 ; Largest target is 3
  4585                           ;		 -> __lttoft_f1(3), __attoft_f1(3), __lltoft
                                 _f1(3), __altoft_f1(3), 
  4586                           ;		 -> __lwtoft_f1(3), __awtoft_f1(3), __abtoft
                                 _f1(3), __lbtoft_f1(3), 
  4587                           ;		 -> __ftmul_f3(3), __ftdiv_f3(3), __ftadd_f1
                                 (3), 
  4588                           ;		exp         	offs:   0	type: unsigned char 
  4589                           ; Auto variables:
  4590                           ;		arg         	       	type: PTR unsigned um; 
                                 Largest target is 3
  4591                           ;		 -> __lttoft_f1(3), __attoft_f1(3), __lltoft
                                 _f1(3), __altoft_f1(3), 
  4592                           ;		 -> __lwtoft_f1(3), __awtoft_f1(3), __abtoft
                                 _f1(3), __lbtoft_f1(3), 
  4593                           ;		 -> __ftmul_f3(3), __ftdiv_f3(3), __ftadd_f1
                                 (3), 
  4594                           ; Return value:
  4595                           ;		type: void 
  4596                           ;		size: 0
  4597                           ; Registers used:
  4598                           ;		wreg, fsr0l, fsr0h, status,2, status,0
  4599                           ; Tracked objects:
  4600                           ;		On entry : 300/0
  4601                           ;		On exit  : 0/0
  4602                           ;		Unchanged: 0/0
  4603                           ; Data sizes:
  4604                           ;		Autos:    1
  4605                           ;		Params:   1
  4606                           ;		Temp:     3
  4607                           ;		Total:    5
  4608                           ; This function calls:
  4609                           ;		Nothing
  4610                           ; This function is called by:
  4611                           ;		___ftadd
  4612                           ;		___ftdiv
  4613                           ;		___ftmul
  4614                           ;		___awtoft
  4615                           ;		___lwtoft
  4616                           ; This function uses a non-reentrant model
  4617                           ; 
  4618                           	psect	text214,local,class=CODE,delta=2
  4619                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\float.c"
  4620                           	line	33
  4621                           	
  4622  0739                     ___ftpack:	
  4623                           	opt stack 3
  4624                           ; Regs used in ___ftpack: [wreg-fsr0h+status,2+
                                 status,0]
  4625                           ;___ftpack_arg stored from wreg
  4626                           	
  4627  0739  00DE               	movwf	(___ftpack_arg)
  4628                           	line	34
  4629                           	
  4630  073A  08DD               	movf	(___ftpack_exp),f
  4631  073B  1D03               	skipz
  4632  073C  2F3E               	goto	u3500
  4633  073D  2F50               	goto	l600000850
  4634  073E                     u3500:
  4635                           	
  4636  073E  085E               	movf	(___ftpack_arg),w
  4637  073F  0084               	movwf	fsr0
  4638  0740  1383               	bcf	status, 7	;select IRP bank0
  4639  0741  0800               	movf	indf,w
  4640  0742  00DF               	movwf	(??___ftpack+1+0)
  4641  0743  0A84               	incf	fsr0,f
  4642  0744  0800               	movf	indf,w
  4643  0745  00E0               	movwf	(??___ftpack+1+0+1)
  4644  0746  0A84               	incf	fsr0,f
  4645  0747  0800               	movf	indf,w
  4646  0748  00E1               	movwf	(??___ftpack+1+0+2)
  4647  0749  0861               	movf	2+(??___ftpack+1+0),w
  4648  074A  0460               	iorwf	1+(??___ftpack+1+0),w
  4649  074B  045F               	iorwf	0+(??___ftpack+1+0),w
  4650  074C  1D03               	skipz
  4651  074D  2F4F               	goto	u3511
  4652  074E  2F50               	goto	u3510
  4653  074F                     u3511:
  4654  074F  2F5C               	goto	l397
  4655  0750                     u3510:
  4656                           	
  4657  0750                     l600000850:	
  4658                           	line	35
  4659                           	
  4660  0750  085E               	movf	(___ftpack_arg),w
  4661  0751  0084               	movwf	fsr0
  4662  0752  3000               	movlw	0
  4663  0753  1383               	bcf	status, 7	;select IRP bank0
  4664  0754  0080               	movwf	indf
  4665  0755  0A84               	incf	fsr0,f
  4666  0756  3000               	movlw	0
  4667  0757  0080               	movwf	indf
  4668  0758  0A84               	incf	fsr0,f
  4669  0759  3000               	movlw	0
  4670  075A  0080               	movwf	indf
  4671                           	line	36
  4672  075B  2FFE               	goto	l396
  4673                           	line	37
  4674                           	
  4675  075C                     l397:	
  4676                           	line	38
  4677  075C  2F6F               	goto	l398
  4678                           	
  4679  075D                     l399:	
  4680                           	line	39
  4681  075D  3001               	movlw	(01h)
  4682  075E  00DF               	movwf	(??___ftpack+1+0)
  4683                           	
  4684  075F  085F               	movf	(??___ftpack+1+0),w
  4685  0760  07DD               	addwf	(___ftpack_exp),f
  4686                           	line	40
  4687                           	
  4688  0761  085E               	movf	(___ftpack_arg),w
  4689  0762  0084               	movwf	fsr0
  4690  0763  3001               	movlw	01h
  4691  0764  00DF               	movwf	(??___ftpack+1+0)
  4692  0765                     u3525:
  4693  0765  0A84               	incf	fsr0,f
  4694  0766  0A84               	incf	fsr0,f
  4695  0767  1003               	clrc
  4696  0768  0C80               	rrf	indf,f
  4697  0769  0384               	decf	fsr0,f
  4698  076A  0C80               	rrf	indf,f
  4699  076B  0384               	decf	fsr0,f
  4700  076C  0C80               	rrf	indf,f
  4701  076D  0BDF               	decfsz	(??___ftpack+1+0)
  4702  076E  2F65               	goto	u3525
  4703                           	line	41
  4704                           	
  4705  076F                     l398:	
  4706                           	line	38
  4707                           	
  4708  076F  085E               	movf	(___ftpack_arg),w
  4709  0770  0084               	movwf	fsr0
  4710  0771  3000               	movlw	0
  4711  0772  0500               	andwf	indf,w
  4712  0773  00DF               	movwf	??___ftpack+1+0
  4713  0774  0A84               	incf	fsr0,f
  4714  0775  3000               	movlw	0
  4715  0776  0500               	andwf	indf,w
  4716  0777  00E0               	movwf	??___ftpack+1+0+1
  4717  0778  0A84               	incf	fsr0,f
  4718  0779  30FE               	movlw	0FEh
  4719  077A  0500               	andwf	indf,w
  4720  077B  00E1               	movwf	??___ftpack+1+0+2
  4721  077C  0861               	movf	??___ftpack+1+2,w
  4722  077D  0460               	iorwf	??___ftpack+1+1,w
  4723  077E  045F               	iorwf	??___ftpack+1+0,w
  4724  077F  1D03               	skipz
  4725  0780  2F82               	goto	u3531
  4726  0781  2F83               	goto	u3530
  4727  0782                     u3531:
  4728  0782  2F5D               	goto	l399
  4729  0783                     u3530:
  4730                           	
  4731  0783                     l400:	
  4732                           	line	42
  4733  0783  2FA5               	goto	l401
  4734                           	
  4735  0784                     l402:	
  4736                           	line	43
  4737  0784  3001               	movlw	(01h)
  4738  0785  00DF               	movwf	(??___ftpack+1+0)
  4739                           	
  4740  0786  085F               	movf	(??___ftpack+1+0),w
  4741  0787  07DD               	addwf	(___ftpack_exp),f
  4742                           	line	44
  4743                           	
  4744  0788  085E               	movf	(___ftpack_arg),w
  4745  0789  0084               	movwf	fsr0
  4746  078A  3001               	movlw	01h
  4747  078B  0780               	addwf	indf,f
  4748  078C  0A84               	incf	fsr0,f
  4749  078D  3000               	movlw	0
  4750  078E  1803               	skipnc
  4751  078F  3E01               	addlw	1
  4752  0790  1D03               	skipz
  4753  0791  0780               	addwf	indf,f
  4754  0792  0A84               	incf	fsr0,f
  4755  0793  3000               	movlw	0
  4756  0794  1803               	skipnc
  4757  0795  3E01               	addlw	1
  4758  0796  0780               	addwf	indf,f
  4759                           	line	45
  4760                           	
  4761  0797  085E               	movf	(___ftpack_arg),w
  4762  0798  0084               	movwf	fsr0
  4763  0799  3001               	movlw	01h
  4764  079A  00DF               	movwf	(??___ftpack+1+0)
  4765  079B                     u3545:
  4766  079B  0A84               	incf	fsr0,f
  4767  079C  0A84               	incf	fsr0,f
  4768  079D  1003               	clrc
  4769  079E  0C80               	rrf	indf,f
  4770  079F  0384               	decf	fsr0,f
  4771  07A0  0C80               	rrf	indf,f
  4772  07A1  0384               	decf	fsr0,f
  4773  07A2  0C80               	rrf	indf,f
  4774  07A3  0BDF               	decfsz	(??___ftpack+1+0)
  4775  07A4  2F9B               	goto	u3545
  4776                           	line	46
  4777                           	
  4778  07A5                     l401:	
  4779                           	line	42
  4780                           	
  4781  07A5  085E               	movf	(___ftpack_arg),w
  4782  07A6  0084               	movwf	fsr0
  4783  07A7  3000               	movlw	0
  4784  07A8  0500               	andwf	indf,w
  4785  07A9  00DF               	movwf	??___ftpack+1+0
  4786  07AA  0A84               	incf	fsr0,f
  4787  07AB  3000               	movlw	0
  4788  07AC  0500               	andwf	indf,w
  4789  07AD  00E0               	movwf	??___ftpack+1+0+1
  4790  07AE  0A84               	incf	fsr0,f
  4791  07AF  30FF               	movlw	0FFh
  4792  07B0  0500               	andwf	indf,w
  4793  07B1  00E1               	movwf	??___ftpack+1+0+2
  4794  07B2  0861               	movf	??___ftpack+1+2,w
  4795  07B3  0460               	iorwf	??___ftpack+1+1,w
  4796  07B4  045F               	iorwf	??___ftpack+1+0,w
  4797  07B5  1D03               	skipz
  4798  07B6  2FB8               	goto	u3551
  4799  07B7  2FB9               	goto	u3550
  4800  07B8                     u3551:
  4801  07B8  2F84               	goto	l402
  4802  07B9                     u3550:
  4803                           	
  4804  07B9                     l403:	
  4805                           	line	47
  4806  07B9  2FCA               	goto	l404
  4807                           	
  4808  07BA                     l405:	
  4809                           	line	48
  4810                           	
  4811                           	
  4812  07BA  3001               	movlw	low(01h)
  4813  07BB  02DD               	subwf	(___ftpack_exp),f
  4814                           	line	49
  4815                           	
  4816  07BC  085E               	movf	(___ftpack_arg),w
  4817  07BD  0084               	movwf	fsr0
  4818  07BE  3001               	movlw	01h
  4819  07BF                     u3565:
  4820  07BF  1003               	clrc
  4821  07C0  0D80               	rlf	indf,f
  4822  07C1  0A84               	incf	fsr0,f
  4823  07C2  0D80               	rlf	indf,f
  4824  07C3  0A84               	incf	fsr0,f
  4825  07C4  0D80               	rlf	indf,f
  4826  07C5  0384               	decf	fsr0,f
  4827  07C6  0384               	decf	fsr0,f
  4828  07C7  3EFF               	addlw	-1
  4829  07C8  1D03               	skipz
  4830  07C9  2FBF               	goto	u3565
  4831                           	line	50
  4832                           	
  4833  07CA                     l404:	
  4834                           	line	47
  4835                           	
  4836  07CA  085E               	movf	(___ftpack_arg),w
  4837  07CB  0084               	movwf	fsr0
  4838  07CC  0800               	movf	indf,w
  4839  07CD  00DF               	movwf	(??___ftpack+1+0)
  4840  07CE  0A84               	incf	fsr0,f
  4841  07CF  0800               	movf	indf,w
  4842  07D0  00E0               	movwf	(??___ftpack+1+0+1)
  4843  07D1  0A84               	incf	fsr0,f
  4844  07D2  0800               	movf	indf,w
  4845  07D3  00E1               	movwf	(??___ftpack+1+0+2)
  4846  07D4  1FE0               	btfss	1+(??___ftpack+1+0),(15)&7
  4847  07D5  2FD7               	goto	u3571
  4848  07D6  2FD8               	goto	u3570
  4849  07D7                     u3571:
  4850  07D7  2FBA               	goto	l405
  4851  07D8                     u3570:
  4852                           	
  4853  07D8                     l406:	
  4854                           	line	51
  4855                           	
  4856  07D8  185D               	btfsc	(___ftpack_exp),(0)&7
  4857  07D9  2FDB               	goto	u3581
  4858  07DA  2FDC               	goto	u3580
  4859  07DB                     u3581:
  4860  07DB  2FE6               	goto	l407
  4861  07DC                     u3580:
  4862                           	line	52
  4863                           	
  4864  07DC  085E               	movf	(___ftpack_arg),w
  4865  07DD  0084               	movwf	fsr0
  4866  07DE  30FF               	movlw	0FFh
  4867  07DF  0580               	andwf	indf,f
  4868  07E0  0A84               	incf	fsr0,f
  4869  07E1  307F               	movlw	07Fh
  4870  07E2  0580               	andwf	indf,f
  4871  07E3  0A84               	incf	fsr0,f
  4872  07E4  30FF               	movlw	0FFh
  4873  07E5  0580               	andwf	indf,f
  4874                           	
  4875  07E6                     l407:	
  4876                           	line	53
  4877                           	
  4878  07E6  1003               	clrc
  4879  07E7  0CDD               	rrf	(___ftpack_exp),f
  4880                           
  4881                           	line	54
  4882                           	
  4883  07E8  085D               	movf	(___ftpack_exp),w
  4884  07E9  00DF               	movwf	(??___ftpack+1+0)
  4885  07EA  01E0               	clrf	(??___ftpack+1+0+1)
  4886  07EB  01E1               	clrf	(??___ftpack+1+0+2)
  4887  07EC  3010               	movlw	010h
  4888  07ED                     u3595:
  4889  07ED  1003               	clrc
  4890  07EE  0DDF               	rlf	(??___ftpack+1+0),f
  4891  07EF  0DE0               	rlf	(??___ftpack+1+1),f
  4892  07F0  0DE1               	rlf	(??___ftpack+1+2),f
  4893  07F1                     u3590:
  4894  07F1  3EFF               	addlw	-1
  4895  07F2  1D03               	skipz
  4896  07F3  2FED               	goto	u3595
  4897                           	
  4898  07F4  085E               	movf	(___ftpack_arg),w
  4899  07F5  0084               	movwf	fsr0
  4900  07F6  085F               	movf	(??___ftpack+1+0),w
  4901  07F7  0480               	iorwf	indf,f
  4902  07F8  0A84               	incf	fsr0,f
  4903  07F9  0860               	movf	(??___ftpack+1+1),w
  4904  07FA  0480               	iorwf	indf,f
  4905  07FB  0A84               	incf	fsr0,f
  4906  07FC  0861               	movf	(??___ftpack+1+2),w
  4907  07FD  0480               	iorwf	indf,f
  4908                           	line	55
  4909  07FE                     l396:	
  4910  07FE  0008               	return
  4911                           ; =============== function ___ftpack ends =====
                                 ==========
  4912                           
  4913                           GLOBAL __end_of___ftpack
  4914  07FF                     	__end_of___ftpack:
  4915                           	FNSIZE	___ftpack,4,1
  4916                           	signat	___ftpack,8312
  4917                           	global	___ftunpack
  4918                           	global	??___ftunpack
  4919                           	global	?___ftunpack
  4920                           
  4921                           ; *************** function ___ftunpack ********
                                 *******
  4922                           ; Defined at:
  4923                           ;		line 13 in file "C:\Program Files (x86)\HI-T
                                 ECH Software\PICC\PRO\9.65\sources\float.c"
  4924                           ; Parameters:
  4925                           ;		arg         	reg:   wr	type: PTR unsigned um
                                 ; Largest target is 3
  4926                           ;		 -> __fttol_f1(3), __ftmul_f2(3), __ftmul_f1
                                 (3), __ftdiv_f2(3), 
  4927                           ;		 -> __ftdiv_f1(3), __ftadd_f2(3), __ftadd_f1
                                 (3), 
  4928                           ;		exp         	offs:   0	type: PTR unsigned ch
                                 ar ; Largest target is 1
  4929                           ;		 -> __fttol_exp1(1), __ftmul_cntr(1), __ftmu
                                 l_exp1(1), __ftdiv_exp2(1), 
  4930                           ;		 -> __ftdiv_exp1(1), __ftadd_exp2(1), __ftad
                                 d_exp1(1), 
  4931                           ; Auto variables:
  4932                           ;		arg         	       	type: PTR unsigned um; 
                                 Largest target is 3
  4933                           ;		 -> __fttol_f1(3), __ftmul_f2(3), __ftmul_f1
                                 (3), __ftdiv_f2(3), 
  4934                           ;		 -> __ftdiv_f1(3), __ftadd_f2(3), __ftadd_f1
                                 (3), 
  4935                           ;		sign        	       	type: unsigned char 
  4936                           ; Return value:
  4937                           ;		type: unsigned char 
  4938                           ;		size: 1
  4939                           ; Registers used:
  4940                           ;		wreg, fsr0l, fsr0h, status,2, status,0
  4941                           ; Tracked objects:
  4942                           ;		On entry : 300/0
  4943                           ;		On exit  : 0/0
  4944                           ;		Unchanged: 0/0
  4945                           ; Data sizes:
  4946                           ;		Autos:    2
  4947                           ;		Params:   1
  4948                           ;		Temp:     4
  4949                           ;		Total:    7
  4950                           ; This function calls:
  4951                           ;		Nothing
  4952                           ; This function is called by:
  4953                           ;		___ftadd
  4954                           ;		___ftdiv
  4955                           ;		___ftmul
  4956                           ;		___fttol
  4957                           ; This function uses a non-reentrant model
  4958                           ; 
  4959                           	psect	text215,local,class=CODE,delta=2
  4960                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\float.c"
  4961                           	line	13
  4962                           	
  4963  0F4B                     ___ftunpack:	
  4964                           	opt stack 3
  4965                           ; Regs used in ___ftunpack: [wreg-fsr0h+status,
                                 2+status,0]
  4966                           ;___ftunpack_arg stored from wreg
  4967                           	line	16
  4968                           	
  4969  0F4B  00DE               	movwf	(___ftunpack_arg)
  4970                           	
  4971  0F4C  085E               	movf	(___ftunpack_arg),w
  4972  0F4D  0084               	movwf	fsr0
  4973  0F4E  1383               	bcf	status, 7	;select IRP bank0
  4974  0F4F  0800               	movf	indf,w
  4975  0F50  00E0               	movwf	(??___ftunpack+2+0)
  4976  0F51  0A84               	incf	fsr0,f
  4977  0F52  0800               	movf	indf,w
  4978  0F53  00E1               	movwf	(??___ftunpack+2+0+1)
  4979  0F54  0A84               	incf	fsr0,f
  4980  0F55  0800               	movf	indf,w
  4981  0F56  00E2               	movwf	(??___ftunpack+2+0+2)
  4982  0F57  300F               	movlw	0Fh
  4983  0F58                     u3605:
  4984  0F58  1003               	clrc
  4985  0F59  0CE2               	rrf	(??___ftunpack+2+2),f
  4986  0F5A  0CE1               	rrf	(??___ftunpack+2+1),f
  4987  0F5B  0CE0               	rrf	(??___ftunpack+2+0),f
  4988  0F5C                     u3600:
  4989  0F5C  3EFF               	addlw	-1
  4990  0F5D  1D03               	skipz
  4991  0F5E  2F58               	goto	u3605
  4992  0F5F  0860               	movf	(??___ftunpack+2+0),w
  4993                           	
  4994  0F60  00DF               	movwf	(___ftunpack_sign)
  4995  0F61  00E3               	movwf	(??___ftunpack+5+0)
  4996                           	
  4997  0F62  085D               	movf	(___ftunpack_exp),w
  4998  0F63  0084               	movwf	fsr0
  4999  0F64  0863               	movf	(??___ftunpack+5+0),w
  5000  0F65  0080               	movwf	indf
  5001                           	line	17
  5002                           	
  5003  0F66  08DF               	movf	(___ftunpack_sign),f
  5004  0F67  1D03               	skipz
  5005  0F68  2F6A               	goto	u3611
  5006  0F69  2F6B               	goto	u3610
  5007  0F6A                     u3611:
  5008  0F6A  2F77               	goto	l394
  5009  0F6B                     u3610:
  5010                           	line	18
  5011                           	
  5012  0F6B  085E               	movf	(___ftunpack_arg),w
  5013  0F6C  0084               	movwf	fsr0
  5014  0F6D  3000               	movlw	0
  5015  0F6E  0080               	movwf	indf
  5016  0F6F  0A84               	incf	fsr0,f
  5017  0F70  3000               	movlw	0
  5018  0F71  0080               	movwf	indf
  5019  0F72  0A84               	incf	fsr0,f
  5020  0F73  3000               	movlw	0
  5021  0F74  0080               	movwf	indf
  5022                           	line	19
  5023  0F75  3000               	movlw	(0)
  5024  0F76  2FA4               	goto	l393
  5025                           	line	20
  5026                           	
  5027  0F77                     l394:	
  5028                           	line	21
  5029  0F77  1003               	clrc
  5030                           	
  5031  0F78  3000               	movlw	0
  5032  0F79  1803               	btfsc	status,0
  5033  0F7A  3001               	movlw	1
  5034  0F7B  00DF               	movwf	(___ftunpack_sign)
  5035                           	line	22
  5036                           	
  5037  0F7C  085E               	movf	(___ftunpack_arg),w
  5038  0F7D  0084               	movwf	fsr0
  5039  0F7E  3000               	movlw	0
  5040  0F7F  0480               	iorwf	indf,f
  5041  0F80  0A84               	incf	fsr0,f
  5042  0F81  3080               	movlw	080h
  5043  0F82  0480               	iorwf	indf,f
  5044  0F83  0A84               	incf	fsr0,f
  5045  0F84  3000               	movlw	0
  5046  0F85  0480               	iorwf	indf,f
  5047                           	line	23
  5048                           	
  5049  0F86  085E               	movf	(___ftunpack_arg),w
  5050  0F87  0084               	movwf	fsr0
  5051  0F88  0800               	movf	indf,w
  5052  0F89  00E0               	movwf	(??___ftunpack+2+0)
  5053  0F8A  0A84               	incf	fsr0,f
  5054  0F8B  0800               	movf	indf,w
  5055  0F8C  00E1               	movwf	(??___ftunpack+2+0+1)
  5056  0F8D  0A84               	incf	fsr0,f
  5057  0F8E  0800               	movf	indf,w
  5058  0F8F  00E2               	movwf	(??___ftunpack+2+0+2)
  5059  0F90  1FE2               	btfss	2+(??___ftunpack+2+0),(23)&7
  5060  0F91  2F93               	goto	u3621
  5061  0F92  2F94               	goto	u3620
  5062  0F93                     u3621:
  5063  0F93  2F98               	goto	l395
  5064  0F94                     u3620:
  5065                           	line	24
  5066  0F94  3001               	movlw	(01h)
  5067  0F95  00E0               	movwf	(??___ftunpack+2+0)
  5068                           	
  5069  0F96  0860               	movf	(??___ftunpack+2+0),w
  5070  0F97  07DF               	addwf	(___ftunpack_sign),f
  5071                           	
  5072  0F98                     l395:	
  5073                           	line	25
  5074                           	
  5075  0F98  085E               	movf	(___ftunpack_arg),w
  5076  0F99  0084               	movwf	fsr0
  5077  0F9A  30FF               	movlw	0FFh
  5078  0F9B  0580               	andwf	indf,f
  5079  0F9C  0A84               	incf	fsr0,f
  5080  0F9D  30FF               	movlw	0FFh
  5081  0F9E  0580               	andwf	indf,f
  5082  0F9F  0A84               	incf	fsr0,f
  5083  0FA0  3000               	movlw	0
  5084  0FA1  0580               	andwf	indf,f
  5085                           	line	26
  5086                           	
  5087  0FA2  085F               	movf	(___ftunpack_sign),w
  5088  0FA3  2FA4               	goto	l393
  5089                           	line	27
  5090  0FA4                     l393:	
  5091  0FA4  0008               	return
  5092                           ; =============== function ___ftunpack ends ===
                                 ============
  5093                           
  5094                           GLOBAL __end_of___ftunpack
  5095  0FA5                     	__end_of___ftunpack:
  5096                           	FNSIZE	___ftunpack,6,1
  5097                           	signat	___ftunpack,8313
  5098                           	global	_LCDWriteByte
  5099                           	global	??_LCDWriteByte
  5100                           	global	?_LCDWriteByte
  5101                           
  5102                           ; *************** function _LCDWriteByte ******
                                 *********
  5103                           ; Defined at:
  5104                           ;		line 66 in file "C:\Users\hardik\Desktop\LM3
                                 5 temp sensor\LCD.c"
  5105                           ; Parameters:
  5106                           ;		LCDData     	reg:   wr	type: unsigned char 
  5107                           ; Auto variables:
  5108                           ;		LCDData     	       	type: unsigned char 
  5109                           ; Return value:
  5110                           ;		type: void 
  5111                           ;		size: 0
  5112                           ; Registers used:
  5113                           ;		wreg, status,2, status,0, pclath, cstack
  5114                           ; Tracked objects:
  5115                           ;		On entry : 300/0
  5116                           ;		On exit  : 0/0
  5117                           ;		Unchanged: 0/0
  5118                           ; Data sizes:
  5119                           ;		Autos:    1
  5120                           ;		Params:   0
  5121                           ;		Temp:     1
  5122                           ;		Total:    2
  5123                           ; This function calls:
  5124                           ;		_LCDEnable
  5125                           ;		_Delay
  5126                           ; This function is called by:
  5127                           ;		_LCDWriteCommand
  5128                           ;		_LCDWriteData
  5129                           ; This function uses a non-reentrant model
  5130                           ; 
  5131                           	psect	text216,local,class=CODE,delta=2
  5132                           	file	"C:\Users\hardik\Desktop\LM35 temp sensor
                                 \LCD.c"
  5133                           	line	66
  5134                           ;LCD.c: 65: static void LCDWriteByte(LCDubyte L
                                 CDData)
  5135                           ;LCD.c: 66: {
  5136                           	
  5137  0E5F                     _LCDWriteByte:	
  5138                           	opt stack 2
  5139                           ; Regs used in _LCDWriteByte: [wreg+status,2+st
                                 atus,0+pclath+cstack]
  5140                           ;_LCDWriteByte_LCDData stored from wreg
  5141                           	
  5142  0E5F  00D6               	movwf	(_LCDWriteByte_LCDData)
  5143                           	line	67
  5144                           ;LCD.c: 67: PORTD = (PORTD & 0x0F)|(LCDData & 0
                                 xF0);
  5145                           	
  5146  0E60  0856               	movf	(_LCDWriteByte_LCDData),w
  5147  0E61  39F0               	andlw	0F0h
  5148  0E62  00D7               	movwf	(??_LCDWriteByte+1+0)
  5149                           	
  5150  0E63  0808               	movf	(8),w	;volatile
  5151  0E64  390F               	andlw	0Fh
  5152  0E65  0457               	iorwf	(??_LCDWriteByte+1+0),w
  5153                           	
  5154  0E66  0088               	movwf	(8)	;volatile
  5155                           	line	68
  5156                           ;LCD.c: 68: LCDEnable();
  5157  0E67  120A  158A  2589   	fcall	_LCDEnable
              120A  158A         
  5158                           	line	69
  5159                           ;LCD.c: 69: PORTD = (PORTD & 0x0F)|(LCDData << 
                                 4);
  5160  0E6C  1283               	bcf	status, 5	;RP0=0, select bank0
  5161  0E6D  1303               	bcf	status, 6	;RP1=0, select bank0
  5162                           	
  5163  0E6E  0856               	movf	(_LCDWriteByte_LCDData),w
  5164  0E6F  00D7               	movwf	(??_LCDWriteByte+1+0)
  5165  0E70  3004               	movlw	04h
  5166  0E71                     u2645:
  5167  0E71  1003               	clrc
  5168  0E72  0DD7               	rlf	(??_LCDWriteByte+1+0),f
  5169  0E73  3EFF               	addlw	-1
  5170  0E74  1D03               	skipz
  5171  0E75  2E71               	goto	u2645
  5172                           	
  5173  0E76  0808               	movf	(8),w	;volatile
  5174  0E77  390F               	andlw	0Fh
  5175  0E78  0457               	iorwf	0+(??_LCDWriteByte+1+0),w
  5176                           	
  5177  0E79  0088               	movwf	(8)	;volatile
  5178                           	line	70
  5179                           ;LCD.c: 70: LCDEnable();
  5180  0E7A  120A  158A  2589   	fcall	_LCDEnable
              120A  158A         
  5181                           	line	71
  5182                           ;LCD.c: 71: Delay(2);
  5183  0E7F  3002               	movlw	low(02h)
  5184  0E80  1283               	bcf	status, 5	;RP0=0, select bank0
  5185  0E81  1303               	bcf	status, 6	;RP1=0, select bank0
  5186                           	
  5187  0E82  00D8               	movwf	(?_Delay)
  5188  0E83  3000               	movlw	high(02h)
  5189  0E84  00D9               	movwf	((?_Delay))+1
  5190  0E85  120A  158A  25AA   	fcall	_Delay
              120A  158A         
  5191                           	line	72
  5192                           ;LCD.c: 72: }
  5193  0E8A                     l21:	
  5194  0E8A  0008               	return
  5195                           ; =============== function _LCDWriteByte ends =
                                 ==============
  5196                           
  5197                           GLOBAL __end_of_LCDWriteByte
  5198  0E8B                     	__end_of_LCDWriteByte:
  5199                           	FNSIZE	_LCDWriteByte,2,0
  5200                           	signat	_LCDWriteByte,4216
  5201                           	global	_LCDEnable
  5202                           	global	??_LCDEnable
  5203                           	global	?_LCDEnable
  5204                           
  5205                           ; *************** function _LCDEnable *********
                                 ******
  5206                           ; Defined at:
  5207                           ;		line 5 in file "C:\Users\hardik\Desktop\LM35
                                  temp sensor\LCD.c"
  5208                           ; Parameters:
  5209                           ;		None
  5210                           ; Auto variables:
  5211                           ;		None
  5212                           ; Return value:
  5213                           ;		type: void 
  5214                           ;		size: 0
  5215                           ; Registers used:
  5216                           ;		wreg, status,2, status,0, pclath, cstack
  5217                           ; Tracked objects:
  5218                           ;		On entry : 300/0
  5219                           ;		On exit  : 0/0
  5220                           ;		Unchanged: 0/0
  5221                           ; Data sizes:
  5222                           ;		Autos:    0
  5223                           ;		Params:   0
  5224                           ;		Temp:     0
  5225                           ;		Total:    0
  5226                           ; This function calls:
  5227                           ;		_Delay
  5228                           ; This function is called by:
  5229                           ;		_LCDWriteByte
  5230                           ; This function uses a non-reentrant model
  5231                           ; 
  5232                           	psect	text217,local,class=CODE,delta=2
  5233                           	file	"C:\Users\hardik\Desktop\LM35 temp sensor
                                 \LCD.c"
  5234                           	line	5
  5235                           ;LCD.c: 4: static void LCDEnable(void)
  5236                           ;LCD.c: 5: {
  5237                           	
  5238  0D89                     _LCDEnable:	
  5239                           	opt stack 1
  5240                           ; Regs used in _LCDEnable: [wreg+status,2+statu
                                 s,0+pclath+cstack]
  5241                           	line	6
  5242                           ;LCD.c: 6: RD3 = 1;
  5243  0D89  1588               	bsf	(67/8),(67)&7
  5244                           	line	7
  5245                           ;LCD.c: 7: Delay(10);
  5246  0D8A  300A               	movlw	low(0Ah)
  5247                           	
  5248  0D8B  00D8               	movwf	(?_Delay)
  5249  0D8C  3000               	movlw	high(0Ah)
  5250  0D8D  00D9               	movwf	((?_Delay))+1
  5251  0D8E  120A  158A  25AA   	fcall	_Delay
              120A  158A         
  5252                           	line	8
  5253                           ;LCD.c: 8: RD3 = 0;
  5254  0D93  1283               	bcf	status, 5	;RP0=0, select bank0
  5255  0D94  1303               	bcf	status, 6	;RP1=0, select bank0
  5256  0D95  1188               	bcf	(67/8),(67)&7
  5257                           	line	9
  5258                           ;LCD.c: 9: }
  5259  0D96                     l8:	
  5260  0D96  0008               	return
  5261                           ; =============== function _LCDEnable ends ====
                                 ===========
  5262                           
  5263                           GLOBAL __end_of_LCDEnable
  5264  0D97                     	__end_of_LCDEnable:
  5265                           	FNSIZE	_LCDEnable,0,0
  5266                           	signat	_LCDEnable,88
  5267                           	global	_Delay
  5268                           	global	??_Delay
  5269                           	global	?_Delay
  5270                           
  5271                           ; *************** function _Delay *************
                                 **
  5272                           ; Defined at:
  5273                           ;		line 4 in file "C:\Users\hardik\Desktop\LM35
                                  temp sensor\delay.c"
  5274                           ; Parameters:
  5275                           ;		time        	offs:   0	type: unsigned int 
  5276                           ; Auto variables:
  5277                           ;		pause       	       	type: unsigned char 
  5278                           ; Return value:
  5279                           ;		type: void 
  5280                           ;		size: 0
  5281                           ; Registers used:
  5282                           ;		wreg, status,2, status,0
  5283                           ; Tracked objects:
  5284                           ;		On entry : 300/0
  5285                           ;		On exit  : 0/0
  5286                           ;		Unchanged: 0/0
  5287                           ; Data sizes:
  5288                           ;		Autos:    1
  5289                           ;		Params:   2
  5290                           ;		Temp:     0
  5291                           ;		Total:    3
  5292                           ; This function calls:
  5293                           ;		Nothing
  5294                           ; This function is called by:
  5295                           ;		_LCDEnable
  5296                           ;		_LCDDisplayInitializing
  5297                           ;		_LCDWriteByte
  5298                           ;		_main
  5299                           ; This function uses a non-reentrant model
  5300                           ; 
  5301                           	psect	text218,local,class=CODE,delta=2
  5302                           	file	"C:\Users\hardik\Desktop\LM35 temp sensor
                                 \delay.c"
  5303                           	line	4
  5304                           ;delay.c: 3: void Delay(unsigned int time)
  5305                           ;delay.c: 4: {
  5306                           	
  5307  0DAA                     _Delay:	
  5308                           	opt stack 0
  5309                           ; Regs used in _Delay: [wreg+status,2+status,0]
  5310                           	line	6
  5311                           ;delay.c: 5: unsigned char pause;
  5312                           ;delay.c: 6: while( time > 0)
  5313  0DAA  2DBC               	goto	l2
  5314                           	
  5315  0DAB                     l3:	
  5316                           	line	8
  5317                           ;delay.c: 7: {
  5318                           ;delay.c: 8: pause = 255;
  5319                           	
  5320  0DAB  01DA               	clrf	(_Delay_pause)
  5321  0DAC  03DA               	decf	(_Delay_pause),f
  5322                           	line	9
  5323                           ;delay.c: 9: while(pause--);
  5324  0DAD  2DAE               	goto	l5
  5325                           	
  5326  0DAE                     l5:	
  5327                           	
  5328                           	
  5329  0DAE  3001               	movlw	low(01h)
  5330  0DAF  02DA               	subwf	(_Delay_pause),f
  5331  0DB0  085A               	movf	((_Delay_pause))&07fh,w
  5332  0DB1  3AFF               	xorlw	0FFh
  5333  0DB2  1D03               	skipz
  5334  0DB3  2DB5               	goto	u2701
  5335  0DB4  2DB6               	goto	u2700
  5336  0DB5                     u2701:
  5337  0DB5  2DAE               	goto	l5
  5338  0DB6                     u2700:
  5339                           	
  5340  0DB6                     l7:	
  5341                           	line	10
  5342                           ;delay.c: 10: time--;
  5343                           	
  5344  0DB6  3001               	movlw	low(01h)
  5345  0DB7  02D8               	subwf	(_Delay_time),f
  5346  0DB8  3000               	movlw	high(01h)
  5347  0DB9  1C03               	skipc
  5348  0DBA  03D9               	decf	(_Delay_time+1),f
  5349  0DBB  02D9               	subwf	(_Delay_time+1),f
  5350                           	line	11
  5351                           	
  5352  0DBC                     l2:	
  5353                           	line	6
  5354                           	
  5355  0DBC  0859               	movf	((_Delay_time+1)),w
  5356  0DBD  0458               	iorwf	((_Delay_time)),w
  5357  0DBE  1D03               	skipz
  5358  0DBF  2DC1               	goto	u2711
  5359  0DC0  2DC2               	goto	u2710
  5360  0DC1                     u2711:
  5361  0DC1  2DAB               	goto	l3
  5362  0DC2                     u2710:
  5363                           	
  5364  0DC2                     l4:	
  5365                           	line	12
  5366                           ;delay.c: 11: }
  5367                           ;delay.c: 12: }
  5368  0DC2                     l1:	
  5369  0DC2  0008               	return
  5370                           ; =============== function _Delay ends ========
                                 =======
  5371                           
  5372                           GLOBAL __end_of_Delay
  5373  0DC3                     	__end_of_Delay:
  5374                           	FNSIZE	_Delay,1,2
  5375                           	signat	_Delay,4216
  5376                           	FNCALL	_main,_MainSystemInitialize
  5377                           	FNCALL	_main,_LCDDisplayInitializing
  5378                           	FNCALL	_main,_LCDWriteCommand
  5379                           	FNCALL	_main,_LCDWriteString
  5380                           	FNCALL	_main,___ftge
  5381                           	FNCALL	_main,_Delay
  5382                           	FNCALL	_main,___wmul
  5383                           	FNCALL	_main,___lwtoft
  5384                           	FNCALL	_main,___ftmul
  5385                           	FNCALL	_main,___ftdiv
  5386                           	FNCALL	_main,___ftadd
  5387                           	FNCALL	_main,_LCDWriteFloat
  5388                           	FNCALL	_LCDDisplayInitializing,_LCDWriteString
  5389                           	FNCALL	_LCDDisplayInitializing,_LCDWriteComman
                                 d
  5390                           	FNCALL	_LCDDisplayInitializing,_LCDWriteData
  5391                           	FNCALL	_LCDDisplayInitializing,_Delay
  5392                           	FNCALL	___lwtoft,___ftpack
  5393                           	FNCALL	_LCDWriteFloat,___ftge
  5394                           	FNCALL	_LCDWriteFloat,_LCDWriteData
  5395                           	FNCALL	_LCDWriteFloat,___ftneg
  5396                           	FNCALL	_LCDWriteFloat,___fttol
  5397                           	FNCALL	_LCDWriteFloat,_LCDWriteInteger
  5398                           	FNCALL	_LCDWriteFloat,___awtoft
  5399                           	FNCALL	_LCDWriteFloat,___ftsub
  5400                           	FNCALL	_LCDWriteFloat,___ftadd
  5401                           	FNCALL	_LCDWriteFloat,___ftmul
  5402                           	FNCALL	_LCDWriteFloat,___awmod
  5403                           	FNCALL	_LCDWriteFloat,___awdiv
  5404                           	FNCALL	_LCDWriteFloat,_LCDWriteCommand
  5405                           	FNCALL	_LCDWriteFloat,_LCDWriteString
  5406                           	FNCALL	___ftdiv,___ftunpack
  5407                           	FNCALL	___ftdiv,___ftpack
  5408                           	FNCALL	_MainSystemInitialize,_LCDInitialize
  5409                           	FNCALL	_LCDInitialize,_LCDReset
  5410                           	FNCALL	_LCDInitialize,_LCDWriteCommand
  5411                           	FNCALL	_LCDWriteInteger,_LCDWriteData
  5412                           	FNCALL	_LCDWriteInteger,___awmod
  5413                           	FNCALL	_LCDWriteInteger,___awdiv
  5414                           	FNCALL	___fttol,___ftunpack
  5415                           	FNCALL	___ftmul,___ftunpack
  5416                           	FNCALL	___ftmul,___ftpack
  5417                           	FNCALL	___awtoft,___ftpack
  5418                           	FNCALL	___awtoft,___ftneg
  5419                           	FNCALL	_LCDWriteString,_LCDWriteData
  5420                           	FNCALL	___ftsub,___ftadd
  5421                           	FNCALL	___ftadd,___ftunpack
  5422                           	FNCALL	___ftadd,___ftpack
  5423                           	FNCALL	_LCDWriteData,_LCDWriteByte
  5424                           	FNCALL	_LCDReset,_LCDWriteCommand
  5425                           	FNCALL	_LCDWriteCommand,_LCDWriteByte
  5426                           	FNCALL	_LCDWriteByte,_LCDEnable
  5427                           	FNCALL	_LCDWriteByte,_Delay
  5428                           	FNCALL	_LCDEnable,_Delay
  5429                           	FNROOT	_main
  5430                           ;	FNARG	___ftdiv,___ftmul
  5431                           ;	FNARG	___ftsub,___awtoft
  5432                           ;	FNARG	___ftsub,___ftneg
  5433                           ;	FNARG	___ftadd,___awtoft
  5434                           ;	FNARG	___ftadd,___ftneg
  5435                           ;	FNARG	___ftmul,___ftadd
  5436                           ;	FNARG	___ftmul,___ftsub
  5437                           ;	FNARG	___ftmul,___awtoft
  5438                           ;	FNARG	___ftmul,___ftneg
  5439                           	global	_i
  5440                           	global	_i
  5441                           	psect	common,class=COMMON,space=1
  5442                           
  5443                           	DABS	1,120,2	;_i
  5444  0000                     	_i	set	0x78
  5445                           
  5446                           	global	_j
  5447                           	global	_j
  5448                           
  5449                           	DABS	1,122,2	;_j
  5450  0000                     	_j	set	0x7A
  5451                           
  5452                           	global	_k
  5453                           	global	_k
  5454                           
  5455                           	DABS	1,124,2	;_k
  5456  0000                     	_k	set	0x7C
  5457                           
  5458                           	psect	idata,class=CODE,delta=2,space=0
  5459                           	file	"C:\Users\hardik\Desktop\LM35 temp sensor
                                 \main.c"
  5460                           	line	3
  5461                           
  5462                           ;initializer for _i
  5463  0733  3430               	retlw	030h
  5464  0734  3400               	retlw	0
  5465                           
  5466                           ;initializer for _j
  5467  0735  3430               	retlw	030h
  5468  0736  3400               	retlw	0
  5469                           
  5470                           ;initializer for _k
  5471  0737  3430               	retlw	030h
  5472  0738  3400               	retlw	0
  5473                           	psect	strings,class=CODE,delta=2,reloc=256
  5474                           	global	stringdir,stringtab,__stringbase,string
                                 jmp
  5475  0700                     stringtab:
  5476  0700  00FE               	movwf	(btemp)&07Fh
  5477  0701  1FFE               	btfss	(btemp)&07Fh,7
  5478  0702  2F08               	goto	stringcode
  5479  0703  1383               	bcf	status,7
  5480  0704  187E               	btfsc	btemp&7Fh,0
  5481  0705  1783               	bsf	status,7
  5482  0706  0800               	movf	indf,w
  5483  0707  0008               	return
  5484  0708                     stringcode:
  5485  0708  0804               	movf	fsr,w
  5486  0709                     stringdir:
  5487  0709  00FE               movwf btemp&07Fh
  5488  070A  3007               movlw high(stringdir)
  5489  070B  008A               movwf pclath
  5490  070C  087E               movf btemp&07Fh,w
  5491  070D                     stringjmp:
  5492  070D  0782               	addwf pc
  5493  070E                     __stringbase:
  5494  070E  3400               	retlw	0
  5495                           	global	_ADCON0
  5496  0000                     	_ADCON0	set	0x1F
  5497                           
  5498                           	global	_ADCON1
  5499                           	global	_ADCON1
  5500  0000                     	_ADCON1	set	0x9F
  5501                           
  5502                           	global	_ADRESH
  5503  0000                     	_ADRESH	set	0x1E
  5504                           
  5505                           	global	_ADRESL
  5506  0000                     	_ADRESL	set	0x9E
  5507                           
  5508                           	global	_CCP1CON
  5509                           	global	_CCP1CON
  5510  0000                     	_CCP1CON	set	0x17
  5511                           
  5512                           	global	_CCP2CON
  5513                           	global	_CCP2CON
  5514  0000                     	_CCP2CON	set	0x1D
  5515                           
  5516                           	global	_CCPR1H
  5517                           	global	_CCPR1H
  5518  0000                     	_CCPR1H	set	0x16
  5519                           
  5520                           	global	_CCPR1L
  5521                           	global	_CCPR1L
  5522  0000                     	_CCPR1L	set	0x15
  5523                           
  5524                           	global	_CCPR2H
  5525                           	global	_CCPR2H
  5526  0000                     	_CCPR2H	set	0x1C
  5527                           
  5528                           	global	_CCPR2L
  5529                           	global	_CCPR2L
  5530  0000                     	_CCPR2L	set	0x1B
  5531                           
  5532                           	global	_CMCON
  5533                           	global	_CMCON
  5534  0000                     	_CMCON	set	0x9C
  5535                           
  5536                           	global	_CVRCON
  5537                           	global	_CVRCON
  5538  0000                     	_CVRCON	set	0x9D
  5539                           
  5540                           	global	_EEADR
  5541                           	global	_EEADR
  5542  0000                     	_EEADR	set	0x10D
  5543                           
  5544                           	global	_EEADRH
  5545                           	global	_EEADRH
  5546  0000                     	_EEADRH	set	0x10F
  5547                           
  5548                           	global	_EEADRL
  5549                           	global	_EEADRL
  5550  0000                     	_EEADRL	set	0x10D
  5551                           
  5552                           	global	_EECON1
  5553                           	global	_EECON1
  5554  0000                     	_EECON1	set	0x18C
  5555                           
  5556                           	global	_EECON2
  5557                           	global	_EECON2
  5558  0000                     	_EECON2	set	0x18D
  5559                           
  5560                           	global	_EEDATA
  5561                           	global	_EEDATA
  5562  0000                     	_EEDATA	set	0x10C
  5563                           
  5564                           	global	_EEDATH
  5565                           	global	_EEDATH
  5566  0000                     	_EEDATH	set	0x10E
  5567                           
  5568                           	global	_FSR
  5569                           	global	_FSR
  5570  0000                     	_FSR	set	0x4
  5571                           
  5572                           	global	_INDF
  5573                           	global	_INDF
  5574  0000                     	_INDF	set	0x0
  5575                           
  5576                           	global	_INTCON
  5577                           	global	_INTCON
  5578  0000                     	_INTCON	set	0xB
  5579                           
  5580                           	global	_OPTION
  5581                           	global	_OPTION
  5582  0000                     	_OPTION	set	0x81
  5583                           
  5584                           	global	_PCL
  5585                           	global	_PCL
  5586  0000                     	_PCL	set	0x2
  5587                           
  5588                           	global	_PCLATH
  5589                           	global	_PCLATH
  5590  0000                     	_PCLATH	set	0xA
  5591                           
  5592                           	global	_PCON
  5593                           	global	_PCON
  5594  0000                     	_PCON	set	0x8E
  5595                           
  5596                           	global	_PIE1
  5597                           	global	_PIE1
  5598  0000                     	_PIE1	set	0x8C
  5599                           
  5600                           	global	_PIE2
  5601                           	global	_PIE2
  5602  0000                     	_PIE2	set	0x8D
  5603                           
  5604                           	global	_PIR1
  5605                           	global	_PIR1
  5606  0000                     	_PIR1	set	0xC
  5607                           
  5608                           	global	_PIR2
  5609                           	global	_PIR2
  5610  0000                     	_PIR2	set	0xD
  5611                           
  5612                           	global	_PORTA
  5613                           	global	_PORTA
  5614  0000                     	_PORTA	set	0x5
  5615                           
  5616                           	global	_PORTB
  5617  0000                     	_PORTB	set	0x6
  5618                           
  5619                           	global	_PORTC
  5620                           	global	_PORTC
  5621  0000                     	_PORTC	set	0x7
  5622                           
  5623                           	global	_PORTD
  5624  0000                     	_PORTD	set	0x8
  5625                           
  5626                           	global	_PORTE
  5627                           	global	_PORTE
  5628  0000                     	_PORTE	set	0x9
  5629                           
  5630                           	global	_PR2
  5631                           	global	_PR2
  5632  0000                     	_PR2	set	0x92
  5633                           
  5634                           	global	_RCREG
  5635                           	global	_RCREG
  5636  0000                     	_RCREG	set	0x1A
  5637                           
  5638                           	global	_RCSTA
  5639                           	global	_RCSTA
  5640  0000                     	_RCSTA	set	0x18
  5641                           
  5642                           	global	_SPBRG
  5643                           	global	_SPBRG
  5644  0000                     	_SPBRG	set	0x99
  5645                           
  5646                           	global	_SSPADD
  5647                           	global	_SSPADD
  5648  0000                     	_SSPADD	set	0x93
  5649                           
  5650                           	global	_SSPBUF
  5651                           	global	_SSPBUF
  5652  0000                     	_SSPBUF	set	0x13
  5653                           
  5654                           	global	_SSPCON
  5655                           	global	_SSPCON
  5656  0000                     	_SSPCON	set	0x14
  5657                           
  5658                           	global	_SSPCON2
  5659                           	global	_SSPCON2
  5660  0000                     	_SSPCON2	set	0x91
  5661                           
  5662                           	global	_SSPSTAT
  5663                           	global	_SSPSTAT
  5664  0000                     	_SSPSTAT	set	0x94
  5665                           
  5666                           	global	_STATUS
  5667                           	global	_STATUS
  5668  0000                     	_STATUS	set	0x3
  5669                           
  5670                           	global	_T1CON
  5671                           	global	_T1CON
  5672  0000                     	_T1CON	set	0x10
  5673                           
  5674                           	global	_T2CON
  5675                           	global	_T2CON
  5676  0000                     	_T2CON	set	0x12
  5677                           
  5678                           	global	_TMR0
  5679                           	global	_TMR0
  5680  0000                     	_TMR0	set	0x1
  5681                           
  5682                           	global	_TMR1H
  5683                           	global	_TMR1H
  5684  0000                     	_TMR1H	set	0xF
  5685                           
  5686                           	global	_TMR1L
  5687                           	global	_TMR1L
  5688  0000                     	_TMR1L	set	0xE
  5689                           
  5690                           	global	_TMR2
  5691                           	global	_TMR2
  5692  0000                     	_TMR2	set	0x11
  5693                           
  5694                           	global	_TRISA
  5695                           	global	_TRISA
  5696  0000                     	_TRISA	set	0x85
  5697                           
  5698                           	global	_TRISB
  5699                           	global	_TRISB
  5700  0000                     	_TRISB	set	0x86
  5701                           
  5702                           	global	_TRISC
  5703  0000                     	_TRISC	set	0x87
  5704                           
  5705                           	global	_TRISD
  5706  0000                     	_TRISD	set	0x88
  5707                           
  5708                           	global	_TRISE
  5709                           	global	_TRISE
  5710  0000                     	_TRISE	set	0x89
  5711                           
  5712                           	global	_TXREG
  5713                           	global	_TXREG
  5714  0000                     	_TXREG	set	0x19
  5715                           
  5716                           	global	_TXSTA
  5717                           	global	_TXSTA
  5718  0000                     	_TXSTA	set	0x98
  5719                           
  5720                           	global	_ACKDT
  5721                           	global	_ACKDT
  5722  0000                     	_ACKDT	set	0x48D	;byte address: 0x91
  5723                           
  5724                           	global	_ACKEN
  5725                           	global	_ACKEN
  5726  0000                     	_ACKEN	set	0x48C	;byte address: 0x91
  5727                           
  5728                           	global	_ACKSTAT
  5729                           	global	_ACKSTAT
  5730  0000                     	_ACKSTAT	set	0x48E	;byte address: 0x91
  5731                           
  5732                           	global	_ADCS0
  5733  0000                     	_ADCS0	set	0xFE	;byte address: 0x1F
  5734                           
  5735                           	global	_ADCS1
  5736  0000                     	_ADCS1	set	0xFF	;byte address: 0x1F
  5737                           
  5738                           	global	_ADCS2
  5739  0000                     	_ADCS2	set	0x4FE	;byte address: 0x9F
  5740                           
  5741                           	global	_ADDEN
  5742                           	global	_ADDEN
  5743  0000                     	_ADDEN	set	0xC3	;byte address: 0x18
  5744                           
  5745                           	global	_ADFM
  5746  0000                     	_ADFM	set	0x4FF	;byte address: 0x9F
  5747                           
  5748                           	global	_ADGO
  5749                           	global	_ADGO
  5750  0000                     	_ADGO	set	0xFA	;byte address: 0x1F
  5751                           
  5752                           	global	_ADIE
  5753                           	global	_ADIE
  5754  0000                     	_ADIE	set	0x466	;byte address: 0x8C
  5755                           
  5756                           	global	_ADIF
  5757                           	global	_ADIF
  5758  0000                     	_ADIF	set	0x66	;byte address: 0xC
  5759                           
  5760                           	global	_ADON
  5761  0000                     	_ADON	set	0xF8	;byte address: 0x1F
  5762                           
  5763                           	global	_BCLIE
  5764                           	global	_BCLIE
  5765  0000                     	_BCLIE	set	0x46B	;byte address: 0x8D
  5766                           
  5767                           	global	_BCLIF
  5768                           	global	_BCLIF
  5769  0000                     	_BCLIF	set	0x6B	;byte address: 0xD
  5770                           
  5771                           	global	_BF
  5772                           	global	_BF
  5773  0000                     	_BF	set	0x4A0	;byte address: 0x94
  5774                           
  5775                           	global	_BOR
  5776                           	global	_BOR
  5777  0000                     	_BOR	set	0x470	;byte address: 0x8E
  5778                           
  5779                           	global	_BRGH
  5780                           	global	_BRGH
  5781  0000                     	_BRGH	set	0x4C2	;byte address: 0x98
  5782                           
  5783                           	global	_C1INV
  5784                           	global	_C1INV
  5785  0000                     	_C1INV	set	0x4E4	;byte address: 0x9C
  5786                           
  5787                           	global	_C1OUT
  5788                           	global	_C1OUT
  5789  0000                     	_C1OUT	set	0x4E6	;byte address: 0x9C
  5790                           
  5791                           	global	_C2INV
  5792                           	global	_C2INV
  5793  0000                     	_C2INV	set	0x4E5	;byte address: 0x9C
  5794                           
  5795                           	global	_C2OUT
  5796                           	global	_C2OUT
  5797  0000                     	_C2OUT	set	0x4E7	;byte address: 0x9C
  5798                           
  5799                           	global	_CARRY
  5800                           	global	_CARRY
  5801  0000                     	_CARRY	set	0x18	;byte address: 0x3
  5802                           
  5803                           	global	_CCP1IE
  5804                           	global	_CCP1IE
  5805  0000                     	_CCP1IE	set	0x462	;byte address: 0x8C
  5806                           
  5807                           	global	_CCP1IF
  5808                           	global	_CCP1IF
  5809  0000                     	_CCP1IF	set	0x62	;byte address: 0xC
  5810                           
  5811                           	global	_CCP1M0
  5812                           	global	_CCP1M0
  5813  0000                     	_CCP1M0	set	0xB8	;byte address: 0x17
  5814                           
  5815                           	global	_CCP1M1
  5816                           	global	_CCP1M1
  5817  0000                     	_CCP1M1	set	0xB9	;byte address: 0x17
  5818                           
  5819                           	global	_CCP1M2
  5820                           	global	_CCP1M2
  5821  0000                     	_CCP1M2	set	0xBA	;byte address: 0x17
  5822                           
  5823                           	global	_CCP1M3
  5824                           	global	_CCP1M3
  5825  0000                     	_CCP1M3	set	0xBB	;byte address: 0x17
  5826                           
  5827                           	global	_CCP1X
  5828                           	global	_CCP1X
  5829  0000                     	_CCP1X	set	0xBD	;byte address: 0x17
  5830                           
  5831                           	global	_CCP1Y
  5832                           	global	_CCP1Y
  5833  0000                     	_CCP1Y	set	0xBC	;byte address: 0x17
  5834                           
  5835                           	global	_CCP2IE
  5836                           	global	_CCP2IE
  5837  0000                     	_CCP2IE	set	0x468	;byte address: 0x8D
  5838                           
  5839                           	global	_CCP2IF
  5840                           	global	_CCP2IF
  5841  0000                     	_CCP2IF	set	0x68	;byte address: 0xD
  5842                           
  5843                           	global	_CCP2M0
  5844                           	global	_CCP2M0
  5845  0000                     	_CCP2M0	set	0xE8	;byte address: 0x1D
  5846                           
  5847                           	global	_CCP2M1
  5848                           	global	_CCP2M1
  5849  0000                     	_CCP2M1	set	0xE9	;byte address: 0x1D
  5850                           
  5851                           	global	_CCP2M2
  5852                           	global	_CCP2M2
  5853  0000                     	_CCP2M2	set	0xEA	;byte address: 0x1D
  5854                           
  5855                           	global	_CCP2M3
  5856                           	global	_CCP2M3
  5857  0000                     	_CCP2M3	set	0xEB	;byte address: 0x1D
  5858                           
  5859                           	global	_CCP2X
  5860                           	global	_CCP2X
  5861  0000                     	_CCP2X	set	0xED	;byte address: 0x1D
  5862                           
  5863                           	global	_CCP2Y
  5864                           	global	_CCP2Y
  5865  0000                     	_CCP2Y	set	0xEC	;byte address: 0x1D
  5866                           
  5867                           	global	_CHS0
  5868                           	global	_CHS0
  5869  0000                     	_CHS0	set	0xFB	;byte address: 0x1F
  5870                           
  5871                           	global	_CHS1
  5872                           	global	_CHS1
  5873  0000                     	_CHS1	set	0xFC	;byte address: 0x1F
  5874                           
  5875                           	global	_CHS2
  5876                           	global	_CHS2
  5877  0000                     	_CHS2	set	0xFD	;byte address: 0x1F
  5878                           
  5879                           	global	_CIS
  5880                           	global	_CIS
  5881  0000                     	_CIS	set	0x4E3	;byte address: 0x9C
  5882                           
  5883                           	global	_CKE
  5884                           	global	_CKE
  5885  0000                     	_CKE	set	0x4A6	;byte address: 0x94
  5886                           
  5887                           	global	_CKP
  5888                           	global	_CKP
  5889  0000                     	_CKP	set	0xA4	;byte address: 0x14
  5890                           
  5891                           	global	_CM0
  5892                           	global	_CM0
  5893  0000                     	_CM0	set	0x4E0	;byte address: 0x9C
  5894                           
  5895                           	global	_CM1
  5896                           	global	_CM1
  5897  0000                     	_CM1	set	0x4E1	;byte address: 0x9C
  5898                           
  5899                           	global	_CM2
  5900                           	global	_CM2
  5901  0000                     	_CM2	set	0x4E2	;byte address: 0x9C
  5902                           
  5903                           	global	_CMIE
  5904                           	global	_CMIE
  5905  0000                     	_CMIE	set	0x46E	;byte address: 0x8D
  5906                           
  5907                           	global	_CMIF
  5908                           	global	_CMIF
  5909  0000                     	_CMIF	set	0x6E	;byte address: 0xD
  5910                           
  5911                           	global	_CREN
  5912                           	global	_CREN
  5913  0000                     	_CREN	set	0xC4	;byte address: 0x18
  5914                           
  5915                           	global	_CSRC
  5916                           	global	_CSRC
  5917  0000                     	_CSRC	set	0x4C7	;byte address: 0x98
  5918                           
  5919                           	global	_CVR0
  5920                           	global	_CVR0
  5921  0000                     	_CVR0	set	0x4E8	;byte address: 0x9D
  5922                           
  5923                           	global	_CVR1
  5924                           	global	_CVR1
  5925  0000                     	_CVR1	set	0x4E9	;byte address: 0x9D
  5926                           
  5927                           	global	_CVR2
  5928                           	global	_CVR2
  5929  0000                     	_CVR2	set	0x4EA	;byte address: 0x9D
  5930                           
  5931                           	global	_CVR3
  5932                           	global	_CVR3
  5933  0000                     	_CVR3	set	0x4EB	;byte address: 0x9D
  5934                           
  5935                           	global	_CVREN
  5936                           	global	_CVREN
  5937  0000                     	_CVREN	set	0x4EF	;byte address: 0x9D
  5938                           
  5939                           	global	_CVROE
  5940                           	global	_CVROE
  5941  0000                     	_CVROE	set	0x4EE	;byte address: 0x9D
  5942                           
  5943                           	global	_CVRR
  5944                           	global	_CVRR
  5945  0000                     	_CVRR	set	0x4ED	;byte address: 0x9D
  5946                           
  5947                           	global	_DA
  5948                           	global	_DA
  5949  0000                     	_DA	set	0x4A5	;byte address: 0x94
  5950                           
  5951                           	global	_DC
  5952                           	global	_DC
  5953  0000                     	_DC	set	0x19	;byte address: 0x3
  5954                           
  5955                           	global	_EEIE
  5956                           	global	_EEIE
  5957  0000                     	_EEIE	set	0x46C	;byte address: 0x8D
  5958                           
  5959                           	global	_EEIF
  5960                           	global	_EEIF
  5961  0000                     	_EEIF	set	0x6C	;byte address: 0xD
  5962                           
  5963                           	global	_EEPGD
  5964                           	global	_EEPGD
  5965  0000                     	_EEPGD	set	0xC67	;byte address: 0x18C
  5966                           
  5967                           	global	_FERR
  5968                           	global	_FERR
  5969  0000                     	_FERR	set	0xC2	;byte address: 0x18
  5970                           
  5971                           	global	_GCEN
  5972                           	global	_GCEN
  5973  0000                     	_GCEN	set	0x48F	;byte address: 0x91
  5974                           
  5975                           	global	_GIE
  5976                           	global	_GIE
  5977  0000                     	_GIE	set	0x5F	;byte address: 0xB
  5978                           
  5979                           	global	_GODONE
  5980                           	global	_GODONE
  5981  0000                     	_GODONE	set	0xFA	;byte address: 0x1F
  5982                           
  5983                           	global	_IBF
  5984                           	global	_IBF
  5985  0000                     	_IBF	set	0x44F	;byte address: 0x89
  5986                           
  5987                           	global	_IBOV
  5988                           	global	_IBOV
  5989  0000                     	_IBOV	set	0x44D	;byte address: 0x89
  5990                           
  5991                           	global	_INTE
  5992                           	global	_INTE
  5993  0000                     	_INTE	set	0x5C	;byte address: 0xB
  5994                           
  5995                           	global	_INTEDG
  5996                           	global	_INTEDG
  5997  0000                     	_INTEDG	set	0x40E	;byte address: 0x81
  5998                           
  5999                           	global	_INTF
  6000                           	global	_INTF
  6001  0000                     	_INTF	set	0x59	;byte address: 0xB
  6002                           
  6003                           	global	_IRP
  6004                           	global	_IRP
  6005  0000                     	_IRP	set	0x1F	;byte address: 0x3
  6006                           
  6007                           	global	_OBF
  6008                           	global	_OBF
  6009  0000                     	_OBF	set	0x44E	;byte address: 0x89
  6010                           
  6011                           	global	_OERR
  6012                           	global	_OERR
  6013  0000                     	_OERR	set	0xC1	;byte address: 0x18
  6014                           
  6015                           	global	_PCFG0
  6016  0000                     	_PCFG0	set	0x4F8	;byte address: 0x9F
  6017                           
  6018                           	global	_PCFG1
  6019  0000                     	_PCFG1	set	0x4F9	;byte address: 0x9F
  6020                           
  6021                           	global	_PCFG2
  6022  0000                     	_PCFG2	set	0x4FA	;byte address: 0x9F
  6023                           
  6024                           	global	_PCFG3
  6025  0000                     	_PCFG3	set	0x4FB	;byte address: 0x9F
  6026                           
  6027                           	global	_PD
  6028                           	global	_PD
  6029  0000                     	_PD	set	0x1B	;byte address: 0x3
  6030                           
  6031                           	global	_PEIE
  6032                           	global	_PEIE
  6033  0000                     	_PEIE	set	0x5E	;byte address: 0xB
  6034                           
  6035                           	global	_PEN
  6036                           	global	_PEN
  6037  0000                     	_PEN	set	0x48A	;byte address: 0x91
  6038                           
  6039                           	global	_POR
  6040                           	global	_POR
  6041  0000                     	_POR	set	0x471	;byte address: 0x8E
  6042                           
  6043                           	global	_PS0
  6044                           	global	_PS0
  6045  0000                     	_PS0	set	0x408	;byte address: 0x81
  6046                           
  6047                           	global	_PS1
  6048                           	global	_PS1
  6049  0000                     	_PS1	set	0x409	;byte address: 0x81
  6050                           
  6051                           	global	_PS2
  6052                           	global	_PS2
  6053  0000                     	_PS2	set	0x40A	;byte address: 0x81
  6054                           
  6055                           	global	_PSA
  6056                           	global	_PSA
  6057  0000                     	_PSA	set	0x40B	;byte address: 0x81
  6058                           
  6059                           	global	_PSPIE
  6060                           	global	_PSPIE
  6061  0000                     	_PSPIE	set	0x467	;byte address: 0x8C
  6062                           
  6063                           	global	_PSPIF
  6064                           	global	_PSPIF
  6065  0000                     	_PSPIF	set	0x67	;byte address: 0xC
  6066                           
  6067                           	global	_PSPMODE
  6068                           	global	_PSPMODE
  6069  0000                     	_PSPMODE	set	0x44C	;byte address: 0x89
  6070                           
  6071                           	global	_RA0
  6072                           	global	_RA0
  6073  0000                     	_RA0	set	0x28	;byte address: 0x5
  6074                           
  6075                           	global	_RA1
  6076                           	global	_RA1
  6077  0000                     	_RA1	set	0x29	;byte address: 0x5
  6078                           
  6079                           	global	_RA2
  6080                           	global	_RA2
  6081  0000                     	_RA2	set	0x2A	;byte address: 0x5
  6082                           
  6083                           	global	_RA3
  6084                           	global	_RA3
  6085  0000                     	_RA3	set	0x2B	;byte address: 0x5
  6086                           
  6087                           	global	_RA4
  6088                           	global	_RA4
  6089  0000                     	_RA4	set	0x2C	;byte address: 0x5
  6090                           
  6091                           	global	_RA5
  6092                           	global	_RA5
  6093  0000                     	_RA5	set	0x2D	;byte address: 0x5
  6094                           
  6095                           	global	_RB0
  6096                           	global	_RB0
  6097  0000                     	_RB0	set	0x30	;byte address: 0x6
  6098                           
  6099                           	global	_RB1
  6100                           	global	_RB1
  6101  0000                     	_RB1	set	0x31	;byte address: 0x6
  6102                           
  6103                           	global	_RB2
  6104                           	global	_RB2
  6105  0000                     	_RB2	set	0x32	;byte address: 0x6
  6106                           
  6107                           	global	_RB3
  6108                           	global	_RB3
  6109  0000                     	_RB3	set	0x33	;byte address: 0x6
  6110                           
  6111                           	global	_RB4
  6112                           	global	_RB4
  6113  0000                     	_RB4	set	0x34	;byte address: 0x6
  6114                           
  6115                           	global	_RB5
  6116                           	global	_RB5
  6117  0000                     	_RB5	set	0x35	;byte address: 0x6
  6118                           
  6119                           	global	_RB6
  6120                           	global	_RB6
  6121  0000                     	_RB6	set	0x36	;byte address: 0x6
  6122                           
  6123                           	global	_RB7
  6124                           	global	_RB7
  6125  0000                     	_RB7	set	0x37	;byte address: 0x6
  6126                           
  6127                           	global	_RBIE
  6128                           	global	_RBIE
  6129  0000                     	_RBIE	set	0x5B	;byte address: 0xB
  6130                           
  6131                           	global	_RBIF
  6132                           	global	_RBIF
  6133  0000                     	_RBIF	set	0x58	;byte address: 0xB
  6134                           
  6135                           	global	_RBPU
  6136                           	global	_RBPU
  6137  0000                     	_RBPU	set	0x40F	;byte address: 0x81
  6138                           
  6139                           	global	_RC0
  6140                           	global	_RC0
  6141  0000                     	_RC0	set	0x38	;byte address: 0x7
  6142                           
  6143                           	global	_RC1
  6144                           	global	_RC1
  6145  0000                     	_RC1	set	0x39	;byte address: 0x7
  6146                           
  6147                           	global	_RC2
  6148                           	global	_RC2
  6149  0000                     	_RC2	set	0x3A	;byte address: 0x7
  6150                           
  6151                           	global	_RC3
  6152                           	global	_RC3
  6153  0000                     	_RC3	set	0x3B	;byte address: 0x7
  6154                           
  6155                           	global	_RC4
  6156                           	global	_RC4
  6157  0000                     	_RC4	set	0x3C	;byte address: 0x7
  6158                           
  6159                           	global	_RC5
  6160                           	global	_RC5
  6161  0000                     	_RC5	set	0x3D	;byte address: 0x7
  6162                           
  6163                           	global	_RC6
  6164                           	global	_RC6
  6165  0000                     	_RC6	set	0x3E	;byte address: 0x7
  6166                           
  6167                           	global	_RC7
  6168                           	global	_RC7
  6169  0000                     	_RC7	set	0x3F	;byte address: 0x7
  6170                           
  6171                           	global	_RCEN
  6172                           	global	_RCEN
  6173  0000                     	_RCEN	set	0x48B	;byte address: 0x91
  6174                           
  6175                           	global	_RCIE
  6176                           	global	_RCIE
  6177  0000                     	_RCIE	set	0x465	;byte address: 0x8C
  6178                           
  6179                           	global	_RCIF
  6180                           	global	_RCIF
  6181  0000                     	_RCIF	set	0x65	;byte address: 0xC
  6182                           
  6183                           	global	_RD
  6184                           	global	_RD
  6185  0000                     	_RD	set	0xC60	;byte address: 0x18C
  6186                           
  6187                           	global	_RD0
  6188                           	global	_RD0
  6189  0000                     	_RD0	set	0x40	;byte address: 0x8
  6190                           
  6191                           	global	_RD1
  6192                           	global	_RD1
  6193  0000                     	_RD1	set	0x41	;byte address: 0x8
  6194                           
  6195                           	global	_RD2
  6196  0000                     	_RD2	set	0x42	;byte address: 0x8
  6197                           
  6198                           	global	_RD3
  6199  0000                     	_RD3	set	0x43	;byte address: 0x8
  6200                           
  6201                           	global	_RD4
  6202                           	global	_RD4
  6203  0000                     	_RD4	set	0x44	;byte address: 0x8
  6204                           
  6205                           	global	_RD5
  6206                           	global	_RD5
  6207  0000                     	_RD5	set	0x45	;byte address: 0x8
  6208                           
  6209                           	global	_RD6
  6210                           	global	_RD6
  6211  0000                     	_RD6	set	0x46	;byte address: 0x8
  6212                           
  6213                           	global	_RD7
  6214                           	global	_RD7
  6215  0000                     	_RD7	set	0x47	;byte address: 0x8
  6216                           
  6217                           	global	_RE0
  6218                           	global	_RE0
  6219  0000                     	_RE0	set	0x48	;byte address: 0x9
  6220                           
  6221                           	global	_RE1
  6222                           	global	_RE1
  6223  0000                     	_RE1	set	0x49	;byte address: 0x9
  6224                           
  6225                           	global	_RE2
  6226                           	global	_RE2
  6227  0000                     	_RE2	set	0x4A	;byte address: 0x9
  6228                           
  6229                           	global	_RP0
  6230                           	global	_RP0
  6231  0000                     	_RP0	set	0x1D	;byte address: 0x3
  6232                           
  6233                           	global	_RP1
  6234                           	global	_RP1
  6235  0000                     	_RP1	set	0x1E	;byte address: 0x3
  6236                           
  6237                           	global	_RSEN
  6238                           	global	_RSEN
  6239  0000                     	_RSEN	set	0x489	;byte address: 0x91
  6240                           
  6241                           	global	_RW
  6242                           	global	_RW
  6243  0000                     	_RW	set	0x4A2	;byte address: 0x94
  6244                           
  6245                           	global	_RX9
  6246                           	global	_RX9
  6247  0000                     	_RX9	set	0xC6	;byte address: 0x18
  6248                           
  6249                           	global	_RX9D
  6250                           	global	_RX9D
  6251  0000                     	_RX9D	set	0xC0	;byte address: 0x18
  6252                           
  6253                           	global	_SEN
  6254                           	global	_SEN
  6255  0000                     	_SEN	set	0x488	;byte address: 0x91
  6256                           
  6257                           	global	_SMP
  6258                           	global	_SMP
  6259  0000                     	_SMP	set	0x4A7	;byte address: 0x94
  6260                           
  6261                           	global	_SPEN
  6262                           	global	_SPEN
  6263  0000                     	_SPEN	set	0xC7	;byte address: 0x18
  6264                           
  6265                           	global	_SREN
  6266                           	global	_SREN
  6267  0000                     	_SREN	set	0xC5	;byte address: 0x18
  6268                           
  6269                           	global	_SSPEN
  6270                           	global	_SSPEN
  6271  0000                     	_SSPEN	set	0xA5	;byte address: 0x14
  6272                           
  6273                           	global	_SSPIE
  6274                           	global	_SSPIE
  6275  0000                     	_SSPIE	set	0x463	;byte address: 0x8C
  6276                           
  6277                           	global	_SSPIF
  6278                           	global	_SSPIF
  6279  0000                     	_SSPIF	set	0x63	;byte address: 0xC
  6280                           
  6281                           	global	_SSPM0
  6282                           	global	_SSPM0
  6283  0000                     	_SSPM0	set	0xA0	;byte address: 0x14
  6284                           
  6285                           	global	_SSPM1
  6286                           	global	_SSPM1
  6287  0000                     	_SSPM1	set	0xA1	;byte address: 0x14
  6288                           
  6289                           	global	_SSPM2
  6290                           	global	_SSPM2
  6291  0000                     	_SSPM2	set	0xA2	;byte address: 0x14
  6292                           
  6293                           	global	_SSPM3
  6294                           	global	_SSPM3
  6295  0000                     	_SSPM3	set	0xA3	;byte address: 0x14
  6296                           
  6297                           	global	_SSPOV
  6298                           	global	_SSPOV
  6299  0000                     	_SSPOV	set	0xA6	;byte address: 0x14
  6300                           
  6301                           	global	_START
  6302                           	global	_START
  6303  0000                     	_START	set	0x4A3	;byte address: 0x94
  6304                           
  6305                           	global	_STOP
  6306                           	global	_STOP
  6307  0000                     	_STOP	set	0x4A4	;byte address: 0x94
  6308                           
  6309                           	global	_SYNC
  6310                           	global	_SYNC
  6311  0000                     	_SYNC	set	0x4C4	;byte address: 0x98
  6312                           
  6313                           	global	_T0CS
  6314                           	global	_T0CS
  6315  0000                     	_T0CS	set	0x40D	;byte address: 0x81
  6316                           
  6317                           	global	_T0IE
  6318                           	global	_T0IE
  6319  0000                     	_T0IE	set	0x5D	;byte address: 0xB
  6320                           
  6321                           	global	_T0IF
  6322                           	global	_T0IF
  6323  0000                     	_T0IF	set	0x5A	;byte address: 0xB
  6324                           
  6325                           	global	_T0SE
  6326                           	global	_T0SE
  6327  0000                     	_T0SE	set	0x40C	;byte address: 0x81
  6328                           
  6329                           	global	_T1CKPS0
  6330                           	global	_T1CKPS0
  6331  0000                     	_T1CKPS0	set	0x84	;byte address: 0x10
  6332                           
  6333                           	global	_T1CKPS1
  6334                           	global	_T1CKPS1
  6335  0000                     	_T1CKPS1	set	0x85	;byte address: 0x10
  6336                           
  6337                           	global	_T1OSCEN
  6338                           	global	_T1OSCEN
  6339  0000                     	_T1OSCEN	set	0x83	;byte address: 0x10
  6340                           
  6341                           	global	_T1SYNC
  6342                           	global	_T1SYNC
  6343  0000                     	_T1SYNC	set	0x82	;byte address: 0x10
  6344                           
  6345                           	global	_T2CKPS0
  6346                           	global	_T2CKPS0
  6347  0000                     	_T2CKPS0	set	0x90	;byte address: 0x12
  6348                           
  6349                           	global	_T2CKPS1
  6350                           	global	_T2CKPS1
  6351  0000                     	_T2CKPS1	set	0x91	;byte address: 0x12
  6352                           
  6353                           	global	_TMR0IE
  6354                           	global	_TMR0IE
  6355  0000                     	_TMR0IE	set	0x5D	;byte address: 0xB
  6356                           
  6357                           	global	_TMR0IF
  6358                           	global	_TMR0IF
  6359  0000                     	_TMR0IF	set	0x5A	;byte address: 0xB
  6360                           
  6361                           	global	_TMR1CS
  6362                           	global	_TMR1CS
  6363  0000                     	_TMR1CS	set	0x81	;byte address: 0x10
  6364                           
  6365                           	global	_TMR1IE
  6366                           	global	_TMR1IE
  6367  0000                     	_TMR1IE	set	0x460	;byte address: 0x8C
  6368                           
  6369                           	global	_TMR1IF
  6370                           	global	_TMR1IF
  6371  0000                     	_TMR1IF	set	0x60	;byte address: 0xC
  6372                           
  6373                           	global	_TMR1ON
  6374                           	global	_TMR1ON
  6375  0000                     	_TMR1ON	set	0x80	;byte address: 0x10
  6376                           
  6377                           	global	_TMR2IE
  6378                           	global	_TMR2IE
  6379  0000                     	_TMR2IE	set	0x461	;byte address: 0x8C
  6380                           
  6381                           	global	_TMR2IF
  6382                           	global	_TMR2IF
  6383  0000                     	_TMR2IF	set	0x61	;byte address: 0xC
  6384                           
  6385                           	global	_TMR2ON
  6386                           	global	_TMR2ON
  6387  0000                     	_TMR2ON	set	0x92	;byte address: 0x12
  6388                           
  6389                           	global	_TO
  6390                           	global	_TO
  6391  0000                     	_TO	set	0x1C	;byte address: 0x3
  6392                           
  6393                           	global	_TOUTPS0
  6394                           	global	_TOUTPS0
  6395  0000                     	_TOUTPS0	set	0x93	;byte address: 0x12
  6396                           
  6397                           	global	_TOUTPS1
  6398                           	global	_TOUTPS1
  6399  0000                     	_TOUTPS1	set	0x94	;byte address: 0x12
  6400                           
  6401                           	global	_TOUTPS2
  6402                           	global	_TOUTPS2
  6403  0000                     	_TOUTPS2	set	0x95	;byte address: 0x12
  6404                           
  6405                           	global	_TOUTPS3
  6406                           	global	_TOUTPS3
  6407  0000                     	_TOUTPS3	set	0x96	;byte address: 0x12
  6408                           
  6409                           	global	_TRISA0
  6410                           	global	_TRISA0
  6411  0000                     	_TRISA0	set	0x428	;byte address: 0x85
  6412                           
  6413                           	global	_TRISA1
  6414                           	global	_TRISA1
  6415  0000                     	_TRISA1	set	0x429	;byte address: 0x85
  6416                           
  6417                           	global	_TRISA2
  6418                           	global	_TRISA2
  6419  0000                     	_TRISA2	set	0x42A	;byte address: 0x85
  6420                           
  6421                           	global	_TRISA3
  6422                           	global	_TRISA3
  6423  0000                     	_TRISA3	set	0x42B	;byte address: 0x85
  6424                           
  6425                           	global	_TRISA4
  6426                           	global	_TRISA4
  6427  0000                     	_TRISA4	set	0x42C	;byte address: 0x85
  6428                           
  6429                           	global	_TRISA5
  6430                           	global	_TRISA5
  6431  0000                     	_TRISA5	set	0x42D	;byte address: 0x85
  6432                           
  6433                           	global	_TRISB0
  6434                           	global	_TRISB0
  6435  0000                     	_TRISB0	set	0x430	;byte address: 0x86
  6436                           
  6437                           	global	_TRISB1
  6438                           	global	_TRISB1
  6439  0000                     	_TRISB1	set	0x431	;byte address: 0x86
  6440                           
  6441                           	global	_TRISB2
  6442                           	global	_TRISB2
  6443  0000                     	_TRISB2	set	0x432	;byte address: 0x86
  6444                           
  6445                           	global	_TRISB3
  6446                           	global	_TRISB3
  6447  0000                     	_TRISB3	set	0x433	;byte address: 0x86
  6448                           
  6449                           	global	_TRISB4
  6450                           	global	_TRISB4
  6451  0000                     	_TRISB4	set	0x434	;byte address: 0x86
  6452                           
  6453                           	global	_TRISB5
  6454                           	global	_TRISB5
  6455  0000                     	_TRISB5	set	0x435	;byte address: 0x86
  6456                           
  6457                           	global	_TRISB6
  6458                           	global	_TRISB6
  6459  0000                     	_TRISB6	set	0x436	;byte address: 0x86
  6460                           
  6461                           	global	_TRISB7
  6462                           	global	_TRISB7
  6463  0000                     	_TRISB7	set	0x437	;byte address: 0x86
  6464                           
  6465                           	global	_TRISC0
  6466                           	global	_TRISC0
  6467  0000                     	_TRISC0	set	0x438	;byte address: 0x87
  6468                           
  6469                           	global	_TRISC1
  6470                           	global	_TRISC1
  6471  0000                     	_TRISC1	set	0x439	;byte address: 0x87
  6472                           
  6473                           	global	_TRISC2
  6474                           	global	_TRISC2
  6475  0000                     	_TRISC2	set	0x43A	;byte address: 0x87
  6476                           
  6477                           	global	_TRISC3
  6478                           	global	_TRISC3
  6479  0000                     	_TRISC3	set	0x43B	;byte address: 0x87
  6480                           
  6481                           	global	_TRISC4
  6482                           	global	_TRISC4
  6483  0000                     	_TRISC4	set	0x43C	;byte address: 0x87
  6484                           
  6485                           	global	_TRISC5
  6486                           	global	_TRISC5
  6487  0000                     	_TRISC5	set	0x43D	;byte address: 0x87
  6488                           
  6489                           	global	_TRISC6
  6490                           	global	_TRISC6
  6491  0000                     	_TRISC6	set	0x43E	;byte address: 0x87
  6492                           
  6493                           	global	_TRISC7
  6494                           	global	_TRISC7
  6495  0000                     	_TRISC7	set	0x43F	;byte address: 0x87
  6496                           
  6497                           	global	_TRISD0
  6498                           	global	_TRISD0
  6499  0000                     	_TRISD0	set	0x440	;byte address: 0x88
  6500                           
  6501                           	global	_TRISD1
  6502                           	global	_TRISD1
  6503  0000                     	_TRISD1	set	0x441	;byte address: 0x88
  6504                           
  6505                           	global	_TRISD2
  6506                           	global	_TRISD2
  6507  0000                     	_TRISD2	set	0x442	;byte address: 0x88
  6508                           
  6509                           	global	_TRISD3
  6510                           	global	_TRISD3
  6511  0000                     	_TRISD3	set	0x443	;byte address: 0x88
  6512                           
  6513                           	global	_TRISD4
  6514                           	global	_TRISD4
  6515  0000                     	_TRISD4	set	0x444	;byte address: 0x88
  6516                           
  6517                           	global	_TRISD5
  6518                           	global	_TRISD5
  6519  0000                     	_TRISD5	set	0x445	;byte address: 0x88
  6520                           
  6521                           	global	_TRISD6
  6522                           	global	_TRISD6
  6523  0000                     	_TRISD6	set	0x446	;byte address: 0x88
  6524                           
  6525                           	global	_TRISD7
  6526                           	global	_TRISD7
  6527  0000                     	_TRISD7	set	0x447	;byte address: 0x88
  6528+                          
  6529+                          	global	_TRISE0
  6530+                          	global	_TRISE0
  6531+ 0000                     	_TRISE0	set	0x448	;byte address: 0x89
  6532+                          
  6533+                          	global	_TRISE1
  6534+                          	global	_TRISE1
  6535+ 0000                     	_TRISE1	set	0x449	;byte address: 0x89
  6536+                          
  6537+                          	global	_TRISE2
  6538+                          	global	_TRISE2
  6539+ 0000                     	_TRISE2	set	0x44A	;byte address: 0x89
  6540+                          
  6541+                          	global	_TRMT
  6542+                          	global	_TRMT
  6543+ 0000                     	_TRMT	set	0x4C1	;byte address: 0x98
  6544+                          
  6545+                          	global	_TX9
  6546+                          	global	_TX9
  6547+ 0000                     	_TX9	set	0x4C6	;byte address: 0x98
  6548+                          
  6549+                          	global	_TX9D
  6550+                          	global	_TX9D
  6551+ 0000                     	_TX9D	set	0x4C0	;byte address: 0x98
  6552+                          
  6553+                          	global	_TXEN
  6554+                          	global	_TXEN
  6555+ 0000                     	_TXEN	set	0x4C5	;byte address: 0x98
  6556+                          
  6557+                          	global	_TXIE
  6558+                          	global	_TXIE
  6559+ 0000                     	_TXIE	set	0x464	;byte address: 0x8C
  6560+                          
  6561+                          	global	_TXIF
  6562+                          	global	_TXIF
  6563+ 0000                     	_TXIF	set	0x64	;byte address: 0xC
  6564+                          
  6565+                          	global	_UA
  6566+                          	global	_UA
  6567+ 0000                     	_UA	set	0x4A1	;byte address: 0x94
  6568+                          
  6569+                          	global	_WCOL
  6570+                          	global	_WCOL
  6571+ 0000                     	_WCOL	set	0xA7	;byte address: 0x14
  6572+                          
  6573+                          	global	_WR
  6574+                          	global	_WR
  6575+ 0000                     	_WR	set	0xC61	;byte address: 0x18C
  6576+                          
  6577+                          	global	_WREN
  6578+                          	global	_WREN
  6579+ 0000                     	_WREN	set	0xC62	;byte address: 0x18C
  6580+                          
  6581+                          	global	_WRERR
  6582+                          	global	_WRERR
  6583+ 0000                     	_WRERR	set	0xC63	;byte address: 0x18C
  6584+                          
  6585+                          	global	_ZERO
  6586+                          	global	_ZERO
  6587+ 0000                     	_ZERO	set	0x1A	;byte address: 0x3
  6588+                          
  6589+                          	
  6590+ 070F                     STR_1:	
  6591+ 070F  3449               	retlw	73	;'I'
  6592+ 0710  344E               	retlw	78	;'N'
  6593+ 0711  3449               	retlw	73	;'I'
  6594+ 0712  3454               	retlw	84	;'T'
  6595+ 0713  3449               	retlw	73	;'I'
  6596+ 0714  3441               	retlw	65	;'A'
  6597+ 0715  344C               	retlw	76	;'L'
  6598+ 0716  3449               	retlw	73	;'I'
  6599+ 0717  345A               	retlw	90	;'Z'
  6600+ 0718  3449               	retlw	73	;'I'
  6601+ 0719  344E               	retlw	78	;'N'
  6602+ 071A  3447               	retlw	71	;'G'
  6603+ 071B  342E               	retlw	46	;'.'
  6604+ 071C  342E               	retlw	46	;'.'
  6605+ 071D  342E               	retlw	46	;'.'
  6606+ 071E  342E               	retlw	46	;'.'
  6607+ 071F  3400               	retlw	0
  6608+                          	
  6609+ 0720                     STR_4:	
  6610+ 0720  3454               	retlw	84	;'T'
  6611+ 0721  3465               	retlw	101	;'e'
  6612+ 0722  346D               	retlw	109	;'m'
  6613+ 0723  3470               	retlw	112	;'p'
  6614+ 0724  3465               	retlw	101	;'e'
  6615+ 0725  3472               	retlw	114	;'r'
  6616+ 0726  3461               	retlw	97	;'a'
  6617+ 0727  3474               	retlw	116	;'t'
  6618+ 0728  3475               	retlw	117	;'u'
  6619+ 0729  3472               	retlw	114	;'r'
  6620+ 072A  3465               	retlw	101	;'e'
  6621+ 072B  3420               	retlw	32	;' '
  6622+ 072C  3469               	retlw	105	;'i'
  6623+ 072D  3473               	retlw	115	;'s'
  6624+ 072E  343A               	retlw	58	;':'
  6625+ 072F  3400               	retlw	0
  6626+                          	
  6627+ 0730                     STR_2:	
  6628+ 0730  3420               	retlw	32	;' '
  6629+ 0731  3420               	retlw	32	;' '
  6630+ 0732  3400               	retlw	0
  6631+ 0000                     STR_3	equ	STR_2+1
  6632+                          	PSECT	fnauto0,class=BANK0,space=1
  6633+                          	FNCONF	fnauto0,??,?
  6634+                          
  6635+                          	DABS	1,126,2	;btemp
  6636+                          	global	btemp
  6637+ 0000                     	btemp set 07Eh
  6638+                          	global	wtemp0
  6639+ 0000                     	wtemp0 set btemp
  6640+                          	global	wtemp1
  6641+ 0000                     	wtemp1 set btemp+2
  6642+                          	global	ttemp0
  6643+ 0000                     	ttemp0 set btemp
  6644+                          	global	ltemp0
  6645+ 0000                     	ltemp0 set btemp
  6646+                          apbank macro
  6647+                          	bcf	status,5
  6648+                          	bcf	status,6
  6649+ 0020                     	endm


HI-TECH Software PICC Macro Assembler V9.65PL1 build 4898 
Symbol Table                                          Tue Jul 03 12:58:25 2012

                             l1 0DC2                               l2 0DBC  
                             l3 0DAB                               l4 0DC2  
                             l5 0DAE                               l7 0DB6  
                             l8 0D96                               l9 0D7D  
                     __Lrdata_0 0078                               _i 0078  
                             _j 007A                               _k 007C  
                             pc 0002                       __Lramdata 0078  
             _LCDWriteInteger_c 004E               _LCDWriteInteger_i 004D  
                            l10 0D88                              l11 01ED  
                            l12 01E0                              _DA 04A5  
                            l21 0E8A                              l13 01CF  
                            _BF 04A0                              l14 01ED  
                            l30 05D7                              _DC 0019  
                            l15 0E5E                              l31 069A  
                            l16 0DA9                              l40 02EB  
                            l32 0665                              l41 02F7  
                            l33 06A7                              l17 0EC2  
                            l42 032D                              l34 06B4  
                            l18 0E9F                              l50 005C  
                            l43 02F8                              l35 06AA  
                            l19 0EBC                              l44 033C  
                            l36 06BE                              l52 0086  
                            l45 0347                              l29 06FF  
                            l37 06D7                              l53 0157  
                            l46 033D                              l38 06FF  
                            l39 0351                              l47 0351  
                            l55 0095                              l64 0E09  
                            l49 01C2                              l57 009C  
                            l58 0D67                              l66 0E02  
                            l67 0DE4                              l68 0DEE  
                            _PD 001B                              _RD 0C60  
                            _UA 04A1                              _TO 001C  
                            _RW 04A2                              _WR 0C61  
                            fsr 0004                             l101 05A1  
                           l110 04C8                             l102 0485  
                           l111 04EB                             l103 049C  
                           l120 0509                             l112 04DF  
                           l104 0590                             l200 0260  
                           l121 052C                             l113 04F1  
                           l105 04F2                             l201 0228  
                           l122 0520                             l114 0532  
                           l210 0248                             l115 0532  
                           l123 0532                             l107 04F1  
                           l211 0257                             l124 054A  
                           l220 0F08                             l204 0227  
                           l140 03B7                             l125 0562  
                           l117 0532                             l109 04DE  
                           l133 0DDF                             l221 0F22  
                           l205 0216                             l141 03D9  
                           l310 0FC9                             l126 0590  
                           l222 0F43                             l150 0440  
                           l142 0483                             l206 0248  
                           l134 03E0                             l311 0FD8  
                           l223 02D4                             l231 02C4  
                           l127 05A0                             l119 051F  
                           l151 0452                             l143 040F  
                           l207 0237                             l135 036F  
                           l400 0783                             l232 029C  
                           l224 0272                             l152 047C  
                           l208 0243                             l136 0386  
                           l401 07A5                             l305 0FFF  
                           l313 0FF5                             l233 02B7  
                           l225 027F                             l145 043E  
                           l209 0238                             l402 0784  
                           l314 0FD8                             l306 0FB6  
                           l234 02CD                             l226 02C4  
                           l146 0416                             l138 03C5  
                           l403 07B9                             l315 0FE8  
                           l307 0FBF                             l227 0298  
                           l219 0F4A                             l147 0428  
                           l139 0391                             l404 07CA  
                           l316 0FFE                             l308 0FF5  
                           l228 028D                             l244 0D72  
                           l405 07BA                             l309 0FD4  
                           l229 029C                             l245 0D71  
                           l149 0468                             l317 0E33  
                           l406 07D8                             l270 0ED4  
                           l318 0E17                             l407 07E6  
                           l271 0EE5                             l269 0EFA  
                           _CM0 04E0                             _CM1 04E1  
                           _CM2 04E2                             l393 0FA4  
                           l394 0F77                             l395 0F98  
                           l396 07FE                             l397 075C  
                           l398 076F                             l399 075D  
                           _CKE 04A6                             _IBF 044F  
                           _CIS 04E3                        ___awtoft 0EFB  
                           _CKP 00A4                             _GIE 005F  
                           _BOR 0470                             _RA0 0028  
                      ___ftpack 0739                             _RA1 0029  
                           _RB0 0030                             _RA2 002A  
                           _RB1 0031                             _RA3 002B  
                           _RC0 0038                             _RB2 0032  
                           _RA4 002C                             _RC1 0039  
                           _RB3 0033                             _RA5 002D  
                           _RD0 0040                             _RC2 003A  
                           _RB4 0034                             _RD1 0041  
                           _RC3 003B                             _RB5 0035  
                           _RE0 0048                             _RD2 0042  
                           _RC4 003C                             _RB6 0036  
                           _RE1 0049                             _RD3 0043  
                           _RC5 003D                             _RB7 0037  
                           _RE2 004A                             _RD4 0044  
                           _RC6 003E                             _RD5 0045  
                           _RC7 003F                             _RD6 0046  
                           _OBF 044E                             _RD7 0047  
                           _FSR 0004                             _PCL 0002  
                           _PS0 0408                             _PR2 0092  
                           _PS1 0409                             _RP0 001D  
                           _PS2 040A                             _PEN 048A  
                           _IRP 001F                             _RP1 001E  
                           _SEN 0488                             _PSA 040B  
                           _POR 0471                             _RX9 00C6  
                           _SMP 04A7                             _TX9 04C6  
                     l600000850 0750                       l600000846 0408  
                     l600000848 04DE                       l600000849 051F  
                     ?___awtoft 004B                       ?___ftpack 005D  
                           fsr0 0004                             indf 0000  
                      ___lwtoft 0E0A                         ??_Delay 005A  
                     ?___lwtoft 003C                      ??___awtoft 004E  
                    ??___ftpack 005E                     _Delay_pause 005A  
                    ??___lwtoft 003F                            _ADIE 0466  
                          _ADIF 0066                            _ADFM 04FF  
                          _ADGO 00FA                        __tempreg 0020  
                          _ADON 00F8                            _CHS0 00FB  
                          _CHS1 00FC                            _CHS2 00FD  
                          _EEIE 046C                            _EEIF 006C  
                          STR_1 070F                            STR_2 0730  
                          STR_3 0731                            STR_4 0720  
                          _GCEN 048F                            _CMIE 046E  
                          _CMIF 006E                            _BRGH 04C2  
                          _T0IE 005D                            _T0IF 005A  
                          _CREN 00C4                            _T0CS 040D  
                          _FERR 00C2                            _IBOV 044D  
                          _CVR0 04E8                            _CVR1 04E9  
                          _CVR2 04EA                            _CVR3 04EB  
                          u3010 0468                            _T0SE 040C  
                          _CSRC 04C7                            u3011 0467  
                          u3100 0495                            u3020 0476  
                          u3101 0494                            u3005 045B  
                          _INDF 0000                            u3110 04AB  
                          u3030 0EC7                            u3031 0EC6  
                          u3200 0502                            u3120 04B3  
                          u3040 0ED8                            u3201 0501  
                          u3121 04B2                            u3041 0ED7  
                          u3130 04BD                            u3131 04BC  
                          u3300 0D6F                            u3220 0519  
                          u3301 0D6E                            u3221 0518  
                          u3310 026A                            u3230 051F  
                          u3150 04D8                            u3070 0F01  
                          u3311 0269                            u3231 051E  
                          u3215 050A                            u3151 04D7  
                          u3071 0F00                            u3055 0EF3  
                          u3400 02C8                            u3320 0276  
                          u3160 04DE                            u3080 0F1A  
                          u2600 06BE                            u3321 0275  
                          u3161 04DD                            u3145 04C9  
                          u3081 0F19                            u2601 06BD  
                          u3410 0FAE                            u3330 0289  
                          u3250 0532                            u3090 0F30  
                          u2610 06CB                            u2530 0085  
                          u3411 0FAD                            u3331 0288  
                          u3251 0531                            u3091 0F2F  
                          u3067 0EF6                            u2611 06CA  
                          u2531 0084                            u2700 0DB6  
                          u3500 073E                            u3420 0FBA  
                          u3260 0536                            u3180 04F1  
                          u3068 0EF8                            u2620 06E6  
                          u2540 009C                            u2701 0DB5  
                          u3421 0FB9                            u3245 0521  
                          u3181 04F0                            u3069 0EF9  
                          u2621 06E5                            u2541 009B  
                          u2710 0DC2                            u3510 0750  
                          u3430 0FC5                            u3350 029C  
                          u3270 054E                            u3190 04F8  
                          u2630 06F3                            u2550 0157  
                          _PIE1 008C                            u2711 0DC1  
                          u3511 074F                            u3431 0FC4  
                          u3351 029B                            u3191 04F7  
                          u3175 04E0                            u2631 06F2  
                          u2551 0156                            _PIE2 008D  
                          u3600 0F5C                            u3280 0579  
                          u2800 03A7                            u2720 0DE8  
                          u3345 028E                            u3281 0578  
                          u2801 03A6                            u2721 0DE7  
                          u3610 0F6B                            u3530 0783  
                          u3450 0FD8                            u3370 02AD  
                          u3290 059E                            u2650 01ED  
                          u2570 0EBC                            u3611 0F6A  
                          u3531 0782                            u3451 0FD7  
                          u3371 02AC                            u2651 01EC  
                          u2571 0EBB                            u3620 0F94  
                          u3460 0FE2                            u2900 0248  
                          u2660 02DE                            u2820 03C5  
                          u2580 05BC                            u2645 0E71  
                          u3621 0F93                            u3605 0F58  
                          u3525 0765                            u3461 0FE1  
                          u3445 0FCA                            u3365 029D  
                          u2901 0247                            u2661 02DD  
                          u2821 03C4                            u2805 03A3  
                          u2581 05BB                            _CVRR 04ED  
                          u3550 07B9                            u3390 02C4  
                          u2910 024C                            u2670 02F1  
                          u2830 03D3                            u2590 06A7  
                          u2750 0E02                            u3551 07B8  
                          u3391 02C3                            u3375 02A9  
                          u2671 02F0                            u2815 03B8  
                          u2591 06A6                            u2751 0E01  
                          u2735 0DEF                            u3480 0FF5  
                          u2920 0403                            u2840 0206  
                          u2680 033C                            u2760 0E10  
                          u3545 079B                            u3481 0FF4  
                          u3465 0FDE                            u3385 02B8  
                          u2841 0205                            u2681 033B  
                          u2761 0E0F                            u2745 0DF6  
                          u3570 07D8                            u3490 0FF9  
                          u2930 0408                            u2850 020D  
                          u2690 0351                            u2770 0368  
                          _PEIE 005E                            u3571 07D7  
                          u3475 0FE9                            u2931 0407  
                          u2851 020C                            u2691 0350  
                          u2771 0367                            u3580 07DC  
                          u2940 041A                            u2780 037F  
                          _INTE 005C                            u3581 07DB  
                          u3565 07BF                            u2941 0419  
                          u2781 037E                            _INTF 0059  
                          u3590 07F1                            u2870 0227  
                          _RBIE 005B                            u2871 0226  
                          _RBIF 0058                            u2880 022E  
                          u2881 022D                            u2865 0217  
                          u2970 043E                            _RCIE 0465  
                          u3595 07ED                            u2971 043D  
                          u2955 0429                            u2795 0392  
                          _RCIF 0065                            _RCEN 048B  
                          u2980 0444                            u2981 0443  
                          u2965 0431                            u2895 023A  
                          _PCON 008E                            _PIR1 000C  
                          _PIR2 000D                            u2995 0453  
                          _OERR 00C1                            _RBPU 040F  
                          _RX9D 00C0                            _TMR0 0001  
                          _TMR2 0011                            _WCOL 00A7  
                          _SPEN 00C7                            _RSEN 0489  
                     __databank FFFFFFFF  
                          _TX9D 04C0                            _SREN 00C5  
                          _TRMT 04C1                            _STOP 04A4  
                          _ZERO 001A                            _TXIE 0464  
                          _WREN 0C62                            _TXIF 0064  
                          _TXEN 04C5                            _SYNC 04C4  
                          _main 0018                            btemp 007E  
              __end_of_LCDReset 0DAA                    _main_nettemp 0034  
                          start 0000                    ___awdiv_sign 005A  
               _LCDWriteCommand 0D73                 _LCDWriteFloat_c 0044  
               _LCDWriteFloat_i 003F                 _LCDWriteFloat_n 0042  
               ___awmod_divisor 0057                    ___ftadd_exp1 005B  
                  ___ftadd_exp2 005A                 ___awmod_counter 005A  
                  ___ftadd_cntr 0058                 _LCDWriteInteger 02D5  
              ?_LCDWriteCommand 004B                         ?___ftge 004B  
                      ??___ftge 0051                         ?___wmul 003C  
                  ___awmod_sign 0059                 __end_of___awdiv 02D5  
               __end_of___ftadd 05A2                        ??___wmul 0040  
               __end_of___awmod 1000                ?_LCDWriteInteger 004B  
                     stringcode 0708                 __end_of___ftdiv 03E1  
               __end_of___ftneg 0D73                 __end_of___ftmul 0484  
               __end_of___ftsub 0DE0                 __end_of___fttol 0261  
                 __end_of_Delay 0DC3                         _CCP1CON 0017  
                       _CCP2CON 001D                      ___ftadd_f1 0051  
                    ___ftadd_f2 0054                   _LCDWriteFloat 05A2  
                       _ACKSTAT 048E                           _C1INV 04E4  
                    ___ftge_ff1 004B                      ___ftge_ff2 004E  
                         _C2INV 04E5                           _C1OUT 04E6  
                         _C2OUT 04E7                           _ADCS0 00FE  
                         _ADCS1 00FF                           _ADCS2 04FE  
                         _ADDEN 00C3                           ?_main 0020  
                         _ACKEN 048C                           _ACKDT 048D  
                         _BCLIE 046B                           _BCLIF 006B  
                         _CCP1X 00BD                           _CCP1Y 00BC  
                         _CCP2X 00ED                           _CCP2Y 00EC  
                    ___ftdiv_f1 003C                      ___ftdiv_f2 003F  
                    ___ftdiv_f3 0046                           _EEADR 010D  
             ??_LCDWriteCommand 004B                    ___ftdiv_exp1 0044  
                  ___ftdiv_exp2 0042                           _CARRY 0018  
                         _EEPGD 0C67                           _CMCON 009C  
                         _T1CON 0010                           _T2CON 0012  
                    ___ftneg_f1 0054                         _T1CKPS0 0084  
                       _T1CKPS1 0085                      ___awtoft_c 004B  
                         u26110 06C7                           u26210 06E2  
                         u26115 06C5                           _PCFG0 04F8  
                         u26310 06EF                           _PCFG1 04F9  
                         u26215 06E0                           _PCFG2 04FA  
                         _PCFG3 04FB                           u26315 06ED  
                       _T2CKPS0 0090                         _T2CKPS1 0091  
                         u25910 06A3                           _CVREN 04EF  
                         u26810 0338                           u25915 06A1  
                         u26815 0336                           _CVROE 04EE  
                ?_LCDInitialize 003C       _LCDWriteString_lcd_string 004B  
                         _RCREG 001A                           _RCSTA 0018  
                         _TMR1H 000F                           _TMR1L 000E  
                         _SPBRG 0099                           _PORTA 0005  
                         _PORTB 0006                         _T1OSCEN 0083  
                         _PORTC 0007                           _PORTD 0008  
                         _PORTE 0009                           _PSPIE 0467  
                         _PSPIF 0067                           _START 04A3  
                         _SSPM0 00A0                           _SSPM1 00A1  
                         _SSPM2 00A2                           _SSPM3 00A3  
                         _TRISA 0085                           _TRISB 0086  
                         _TRISC 0087                      ___ftmul_f1 004B  
                         _TRISD 0088                      ___ftmul_f2 004E  
                         _SSPIE 0463                           _TRISE 0089  
                    ___ftmul_f3 0054                           _SSPIF 0063  
                         _SSPEN 00A5                           _SSPOV 00A6  
             ??_LCDWriteInteger 004D                           _WRERR 0C63  
               ??_LCDInitialize 003C                           _TXREG 0019  
                         _TXSTA 0098                      ___ftsub_f1 004B  
                    ___ftsub_f2 004E                           _Delay 0DAA  
                    ___fttol_f1 004B                    ___ftpack_arg 005E  
                  ___ftpack_exp 005D                      ___ftunpack 0F4B  
            __end_of___ftunpack 0FA5           __end_of_LCDWriteFloat 0700  
                       _PSPMODE 044C                         _SSPCON2 0091  
                     _LCDEnable 0D89                  ??_LCDWriteData 0055  
             __end_of_LCDEnable 0D97                  ??_LCDWriteByte 0056  
 _LCDWriteInteger_IntegerNumber 004B                         _SSPSTAT 0094  
                       _TOUTPS0 0093                         _TOUTPS1 0094  
                       _TOUTPS2 0095                         _TOUTPS3 0096  
                    ___lwtoft_c 003C                           pclath 000A  
                  ___ftmul_exp1 0052                     ?___ftunpack 005D  
                  ___ftmul_cntr 0053                           ltemp0 007E  
                    ?_LCDEnable 0058                           ttemp0 007E  
                         status 0003            _MainSystemInitialize 0D62  
                         wtemp0 007E                           wtemp1 0080  
             ___wmul_multiplier 003C                    ___fttol_exp1 0050  
                  ___fttol_lval 0051           ?_MainSystemInitialize 003C  
              ___awmod_dividend 0055            _LCDWriteData_LCDData 0055  
                   ??_LCDEnable 0058                   ___ftadd_sign1 0059  
                 ___ftadd_sign2 0057          ??_MainSystemInitialize 003C  
              ___awdiv_dividend 0055                     __stringbase 070E  
__end_of_LCDDisplayInitializing 0EC3                         ___awdiv 0261  
                       ___ftadd 0484                         ___awmod 0FA5  
                       ___ftdiv 0352                         ___ftneg 0D68  
                       ___ftmul 03E1                         ___ftsub 0DC3  
                       ___fttol 01EE                        ?___awdiv 0055  
                      ?___ftadd 0051                        ?___awmod 0055  
                      ?___ftdiv 003C                        ?___ftneg 0054  
                      ?___ftmul 004B                        ?___ftsub 004B  
                      ?___fttol 004B         __end_of_LCDWriteCommand 0D7E  
                  ??___ftunpack 005E                  ___wmul_product 0040  
                     ??___awdiv 0059                       ??___ftadd 0057  
                     ??___awmod 0059                       ??___ftdiv 0042  
                     ??___ftneg 0057                       ??___ftmul 0051  
                     ??___ftsub 0051                       ??___fttol 004F  
                    _Delay_time 0058                          ??_main 0020  
       __end_of_LCDWriteInteger 0352                __end_of___awtoft 0F4B  
              __end_of___ftpack 07FF                __end_of___lwtoft 0E34  
                        ?_Delay 0058       _LCDWriteFloat_FloatNumber 003C  
                __end_of___ftge 0EFB                        stringdir 0709  
                      stringjmp 070D                        stringtab 0700  
                        _ADCON0 001F                          _ADCON1 009F  
                  _LCDWriteData 0D7E                          _CCP1M0 00B8  
                        _CCP1M1 00B9                          _CCP1M2 00BA  
                        _CCP1M3 00BB                          _CCP2M0 00E8  
                        _CCP2M1 00E9                          _CCP2M2 00EA  
                        _CCP2M3 00EB                          _CCP1IE 0462  
                        _CCP1IF 0062                          _CCP2IE 0468  
                        _CCP2IF 0068                  __end_of___wmul 0E0A  
                  _LCDWriteByte 0E5F                  _LCDWriteString 01CB  
                        _ADRESH 001E                          _EEADRH 010F  
                        _ADRESL 009E                          _EEADRL 010D  
                        _EEDATA 010C                          _CCPR1H 0016  
                        _EEDATH 010E                          _CCPR2H 001C  
                        _CCPR1L 0015                          _CCPR2L 001B  
                        _EECON1 018C                          _EECON2 018D  
  __end_of_MainSystemInitialize 0D68                    __end_of_main 01C6  
              ___awdiv_quotient 005B                   ___ftdiv_sign1 0043  
                 ___ftdiv_sign2 0045                 ?_LCDWriteString 004B  
                   ___awtoft_f1 004E                          _GODONE 00FA  
                        _CVRCON 009D                          _T1SYNC 0082  
                        _INTEDG 040E                          _PCLATH 000A  
                        _INTCON 000B            __end_of_LCDWriteData 0D89  
          __end_of_LCDWriteByte 0E8B          _LCDDisplayInitializing 0E8B  
                        _TMR0IE 005D                          _TMR0IF 005A  
                        _TMR1IE 0460                          _TMR1IF 0060  
                        _TMR1CS 0081                          _TMR2IE 0461  
                        _TMR2IF 0061                          _TMR1ON 0080  
                        _OPTION 0081         _LCDWriteCommand_LCDData 004B  
                        _TMR2ON 0092                          _SSPADD 0093  
                        _TRISA0 0428                ??_LCDWriteString 004B  
                        _TRISA1 0429                          _TRISB0 0430  
                        _TRISA2 042A                          _TRISB1 0431  
                        _TRISA3 042B                          _TRISC0 0438  
                        _TRISB2 0432                          _TRISA4 042C  
                        _TRISC1 0439                          _TRISB3 0433  
                        _TRISA5 042D                          _TRISD0 0440  
                        _TRISC2 043A                          _TRISB4 0434  
                        _TRISD1 0441                          _TRISC3 043B  
                        _TRISB5 0435                          _TRISE0 0448  
                        _TRISD2 0442                          _TRISC4 043C  
                        _TRISB6 0436                          _TRISE1 0449  
                        _TRISD3 0443                          _TRISC5 043D  
                        _TRISB7 0437                          _TRISE2 044A  
                        _TRISD4 0444                          _TRISC6 043E  
                        _TRISD5 0445                          _TRISC7 043F  
                        _TRISD6 0446                          _TRISD7 0447  
                        _STATUS 0003                          _SSPCON 0014  
                        _SSPBUF 0013                        _LCDReset 0D97  
                     ?_LCDReset 003D                 ___awdiv_divisor 0057  
                    ??_LCDReset 003D                          ___ftge 0EC3  
               ___awdiv_counter 0059         ?_LCDDisplayInitializing 003C  
                        ___wmul 0DE0        _LCDDisplayInitializing_i 003C  
                        _main_c 0026                          _main_f 002B  
                        _main_p 002E                          _main_q 0037  
                        _main_r 0031                          _main_x 0022  
                        _main_y 0024                          _main_z 0020  
               ___ftunpack_sign 005F                  ?_LCDWriteFloat 003C  
        __end_of_LCDWriteString 01EE             ___wmul_multiplicand 003E  
                 _LCDInitialize 0E34                 ??_LCDWriteFloat 003F  
          _LCDWriteByte_LCDData 0056                _main_temperature 0028  
                   ___lwtoft_f1 003F                   ___ftmul_sign1 0051  
                ___ftunpack_arg 005E                  ___ftunpack_exp 005D  
                 ?_LCDWriteData 0055              _LCDWriteFloat_Temp 0040  
                 ?_LCDWriteByte 0056           __end_of_LCDInitialize 0E5F  
                 ___fttol_sign1 004F        ??_LCDDisplayInitializing 003C  
                     __Hrdata_0 007E                       __Hramdata 007E  
