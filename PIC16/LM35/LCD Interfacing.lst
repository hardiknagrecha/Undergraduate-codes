

HI-TECH Software PICC Macro Assembler V9.65PL1 build 4898 
                                                      Sat Jul 28 21:48:35 2012

HI-TECH Software Omniscient Code Generator build 4898
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code 
                                 Generator build 4898"
     2                           
     3                           	processor	16F877A
     4                           clrc	macro
     5                           	bcf	status,0
     6  0000                     	endm
     7                           clrz	macro
     8                           	bcf	status,2
     9  0000                     	endm
    10                           setc	macro
    11                           	bsf	status,0
    12  0000                     	endm
    13                           setz	macro
    14                           	bsf	status,2
    15  0000                     	endm
    16                           skipc	macro
    17                           	btfss	status,0
    18  0000                     	endm
    19                           skipz	macro
    20                           	btfss	status,2
    21  0000                     	endm
    22                           skipnc	macro
    23                           	btfsc	status,0
    24  0000                     	endm
    25                           skipnz	macro
    26                           	btfsc	status,2
    27  0000                     	endm
    28  0000                     indf	equ	0
    29  0000                     indf0	equ	0
    30  0000                     pc	equ	2
    31  0000                     pcl	equ	2
    32  0000                     status	equ	3
    33  0000                     fsr	equ	4
    34  0000                     fsr0	equ	4
    35  0000                     c	equ	1
    36  0000                     z	equ	0
    37  0000                     pclath	equ	10
    38                           # 16 "C:\Users\Suchitra\Desktop\hardik\codes\LM
                                 35 wala\main.h"
    39                           	psect config,class=CONFIG,delta=2 ;#
    40                           # 16 "C:\Users\Suchitra\Desktop\hardik\codes\LM
                                 35 wala\main.h"
    41  2007  2F0A               	dw 0x2F0A ;#
    42                           	FNCALL _LCDWriteString,stringtab
    43                           	FNCALL _LCDWriteString,stringtab
    44                           	FNCALL _LCDWriteString,stringtab
    45                           	FNCALL _LCDWriteString,stringtab
    46                           	FNCALL _LCDWriteString,stringtab
    47                           	FNCALL _LCDWriteString,stringtab
    48                           global __tempreg
    49  0000                     __tempreg	set	32
    50                           global __Lcommon, __Hcommon
    51  0000                     __Lcommon set 0x76
    52  0000                     __Hcommon set 0x7E
    53                           global __Lrdata_0, __Hrdata_0
    54  0000                     __Lrdata_0	equ	0x0
    55  0000                     __Hrdata_0	equ	0x1
    56                           global __Lramdata, __Lrdata_0, __Hramdata, __Hr
                                 data_0
    57  0000                     __Lramdata	set	__Lrdata_0
    58  0000                     __Hramdata	set	__Hrdata_0
    59                           	GLOBAL	__databank
    60  0000                     __databank	EQU	0
    61                           	FNCALL _LCDWriteString,stringtab
    62                           	FNCALL _LCDWriteString,stringtab
    63                           	FNCALL _LCDWriteString,stringtab
    64                           	FNCALL _LCDWriteString,stringtab
    65                           	FNCALL _LCDWriteString,stringtab
    66                           	FNCALL _LCDWriteString,stringtab
    67                           	FNCALL _LCDWriteString,stringtab
    68                           	FNCALL _LCDWriteString,stringtab
    69  0000                     _main_temp	equ	??_main+0
    70                           	global	_main_temp
    71  0000                     _LCDWriteFloat_i	equ	??_LCDWriteFloat+0
    72                           	global	_LCDWriteFloat_i
    73  0000                     _LCDWriteFloat_Temp	equ	??_LCDWriteFloat+1
    74                           	global	_LCDWriteFloat_Temp
    75  0000                     _LCDWriteFloat_n	equ	??_LCDWriteFloat+3
    76                           	global	_LCDWriteFloat_n
    77  0000                     _LCDWriteFloat_c	equ	??_LCDWriteFloat+5
    78                           	global	_LCDWriteFloat_c
    79  0000                     _LCDWriteFloat_FloatNumber	equ	?_LCDWriteFloat+
                                 0
    80                           	global	_LCDWriteFloat_FloatNumber
    81  0000                     _ADCReadData_ChannelNumber	equ	??_ADCReadData+0
    82                           	global	_ADCReadData_ChannelNumber
    83  0000                     _ADCReadData_i	equ	??_ADCReadData+1
    84                           	global	_ADCReadData_i
    85  0000                     _ADCReadData_x	equ	??_ADCReadData+2
    86                           	global	_ADCReadData_x
    87  0000                     _ADCReadData_z	equ	??_ADCReadData+4
    88                           	global	_ADCReadData_z
    89  0000                     _ADCReadData_y	equ	??_ADCReadData+6
    90                           	global	_ADCReadData_y
    91  0000                     _ADCReadData_f	equ	??_ADCReadData+8
    92                           	global	_ADCReadData_f
    93  0000                     _ADCReadData_p	equ	??_ADCReadData+11
    94                           	global	_ADCReadData_p
    95  0000                     ___ftmul_sign1	equ	??___ftmul+0
    96                           	global	___ftmul_sign1
    97  0000                     ___ftmul_exp1	equ	??___ftmul+1
    98                           	global	___ftmul_exp1
    99  0000                     ___ftmul_cntr	equ	??___ftmul+2
   100                           	global	___ftmul_cntr
   101  0000                     ___ftmul_f3	equ	??___ftmul+3
   102                           	global	___ftmul_f3
   103  0000                     ___ftmul_f1	equ	?___ftmul+0
   104                           	global	___ftmul_f1
   105  0000                     ___ftmul_f2	equ	?___ftmul+3
   106                           	global	___ftmul_f2
   107  0000                     ___lwtoft_f1	equ	??___lwtoft+0
   108                           	global	___lwtoft_f1
   109  0000                     ___lwtoft_c	equ	?___lwtoft+0
   110                           	global	___lwtoft_c
   111  0000                     _LCDWriteInteger_i	equ	??_LCDWriteInteger+0
   112                           	global	_LCDWriteInteger_i
   113  0000                     _LCDWriteInteger_c	equ	??_LCDWriteInteger+1
   114                           	global	_LCDWriteInteger_c
   115  0000                     _LCDWriteInteger_IntegerNumber	equ	?_LCDWriteIn
                                 teger+0
   116                           	global	_LCDWriteInteger_IntegerNumber
   117  0000                     ___ftge_ff1	equ	?___ftge+0
   118                           	global	___ftge_ff1
   119  0000                     ___ftge_ff2	equ	?___ftge+3
   120                           	global	___ftge_ff2
   121  0000                     ___fttol_sign1	equ	??___fttol+0
   122                           	global	___fttol_sign1
   123  0000                     ___fttol_exp1	equ	??___fttol+1
   124                           	global	___fttol_exp1
   125  0000                     ___fttol_lval	equ	??___fttol+2
   126                           	global	___fttol_lval
   127  0000                     ___fttol_f1	equ	?___fttol+0
   128                           	global	___fttol_f1
   129  0000                     ___ftdiv_exp2	equ	??___ftdiv+0
   130                           	global	___ftdiv_exp2
   131  0000                     ___ftdiv_sign1	equ	??___ftdiv+1
   132                           	global	___ftdiv_sign1
   133  0000                     ___ftdiv_exp1	equ	??___ftdiv+2
   134                           	global	___ftdiv_exp1
   135  0000                     ___ftdiv_sign2	equ	??___ftdiv+3
   136                           	global	___ftdiv_sign2
   137  0000                     ___ftdiv_f3	equ	??___ftdiv+4
   138                           	global	___ftdiv_f3
   139  0000                     ___ftdiv_f1	equ	?___ftdiv+0
   140                           	global	___ftdiv_f1
   141  0000                     ___ftdiv_f2	equ	?___ftdiv+3
   142                           	global	___ftdiv_f2
   143  0000                     ___ftsub_f1	equ	?___ftsub+0
   144                           	global	___ftsub_f1
   145  0000                     ___ftsub_f2	equ	?___ftsub+3
   146                           	global	___ftsub_f2
   147  0000                     _LCDWriteString_lcd_string	equ	??_LCDWriteStrin
                                 g+0
   148                           	global	_LCDWriteString_lcd_string
   149  0000                     ___awtoft_f1	equ	??___awtoft+0
   150                           	global	___awtoft_f1
   151  0000                     ___awtoft_c	equ	?___awtoft+0
   152                           	global	___awtoft_c
   153  0000                     _LCDWriteData_LCDData	equ	??_LCDWriteData+0
   154                           	global	_LCDWriteData_LCDData
   155  0000                     ___ftneg_f1	equ	?___ftneg+0
   156                           	global	___ftneg_f1
   157  0000                     ___awmod_sign	equ	??___awmod+0
   158                           	global	___awmod_sign
   159  0000                     ___awmod_counter	equ	??___awmod+1
   160                           	global	___awmod_counter
   161  0000                     ___awmod_dividend	equ	?___awmod+0
   162                           	global	___awmod_dividend
   163  0000                     ___awmod_divisor	equ	?___awmod+2
   164                           	global	___awmod_divisor
   165  0000                     ___awdiv_sign	equ	??___awdiv+0
   166                           	global	___awdiv_sign
   167  0000                     ___awdiv_counter	equ	??___awdiv+1
   168                           	global	___awdiv_counter
   169  0000                     ___awdiv_quotient	equ	??___awdiv+2
   170                           	global	___awdiv_quotient
   171  0000                     ___awdiv_dividend	equ	?___awdiv+0
   172                           	global	___awdiv_dividend
   173  0000                     ___awdiv_divisor	equ	?___awdiv+2
   174                           	global	___awdiv_divisor
   175  0000                     ___ftadd_sign2	equ	??___ftadd+0
   176                           	global	___ftadd_sign2
   177  0000                     ___ftadd_cntr	equ	??___ftadd+1
   178                           	global	___ftadd_cntr
   179  0000                     ___ftadd_sign1	equ	??___ftadd+2
   180                           	global	___ftadd_sign1
   181  0000                     ___ftadd_exp2	equ	??___ftadd+3
   182                           	global	___ftadd_exp2
   183  0000                     ___ftadd_exp1	equ	??___ftadd+4
   184                           	global	___ftadd_exp1
   185  0000                     ___ftadd_f1	equ	?___ftadd+0
   186                           	global	___ftadd_f1
   187  0000                     ___ftadd_f2	equ	?___ftadd+3
   188                           	global	___ftadd_f2
   189  0000                     _LCDWriteCommand_LCDData	equ	??_LCDWriteCommand
                                 +0
   190                           	global	_LCDWriteCommand_LCDData
   191  0000                     ___ftpack_arg	equ	??___ftpack+0
   192                           	global	___ftpack_arg
   193  0000                     ___ftpack_exp	equ	?___ftpack+0
   194                           	global	___ftpack_exp
   195  0000                     ___ftunpack_arg	equ	??___ftunpack+0
   196                           	global	___ftunpack_arg
   197  0000                     ___ftunpack_sign	equ	??___ftunpack+1
   198                           	global	___ftunpack_sign
   199  0000                     ___ftunpack_exp	equ	?___ftunpack+0
   200                           	global	___ftunpack_exp
   201  0000                     _LCDWriteByte_LCDData	equ	??_LCDWriteByte+0
   202                           	global	_LCDWriteByte_LCDData
   203  0000                     _Delay_pause	equ	??_Delay+0
   204                           	global	_Delay_pause
   205  0000                     _Delay_time	equ	?_Delay+0
   206                           	global	_Delay_time
   207                           ;Data sizes: Strings 20, constant 0, data 0, bs
                                 s 0, persistent 0 stack 46
   208                           	global	_main
   209                           	global	??_main
   210                           	global	?_main
   211                           
   212                           ; *************** function _main **************
                                 *
   213                           ; Defined at:
   214                           ;		line 6 in file "C:\Users\Suchitra\Desktop\ha
                                 rdik\codes\LM35 wala\main3.c"
   215                           ; Parameters:
   216                           ;		None
   217                           ; Auto variables:
   218                           ;		temp        	       	type: float 
   219                           ; Return value:
   220                           ;		type: void 
   221                           ;		size: 0
   222                           ; Registers used:
   223                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
                                 th, cstack
   224                           ; Tracked objects:
   225                           ;		On entry : BFF/0
   226                           ;		On exit  : 0/0
   227                           ;		Unchanged: 0/0
   228                           ; Data sizes:
   229                           ;		Autos:    3
   230                           ;		Params:   0
   231                           ;		Temp:     1
   232                           ;		Total:    4
   233                           ; This function calls:
   234                           ;		_MainSystemInitialize
   235                           ;		_ADCReadData
   236                           ;		___ftmul
   237                           ;		_LCDWriteCommand
   238                           ;		_LCDWriteFloat
   239                           ;		___ftge
   240                           ; This function is called by:
   241                           ;		Startup code after reset
   242                           ; This function uses a non-reentrant model
   243                           ; 
   244                           	psect	maintext,class=CODE,delta=2
   245                           	file	"C:\Users\Suchitra\Desktop\hardik\codes\L
                                 M35 wala\main3.c"
   246                           	line	6
   247                           	psect	maintext
   248                           ;main3.c: 5: void main(void)
   249                           ;main3.c: 6: {
   250                           	
   251  0015                     _main:	
   252                           	opt stack 7
   253                           ; Regs used in _main: [wreg-fsr0h+status,2+stat
                                 us,0+pclath+cstack]
   254                           	line	9
   255                           ;main3.c: 8: float temp;
   256                           ;main3.c: 9: TRISB = 0x00;
   257  0015  1003               	clrc
   258  0016  1683               	bsf	status, 5	;RP0=1, select bank1
   259  0017  1303               	bcf	status, 6	;RP1=0, select bank1
   260                           	
   261  0018  3000               	movlw	0
   262  0019  1803               	btfsc	status,0
   263  001A  3001               	movlw	1
   264  001B  0086               	movwf	(134)^080h	;volatile
   265                           	line	10
   266                           ;main3.c: 10: TRISE |= 0x07;
   267  001C  3007               	movlw	(07h)
   268  001D  1283               	bcf	status, 5	;RP0=0, select bank0
   269  001E  1303               	bcf	status, 6	;RP1=0, select bank0
   270  001F  00A3               	movwf	(??_main+3+0)
   271  0020  1683               	bsf	status, 5	;RP0=1, select bank1
   272  0021  1303               	bcf	status, 6	;RP1=0, select bank1
   273                           	
   274  0022  1283               	bcf	status, 5	;RP0=0, select bank0
   275  0023  1303               	bcf	status, 6	;RP1=0, select bank0
   276  0024  0823               	movf	(??_main+3+0),w
   277  0025  1683               	bsf	status, 5	;RP0=1, select bank1
   278  0026  1303               	bcf	status, 6	;RP1=0, select bank1
   279  0027  0489               	iorwf	(137)^080h,f	;volatile
   280                           	line	11
   281                           ;main3.c: 11: PORTE |= 0x07;
   282  0028  3007               	movlw	(07h)
   283  0029  1283               	bcf	status, 5	;RP0=0, select bank0
   284  002A  1303               	bcf	status, 6	;RP1=0, select bank0
   285  002B  00A3               	movwf	(??_main+3+0)
   286                           	
   287  002C  0823               	movf	(??_main+3+0),w
   288  002D  0489               	iorwf	(9),f	;volatile
   289                           	line	12
   290                           ;main3.c: 12: MainSystemInitialize();
   291  002E  120A  158A  2615   	fcall	_MainSystemInitialize
              120A  118A         
   292                           	line	16
   293                           ;main3.c: 15: for(;;)
   294                           	
   295  0033                     l57:	
   296                           	line	17
   297                           ;main3.c: 16: {
   298                           ;main3.c: 17: temp = ADCReadData(0x00);
   299  0033  3000               	movlw	(0)
   300  0034  120A  118A  2723   	fcall	_ADCReadData
              120A  118A         
   301  0039  1283               	bcf	status, 5	;RP0=0, select bank0
   302  003A  1303               	bcf	status, 6	;RP1=0, select bank0
   303                           	
   304  003B  0824               	movf	(0+?_ADCReadData),w
   305  003C  00A0               	movwf	(_main_temp)
   306  003D  0825               	movf	(1+?_ADCReadData),w
   307  003E  00A1               	movwf	(_main_temp+1)
   308  003F  0826               	movf	(2+?_ADCReadData),w
   309  0040  00A2               	movwf	(_main_temp+2)
   310                           	line	18
   311                           ;main3.c: 18: temp=temp*100;
   312                           	
   313  0041  3000               	movlw	0x0
   314  0042  00BC               	movwf	(0+(?___ftmul)+03h)
   315  0043  30C8               	movlw	0xc8
   316  0044  00BD               	movwf	(1+(?___ftmul)+03h)
   317  0045  3042               	movlw	0x42
   318  0046  00BE               	movwf	(2+(?___ftmul)+03h)
   319                           	
   320                           	
   321  0047  0820               	movf	(_main_temp),w
   322  0048  00B9               	movwf	(?___ftmul)
   323  0049  0821               	movf	(_main_temp+1),w
   324  004A  00BA               	movwf	(?___ftmul+1)
   325  004B  0822               	movf	(_main_temp+2),w
   326  004C  00BB               	movwf	(?___ftmul+2)
   327  004D  120A  118A  231B   	fcall	___ftmul
              120A  118A         
   328  0052  1283               	bcf	status, 5	;RP0=0, select bank0
   329  0053  1303               	bcf	status, 6	;RP1=0, select bank0
   330                           	
   331  0054  0839               	movf	(0+?___ftmul),w
   332  0055  00A0               	movwf	(_main_temp)
   333  0056  083A               	movf	(1+?___ftmul),w
   334  0057  00A1               	movwf	(_main_temp+1)
   335  0058  083B               	movf	(2+?___ftmul),w
   336  0059  00A2               	movwf	(_main_temp+2)
   337                           	line	19
   338                           ;main3.c: 19: LCDWriteCommand(0x80);
   339  005A  3080               	movlw	(080h)
   340  005B  120A  118A  27F5   	fcall	_LCDWriteCommand
              120A  118A         
   341                           	line	20
   342                           ;main3.c: 20: LCDWriteFloat(temp);
   343  0060  1283               	bcf	status, 5	;RP0=0, select bank0
   344  0061  1303               	bcf	status, 6	;RP1=0, select bank0
   345                           	
   346                           	
   347  0062  0820               	movf	(_main_temp),w
   348  0063  00A4               	movwf	(?_LCDWriteFloat)
   349  0064  0821               	movf	(_main_temp+1),w
   350  0065  00A5               	movwf	(?_LCDWriteFloat+1)
   351  0066  0822               	movf	(_main_temp+2),w
   352  0067  00A6               	movwf	(?_LCDWriteFloat+2)
   353  0068  120A  118A  25A2   	fcall	_LCDWriteFloat
              120A  118A         
   354                           	line	22
   355                           ;main3.c: 22: if(temp>35)
   356  006D  1283               	bcf	status, 5	;RP0=0, select bank0
   357  006E  1303               	bcf	status, 6	;RP1=0, select bank0
   358                           	
   359                           	
   360  006F  0820               	movf	(_main_temp),w
   361  0070  00B6               	movwf	(0+(?___ftge)+03h)
   362  0071  0821               	movf	(_main_temp+1),w
   363  0072  00B7               	movwf	(1+(?___ftge)+03h)
   364  0073  0822               	movf	(_main_temp+2),w
   365  0074  00B8               	movwf	(2+(?___ftge)+03h)
   366                           	
   367  0075  3000               	movlw	0x0
   368  0076  00B3               	movwf	(?___ftge)
   369  0077  300C               	movlw	0xc
   370  0078  00B4               	movwf	(?___ftge+1)
   371  0079  3042               	movlw	0x42
   372  007A  00B5               	movwf	(?___ftge+2)
   373  007B  120A  158A  271E   	fcall	___ftge
              120A  118A         
   374  0080  1803               	btfsc	status,0
   375  0081  2883               	goto	u2471
   376  0082  2884               	goto	u2470
   377  0083                     u2471:
   378  0083  2888               	goto	l60
   379  0084                     u2470:
   380                           	line	23
   381                           ;main3.c: 23: RB1=1;
   382  0084  1283               	bcf	status, 5	;RP0=0, select bank0
   383  0085  1303               	bcf	status, 6	;RP1=0, select bank0
   384  0086  1486               	bsf	(49/8),(49)&7
   385  0087  28A2               	goto	l61
   386                           	line	24
   387                           	
   388  0088                     l60:	
   389                           ;main3.c: 24: else if(temp<35)
   390  0088  1283               	bcf	status, 5	;RP0=0, select bank0
   391  0089  1303               	bcf	status, 6	;RP1=0, select bank0
   392                           	
   393  008A  3000               	movlw	0x0
   394  008B  00B6               	movwf	(0+(?___ftge)+03h)
   395  008C  300C               	movlw	0xc
   396  008D  00B7               	movwf	(1+(?___ftge)+03h)
   397  008E  3042               	movlw	0x42
   398  008F  00B8               	movwf	(2+(?___ftge)+03h)
   399                           	
   400                           	
   401  0090  0820               	movf	(_main_temp),w
   402  0091  00B3               	movwf	(?___ftge)
   403  0092  0821               	movf	(_main_temp+1),w
   404  0093  00B4               	movwf	(?___ftge+1)
   405  0094  0822               	movf	(_main_temp+2),w
   406  0095  00B5               	movwf	(?___ftge+2)
   407  0096  120A  158A  271E   	fcall	___ftge
              120A  118A         
   408  009B  1803               	btfsc	status,0
   409  009C  289E               	goto	u2481
   410  009D  289F               	goto	u2480
   411  009E                     u2481:
   412  009E  28A2               	goto	l61
   413  009F                     u2480:
   414                           	line	25
   415                           ;main3.c: 25: RB1=0;
   416  009F  1283               	bcf	status, 5	;RP0=0, select bank0
   417  00A0  1303               	bcf	status, 6	;RP1=0, select bank0
   418  00A1  1086               	bcf	(49/8),(49)&7
   419                           	
   420  00A2                     l62:	
   421                           	line	28
   422                           	
   423  00A2                     l61:	
   424                           ;main3.c: 28: }
   425  00A2  2833               	goto	l57
   426                           	global	start
   427  00A3  120A  118A  2800   	ljmp	start
   428                           ; =============== function _main ends =========
                                 ======
   429                           
   430                           GLOBAL __end_of_main
   431  00A6                     	__end_of_main:
   432                           	FNSIZE	_main,4,0
   433                           	psect	maintext
   434                           	line	29
   435                           	signat	_main,88
   436                           	global	_LCDWriteFloat
   437                           	global	??_LCDWriteFloat
   438                           	global	?_LCDWriteFloat
   439                           
   440                           ; *************** function _LCDWriteFloat *****
                                 **********
   441                           ; Defined at:
   442                           ;		line 90 in file "C:\Users\Suchitra\Desktop\h
                                 ardik\codes\LM35 wala\LCD.c"
   443                           ; Parameters:
   444                           ;		FloatNumber 	offs:   0	type: float 
   445                           ; Auto variables:
   446                           ;		i           	       	type: unsigned char 
   447                           ;		Temp        	       	type: int 
   448                           ;		n           	       	type: int 
   449                           ;		c           	       	type: unsigned char [6]
   450                           ; Return value:
   451                           ;		type: void 
   452                           ;		size: 0
   453                           ; Registers used:
   454                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
                                 th, cstack
   455                           ; Tracked objects:
   456                           ;		On entry : 300/0
   457                           ;		On exit  : 0/0
   458                           ;		Unchanged: 0/0
   459                           ; Data sizes:
   460                           ;		Autos:   11
   461                           ;		Params:   3
   462                           ;		Temp:     1
   463                           ;		Total:   15
   464                           ; This function calls:
   465                           ;		___ftge
   466                           ;		_LCDWriteData
   467                           ;		___ftneg
   468                           ;		___fttol
   469                           ;		_LCDWriteInteger
   470                           ;		___awtoft
   471                           ;		___ftsub
   472                           ;		___ftadd
   473                           ;		___ftmul
   474                           ;		___awmod
   475                           ;		___awdiv
   476                           ;		_LCDWriteCommand
   477                           ;		_LCDWriteString
   478                           ; This function is called by:
   479                           ;		_main
   480                           ; This function uses a non-reentrant model
   481                           ; 
   482                           	psect	text188,local,class=CODE,delta=2
   483                           	file	"C:\Users\Suchitra\Desktop\hardik\codes\L
                                 M35 wala\LCD.c"
   484                           	line	90
   485                           ;LCD.c: 89: void LCDWriteFloat(float FloatNumbe
                                 r)
   486                           ;LCD.c: 90: {
   487                           	
   488  05A2                     _LCDWriteFloat:	
   489                           	opt stack 6
   490                           ; Regs used in _LCDWriteFloat: [wreg-fsr0h+stat
                                 us,2+status,0+pclath+cstack]
   491                           	line	92
   492                           ;LCD.c: 91: unsigned char c[6];
   493                           ;LCD.c: 92: unsigned char i = 0;
   494  05A2  1003               	clrc
   495                           	
   496  05A3  3000               	movlw	0
   497  05A4  1803               	btfsc	status,0
   498  05A5  3001               	movlw	1
   499  05A6  00A7               	movwf	(_LCDWriteFloat_i)
   500                           	line	94
   501                           ;LCD.c: 93: int n, Temp;
   502                           ;LCD.c: 94: if(FloatNumber < 0)
   503                           	
   504  05A7  3000               	movlw	0x0
   505  05A8  00B6               	movwf	(0+(?___ftge)+03h)
   506  05A9  3000               	movlw	0x0
   507  05AA  00B7               	movwf	(1+(?___ftge)+03h)
   508  05AB  3000               	movlw	0x0
   509  05AC  00B8               	movwf	(2+(?___ftge)+03h)
   510                           	
   511                           	
   512  05AD  0824               	movf	(_LCDWriteFloat_FloatNumber),w
   513  05AE  00B3               	movwf	(?___ftge)
   514  05AF  0825               	movf	(_LCDWriteFloat_FloatNumber+1),w
   515  05B0  00B4               	movwf	(?___ftge+1)
   516  05B1  0826               	movf	(_LCDWriteFloat_FloatNumber+2),w
   517  05B2  00B5               	movwf	(?___ftge+2)
   518  05B3  120A  158A  271E   	fcall	___ftge
              120A  118A         
   519  05B8  1803               	btfsc	status,0
   520  05B9  2DBB               	goto	u2491
   521  05BA  2DBC               	goto	u2490
   522  05BB                     u2491:
   523  05BB  2DD7               	goto	l30
   524  05BC                     u2490:
   525                           	line	96
   526                           ;LCD.c: 95: {
   527                           ;LCD.c: 96: LCDWriteData('-');
   528  05BC  302D               	movlw	(02Dh)
   529  05BD  120A  158A  2620   	fcall	_LCDWriteData
              120A  118A         
   530                           	line	97
   531                           ;LCD.c: 97: FloatNumber = -(FloatNumber);
   532  05C2  1283               	bcf	status, 5	;RP0=0, select bank0
   533  05C3  1303               	bcf	status, 6	;RP1=0, select bank0
   534                           	
   535                           	
   536  05C4  0824               	movf	(_LCDWriteFloat_FloatNumber),w
   537  05C5  00BC               	movwf	(?___ftneg)
   538  05C6  0825               	movf	(_LCDWriteFloat_FloatNumber+1),w
   539  05C7  00BD               	movwf	(?___ftneg+1)
   540  05C8  0826               	movf	(_LCDWriteFloat_FloatNumber+2),w
   541  05C9  00BE               	movwf	(?___ftneg+2)
   542  05CA  120A  158A  262B   	fcall	___ftneg
              120A  118A         
   543  05CF  1283               	bcf	status, 5	;RP0=0, select bank0
   544  05D0  1303               	bcf	status, 6	;RP1=0, select bank0
   545                           	
   546  05D1  083C               	movf	(0+?___ftneg),w
   547  05D2  00A4               	movwf	(_LCDWriteFloat_FloatNumber)
   548  05D3  083D               	movf	(1+?___ftneg),w
   549  05D4  00A5               	movwf	(_LCDWriteFloat_FloatNumber+1)
   550  05D5  083E               	movf	(2+?___ftneg),w
   551  05D6  00A6               	movwf	(_LCDWriteFloat_FloatNumber+2)
   552                           	line	98
   553                           	
   554  05D7                     l30:	
   555                           	line	99
   556                           ;LCD.c: 98: }
   557                           ;LCD.c: 99: n = FloatNumber;
   558  05D7  1283               	bcf	status, 5	;RP0=0, select bank0
   559  05D8  1303               	bcf	status, 6	;RP1=0, select bank0
   560                           	
   561                           	
   562  05D9  0824               	movf	(_LCDWriteFloat_FloatNumber),w
   563  05DA  00B3               	movwf	(?___fttol)
   564  05DB  0825               	movf	(_LCDWriteFloat_FloatNumber+1),w
   565  05DC  00B4               	movwf	(?___fttol+1)
   566  05DD  0826               	movf	(_LCDWriteFloat_FloatNumber+2),w
   567  05DE  00B5               	movwf	(?___fttol+2)
   568  05DF  120A  118A  2128   	fcall	___fttol
              120A  118A         
   569  05E4  1283               	bcf	status, 5	;RP0=0, select bank0
   570  05E5  1303               	bcf	status, 6	;RP1=0, select bank0
   571                           	
   572  05E6  0834               	movf	(1+?___fttol),w
   573  05E7  01AB               	clrf	(_LCDWriteFloat_n+1)
   574  05E8  07AB               	addwf	(_LCDWriteFloat_n+1)
   575  05E9  0833               	movf	(0+?___fttol),w
   576  05EA  01AA               	clrf	(_LCDWriteFloat_n)
   577  05EB  07AA               	addwf	(_LCDWriteFloat_n)
   578                           
   579                           	line	100
   580                           ;LCD.c: 100: Temp = n;
   581                           	
   582                           	
   583  05EC  082B               	movf	(_LCDWriteFloat_n+1),w
   584  05ED  01A9               	clrf	(_LCDWriteFloat_Temp+1)
   585  05EE  07A9               	addwf	(_LCDWriteFloat_Temp+1)
   586  05EF  082A               	movf	(_LCDWriteFloat_n),w
   587  05F0  01A8               	clrf	(_LCDWriteFloat_Temp)
   588  05F1  07A8               	addwf	(_LCDWriteFloat_Temp)
   589                           
   590                           	line	101
   591                           ;LCD.c: 101: LCDWriteInteger(n);
   592                           	
   593                           	
   594  05F2  082B               	movf	(_LCDWriteFloat_n+1),w
   595  05F3  01B4               	clrf	(?_LCDWriteInteger+1)
   596  05F4  07B4               	addwf	(?_LCDWriteInteger+1)
   597  05F5  082A               	movf	(_LCDWriteFloat_n),w
   598  05F6  01B3               	clrf	(?_LCDWriteInteger)
   599  05F7  07B3               	addwf	(?_LCDWriteInteger)
   600                           
   601  05F8  120A  118A  220F   	fcall	_LCDWriteInteger
              120A  118A         
   602                           	line	102
   603                           ;LCD.c: 102: LCDWriteData('.');
   604  05FD  302E               	movlw	(02Eh)
   605  05FE  120A  158A  2620   	fcall	_LCDWriteData
              120A  118A         
   606                           	line	103
   607                           ;LCD.c: 103: FloatNumber = ((FloatNumber - n) +
                                  1) * 1000;
   608  0603  1283               	bcf	status, 5	;RP0=0, select bank0
   609  0604  1303               	bcf	status, 6	;RP1=0, select bank0
   610                           	
   611                           	
   612  0605  082B               	movf	(_LCDWriteFloat_n+1),w
   613  0606  01B4               	clrf	(?___awtoft+1)
   614  0607  07B4               	addwf	(?___awtoft+1)
   615  0608  082A               	movf	(_LCDWriteFloat_n),w
   616  0609  01B3               	clrf	(?___awtoft)
   617  060A  07B3               	addwf	(?___awtoft)
   618                           
   619  060B  120A  158A  2756   	fcall	___awtoft
              120A  118A         
   620  0610  1283               	bcf	status, 5	;RP0=0, select bank0
   621  0611  1303               	bcf	status, 6	;RP1=0, select bank0
   622                           	
   623  0612  0833               	movf	(0+?___awtoft),w
   624  0613  00B6               	movwf	(0+(?___ftsub)+03h)
   625  0614  0834               	movf	(1+?___awtoft),w
   626  0615  00B7               	movwf	(1+(?___ftsub)+03h)
   627  0616  0835               	movf	(2+?___awtoft),w
   628  0617  00B8               	movwf	(2+(?___ftsub)+03h)
   629                           	
   630                           	
   631  0618  0824               	movf	(_LCDWriteFloat_FloatNumber),w
   632  0619  00B3               	movwf	(?___ftsub)
   633  061A  0825               	movf	(_LCDWriteFloat_FloatNumber+1),w
   634  061B  00B4               	movwf	(?___ftsub+1)
   635  061C  0826               	movf	(_LCDWriteFloat_FloatNumber+2),w
   636  061D  00B5               	movwf	(?___ftsub+2)
   637  061E  120A  158A  2680   	fcall	___ftsub
              120A  118A         
   638  0623  1283               	bcf	status, 5	;RP0=0, select bank0
   639  0624  1303               	bcf	status, 6	;RP1=0, select bank0
   640                           	
   641  0625  0833               	movf	(0+?___ftsub),w
   642  0626  00B9               	movwf	(?___ftadd)
   643  0627  0834               	movf	(1+?___ftsub),w
   644  0628  00BA               	movwf	(?___ftadd+1)
   645  0629  0835               	movf	(2+?___ftsub),w
   646  062A  00BB               	movwf	(?___ftadd+2)
   647                           	
   648  062B  3000               	movlw	0x0
   649  062C  00BC               	movwf	(0+(?___ftadd)+03h)
   650  062D  3080               	movlw	0x80
   651  062E  00BD               	movwf	(1+(?___ftadd)+03h)
   652  062F  303F               	movlw	0x3f
   653  0630  00BE               	movwf	(2+(?___ftadd)+03h)
   654  0631  120A  118A  2484   	fcall	___ftadd
              120A  118A         
   655  0636  1283               	bcf	status, 5	;RP0=0, select bank0
   656  0637  1303               	bcf	status, 6	;RP1=0, select bank0
   657                           	
   658  0638  0839               	movf	(0+?___ftadd),w
   659  0639  00B9               	movwf	(?___ftmul)
   660  063A  083A               	movf	(1+?___ftadd),w
   661  063B  00BA               	movwf	(?___ftmul+1)
   662  063C  083B               	movf	(2+?___ftadd),w
   663  063D  00BB               	movwf	(?___ftmul+2)
   664                           	
   665  063E  3000               	movlw	0x0
   666  063F  00BC               	movwf	(0+(?___ftmul)+03h)
   667  0640  307A               	movlw	0x7a
   668  0641  00BD               	movwf	(1+(?___ftmul)+03h)
   669  0642  3044               	movlw	0x44
   670  0643  00BE               	movwf	(2+(?___ftmul)+03h)
   671  0644  120A  118A  231B   	fcall	___ftmul
              120A  118A         
   672  0649  1283               	bcf	status, 5	;RP0=0, select bank0
   673  064A  1303               	bcf	status, 6	;RP1=0, select bank0
   674                           	
   675  064B  0839               	movf	(0+?___ftmul),w
   676  064C  00A4               	movwf	(_LCDWriteFloat_FloatNumber)
   677  064D  083A               	movf	(1+?___ftmul),w
   678  064E  00A5               	movwf	(_LCDWriteFloat_FloatNumber+1)
   679  064F  083B               	movf	(2+?___ftmul),w
   680  0650  00A6               	movwf	(_LCDWriteFloat_FloatNumber+2)
   681                           	line	104
   682                           ;LCD.c: 104: n = FloatNumber;
   683                           	
   684                           	
   685  0651  0824               	movf	(_LCDWriteFloat_FloatNumber),w
   686  0652  00B3               	movwf	(?___fttol)
   687  0653  0825               	movf	(_LCDWriteFloat_FloatNumber+1),w
   688  0654  00B4               	movwf	(?___fttol+1)
   689  0655  0826               	movf	(_LCDWriteFloat_FloatNumber+2),w
   690  0656  00B5               	movwf	(?___fttol+2)
   691  0657  120A  118A  2128   	fcall	___fttol
              120A  118A         
   692  065C  1283               	bcf	status, 5	;RP0=0, select bank0
   693  065D  1303               	bcf	status, 6	;RP1=0, select bank0
   694                           	
   695  065E  0834               	movf	(1+?___fttol),w
   696  065F  01AB               	clrf	(_LCDWriteFloat_n+1)
   697  0660  07AB               	addwf	(_LCDWriteFloat_n+1)
   698  0661  0833               	movf	(0+?___fttol),w
   699  0662  01AA               	clrf	(_LCDWriteFloat_n)
   700  0663  07AA               	addwf	(_LCDWriteFloat_n)
   701                           
   702                           	line	106
   703                           ;LCD.c: 106: while(n > 0)
   704  0664  2E9A               	goto	l31
   705                           	
   706  0665                     l32:	
   707                           	line	108
   708                           ;LCD.c: 107: {
   709                           ;LCD.c: 108: c[i++] = (n % 10) + 48;
   710  0665  300A               	movlw	low(0Ah)
   711                           	
   712  0666  00BF               	movwf	(0+(?___awmod)+02h)
   713  0667  3000               	movlw	high(0Ah)
   714  0668  00C0               	movwf	((0+(?___awmod)+02h))+1
   715                           	
   716                           	
   717  0669  082B               	movf	(_LCDWriteFloat_n+1),w
   718  066A  01BE               	clrf	(?___awmod+1)
   719  066B  07BE               	addwf	(?___awmod+1)
   720  066C  082A               	movf	(_LCDWriteFloat_n),w
   721  066D  01BD               	clrf	(?___awmod)
   722  066E  07BD               	addwf	(?___awmod)
   723                           
   724  066F  120A  118A  20CD   	fcall	___awmod
              120A  118A         
   725  0674  1283               	bcf	status, 5	;RP0=0, select bank0
   726  0675  1303               	bcf	status, 6	;RP1=0, select bank0
   727  0676  083D               	movf	(0+?___awmod),w
   728  0677  3E30               	addlw	030h
   729  0678  00B2               	movwf	(??_LCDWriteFloat+11+0)
   730                           	
   731  0679  0827               	movf	(_LCDWriteFloat_i),w
   732  067A  3E2C               	addlw	(_LCDWriteFloat_c)&0ffh
   733  067B  1383               	bcf	status, 7	;select IRP bank0
   734                           	
   735  067C  0084               	movwf	fsr0
   736  067D  0832               	movf	(??_LCDWriteFloat+11+0),w
   737  067E  0080               	movwf	indf
   738  067F  3001               	movlw	(01h)
   739  0680  00B2               	movwf	(??_LCDWriteFloat+11+0)
   740+                          	
   741+ 0681  0832               	movf	(??_LCDWriteFloat+11+0),w
   742+ 0682  07A7               	addwf	(_LCDWriteFloat_i),f
   743                           	line	109
   744                           ;LCD.c: 109: n /= 10;
   745  0683  300A               	movlw	low(0Ah)
   746                           	
   747  0684  00BF               	movwf	(0+(?___awdiv)+02h)
   748  0685  3000               	movlw	high(0Ah)
   749  0686  00C0               	movwf	((0+(?___awdiv)+02h))+1
   750                           	
   751                           	
   752  0687  082B               	movf	(_LCDWriteFloat_n+1),w
   753  0688  01BE               	clrf	(?___awdiv+1)
   754  0689  07BE               	addwf	(?___awdiv+1)
   755  068A  082A               	movf	(_LCDWriteFloat_n),w
   756  068B  01BD               	clrf	(?___awdiv)
   757  068C  07BD               	addwf	(?___awdiv)
   758                           
   759  068D  120A  118A  219B   	fcall	___awdiv
              120A  118A         
   760  0692  1283               	bcf	status, 5	;RP0=0, select bank0
   761  0693  1303               	bcf	status, 6	;RP1=0, select bank0
   762                           	
   763  0694  083E               	movf	(1+?___awdiv),w
   764  0695  01AB               	clrf	(_LCDWriteFloat_n+1)
   765  0696  07AB               	addwf	(_LCDWriteFloat_n+1)
   766  0697  083D               	movf	(0+?___awdiv),w
   767  0698  01AA               	clrf	(_LCDWriteFloat_n)
   768  0699  07AA               	addwf	(_LCDWriteFloat_n)
   769                           
   770                           	line	110
   771                           	
   772  069A                     l31:	
   773                           	line	106
   774                           	
   775  069A  082B               	movf	(_LCDWriteFloat_n+1),w
   776  069B  3A80               	xorlw	80h
   777  069C  00B2               	movwf	(??_LCDWriteFloat+11+0)
   778  069D  3080               	movlw	(high(01h))^80h
   779  069E  0232               	subwf	(??_LCDWriteFloat+11+0),w
   780  069F  1D03               	skipz
   781  06A0  2EA3               	goto	u25010
   782  06A1                     u25015:
   783  06A1  3001               	movlw	low(01h)
   784  06A2  022A               	subwf	(_LCDWriteFloat_n),w
   785  06A3                     u25010:
   786                           
   787  06A3  1803               	skipnc
   788  06A4  2EA6               	goto	u2501
   789  06A5  2EA7               	goto	u2500
   790  06A6                     u2501:
   791  06A6  2E65               	goto	l32
   792  06A7                     u2500:
   793                           	
   794  06A7                     l33:	
   795                           	line	111
   796                           ;LCD.c: 110: }
   797                           ;LCD.c: 111: i -= 1;
   798                           	
   799                           	
   800  06A7  3001               	movlw	low(01h)
   801  06A8  02A7               	subwf	(_LCDWriteFloat_i),f
   802                           	line	112
   803                           ;LCD.c: 112: while(i-- > 1)
   804  06A9  2EB4               	goto	l34
   805                           	
   806  06AA                     l35:	
   807                           	line	113
   808                           ;LCD.c: 113: LCDWriteData(c[i]);
   809                           	
   810  06AA  0827               	movf	(_LCDWriteFloat_i),w
   811  06AB  3E2C               	addlw	(_LCDWriteFloat_c)&0ffh
   812  06AC  1383               	bcf	status, 7	;select IRP bank0
   813                           	
   814  06AD  0084               	movwf	fsr0
   815  06AE  0800               	movf	indf,w
   816  06AF  120A  158A  2620   	fcall	_LCDWriteData
              120A  118A         
   817                           	
   818  06B4                     l34:	
   819                           	line	112
   820                           	
   821  06B4  1283               	bcf	status, 5	;RP0=0, select bank0
   822  06B5  1303               	bcf	status, 6	;RP1=0, select bank0
   823                           	
   824  06B6  3001               	movlw	low(01h)
   825  06B7  02A7               	subwf	(_LCDWriteFloat_i),f
   826  06B8  3001               	movlw	(01h)
   827  06B9  0227               	subwf	((_LCDWriteFloat_i))&07fh,w
   828  06BA  1803               	skipnc
   829  06BB  2EBD               	goto	u2511
   830  06BC  2EBE               	goto	u2510
   831  06BD                     u2511:
   832  06BD  2EAA               	goto	l35
   833  06BE                     u2510:
   834                           	
   835  06BE                     l36:	
   836                           	line	115
   837                           ;LCD.c: 115: if(Temp < 10)
   838                           	
   839  06BE  0829               	movf	(_LCDWriteFloat_Temp+1),w
   840  06BF  3A80               	xorlw	80h
   841  06C0  00B2               	movwf	(??_LCDWriteFloat+11+0)
   842  06C1  3080               	movlw	(high(0Ah))^80h
   843  06C2  0232               	subwf	(??_LCDWriteFloat+11+0),w
   844  06C3  1D03               	skipz
   845  06C4  2EC7               	goto	u25210
   846  06C5                     u25215:
   847  06C5  300A               	movlw	low(0Ah)
   848  06C6  0228               	subwf	(_LCDWriteFloat_Temp),w
   849  06C7                     u25210:
   850                           
   851  06C7  1803               	skipnc
   852  06C8  2ECA               	goto	u2521
   853  06C9  2ECB               	goto	u2520
   854  06CA                     u2521:
   855  06CA  2ED7               	goto	l37
   856  06CB                     u2520:
   857                           	line	117
   858                           ;LCD.c: 116: {
   859                           ;LCD.c: 117: LCDWriteCommand(0xcc);
   860  06CB  30CC               	movlw	(0CCh)
   861  06CC  120A  118A  27F5   	fcall	_LCDWriteCommand
              120A  118A         
   862                           	line	118
   863                           ;LCD.c: 118: LCDWriteString("  ");
   864  06D1  3012               	movlw	((STR_2-__stringbase))&0ffh
   865  06D2  120A  118A  20AA   	fcall	_LCDWriteString
              120A  118A         
   866                           	line	120
   867                           	
   868  06D7                     l37:	
   869                           	line	121
   870                           ;LCD.c: 120: }
   871                           ;LCD.c: 121: if(Temp >= 10 && Temp < 100)
   872  06D7  1283               	bcf	status, 5	;RP0=0, select bank0
   873  06D8  1303               	bcf	status, 6	;RP1=0, select bank0
   874                           	
   875  06D9  0829               	movf	(_LCDWriteFloat_Temp+1),w
   876  06DA  3A80               	xorlw	80h
   877  06DB  00B2               	movwf	(??_LCDWriteFloat+11+0)
   878  06DC  3080               	movlw	(high(0Ah))^80h
   879  06DD  0232               	subwf	(??_LCDWriteFloat+11+0),w
   880  06DE  1D03               	skipz
   881  06DF  2EE2               	goto	u25310
   882  06E0                     u25315:
   883  06E0  300A               	movlw	low(0Ah)
   884  06E1  0228               	subwf	(_LCDWriteFloat_Temp),w
   885  06E2                     u25310:
   886                           
   887  06E2  1C03               	skipc
   888  06E3  2EE5               	goto	u2531
   889  06E4  2EE6               	goto	u2530
   890  06E5                     u2531:
   891  06E5  2EFF               	goto	l38
   892  06E6                     u2530:
   893                           	
   894  06E6  0829               	movf	(_LCDWriteFloat_Temp+1),w
   895  06E7  3A80               	xorlw	80h
   896  06E8  00B2               	movwf	(??_LCDWriteFloat+11+0)
   897  06E9  3080               	movlw	(high(064h))^80h
   898  06EA  0232               	subwf	(??_LCDWriteFloat+11+0),w
   899  06EB  1D03               	skipz
   900  06EC  2EEF               	goto	u25410
   901  06ED                     u25415:
   902  06ED  3064               	movlw	low(064h)
   903  06EE  0228               	subwf	(_LCDWriteFloat_Temp),w
   904  06EF                     u25410:
   905                           
   906  06EF  1803               	skipnc
   907  06F0  2EF2               	goto	u2541
   908  06F1  2EF3               	goto	u2540
   909  06F2                     u2541:
   910  06F2  2EFF               	goto	l38
   911  06F3                     u2540:
   912                           	line	123
   913                           ;LCD.c: 122: {
   914                           ;LCD.c: 123: LCDWriteCommand(0xcd);
   915  06F3  30CD               	movlw	(0CDh)
   916  06F4  120A  118A  27F5   	fcall	_LCDWriteCommand
              120A  118A         
   917                           	line	124
   918                           ;LCD.c: 124: LCDWriteString(" ");
   919  06F9  3013               	movlw	((STR_3-__stringbase))&0ffh
   920  06FA  120A  118A  20AA   	fcall	_LCDWriteString
              120A  118A         
   921                           	line	126
   922                           	
   923  06FF                     l38:	
   924                           	line	127
   925                           ;LCD.c: 126: }
   926                           ;LCD.c: 127: }
   927  06FF                     l29:	
   928  06FF  0008               	return
   929                           ; =============== function _LCDWriteFloat ends 
                                 ===============
   930                           
   931                           GLOBAL __end_of_LCDWriteFloat
   932  0700                     	__end_of_LCDWriteFloat:
   933                           	FNSIZE	_LCDWriteFloat,12,3
   934                           	signat	_LCDWriteFloat,4216
   935                           	global	_ADCReadData
   936                           	global	??_ADCReadData
   937                           	global	?_ADCReadData
   938                           
   939                           ; *************** function _ADCReadData *******
                                 ********
   940                           ; Defined at:
   941                           ;		line 13 in file "C:\Users\Suchitra\Desktop\h
                                 ardik\codes\LM35 wala\adc.c"
   942                           ; Parameters:
   943                           ;		ChannelNumbe	reg:   wr	type: unsigned char 
   944                           ; Auto variables:
   945                           ;		count       	       	type: unsigned char 
   946                           ;		ChannelNumbe	       	type: unsigned char 
   947                           ;		i           	       	type: unsigned char 
   948                           ;		y           	       	type: unsigned int 
   949                           ;		z           	       	type: unsigned int 
   950                           ;		x           	       	type: unsigned int 
   951                           ;		f           	       	type: float 
   952                           ;		p           	       	type: float 
   953                           ; Return value:
   954                           ;		type: float 
   955                           ;		size: 3
   956                           ; Registers used:
   957                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
                                 th, cstack
   958                           ; Tracked objects:
   959                           ;		On entry : 0/0
   960                           ;		On exit  : 0/0
   961                           ;		Unchanged: 0/0
   962                           ; Data sizes:
   963                           ;		Autos:   14
   964                           ;		Params:   3
   965                           ;		Temp:     4
   966                           ;		Total:   21
   967                           ; This function calls:
   968                           ;		___lwtoft
   969                           ;		___ftmul
   970                           ;		___ftdiv
   971                           ;		___ftadd
   972                           ;		_Delay
   973                           ; This function is called by:
   974                           ;		_main
   975                           ; This function uses a non-reentrant model
   976                           ; 
   977                           	psect	text189,local,class=CODE,delta=2
   978                           	file	"C:\Users\Suchitra\Desktop\hardik\codes\L
                                 M35 wala\adc.c"
   979                           	line	13
   980                           ;adc.c: 12: float ADCReadData(unsigned char Cha
                                 nnelNumber)
   981                           ;adc.c: 13: {
   982                           	
   983  0723                     _ADCReadData:	
   984                           	opt stack 6
   985                           ; Regs used in _ADCReadData: [wreg-fsr0h+status
                                 ,2+status,0+pclath+cstack]
   986                           ;_ADCReadData_ChannelNumber stored from wreg
   987                           	line	16
   988  0723  1283               	bcf	status, 5	;RP0=0, select bank0
   989  0724  1303               	bcf	status, 6	;RP1=0, select bank0
   990                           	
   991  0725  00A7               	movwf	(_ADCReadData_ChannelNumber)
   992                           ;adc.c: 14: unsigned char count,i;
   993                           ;adc.c: 15: unsigned x,y,z;
   994                           ;adc.c: 16: float p=0,f;
   995                           	
   996  0726  3000               	movlw	0x0
   997  0727  00B2               	movwf	(_ADCReadData_p)
   998  0728  3000               	movlw	0x0
   999  0729  00B3               	movwf	(_ADCReadData_p+1)
  1000  072A  3000               	movlw	0x0
  1001  072B  00B4               	movwf	(_ADCReadData_p+2)
  1002                           	line	17
  1003                           ;adc.c: 17: ADCON0 = ((ADCON0 & 0xc7) | (Channe
                                 lNumber));
  1004                           	
  1005                           	
  1006  072C  081F               	movf	(31),w	;volatile
  1007  072D  39C7               	andlw	0C7h
  1008  072E  0427               	iorwf	(_ADCReadData_ChannelNumber),w
  1009                           	
  1010  072F  009F               	movwf	(31)	;volatile
  1011                           	line	19
  1012                           ;adc.c: 19: for(i=0;i<100;i++)
  1013  0730  1003               	clrc
  1014                           	
  1015  0731  3000               	movlw	0
  1016  0732  1803               	btfsc	status,0
  1017  0733  3001               	movlw	1
  1018  0734  00A8               	movwf	(_ADCReadData_i)
  1019  0735  2F36               	goto	l50
  1020                           	line	20
  1021                           	
  1022  0736                     l50:	
  1023                           	line	22
  1024                           ;adc.c: 20: {
  1025                           ;adc.c: 22: ADON = 1;
  1026  0736  141F               	bsf	(248/8),(248)&7
  1027                           	line	23
  1028                           ;adc.c: 23: ADCON0 |= 0x04;
  1029                           	
  1030  0737  151F               	bsf	(31)+(2/8),(2)&7	;volatile
  1031                           	line	24
  1032                           ;adc.c: 24: while( (ADCON0 & 0x04) == 0x04);
  1033  0738  2F39               	goto	l53
  1034                           	
  1035  0739                     l53:	
  1036                           	
  1037  0739  191F               	btfsc	(31),(2)&7	;volatile
  1038  073A  2F3C               	goto	u2641
  1039  073B  2F3D               	goto	u2640
  1040  073C                     u2641:
  1041  073C  2F39               	goto	l53
  1042  073D                     u2640:
  1043                           	
  1044  073D                     l55:	
  1045                           	line	26
  1046                           ;adc.c: 26: x=ADRESH;
  1047                           	
  1048  073D  081E               	movf	(30),w	;volatile
  1049  073E  00B5               	movwf	(??_ADCReadData+14+0)
  1050  073F  01B6               	clrf	(??_ADCReadData+14+0+1)
  1051                           	
  1052  0740  0835               	movf	0+(??_ADCReadData+14+0),w
  1053  0741  00A9               	movwf	(_ADCReadData_x)
  1054  0742  0836               	movf	1+(??_ADCReadData+14+0),w
  1055  0743  00AA               	movwf	(_ADCReadData_x+1)
  1056                           	line	27
  1057                           ;adc.c: 27: y=ADRESL;
  1058  0744  1683               	bsf	status, 5	;RP0=1, select bank1
  1059  0745  1303               	bcf	status, 6	;RP1=0, select bank1
  1060                           	
  1061  0746  081E               	movf	(158)^080h,w	;volatile
  1062  0747  1283               	bcf	status, 5	;RP0=0, select bank0
  1063  0748  1303               	bcf	status, 6	;RP1=0, select bank0
  1064  0749  00B5               	movwf	(??_ADCReadData+14+0)
  1065  074A  01B6               	clrf	(??_ADCReadData+14+0+1)
  1066                           	
  1067  074B  0835               	movf	0+(??_ADCReadData+14+0),w
  1068  074C  00AD               	movwf	(_ADCReadData_y)
  1069  074D  0836               	movf	1+(??_ADCReadData+14+0),w
  1070  074E  00AE               	movwf	(_ADCReadData_y+1)
  1071                           	line	29
  1072                           ;adc.c: 29: z=(x*256)+y;
  1073                           	
  1074                           	
  1075  074F  082A               	movf	(_ADCReadData_x+1),w
  1076  0750  00B6               	movwf	(??_ADCReadData+14+0+1)
  1077  0751  0829               	movf	(_ADCReadData_x),w
  1078  0752  00B5               	movwf	(??_ADCReadData+14+0)
  1079  0753  3008               	movlw	08h
  1080  0754  00B7               	movwf	(??_ADCReadData+16+0)
  1081  0755                     u2655:
  1082  0755  1003               	clrc
  1083  0756  0DB5               	rlf	(??_ADCReadData+14+0),f
  1084  0757  0DB6               	rlf	(??_ADCReadData+14+1),f
  1085  0758  0BB7               	decfsz	(??_ADCReadData+16+0),f
  1086  0759  2F55               	goto	u2655
  1087  075A  082D               	movf	(_ADCReadData_y),w
  1088  075B  0735               	addwf	0+(??_ADCReadData+14+0),w
  1089                           	
  1090  075C  00AB               	movwf	(_ADCReadData_z)
  1091  075D  082E               	movf	(_ADCReadData_y+1),w
  1092  075E  1803               	skipnc
  1093  075F  0A2E               	incf	(_ADCReadData_y+1),w
  1094  0760  0736               	addwf	1+(??_ADCReadData+14+0),w
  1095  0761  00AC               	movwf	1+(_ADCReadData_z)
  1096                           	line	30
  1097                           ;adc.c: 30: f=z;
  1098                           	
  1099                           	
  1100  0762  082C               	movf	(_ADCReadData_z+1),w
  1101  0763  01BA               	clrf	(?___lwtoft+1)
  1102  0764  07BA               	addwf	(?___lwtoft+1)
  1103  0765  082B               	movf	(_ADCReadData_z),w
  1104  0766  01B9               	clrf	(?___lwtoft)
  1105  0767  07B9               	addwf	(?___lwtoft)
  1106                           
  1107  0768  120A  158A  269D   	fcall	___lwtoft
              120A  118A         
  1108  076D  1283               	bcf	status, 5	;RP0=0, select bank0
  1109  076E  1303               	bcf	status, 6	;RP1=0, select bank0
  1110                           	
  1111  076F  0839               	movf	(0+?___lwtoft),w
  1112  0770  00AF               	movwf	(_ADCReadData_f)
  1113  0771  083A               	movf	(1+?___lwtoft),w
  1114  0772  00B0               	movwf	(_ADCReadData_f+1)
  1115  0773  083B               	movf	(2+?___lwtoft),w
  1116  0774  00B1               	movwf	(_ADCReadData_f+2)
  1117                           	line	31
  1118                           ;adc.c: 31: p +=(f*5)/1023;
  1119                           	
  1120  0775  3000               	movlw	0x0
  1121  0776  00BC               	movwf	(0+(?___ftmul)+03h)
  1122  0777  30A0               	movlw	0xa0
  1123  0778  00BD               	movwf	(1+(?___ftmul)+03h)
  1124  0779  3040               	movlw	0x40
  1125  077A  00BE               	movwf	(2+(?___ftmul)+03h)
  1126                           	
  1127                           	
  1128  077B  082F               	movf	(_ADCReadData_f),w
  1129  077C  00B9               	movwf	(?___ftmul)
  1130  077D  0830               	movf	(_ADCReadData_f+1),w
  1131  077E  00BA               	movwf	(?___ftmul+1)
  1132  077F  0831               	movf	(_ADCReadData_f+2),w
  1133  0780  00BB               	movwf	(?___ftmul+2)
  1134  0781  120A  118A  231B   	fcall	___ftmul
              120A  118A         
  1135  0786  1283               	bcf	status, 5	;RP0=0, select bank0
  1136  0787  1303               	bcf	status, 6	;RP1=0, select bank0
  1137                           	
  1138  0788  0839               	movf	(0+?___ftmul),w
  1139  0789  00B9               	movwf	(?___ftdiv)
  1140  078A  083A               	movf	(1+?___ftmul),w
  1141  078B  00BA               	movwf	(?___ftdiv+1)
  1142  078C  083B               	movf	(2+?___ftmul),w
  1143  078D  00BB               	movwf	(?___ftdiv+2)
  1144                           	
  1145  078E  30C0               	movlw	0xc0
  1146  078F  00BC               	movwf	(0+(?___ftdiv)+03h)
  1147  0790  307F               	movlw	0x7f
  1148  0791  00BD               	movwf	(1+(?___ftdiv)+03h)
  1149  0792  3044               	movlw	0x44
  1150  0793  00BE               	movwf	(2+(?___ftdiv)+03h)
  1151  0794  120A  118A  228C   	fcall	___ftdiv
              120A  118A         
  1152  0799  1283               	bcf	status, 5	;RP0=0, select bank0
  1153  079A  1303               	bcf	status, 6	;RP1=0, select bank0
  1154                           	
  1155  079B  0839               	movf	(0+?___ftdiv),w
  1156  079C  00BC               	movwf	(0+(?___ftadd)+03h)
  1157  079D  083A               	movf	(1+?___ftdiv),w
  1158  079E  00BD               	movwf	(1+(?___ftadd)+03h)
  1159  079F  083B               	movf	(2+?___ftdiv),w
  1160  07A0  00BE               	movwf	(2+(?___ftadd)+03h)
  1161                           	
  1162                           	
  1163  07A1  0832               	movf	(_ADCReadData_p),w
  1164  07A2  00B9               	movwf	(?___ftadd)
  1165  07A3  0833               	movf	(_ADCReadData_p+1),w
  1166  07A4  00BA               	movwf	(?___ftadd+1)
  1167  07A5  0834               	movf	(_ADCReadData_p+2),w
  1168  07A6  00BB               	movwf	(?___ftadd+2)
  1169  07A7  120A  118A  2484   	fcall	___ftadd
              120A  118A         
  1170  07AC  1283               	bcf	status, 5	;RP0=0, select bank0
  1171  07AD  1303               	bcf	status, 6	;RP1=0, select bank0
  1172                           	
  1173  07AE  0839               	movf	(0+?___ftadd),w
  1174  07AF  00B2               	movwf	(_ADCReadData_p)
  1175  07B0  083A               	movf	(1+?___ftadd),w
  1176  07B1  00B3               	movwf	(_ADCReadData_p+1)
  1177  07B2  083B               	movf	(2+?___ftadd),w
  1178  07B3  00B4               	movwf	(_ADCReadData_p+2)
  1179                           	line	32
  1180                           ;adc.c: 32: Delay(1);
  1181  07B4  3001               	movlw	low(01h)
  1182                           	
  1183  07B5  00C0               	movwf	(?_Delay)
  1184  07B6  3000               	movlw	high(01h)
  1185  07B7  00C1               	movwf	((?_Delay))+1
  1186  07B8  120A  158A  2667   	fcall	_Delay
              120A  118A         
  1187                           	line	19
  1188  07BD  3001               	movlw	(01h)
  1189  07BE  1283               	bcf	status, 5	;RP0=0, select bank0
  1190  07BF  1303               	bcf	status, 6	;RP1=0, select bank0
  1191  07C0  00B5               	movwf	(??_ADCReadData+14+0)
  1192                           	
  1193  07C1  0835               	movf	(??_ADCReadData+14+0),w
  1194  07C2  07A8               	addwf	(_ADCReadData_i),f
  1195  07C3  3064               	movlw	(064h)
  1196                           	
  1197  07C4  0228               	subwf	(_ADCReadData_i),w
  1198  07C5  1C03               	skipc
  1199  07C6  2FC8               	goto	u2661
  1200  07C7  2FC9               	goto	u2660
  1201  07C8                     u2661:
  1202  07C8  2F36               	goto	l50
  1203  07C9                     u2660:
  1204                           	
  1205  07C9                     l51:	
  1206                           	line	34
  1207                           ;adc.c: 33: }
  1208                           ;adc.c: 34: p/=100;
  1209                           	
  1210  07C9  3000               	movlw	0x0
  1211  07CA  00BC               	movwf	(0+(?___ftdiv)+03h)
  1212  07CB  30C8               	movlw	0xc8
  1213  07CC  00BD               	movwf	(1+(?___ftdiv)+03h)
  1214  07CD  3042               	movlw	0x42
  1215  07CE  00BE               	movwf	(2+(?___ftdiv)+03h)
  1216                           	
  1217                           	
  1218  07CF  0832               	movf	(_ADCReadData_p),w
  1219  07D0  00B9               	movwf	(?___ftdiv)
  1220  07D1  0833               	movf	(_ADCReadData_p+1),w
  1221  07D2  00BA               	movwf	(?___ftdiv+1)
  1222  07D3  0834               	movf	(_ADCReadData_p+2),w
  1223  07D4  00BB               	movwf	(?___ftdiv+2)
  1224  07D5  120A  118A  228C   	fcall	___ftdiv
              120A  118A         
  1225  07DA  1283               	bcf	status, 5	;RP0=0, select bank0
  1226  07DB  1303               	bcf	status, 6	;RP1=0, select bank0
  1227                           	
  1228  07DC  0839               	movf	(0+?___ftdiv),w
  1229  07DD  00B2               	movwf	(_ADCReadData_p)
  1230  07DE  083A               	movf	(1+?___ftdiv),w
  1231  07DF  00B3               	movwf	(_ADCReadData_p+1)
  1232  07E0  083B               	movf	(2+?___ftdiv),w
  1233  07E1  00B4               	movwf	(_ADCReadData_p+2)
  1234                           	line	35
  1235                           ;adc.c: 35: Delay(1);
  1236  07E2  3001               	movlw	low(01h)
  1237                           	
  1238  07E3  00C0               	movwf	(?_Delay)
  1239  07E4  3000               	movlw	high(01h)
  1240  07E5  00C1               	movwf	((?_Delay))+1
  1241  07E6  120A  158A  2667   	fcall	_Delay
              120A  118A         
  1242                           	line	36
  1243  07EB  1283               	bcf	status, 5	;RP0=0, select bank0
  1244  07EC  1303               	bcf	status, 6	;RP1=0, select bank0
  1245                           	
  1246                           	
  1247  07ED  0832               	movf	(_ADCReadData_p),w
  1248  07EE  00A4               	movwf	(?_ADCReadData)
  1249  07EF  0833               	movf	(_ADCReadData_p+1),w
  1250  07F0  00A5               	movwf	(?_ADCReadData+1)
  1251  07F1  0834               	movf	(_ADCReadData_p+2),w
  1252  07F2  00A6               	movwf	(?_ADCReadData+2)
  1253  07F3  2FF4               	goto	l49
  1254                           	line	38
  1255                           ;adc.c: 38: }
  1256  07F4                     l49:	
  1257  07F4  0008               	return
  1258                           ; =============== function _ADCReadData ends ==
                                 =============
  1259                           
  1260                           GLOBAL __end_of_ADCReadData
  1261  07F5                     	__end_of_ADCReadData:
  1262                           	FNSIZE	_ADCReadData,18,3
  1263                           	signat	_ADCReadData,4219
  1264                           	global	_MainSystemInitialize
  1265                           	global	??_MainSystemInitialize
  1266                           	global	?_MainSystemInitialize
  1267                           
  1268                           ; *************** function _MainSystemInitializ
                                 e ***************
  1269                           ; Defined at:
  1270                           ;		line 32 in file "C:\Users\Suchitra\Desktop\h
                                 ardik\codes\LM35 wala\main3.c"
  1271                           ; Parameters:
  1272                           ;		None
  1273                           ; Auto variables:
  1274                           ;		None
  1275                           ; Return value:
  1276                           ;		type: void 
  1277                           ;		size: 0
  1278                           ; Registers used:
  1279                           ;		wreg, status,2, status,0, pclath, cstack
  1280                           ; Tracked objects:
  1281                           ;		On entry : BFF/0
  1282                           ;		On exit  : 0/0
  1283                           ;		Unchanged: 0/0
  1284                           ; Data sizes:
  1285                           ;		Autos:    0
  1286                           ;		Params:   0
  1287                           ;		Temp:     0
  1288                           ;		Total:    0
  1289                           ; This function calls:
  1290                           ;		_ADCInitialize
  1291                           ;		_LCDInitialize
  1292                           ; This function is called by:
  1293                           ;		_main
  1294                           ; This function uses a non-reentrant model
  1295                           ; 
  1296                           	psect	text190,local,class=CODE,delta=2
  1297                           	file	"C:\Users\Suchitra\Desktop\hardik\codes\L
                                 M35 wala\main3.c"
  1298                           	line	32
  1299                           ;main3.c: 31: static void MainSystemInitialize(
                                 void)
  1300                           ;main3.c: 32: {
  1301                           	
  1302  0E15                     _MainSystemInitialize:	
  1303                           	opt stack 6
  1304                           ; Regs used in _MainSystemInitialize: [wreg+sta
                                 tus,2+status,0+pclath+cstack]
  1305                           	line	33
  1306                           ;main3.c: 33: ADCInitialize();
  1307  0E15  120A  158A  2644   	fcall	_ADCInitialize
              120A  158A         
  1308                           	line	34
  1309                           ;main3.c: 34: LCDInitialize();
  1310  0E1A  120A  158A  26C7   	fcall	_LCDInitialize
              120A  158A         
  1311                           	line	35
  1312                           ;main3.c: 35: }
  1313  0E1F                     l63:	
  1314  0E1F  0008               	return
  1315                           ; =============== function _MainSystemInitializ
                                 e ends ===============
  1316                           
  1317                           GLOBAL __end_of_MainSystemInitialize
  1318  0E20                     	__end_of_MainSystemInitialize:
  1319                           	FNSIZE	_MainSystemInitialize,0,0
  1320                           	signat	_MainSystemInitialize,88
  1321                           	global	___ftmul
  1322                           	global	??___ftmul
  1323                           	global	?___ftmul
  1324                           
  1325                           ; *************** function ___ftmul ***********
                                 ****
  1326                           ; Defined at:
  1327                           ;		line 18 in file "C:\Program Files (x86)\HI-T
                                 ECH Software\PICC\PRO\9.65\sources\ftmul.c"
  1328                           ; Parameters:
  1329                           ;		f1          	offs:   0	type: float 
  1330                           ;		f2          	offs:   3	type: float 
  1331                           ; Auto variables:
  1332                           ;		sign1       	       	type: unsigned char 
  1333                           ;		exp1        	       	type: unsigned char 
  1334                           ;		cntr        	       	type: unsigned char 
  1335                           ;		f3          	       	type: float 
  1336                           ; Return value:
  1337                           ;		type: float 
  1338                           ;		size: 3
  1339                           ; Registers used:
  1340                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
                                 th, cstack
  1341                           ; Tracked objects:
  1342                           ;		On entry : 300/0
  1343                           ;		On exit  : 0/0
  1344                           ;		Unchanged: 0/0
  1345                           ; Data sizes:
  1346                           ;		Autos:    6
  1347                           ;		Params:   6
  1348                           ;		Temp:     1
  1349                           ;		Total:   13
  1350                           ; This function calls:
  1351                           ;		___ftunpack
  1352                           ;		___ftpack
  1353                           ; This function is called by:
  1354                           ;		_LCDWriteFloat
  1355                           ;		_ADCReadData
  1356                           ;		_main
  1357                           ; This function uses a non-reentrant model
  1358                           ; 
  1359                           	psect	text191,local,class=CODE,delta=2
  1360                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\ftmul.c"
  1361                           	line	18
  1362                           	
  1363  031B                     ___ftmul:	
  1364                           	opt stack 5
  1365                           ; Regs used in ___ftmul: [wreg-fsr0h+status,2+s
                                 tatus,0+pclath+cstack]
  1366                           	line	22
  1367                           	
  1368  031B  3000               	movlw	0
  1369  031C  00C2               	movwf	(___ftmul_f3)
  1370  031D  3000               	movlw	0
  1371  031E  00C3               	movwf	(___ftmul_f3+1)
  1372  031F  3000               	movlw	0
  1373  0320  00C4               	movwf	(___ftmul_f3+2)
  1374                           	line	23
  1375                           	
  1376  0321  3040               	movlw	((___ftmul_exp1))&0ffh
  1377                           	
  1378  0322  00C7               	movwf	(?___ftunpack)
  1379                           	
  1380  0323  3039               	movlw	((___ftmul_f1))&0ffh
  1381  0324  120A  158A  27A6   	fcall	___ftunpack
              120A  118A         
  1382  0329  1283               	bcf	status, 5	;RP0=0, select bank0
  1383  032A  1303               	bcf	status, 6	;RP1=0, select bank0
  1384                           	
  1385  032B  00BF               	movwf	(___ftmul_sign1)
  1386                           	line	24
  1387                           	
  1388  032C  3041               	movlw	((___ftmul_cntr))&0ffh
  1389                           	
  1390  032D  00C7               	movwf	(?___ftunpack)
  1391                           	
  1392  032E  303C               	movlw	((___ftmul_f2))&0ffh
  1393  032F  120A  158A  27A6   	fcall	___ftunpack
              120A  118A         
  1394  0334  1283               	bcf	status, 5	;RP0=0, select bank0
  1395  0335  1303               	bcf	status, 6	;RP1=0, select bank0
  1396  0336  00C5               	movwf	(??___ftmul+6+0)
  1397                           	
  1398  0337  0845               	movf	(??___ftmul+6+0),w
  1399  0338  06BF               	xorwf	(___ftmul_sign1),f
  1400                           	line	25
  1401                           	
  1402  0339  08C1               	movf	(___ftmul_cntr),f
  1403  033A  1D03               	skipz
  1404  033B  2B3D               	goto	u2950
  1405  033C  2B42               	goto	l600001117
  1406  033D                     u2950:
  1407                           	
  1408  033D  08C0               	movf	(___ftmul_exp1),f
  1409  033E  1D03               	skipz
  1410  033F  2B41               	goto	u2961
  1411  0340  2B42               	goto	u2960
  1412  0341                     u2961:
  1413  0341  2B49               	goto	l148
  1414  0342                     u2960:
  1415                           	
  1416  0342                     l600001117:	
  1417                           	line	26
  1418                           	
  1419                           	
  1420  0342  0842               	movf	(___ftmul_f3),w
  1421  0343  00B9               	movwf	(?___ftmul)
  1422  0344  0843               	movf	(___ftmul_f3+1),w
  1423  0345  00BA               	movwf	(?___ftmul+1)
  1424  0346  0844               	movf	(___ftmul_f3+2),w
  1425  0347  00BB               	movwf	(?___ftmul+2)
  1426  0348  2BBD               	goto	l147
  1427                           	
  1428  0349                     l148:	
  1429                           	line	27
  1430                           	
  1431  0349  0841               	movf	(___ftmul_cntr),w
  1432  034A  3E7B               	addlw	07Bh
  1433  034B  00C5               	movwf	(??___ftmul+6+0)
  1434                           	
  1435  034C  0845               	movf	(??___ftmul+6+0),w
  1436  034D  07C0               	addwf	(___ftmul_exp1),f
  1437                           	line	28
  1438  034E  3007               	movlw	(07h)
  1439                           	
  1440  034F  00C1               	movwf	(___ftmul_cntr)
  1441                           	line	29
  1442                           	
  1443  0350                     l151:	
  1444                           	line	30
  1445                           	
  1446  0350  1C39               	btfss	(___ftmul_f1),(0)&7
  1447  0351  2B53               	goto	u2971
  1448  0352  2B54               	goto	u2970
  1449  0353                     u2971:
  1450  0353  2B62               	goto	l152
  1451  0354                     u2970:
  1452                           	line	31
  1453                           	
  1454                           	
  1455  0354  083C               	movf	(___ftmul_f2),w
  1456  0355  07C2               	addwf	(___ftmul_f3),f
  1457  0356  083D               	movf	(___ftmul_f2+1),w
  1458  0357  1103               	clrz
  1459  0358  1803               	skipnc
  1460  0359  0A3D               	incf	(___ftmul_f2+1),w
  1461  035A  1D03               	skipz
  1462  035B  07C3               	addwf	(___ftmul_f3+1),f
  1463  035C  083E               	movf	(___ftmul_f2+2),w
  1464  035D  1103               	clrz
  1465  035E  1803               	skipnc
  1466  035F  0A3E               	incf	(___ftmul_f2+2),w
  1467  0360  1D03               	skipz
  1468  0361  07C4               	addwf	(___ftmul_f3+2),f
  1469                           	
  1470  0362                     l152:	
  1471                           	line	32
  1472                           	
  1473  0362  3001               	movlw	01h
  1474  0363                     u2985:
  1475  0363  1003               	clrc
  1476  0364  0CBB               	rrf	(___ftmul_f1+2),f
  1477  0365  0CBA               	rrf	(___ftmul_f1+1),f
  1478  0366  0CB9               	rrf	(___ftmul_f1),f
  1479  0367  3EFF               	addlw	-1
  1480  0368  1D03               	skipz
  1481  0369  2B63               	goto	u2985
  1482                           
  1483                           	line	33
  1484                           	
  1485  036A  3001               	movlw	01h
  1486  036B                     u2995:
  1487  036B  1003               	clrc
  1488  036C  0DBC               	rlf	(___ftmul_f2),f
  1489  036D  0DBD               	rlf	(___ftmul_f2+1),f
  1490  036E  0DBE               	rlf	(___ftmul_f2+2),f
  1491  036F  3EFF               	addlw	-1
  1492  0370  1D03               	skipz
  1493  0371  2B6B               	goto	u2995
  1494                           	line	34
  1495                           	
  1496                           	
  1497  0372  3001               	movlw	low(01h)
  1498  0373  02C1               	subwf	(___ftmul_cntr),f
  1499  0374  1D03               	btfss	status,2
  1500  0375  2B77               	goto	u3001
  1501  0376  2B78               	goto	u3000
  1502  0377                     u3001:
  1503  0377  2B50               	goto	l151
  1504  0378                     u3000:
  1505                           	
  1506  0378                     l150:	
  1507                           	line	35
  1508  0378  3009               	movlw	(09h)
  1509                           	
  1510  0379  00C1               	movwf	(___ftmul_cntr)
  1511                           	line	36
  1512                           	
  1513  037A                     l155:	
  1514                           	line	37
  1515                           	
  1516  037A  1C39               	btfss	(___ftmul_f1),(0)&7
  1517  037B  2B7D               	goto	u3011
  1518  037C  2B7E               	goto	u3010
  1519  037D                     u3011:
  1520  037D  2B8C               	goto	l156
  1521  037E                     u3010:
  1522                           	line	38
  1523                           	
  1524                           	
  1525  037E  083C               	movf	(___ftmul_f2),w
  1526  037F  07C2               	addwf	(___ftmul_f3),f
  1527  0380  083D               	movf	(___ftmul_f2+1),w
  1528  0381  1103               	clrz
  1529  0382  1803               	skipnc
  1530  0383  0A3D               	incf	(___ftmul_f2+1),w
  1531  0384  1D03               	skipz
  1532  0385  07C3               	addwf	(___ftmul_f3+1),f
  1533  0386  083E               	movf	(___ftmul_f2+2),w
  1534  0387  1103               	clrz
  1535  0388  1803               	skipnc
  1536  0389  0A3E               	incf	(___ftmul_f2+2),w
  1537  038A  1D03               	skipz
  1538  038B  07C4               	addwf	(___ftmul_f3+2),f
  1539                           	
  1540  038C                     l156:	
  1541                           	line	39
  1542                           	
  1543  038C  3001               	movlw	01h
  1544  038D                     u3025:
  1545  038D  1003               	clrc
  1546  038E  0CBB               	rrf	(___ftmul_f1+2),f
  1547  038F  0CBA               	rrf	(___ftmul_f1+1),f
  1548  0390  0CB9               	rrf	(___ftmul_f1),f
  1549  0391  3EFF               	addlw	-1
  1550  0392  1D03               	skipz
  1551  0393  2B8D               	goto	u3025
  1552                           
  1553                           	line	40
  1554                           	
  1555  0394  3001               	movlw	01h
  1556  0395                     u3035:
  1557  0395  1003               	clrc
  1558  0396  0CC4               	rrf	(___ftmul_f3+2),f
  1559  0397  0CC3               	rrf	(___ftmul_f3+1),f
  1560  0398  0CC2               	rrf	(___ftmul_f3),f
  1561  0399  3EFF               	addlw	-1
  1562  039A  1D03               	skipz
  1563  039B  2B95               	goto	u3035
  1564                           
  1565                           	line	41
  1566                           	
  1567                           	
  1568  039C  3001               	movlw	low(01h)
  1569  039D  02C1               	subwf	(___ftmul_cntr),f
  1570  039E  1D03               	btfss	status,2
  1571  039F  2BA1               	goto	u3041
  1572  03A0  2BA2               	goto	u3040
  1573  03A1                     u3041:
  1574  03A1  2B7A               	goto	l155
  1575  03A2                     u3040:
  1576                           	
  1577  03A2                     l154:	
  1578                           	line	42
  1579                           	
  1580  03A2  0840               	movf	(___ftmul_exp1),w
  1581                           	
  1582  03A3  00C7               	movwf	(?___ftpack)
  1583                           	
  1584  03A4  3042               	movlw	((___ftmul_f3))&0ffh
  1585  03A5  120A  118A  23BE   	fcall	___ftpack
              120A  118A         
  1586                           	line	43
  1587  03AA  1283               	bcf	status, 5	;RP0=0, select bank0
  1588  03AB  1303               	bcf	status, 6	;RP1=0, select bank0
  1589                           	
  1590  03AC  08BF               	movf	(___ftmul_sign1),f
  1591  03AD  1D03               	skipz
  1592  03AE  2BB0               	goto	u3050
  1593  03AF  2BB6               	goto	l157
  1594  03B0                     u3050:
  1595                           	line	44
  1596                           	
  1597  03B0  3000               	movlw	0
  1598  03B1  04C2               	iorwf	(___ftmul_f3),f
  1599  03B2  3000               	movlw	0
  1600  03B3  04C3               	iorwf	(___ftmul_f3+1),f
  1601  03B4  3080               	movlw	080h
  1602  03B5  04C4               	iorwf	(___ftmul_f3+2),f
  1603                           	
  1604  03B6                     l157:	
  1605                           	line	45
  1606                           	
  1607                           	
  1608  03B6  0842               	movf	(___ftmul_f3),w
  1609  03B7  00B9               	movwf	(?___ftmul)
  1610  03B8  0843               	movf	(___ftmul_f3+1),w
  1611  03B9  00BA               	movwf	(?___ftmul+1)
  1612  03BA  0844               	movf	(___ftmul_f3+2),w
  1613  03BB  00BB               	movwf	(?___ftmul+2)
  1614  03BC  2BBD               	goto	l147
  1615                           	line	46
  1616  03BD                     l147:	
  1617  03BD  0008               	return
  1618                           ; =============== function ___ftmul ends ======
                                 =========
  1619                           
  1620                           GLOBAL __end_of___ftmul
  1621  03BE                     	__end_of___ftmul:
  1622                           	FNSIZE	___ftmul,7,6
  1623                           	signat	___ftmul,8315
  1624                           	global	___lwtoft
  1625                           	global	??___lwtoft
  1626                           	global	?___lwtoft
  1627                           
  1628                           ; *************** function ___lwtoft **********
                                 *****
  1629                           ; Defined at:
  1630                           ;		line 16 in file "C:\Program Files (x86)\HI-T
                                 ECH Software\PICC\PRO\9.65\sources\lwtoft.c"
  1631                           ; Parameters:
  1632                           ;		c           	offs:   0	type: unsigned int 
  1633                           ; Auto variables:
  1634                           ;		f1          	       	type: float 
  1635                           ; Return value:
  1636                           ;		type: float 
  1637                           ;		size: 3
  1638                           ; Registers used:
  1639                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
                                 th, cstack
  1640                           ; Tracked objects:
  1641                           ;		On entry : 300/0
  1642                           ;		On exit  : 0/0
  1643                           ;		Unchanged: 0/0
  1644                           ; Data sizes:
  1645                           ;		Autos:    3
  1646                           ;		Params:   3
  1647                           ;		Temp:     3
  1648                           ;		Total:    9
  1649                           ; This function calls:
  1650                           ;		___ftpack
  1651                           ; This function is called by:
  1652                           ;		_ADCReadData
  1653                           ; This function uses a non-reentrant model
  1654                           ; 
  1655                           	psect	text192,local,class=CODE,delta=2
  1656                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\lwtoft.c"
  1657                           	line	16
  1658                           	
  1659  0E9D                     ___lwtoft:	
  1660                           	opt stack 5
  1661                           ; Regs used in ___lwtoft: [wreg-fsr0h+status,2+
                                 status,0+pclath+cstack]
  1662                           	line	19
  1663                           	
  1664  0E9D  083A               	movf	((___lwtoft_c+1)),w
  1665  0E9E  0439               	iorwf	((___lwtoft_c)),w
  1666  0E9F  1D03               	skipz
  1667  0EA0  2EA2               	goto	u2941
  1668  0EA1  2EA3               	goto	u2940
  1669  0EA2                     u2941:
  1670  0EA2  2EAA               	goto	l323
  1671  0EA3                     u2940:
  1672                           	line	20
  1673                           	
  1674  0EA3  3000               	movlw	0x0
  1675  0EA4  00B9               	movwf	(?___lwtoft)
  1676  0EA5  3000               	movlw	0x0
  1677  0EA6  00BA               	movwf	(?___lwtoft+1)
  1678  0EA7  3000               	movlw	0x0
  1679  0EA8  00BB               	movwf	(?___lwtoft+2)
  1680  0EA9  2EC6               	goto	l322
  1681                           	
  1682  0EAA                     l323:	
  1683                           	line	21
  1684                           	
  1685  0EAA  0839               	movf	(___lwtoft_c),w
  1686  0EAB  00BF               	movwf	(??___lwtoft+3+0)
  1687  0EAC  083A               	movf	(___lwtoft_c+1),w
  1688  0EAD  00C0               	movwf	(??___lwtoft+3+0+1)
  1689  0EAE  01C1               	clrf	(??___lwtoft+3+0+2)
  1690                           	
  1691  0EAF  083F               	movf	(??___lwtoft+3+0),w
  1692  0EB0  00BC               	movwf	(___lwtoft_f1)
  1693  0EB1  0840               	movf	(??___lwtoft+3+1),w
  1694  0EB2  00BD               	movwf	(___lwtoft_f1+1)
  1695  0EB3  0841               	movf	(??___lwtoft+3+2),w
  1696  0EB4  00BE               	movwf	(___lwtoft_f1+2)
  1697                           	line	22
  1698  0EB5  308E               	movlw	(08Eh)
  1699                           	
  1700  0EB6  00C7               	movwf	(?___ftpack)
  1701                           	
  1702  0EB7  303C               	movlw	((___lwtoft_f1))&0ffh
  1703  0EB8  120A  118A  23BE   	fcall	___ftpack
              120A  158A         
  1704                           	line	23
  1705  0EBD  1283               	bcf	status, 5	;RP0=0, select bank0
  1706  0EBE  1303               	bcf	status, 6	;RP1=0, select bank0
  1707                           	
  1708                           	
  1709  0EBF  083C               	movf	(___lwtoft_f1),w
  1710  0EC0  00B9               	movwf	(?___lwtoft)
  1711  0EC1  083D               	movf	(___lwtoft_f1+1),w
  1712  0EC2  00BA               	movwf	(?___lwtoft+1)
  1713  0EC3  083E               	movf	(___lwtoft_f1+2),w
  1714  0EC4  00BB               	movwf	(?___lwtoft+2)
  1715  0EC5  2EC6               	goto	l322
  1716                           	line	24
  1717  0EC6                     l322:	
  1718  0EC6  0008               	return
  1719                           ; =============== function ___lwtoft ends =====
                                 ==========
  1720                           
  1721                           GLOBAL __end_of___lwtoft
  1722  0EC7                     	__end_of___lwtoft:
  1723                           	FNSIZE	___lwtoft,6,3
  1724                           	signat	___lwtoft,4219
  1725                           	global	_LCDWriteInteger
  1726                           	global	??_LCDWriteInteger
  1727                           	global	?_LCDWriteInteger
  1728                           
  1729                           ; *************** function _LCDWriteInteger ***
                                 ************
  1730                           ; Defined at:
  1731                           ;		line 129 in file "C:\Users\Suchitra\Desktop\
                                 hardik\codes\LM35 wala\LCD.c"
  1732                           ; Parameters:
  1733                           ;		IntegerNumbe	offs:   0	type: int 
  1734                           ; Auto variables:
  1735                           ;		i           	       	type: unsigned char 
  1736                           ;		c           	       	type: unsigned char [6]
  1737                           ; Return value:
  1738                           ;		type: void 
  1739                           ;		size: 0
  1740                           ; Registers used:
  1741                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
                                 th, cstack
  1742                           ; Tracked objects:
  1743                           ;		On entry : 300/0
  1744                           ;		On exit  : 0/0
  1745                           ;		Unchanged: 0/0
  1746                           ; Data sizes:
  1747                           ;		Autos:    7
  1748                           ;		Params:   2
  1749                           ;		Temp:     1
  1750                           ;		Total:   10
  1751                           ; This function calls:
  1752                           ;		_LCDWriteData
  1753                           ;		___awmod
  1754                           ;		___awdiv
  1755                           ; This function is called by:
  1756                           ;		_LCDWriteFloat
  1757                           ; This function uses a non-reentrant model
  1758                           ; 
  1759                           	psect	text193,local,class=CODE,delta=2
  1760                           	file	"C:\Users\Suchitra\Desktop\hardik\codes\L
                                 M35 wala\LCD.c"
  1761                           	line	129
  1762                           ;LCD.c: 128: void LCDWriteInteger(int IntegerNu
                                 mber)
  1763                           ;LCD.c: 129: {
  1764                           	
  1765  020F                     _LCDWriteInteger:	
  1766                           	opt stack 5
  1767                           ; Regs used in _LCDWriteInteger: [wreg-fsr0h+st
                                 atus,2+status,0+pclath+cstack]
  1768                           	line	131
  1769                           ;LCD.c: 130: unsigned char c[6];
  1770                           ;LCD.c: 131: unsigned char i = 0;
  1771  020F  1003               	clrc
  1772                           	
  1773  0210  3000               	movlw	0
  1774  0211  1803               	btfsc	status,0
  1775  0212  3001               	movlw	1
  1776  0213  00B5               	movwf	(_LCDWriteInteger_i)
  1777                           	line	133
  1778                           ;LCD.c: 133: if(IntegerNumber < 0)
  1779                           	
  1780  0214  1FB4               	btfss	(_LCDWriteInteger_IntegerNumber+1),7
  1781  0215  2A17               	goto	u2571
  1782  0216  2A18               	goto	u2570
  1783  0217                     u2571:
  1784  0217  2A25               	goto	l40
  1785  0218                     u2570:
  1786                           	line	135
  1787                           ;LCD.c: 134: {
  1788                           ;LCD.c: 135: LCDWriteData('-');
  1789  0218  302D               	movlw	(02Dh)
  1790  0219  120A  158A  2620   	fcall	_LCDWriteData
              120A  118A         
  1791                           	line	136
  1792                           ;LCD.c: 136: IntegerNumber = - (IntegerNumber);
  1793  021E  1283               	bcf	status, 5	;RP0=0, select bank0
  1794  021F  1303               	bcf	status, 6	;RP1=0, select bank0
  1795                           	
  1796  0220  09B3               	comf	(_LCDWriteInteger_IntegerNumber),f
  1797  0221  09B4               	comf	(_LCDWriteInteger_IntegerNumber+1),f
  1798  0222  0AB3               	incf	(_LCDWriteInteger_IntegerNumber),f
  1799  0223  1903               	skipnz
  1800  0224  0AB4               	incf	(_LCDWriteInteger_IntegerNumber+1),f
  1801                           	
  1802                           	line	137
  1803                           	
  1804  0225                     l40:	
  1805                           	line	139
  1806                           ;LCD.c: 137: }
  1807                           ;LCD.c: 139: if(IntegerNumber == 0)
  1808                           	
  1809  0225  0834               	movf	((_LCDWriteInteger_IntegerNumber+1)),w
  1810  0226  0433               	iorwf	((_LCDWriteInteger_IntegerNumber)),w
  1811  0227  1D03               	skipz
  1812  0228  2A2A               	goto	u2581
  1813  0229  2A2B               	goto	u2580
  1814  022A                     u2581:
  1815  022A  2A31               	goto	l41
  1816  022B                     u2580:
  1817                           	line	140
  1818                           ;LCD.c: 140: LCDWriteData(0x30);
  1819  022B  3030               	movlw	(030h)
  1820  022C  120A  158A  2620   	fcall	_LCDWriteData
              120A  118A         
  1821                           	
  1822  0231                     l41:	
  1823                           	line	142
  1824                           ;LCD.c: 142: while( IntegerNumber > 0)
  1825  0231  2A67               	goto	l42
  1826                           	
  1827  0232                     l43:	
  1828                           	line	144
  1829                           ;LCD.c: 143: {
  1830                           ;LCD.c: 144: c[i++] = ((IntegerNumber % 10) | 0
                                 x30);
  1831  0232  300A               	movlw	low(0Ah)
  1832                           	
  1833  0233  00BF               	movwf	(0+(?___awmod)+02h)
  1834  0234  3000               	movlw	high(0Ah)
  1835  0235  00C0               	movwf	((0+(?___awmod)+02h))+1
  1836                           	
  1837                           	
  1838  0236  0834               	movf	(_LCDWriteInteger_IntegerNumber+1),w
  1839  0237  01BE               	clrf	(?___awmod+1)
  1840  0238  07BE               	addwf	(?___awmod+1)
  1841  0239  0833               	movf	(_LCDWriteInteger_IntegerNumber),w
  1842  023A  01BD               	clrf	(?___awmod)
  1843  023B  07BD               	addwf	(?___awmod)
  1844                           
  1845  023C  120A  118A  20CD   	fcall	___awmod
              120A  118A         
  1846  0241  1283               	bcf	status, 5	;RP0=0, select bank0
  1847  0242  1303               	bcf	status, 6	;RP1=0, select bank0
  1848  0243  083D               	movf	(0+?___awmod),w
  1849  0244  3830               	iorlw	030h
  1850  0245  00BC               	movwf	(??_LCDWriteInteger+7+0)
  1851                           	
  1852  0246  0835               	movf	(_LCDWriteInteger_i),w
  1853  0247  3E36               	addlw	(_LCDWriteInteger_c)&0ffh
  1854  0248  1383               	bcf	status, 7	;select IRP bank0
  1855                           	
  1856  0249  0084               	movwf	fsr0
  1857  024A  083C               	movf	(??_LCDWriteInteger+7+0),w
  1858  024B  0080               	movwf	indf
  1859  024C  3001               	movlw	(01h)
  1860  024D  00BC               	movwf	(??_LCDWriteInteger+7+0)
  1861                           	
  1862  024E  083C               	movf	(??_LCDWriteInteger+7+0),w
  1863  024F  07B5               	addwf	(_LCDWriteInteger_i),f
  1864                           	line	145
  1865                           ;LCD.c: 145: IntegerNumber /= 10;
  1866  0250  300A               	movlw	low(0Ah)
  1867                           	
  1868  0251  00BF               	movwf	(0+(?___awdiv)+02h)
  1869  0252  3000               	movlw	high(0Ah)
  1870  0253  00C0               	movwf	((0+(?___awdiv)+02h))+1
  1871                           	
  1872                           	
  1873  0254  0834               	movf	(_LCDWriteInteger_IntegerNumber+1),w
  1874  0255  01BE               	clrf	(?___awdiv+1)
  1875  0256  07BE               	addwf	(?___awdiv+1)
  1876  0257  0833               	movf	(_LCDWriteInteger_IntegerNumber),w
  1877  0258  01BD               	clrf	(?___awdiv)
  1878  0259  07BD               	addwf	(?___awdiv)
  1879                           
  1880  025A  120A  118A  219B   	fcall	___awdiv
              120A  118A         
  1881  025F  1283               	bcf	status, 5	;RP0=0, select bank0
  1882  0260  1303               	bcf	status, 6	;RP1=0, select bank0
  1883                           	
  1884  0261  083E               	movf	(1+?___awdiv),w
  1885  0262  01B4               	clrf	(_LCDWriteInteger_IntegerNumber+1)
  1886  0263  07B4               	addwf	(_LCDWriteInteger_IntegerNumber+1)
  1887  0264  083D               	movf	(0+?___awdiv),w
  1888  0265  01B3               	clrf	(_LCDWriteInteger_IntegerNumber)
  1889  0266  07B3               	addwf	(_LCDWriteInteger_IntegerNumber)
  1890                           
  1891                           	line	146
  1892                           	
  1893  0267                     l42:	
  1894                           	line	142
  1895  0267  1283               	bcf	status, 5	;RP0=0, select bank0
  1896  0268  1303               	bcf	status, 6	;RP1=0, select bank0
  1897                           	
  1898  0269  0834               	movf	(_LCDWriteInteger_IntegerNumber+1),w
  1899  026A  3A80               	xorlw	80h
  1900  026B  00BC               	movwf	(??_LCDWriteInteger+7+0)
  1901  026C  3080               	movlw	(high(01h))^80h
  1902  026D  023C               	subwf	(??_LCDWriteInteger+7+0),w
  1903  026E  1D03               	skipz
  1904  026F  2A72               	goto	u25910
  1905  0270                     u25915:
  1906  0270  3001               	movlw	low(01h)
  1907  0271  0233               	subwf	(_LCDWriteInteger_IntegerNumber),w
  1908  0272                     u25910:
  1909                           
  1910  0272  1803               	skipnc
  1911  0273  2A75               	goto	u2591
  1912  0274  2A76               	goto	u2590
  1913  0275                     u2591:
  1914  0275  2A32               	goto	l43
  1915  0276                     u2590:
  1916                           	
  1917  0276                     l44:	
  1918                           	line	148
  1919                           ;LCD.c: 146: }
  1920                           ;LCD.c: 148: while(i-- > 0)
  1921  0276  2A81               	goto	l45
  1922                           	
  1923  0277                     l46:	
  1924                           	line	149
  1925                           ;LCD.c: 149: LCDWriteData(c[i]);
  1926                           	
  1927  0277  0835               	movf	(_LCDWriteInteger_i),w
  1928  0278  3E36               	addlw	(_LCDWriteInteger_c)&0ffh
  1929  0279  1383               	bcf	status, 7	;select IRP bank0
  1930                           	
  1931  027A  0084               	movwf	fsr0
  1932  027B  0800               	movf	indf,w
  1933  027C  120A  158A  2620   	fcall	_LCDWriteData
              120A  118A         
  1934                           	
  1935  0281                     l45:	
  1936                           	line	148
  1937                           	
  1938  0281  1283               	bcf	status, 5	;RP0=0, select bank0
  1939  0282  1303               	bcf	status, 6	;RP1=0, select bank0
  1940                           	
  1941  0283  3001               	movlw	low(01h)
  1942  0284  02B5               	subwf	(_LCDWriteInteger_i),f
  1943  0285  0835               	movf	((_LCDWriteInteger_i))&07fh,w
  1944  0286  3AFF               	xorlw	0FFh
  1945  0287  1D03               	skipz
  1946  0288  2A8A               	goto	u2601
  1947  0289  2A8B               	goto	u2600
  1948  028A                     u2601:
  1949  028A  2A77               	goto	l46
  1950  028B                     u2600:
  1951                           	
  1952  028B                     l47:	
  1953                           	line	152
  1954                           ;LCD.c: 152: }
  1955  028B                     l39:	
  1956  028B  0008               	return
  1957                           ; =============== function _LCDWriteInteger end
                                 s ===============
  1958                           
  1959                           GLOBAL __end_of_LCDWriteInteger
  1960  028C                     	__end_of_LCDWriteInteger:
  1961                           	FNSIZE	_LCDWriteInteger,8,2
  1962                           	signat	_LCDWriteInteger,4216
  1963                           	global	___ftge
  1964                           	global	??___ftge
  1965                           	global	?___ftge
  1966                           
  1967                           ; *************** function ___ftge ************
                                 ***
  1968                           ; Defined at:
  1969                           ;		line 5 in file "C:\Program Files (x86)\HI-TE
                                 CH Software\PICC\PRO\9.65\sources\ftge.c"
  1970                           ; Parameters:
  1971                           ;		ff1         	offs:   0	type: float 
  1972                           ;		ff2         	offs:   3	type: float 
  1973                           ; Auto variables:
  1974                           ;		None
  1975                           ; Return value:
  1976                           ;		type: bit 
  1977                           ;		size: 0
  1978                           ; Registers used:
  1979                           ;		wreg, status,2, status,0
  1980                           ; Tracked objects:
  1981                           ;		On entry : 300/0
  1982                           ;		On exit  : 0/0
  1983                           ;		Unchanged: 0/0
  1984                           ; Data sizes:
  1985                           ;		Autos:    0
  1986                           ;		Params:   6
  1987                           ;		Temp:     0
  1988                           ;		Total:    6
  1989                           ; This function calls:
  1990                           ;		Nothing
  1991                           ; This function is called by:
  1992                           ;		_LCDWriteFloat
  1993                           ;		_main
  1994                           ; This function uses a non-reentrant model
  1995                           ; 
  1996                           	psect	text194,local,class=CODE,delta=2
  1997                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\ftge.c"
  1998                           	line	5
  1999                           	
  2000  0F1E                     ___ftge:	
  2001                           	opt stack 5
  2002                           ; Regs used in ___ftge: [wreg+status,2+status,0
                                 ]
  2003                           	line	6
  2004                           	
  2005  0F1E  1FB5               	btfss	(___ftge_ff1+2),(23)&7
  2006  0F1F  2F21               	goto	u2081
  2007  0F20  2F22               	goto	u2080
  2008  0F21                     u2081:
  2009  0F21  2F2F               	goto	l275
  2010  0F22                     u2080:
  2011                           	line	7
  2012                           	
  2013  0F22  0833               	movf	(___ftge_ff1),w
  2014  0F23  3C00               	sublw	low(0800000h)
  2015                           	
  2016  0F24  00B3               	movwf	(___ftge_ff1)
  2017  0F25  0834               	movf	(___ftge_ff1+1),w
  2018  0F26  1C03               	skipc
  2019  0F27  0A34               	incf	(___ftge_ff1+1),w
  2020  0F28  3C00               	sublw	high(0800000h)
  2021  0F29  00B4               	movwf	1+(___ftge_ff1)
  2022  0F2A  0835               	movf	(___ftge_ff1+2),w
  2023  0F2B  1C03               	skipc
  2024  0F2C  0A35               	incf	(___ftge_ff1+2),w
  2025  0F2D  3C80               	sublw	low highword(0800000h)
  2026  0F2E  00B5               	movwf	2+(___ftge_ff1)
  2027                           	
  2028  0F2F                     l275:	
  2029                           	line	8
  2030                           	
  2031  0F2F  1FB8               	btfss	(___ftge_ff2+2),(23)&7
  2032  0F30  2F32               	goto	u2091
  2033  0F31  2F33               	goto	u2090
  2034  0F32                     u2091:
  2035  0F32  2F40               	goto	l276
  2036  0F33                     u2090:
  2037                           	line	9
  2038                           	
  2039  0F33  0836               	movf	(___ftge_ff2),w
  2040  0F34  3C00               	sublw	low(0800000h)
  2041                           	
  2042  0F35  00B6               	movwf	(___ftge_ff2)
  2043  0F36  0837               	movf	(___ftge_ff2+1),w
  2044  0F37  1C03               	skipc
  2045  0F38  0A37               	incf	(___ftge_ff2+1),w
  2046  0F39  3C00               	sublw	high(0800000h)
  2047  0F3A  00B7               	movwf	1+(___ftge_ff2)
  2048  0F3B  0838               	movf	(___ftge_ff2+2),w
  2049  0F3C  1C03               	skipc
  2050  0F3D  0A38               	incf	(___ftge_ff2+2),w
  2051  0F3E  3C80               	sublw	low highword(0800000h)
  2052  0F3F  00B8               	movwf	2+(___ftge_ff2)
  2053                           	
  2054  0F40                     l276:	
  2055                           	line	10
  2056                           	
  2057  0F40  3080               	movlw	080h
  2058  0F41  06B5               	xorwf	(___ftge_ff1+2),f
  2059                           	line	11
  2060                           	
  2061  0F42  3080               	movlw	080h
  2062  0F43  06B8               	xorwf	(___ftge_ff2+2),f
  2063                           	line	12
  2064                           	
  2065                           	
  2066  0F44  0838               	movf	(___ftge_ff2+2),w
  2067  0F45  0235               	subwf	(___ftge_ff1+2),w
  2068  0F46  1D03               	skipz
  2069  0F47  2F4E               	goto	u2105
  2070  0F48  0837               	movf	(___ftge_ff2+1),w
  2071  0F49  0234               	subwf	(___ftge_ff1+1),w
  2072  0F4A  1D03               	skipz
  2073  0F4B  2F4E               	goto	u2105
  2074  0F4C  0836               	movf	(___ftge_ff2),w
  2075  0F4D  0233               	subwf	(___ftge_ff1),w
  2076  0F4E                     u2105:
  2077  0F4E  1803               	skipnc
  2078  0F4F  2F51               	goto	u2117
  2079  0F50  2F53               	goto	u2118
  2080  0F51                     u2117:
  2081  0F51  1403               	bsf	status,0
  2082  0F52  2F54               	goto	u2119
  2083  0F53                     u2118:
  2084  0F53  1003               	bcf	status,0
  2085  0F54                     u2119:
  2086  0F54  2F55               	goto	l274
  2087                           	line	13
  2088  0F55                     l274:	
  2089  0F55  0008               	return
  2090                           ; =============== function ___ftge ends =======
                                 ========
  2091                           
  2092                           GLOBAL __end_of___ftge
  2093  0F56                     	__end_of___ftge:
  2094                           	FNSIZE	___ftge,0,6
  2095                           	signat	___ftge,8312
  2096                           	global	___fttol
  2097                           	global	??___fttol
  2098                           	global	?___fttol
  2099                           
  2100                           ; *************** function ___fttol ***********
                                 ****
  2101                           ; Defined at:
  2102                           ;		line 16 in file "C:\Program Files (x86)\HI-T
                                 ECH Software\PICC\PRO\9.65\sources\fttol.c"
  2103                           ; Parameters:
  2104                           ;		f1          	offs:   0	type: float 
  2105                           ; Auto variables:
  2106                           ;		sign1       	       	type: unsigned char 
  2107                           ;		exp1        	       	type: unsigned char 
  2108                           ;		lval        	       	type: unsigned long 
  2109                           ; Return value:
  2110                           ;		type: long 
  2111                           ;		size: 4
  2112                           ; Registers used:
  2113                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
                                 th, cstack
  2114                           ; Tracked objects:
  2115                           ;		On entry : 300/0
  2116                           ;		On exit  : 0/0
  2117                           ;		Unchanged: 0/0
  2118                           ; Data sizes:
  2119                           ;		Autos:    6
  2120                           ;		Params:   4
  2121                           ;		Temp:     1
  2122                           ;		Total:   11
  2123                           ; This function calls:
  2124                           ;		___ftunpack
  2125                           ; This function is called by:
  2126                           ;		_LCDWriteFloat
  2127                           ; This function uses a non-reentrant model
  2128                           ; 
  2129                           	psect	text195,local,class=CODE,delta=2
  2130                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\fttol.c"
  2131                           	line	16
  2132                           	
  2133  0128                     ___fttol:	
  2134                           	opt stack 5
  2135                           ; Regs used in ___fttol: [wreg-fsr0h+status,2+s
                                 tatus,0+pclath+cstack]
  2136                           	line	20
  2137                           	
  2138  0128  3038               	movlw	((___fttol_exp1))&0ffh
  2139                           	
  2140  0129  00C7               	movwf	(?___ftunpack)
  2141                           	
  2142  012A  3033               	movlw	((___fttol_f1))&0ffh
  2143  012B  120A  158A  27A6   	fcall	___ftunpack
              120A  118A         
  2144  0130  1283               	bcf	status, 5	;RP0=0, select bank0
  2145  0131  1303               	bcf	status, 6	;RP1=0, select bank0
  2146                           	
  2147  0132  00B7               	movwf	(___fttol_sign1)
  2148                           	line	21
  2149                           	
  2150  0133  0833               	movf	(___fttol_f1),w
  2151                           	
  2152  0134  00B9               	movwf	(___fttol_lval)
  2153  0135  0834               	movf	(___fttol_f1+1),w
  2154  0136  00BA               	movwf	((___fttol_lval))+1
  2155                           	
  2156  0137  0835               	movf	(___fttol_f1+2),w
  2157  0138  00BB               	movwf	((___fttol_lval))+2
  2158                           	
  2159  0139  01BC               	clrf	3+(___fttol_lval)
  2160                           	line	22
  2161                           	
  2162                           	
  2163  013A  308E               	movlw	low(08Eh)
  2164  013B  02B8               	subwf	(___fttol_exp1),f
  2165                           	line	23
  2166                           	
  2167  013C  1FB8               	btfss	(___fttol_exp1),7
  2168  013D  293F               	goto	u3091
  2169  013E  2940               	goto	u3090
  2170  013F                     u3091:
  2171  013F  2962               	goto	l206
  2172  0140                     u3090:
  2173                           	line	24
  2174                           	
  2175  0140  0838               	movf	(___fttol_exp1),w
  2176  0141  3A80               	xorlw	80h
  2177  0142  3E8F               	addlw	-((-15)^80h)
  2178  0143  1803               	skipnc
  2179  0144  2946               	goto	u3101
  2180  0145  2947               	goto	u3100
  2181  0146                     u3101:
  2182  0146  2950               	goto	l210
  2183  0147                     u3100:
  2184                           	line	25
  2185                           	
  2186  0147  3000               	movlw	0
  2187  0148  00B6               	movwf	(?___fttol+3)
  2188  0149  3000               	movlw	0
  2189  014A  00B5               	movwf	(?___fttol+2)
  2190  014B  3000               	movlw	0
  2191  014C  00B4               	movwf	(?___fttol+1)
  2192  014D  3000               	movlw	0
  2193  014E  00B3               	movwf	(?___fttol)
  2194                           
  2195  014F  299A               	goto	l205
  2196                           	line	26
  2197                           	
  2198  0150                     l210:	
  2199                           	line	27
  2200                           	
  2201  0150  3001               	movlw	01h
  2202  0151                     u3115:
  2203  0151  1003               	clrc
  2204  0152  0CBC               	rrf	(___fttol_lval+3),f
  2205  0153  0CBB               	rrf	(___fttol_lval+2),f
  2206  0154  0CBA               	rrf	(___fttol_lval+1),f
  2207  0155  0CB9               	rrf	(___fttol_lval),f
  2208  0156  3EFF               	addlw	-1
  2209  0157  1D03               	skipz
  2210  0158  2951               	goto	u3115
  2211                           
  2212                           	line	28
  2213  0159  3001               	movlw	(01h)
  2214  015A  00BD               	movwf	(??___fttol+6+0)
  2215                           	
  2216  015B  083D               	movf	(??___fttol+6+0),w
  2217  015C  07B8               	addwf	(___fttol_exp1),f
  2218  015D  1D03               	btfss	status,2
  2219  015E  2960               	goto	u3121
  2220  015F  2961               	goto	u3120
  2221  0160                     u3121:
  2222  0160  2950               	goto	l210
  2223  0161                     u3120:
  2224                           	
  2225  0161                     l209:	
  2226                           	line	29
  2227  0161  2982               	goto	l211
  2228                           	
  2229  0162                     l206:	
  2230                           	line	30
  2231  0162  3020               	movlw	(020h)
  2232                           	
  2233  0163  0238               	subwf	(___fttol_exp1),w
  2234  0164  1C03               	skipc
  2235  0165  2967               	goto	u3131
  2236  0166  2968               	goto	u3130
  2237  0167                     u3131:
  2238  0167  2971               	goto	l212
  2239  0168                     u3130:
  2240                           	line	31
  2241                           	
  2242  0168  3000               	movlw	0
  2243  0169  00B6               	movwf	(?___fttol+3)
  2244  016A  3000               	movlw	0
  2245  016B  00B5               	movwf	(?___fttol+2)
  2246  016C  3000               	movlw	0
  2247  016D  00B4               	movwf	(?___fttol+1)
  2248  016E  3000               	movlw	0
  2249  016F  00B3               	movwf	(?___fttol)
  2250                           
  2251  0170  299A               	goto	l205
  2252                           	
  2253  0171                     l212:	
  2254                           	line	32
  2255  0171  297D               	goto	l213
  2256                           	
  2257  0172                     l214:	
  2258                           	line	33
  2259                           	
  2260  0172  3001               	movlw	01h
  2261  0173  00BD               	movwf	(??___fttol+6+0)
  2262  0174                     u3145:
  2263  0174  1003               	clrc
  2264  0175  0DB9               	rlf	(___fttol_lval),f
  2265  0176  0DBA               	rlf	(___fttol_lval+1),f
  2266  0177  0DBB               	rlf	(___fttol_lval+2),f
  2267  0178  0DBC               	rlf	(___fttol_lval+3),f
  2268  0179  0BBD               	decfsz	(??___fttol+6+0)
  2269  017A  2974               	goto	u3145
  2270                           	line	34
  2271                           	
  2272                           	
  2273  017B  3001               	movlw	low(01h)
  2274  017C  02B8               	subwf	(___fttol_exp1),f
  2275                           	line	35
  2276                           	
  2277  017D                     l213:	
  2278                           	line	32
  2279                           	
  2280  017D  08B8               	movf	(___fttol_exp1),f
  2281  017E  1D03               	skipz
  2282  017F  2981               	goto	u3151
  2283  0180  2982               	goto	u3150
  2284  0181                     u3151:
  2285  0181  2972               	goto	l214
  2286  0182                     u3150:
  2287                           	
  2288  0182                     l215:	
  2289                           	line	36
  2290                           	
  2291  0182                     l211:	
  2292                           	line	37
  2293                           	
  2294  0182  08B7               	movf	(___fttol_sign1),f
  2295  0183  1D03               	skipz
  2296  0184  2986               	goto	u3160
  2297  0185  2991               	goto	l216
  2298  0186                     u3160:
  2299                           	line	38
  2300                           	
  2301  0186  09B9               	comf	(___fttol_lval),f
  2302  0187  09BA               	comf	(___fttol_lval+1),f
  2303  0188  09BB               	comf	(___fttol_lval+2),f
  2304  0189  09BC               	comf	(___fttol_lval+3),f
  2305  018A  0AB9               	incf	(___fttol_lval),f
  2306  018B  1903               	skipnz
  2307  018C  0ABA               	incf	(___fttol_lval+1),f
  2308  018D  1903               	skipnz
  2309  018E  0ABB               	incf	(___fttol_lval+2),f
  2310  018F  1903               	skipnz
  2311  0190  0ABC               	incf	(___fttol_lval+3),f
  2312                           	
  2313                           	
  2314  0191                     l216:	
  2315                           	line	39
  2316                           	
  2317                           	
  2318  0191  083C               	movf	(___fttol_lval+3),w
  2319  0192  00B6               	movwf	(?___fttol+3)
  2320  0193  083B               	movf	(___fttol_lval+2),w
  2321  0194  00B5               	movwf	(?___fttol+2)
  2322  0195  083A               	movf	(___fttol_lval+1),w
  2323  0196  00B4               	movwf	(?___fttol+1)
  2324  0197  0839               	movf	(___fttol_lval),w
  2325  0198  00B3               	movwf	(?___fttol)
  2326                           
  2327  0199  299A               	goto	l205
  2328                           	line	40
  2329  019A                     l205:	
  2330  019A  0008               	return
  2331                           ; =============== function ___fttol ends ======
                                 =========
  2332                           
  2333                           GLOBAL __end_of___fttol
  2334  019B                     	__end_of___fttol:
  2335                           	FNSIZE	___fttol,7,4
  2336                           	signat	___fttol,4220
  2337                           	global	___ftdiv
  2338                           	global	??___ftdiv
  2339                           	global	?___ftdiv
  2340                           
  2341                           ; *************** function ___ftdiv ***********
                                 ****
  2342                           ; Defined at:
  2343                           ;		line 19 in file "C:\Program Files (x86)\HI-T
                                 ECH Software\PICC\PRO\9.65\sources\ftdiv.c"
  2344                           ; Parameters:
  2345                           ;		f1          	offs:   0	type: float 
  2346                           ;		f2          	offs:   3	type: float 
  2347                           ; Auto variables:
  2348                           ;		exp2        	       	type: unsigned char 
  2349                           ;		sign1       	       	type: unsigned char 
  2350                           ;		sign2       	       	type: unsigned char 
  2351                           ;		exp1        	       	type: unsigned char 
  2352                           ;		f3          	       	type: float 
  2353                           ; Return value:
  2354                           ;		type: float 
  2355                           ;		size: 3
  2356                           ; Registers used:
  2357                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
                                 th, cstack
  2358                           ; Tracked objects:
  2359                           ;		On entry : 300/0
  2360                           ;		On exit  : 0/0
  2361                           ;		Unchanged: 0/0
  2362                           ; Data sizes:
  2363                           ;		Autos:    7
  2364                           ;		Params:   6
  2365                           ;		Temp:     1
  2366                           ;		Total:   14
  2367                           ; This function calls:
  2368                           ;		___ftunpack
  2369                           ;		___ftpack
  2370                           ; This function is called by:
  2371                           ;		_ADCReadData
  2372                           ; This function uses a non-reentrant model
  2373                           ; 
  2374                           	psect	text196,local,class=CODE,delta=2
  2375                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\ftdiv.c"
  2376                           	line	19
  2377                           	
  2378  028C                     ___ftdiv:	
  2379                           	opt stack 5
  2380                           ; Regs used in ___ftdiv: [wreg-fsr0h+status,2+s
                                 tatus,0+pclath+cstack]
  2381                           	line	23
  2382                           	
  2383  028C  3000               	movlw	0
  2384  028D  00C3               	movwf	(___ftdiv_f3)
  2385  028E  3000               	movlw	0
  2386  028F  00C4               	movwf	(___ftdiv_f3+1)
  2387  0290  3000               	movlw	0
  2388  0291  00C5               	movwf	(___ftdiv_f3+2)
  2389                           	line	24
  2390                           	
  2391  0292  3041               	movlw	((___ftdiv_exp1))&0ffh
  2392                           	
  2393  0293  00C7               	movwf	(?___ftunpack)
  2394                           	
  2395  0294  3039               	movlw	((___ftdiv_f1))&0ffh
  2396  0295  120A  158A  27A6   	fcall	___ftunpack
              120A  118A         
  2397  029A  1283               	bcf	status, 5	;RP0=0, select bank0
  2398  029B  1303               	bcf	status, 6	;RP1=0, select bank0
  2399                           	
  2400  029C  00C0               	movwf	(___ftdiv_sign1)
  2401                           	line	25
  2402                           	
  2403  029D  08C1               	movf	(___ftdiv_exp1),f
  2404  029E  1D03               	skipz
  2405  029F  2AA1               	goto	u2671
  2406  02A0  2AA2               	goto	u2670
  2407  02A1                     u2671:
  2408  02A1  2AA9               	goto	l140
  2409  02A2                     u2670:
  2410                           	line	26
  2411                           	
  2412                           	
  2413  02A2  0843               	movf	(___ftdiv_f3),w
  2414  02A3  00B9               	movwf	(?___ftdiv)
  2415  02A4  0844               	movf	(___ftdiv_f3+1),w
  2416  02A5  00BA               	movwf	(?___ftdiv+1)
  2417  02A6  0845               	movf	(___ftdiv_f3+2),w
  2418  02A7  00BB               	movwf	(?___ftdiv+2)
  2419  02A8  2B1A               	goto	l139
  2420                           	
  2421  02A9                     l140:	
  2422                           	line	27
  2423                           	
  2424  02A9  303F               	movlw	((___ftdiv_exp2))&0ffh
  2425                           	
  2426  02AA  00C7               	movwf	(?___ftunpack)
  2427                           	
  2428  02AB  303C               	movlw	((___ftdiv_f2))&0ffh
  2429  02AC  120A  158A  27A6   	fcall	___ftunpack
              120A  118A         
  2430  02B1  1283               	bcf	status, 5	;RP0=0, select bank0
  2431  02B2  1303               	bcf	status, 6	;RP1=0, select bank0
  2432                           	
  2433  02B3  00C2               	movwf	(___ftdiv_sign2)
  2434                           	line	28
  2435                           	
  2436  02B4  08BF               	movf	(___ftdiv_exp2),f
  2437  02B5  1D03               	skipz
  2438  02B6  2AB8               	goto	u2681
  2439  02B7  2AB9               	goto	u2680
  2440  02B8                     u2681:
  2441  02B8  2AC0               	goto	l141
  2442  02B9                     u2680:
  2443                           	line	29
  2444                           	
  2445                           	
  2446  02B9  0843               	movf	(___ftdiv_f3),w
  2447  02BA  00B9               	movwf	(?___ftdiv)
  2448  02BB  0844               	movf	(___ftdiv_f3+1),w
  2449  02BC  00BA               	movwf	(?___ftdiv+1)
  2450  02BD  0845               	movf	(___ftdiv_f3+2),w
  2451  02BE  00BB               	movwf	(?___ftdiv+2)
  2452  02BF  2B1A               	goto	l139
  2453                           	
  2454  02C0                     l141:	
  2455                           	line	30
  2456                           	
  2457  02C0  083F               	movf	(___ftdiv_exp2),w
  2458  02C1  3E89               	addlw	089h
  2459  02C2  00C6               	movwf	(??___ftdiv+7+0)
  2460                           	
  2461  02C3  0846               	movf	(??___ftdiv+7+0),w
  2462  02C4  02C1               	subwf	(___ftdiv_exp1),f
  2463                           	line	31
  2464                           	
  2465  02C5  0842               	movf	(___ftdiv_sign2),w
  2466  02C6  00C6               	movwf	(??___ftdiv+7+0)
  2467                           	
  2468  02C7  0846               	movf	(??___ftdiv+7+0),w
  2469  02C8  06C0               	xorwf	(___ftdiv_sign1),f
  2470                           	line	32
  2471  02C9  3018               	movlw	(018h)
  2472                           	
  2473  02CA  00C2               	movwf	(___ftdiv_sign2)
  2474                           	line	33
  2475                           	
  2476  02CB                     l144:	
  2477                           	line	34
  2478                           	
  2479  02CB  3001               	movlw	01h
  2480  02CC                     u2695:
  2481  02CC  1003               	clrc
  2482  02CD  0DC3               	rlf	(___ftdiv_f3),f
  2483  02CE  0DC4               	rlf	(___ftdiv_f3+1),f
  2484  02CF  0DC5               	rlf	(___ftdiv_f3+2),f
  2485  02D0  3EFF               	addlw	-1
  2486  02D1  1D03               	skipz
  2487  02D2  2ACC               	goto	u2695
  2488                           	line	35
  2489                           	
  2490                           	
  2491  02D3  083E               	movf	(___ftdiv_f2+2),w
  2492  02D4  023B               	subwf	(___ftdiv_f1+2),w
  2493  02D5  1D03               	skipz
  2494  02D6  2ADD               	goto	u2705
  2495  02D7  083D               	movf	(___ftdiv_f2+1),w
  2496  02D8  023A               	subwf	(___ftdiv_f1+1),w
  2497  02D9  1D03               	skipz
  2498  02DA  2ADD               	goto	u2705
  2499  02DB  083C               	movf	(___ftdiv_f2),w
  2500  02DC  0239               	subwf	(___ftdiv_f1),w
  2501  02DD                     u2705:
  2502  02DD  1C03               	skipc
  2503  02DE  2AE0               	goto	u2701
  2504  02DF  2AE1               	goto	u2700
  2505  02E0                     u2701:
  2506  02E0  2AF1               	goto	l145
  2507  02E1                     u2700:
  2508                           	line	36
  2509                           	
  2510                           	
  2511  02E1  083C               	movf	(___ftdiv_f2),w
  2512  02E2  02B9               	subwf	(___ftdiv_f1),f
  2513  02E3  083D               	movf	(___ftdiv_f2+1),w
  2514  02E4  1C03               	skipc
  2515  02E5  0F3D               	incfsz	(___ftdiv_f2+1),w
  2516  02E6  02BA               	subwf	(___ftdiv_f1+1),f
  2517  02E7  083E               	movf	(___ftdiv_f2+2),w
  2518  02E8  1C03               	skipc
  2519  02E9  0A3E               	incf	(___ftdiv_f2+2),w
  2520  02EA  02BB               	subwf	(___ftdiv_f1+2),f
  2521                           	line	37
  2522                           	
  2523  02EB  3001               	movlw	01h
  2524  02EC  04C3               	iorwf	(___ftdiv_f3),f
  2525  02ED  3000               	movlw	0
  2526  02EE  04C4               	iorwf	(___ftdiv_f3+1),f
  2527  02EF  3000               	movlw	0
  2528  02F0  04C5               	iorwf	(___ftdiv_f3+2),f
  2529                           	line	38
  2530                           	
  2531  02F1                     l145:	
  2532                           	line	39
  2533                           	
  2534  02F1  3001               	movlw	01h
  2535  02F2                     u2715:
  2536  02F2  1003               	clrc
  2537  02F3  0DB9               	rlf	(___ftdiv_f1),f
  2538  02F4  0DBA               	rlf	(___ftdiv_f1+1),f
  2539  02F5  0DBB               	rlf	(___ftdiv_f1+2),f
  2540  02F6  3EFF               	addlw	-1
  2541  02F7  1D03               	skipz
  2542  02F8  2AF2               	goto	u2715
  2543                           	line	40
  2544                           	
  2545                           	
  2546  02F9  3001               	movlw	low(01h)
  2547  02FA  02C2               	subwf	(___ftdiv_sign2),f
  2548  02FB  1D03               	btfss	status,2
  2549  02FC  2AFE               	goto	u2721
  2550  02FD  2AFF               	goto	u2720
  2551  02FE                     u2721:
  2552  02FE  2ACB               	goto	l144
  2553  02FF                     u2720:
  2554                           	
  2555  02FF                     l143:	
  2556                           	line	41
  2557                           	
  2558  02FF  0841               	movf	(___ftdiv_exp1),w
  2559                           	
  2560  0300  00C7               	movwf	(?___ftpack)
  2561                           	
  2562  0301  3043               	movlw	((___ftdiv_f3))&0ffh
  2563  0302  120A  118A  23BE   	fcall	___ftpack
              120A  118A         
  2564                           	line	42
  2565  0307  1283               	bcf	status, 5	;RP0=0, select bank0
  2566  0308  1303               	bcf	status, 6	;RP1=0, select bank0
  2567                           	
  2568  0309  08C0               	movf	(___ftdiv_sign1),f
  2569  030A  1D03               	skipz
  2570  030B  2B0D               	goto	u2730
  2571  030C  2B13               	goto	l146
  2572  030D                     u2730:
  2573                           	line	43
  2574                           	
  2575  030D  3000               	movlw	0
  2576  030E  04C3               	iorwf	(___ftdiv_f3),f
  2577  030F  3000               	movlw	0
  2578  0310  04C4               	iorwf	(___ftdiv_f3+1),f
  2579  0311  3080               	movlw	080h
  2580  0312  04C5               	iorwf	(___ftdiv_f3+2),f
  2581                           	
  2582  0313                     l146:	
  2583                           	line	44
  2584                           	
  2585                           	
  2586  0313  0843               	movf	(___ftdiv_f3),w
  2587  0314  00B9               	movwf	(?___ftdiv)
  2588  0315  0844               	movf	(___ftdiv_f3+1),w
  2589  0316  00BA               	movwf	(?___ftdiv+1)
  2590  0317  0845               	movf	(___ftdiv_f3+2),w
  2591  0318  00BB               	movwf	(?___ftdiv+2)
  2592  0319  2B1A               	goto	l139
  2593                           	line	45
  2594  031A                     l139:	
  2595  031A  0008               	return
  2596                           ; =============== function ___ftdiv ends ======
                                 =========
  2597                           
  2598                           GLOBAL __end_of___ftdiv
  2599  031B                     	__end_of___ftdiv:
  2600                           	FNSIZE	___ftdiv,8,6
  2601                           	signat	___ftdiv,8315
  2602                           	global	___ftsub
  2603                           	global	??___ftsub
  2604                           	global	?___ftsub
  2605                           
  2606                           ; *************** function ___ftsub ***********
                                 ****
  2607                           ; Defined at:
  2608                           ;		line 17 in file "C:\Program Files (x86)\HI-T
                                 ECH Software\PICC\PRO\9.65\sources\ftsub.c"
  2609                           ; Parameters:
  2610                           ;		f1          	offs:   0	type: float 
  2611                           ;		f2          	offs:   3	type: float 
  2612                           ; Auto variables:
  2613                           ;		None
  2614                           ; Return value:
  2615                           ;		type: float 
  2616                           ;		size: 3
  2617                           ; Registers used:
  2618                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
                                 th, cstack
  2619                           ; Tracked objects:
  2620                           ;		On entry : 300/0
  2621                           ;		On exit  : 0/0
  2622                           ;		Unchanged: 0/0
  2623                           ; Data sizes:
  2624                           ;		Autos:    0
  2625                           ;		Params:   6
  2626                           ;		Temp:     0
  2627                           ;		Total:    6
  2628                           ; This function calls:
  2629                           ;		___ftadd
  2630                           ; This function is called by:
  2631                           ;		_LCDWriteFloat
  2632                           ; This function uses a non-reentrant model
  2633                           ; 
  2634                           	psect	text197,local,class=CODE,delta=2
  2635                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\ftsub.c"
  2636                           	line	17
  2637                           	
  2638  0E80                     ___ftsub:	
  2639                           	opt stack 5
  2640                           ; Regs used in ___ftsub: [wreg-fsr0h+status,2+s
                                 tatus,0+pclath+cstack]
  2641                           	line	18
  2642                           	
  2643  0E80  3080               	movlw	080h
  2644  0E81  06B8               	xorwf	(___ftsub_f2+2),f
  2645                           	line	19
  2646                           	
  2647                           	
  2648  0E82  0836               	movf	(___ftsub_f2),w
  2649  0E83  00BC               	movwf	(0+(?___ftadd)+03h)
  2650  0E84  0837               	movf	(___ftsub_f2+1),w
  2651  0E85  00BD               	movwf	(1+(?___ftadd)+03h)
  2652  0E86  0838               	movf	(___ftsub_f2+2),w
  2653  0E87  00BE               	movwf	(2+(?___ftadd)+03h)
  2654                           	
  2655                           	
  2656  0E88  0833               	movf	(___ftsub_f1),w
  2657  0E89  00B9               	movwf	(?___ftadd)
  2658  0E8A  0834               	movf	(___ftsub_f1+1),w
  2659  0E8B  00BA               	movwf	(?___ftadd+1)
  2660  0E8C  0835               	movf	(___ftsub_f1+2),w
  2661  0E8D  00BB               	movwf	(?___ftadd+2)
  2662  0E8E  120A  118A  2484   	fcall	___ftadd
              120A  158A         
  2663  0E93  1283               	bcf	status, 5	;RP0=0, select bank0
  2664  0E94  1303               	bcf	status, 6	;RP1=0, select bank0
  2665                           	
  2666  0E95  0839               	movf	(0+?___ftadd),w
  2667  0E96  00B3               	movwf	(?___ftsub)
  2668  0E97  083A               	movf	(1+?___ftadd),w
  2669  0E98  00B4               	movwf	(?___ftsub+1)
  2670  0E99  083B               	movf	(2+?___ftadd),w
  2671  0E9A  00B5               	movwf	(?___ftsub+2)
  2672  0E9B  2E9C               	goto	l138
  2673                           	line	20
  2674  0E9C                     l138:	
  2675  0E9C  0008               	return
  2676                           ; =============== function ___ftsub ends ======
                                 =========
  2677                           
  2678                           GLOBAL __end_of___ftsub
  2679  0E9D                     	__end_of___ftsub:
  2680                           	FNSIZE	___ftsub,0,6
  2681                           	signat	___ftsub,8315
  2682                           	global	_LCDWriteString
  2683                           	global	??_LCDWriteString
  2684                           	global	?_LCDWriteString
  2685                           
  2686                           ; *************** function _LCDWriteString ****
                                 ***********
  2687                           ; Defined at:
  2688                           ;		line 24 in file "C:\Users\Suchitra\Desktop\h
                                 ardik\codes\LM35 wala\LCD.c"
  2689                           ; Parameters:
  2690                           ;		lcd_string  	reg:   wr	type: PTR const unsig
                                 ned char ; Largest target is 17
  2691                           ;		 -> STR_3(2), STR_2(3), STR_1(17), 
  2692                           ; Auto variables:
  2693                           ;		lcd_string  	       	type: PTR const unsigne
                                 d char ; Largest target is 17
  2694                           ;		 -> STR_3(2), STR_2(3), STR_1(17), 
  2695                           ; Return value:
  2696                           ;		type: void 
  2697                           ;		size: 0
  2698                           ; Registers used:
  2699                           ;		wreg, status,2, status,0, pclath, cstack
  2700                           ; Tracked objects:
  2701                           ;		On entry : 0/0
  2702                           ;		On exit  : 0/0
  2703                           ;		Unchanged: 0/0
  2704                           ; Data sizes:
  2705                           ;		Autos:    1
  2706                           ;		Params:   0
  2707                           ;		Temp:     1
  2708                           ;		Total:    2
  2709                           ; This function calls:
  2710                           ;		_LCDWriteData
  2711                           ; This function is called by:
  2712                           ;		_LCDWriteFloat
  2713                           ; This function uses a non-reentrant model
  2714                           ; 
  2715                           	psect	text198,local,class=CODE,delta=2
  2716                           	file	"C:\Users\Suchitra\Desktop\hardik\codes\L
                                 M35 wala\LCD.c"
  2717                           	line	24
  2718                           ;LCD.c: 23: void LCDWriteString(const char *lcd
                                 _string)
  2719                           ;LCD.c: 24: {
  2720                           	
  2721  00AA                     _LCDWriteString:	
  2722                           	opt stack 5
  2723                           ; Regs used in _LCDWriteString: [wreg+status,2+
                                 status,0+pclath+cstack]
  2724                           ;_LCDWriteString_lcd_string stored from wreg
  2725  00AA  1283               	bcf	status, 5	;RP0=0, select bank0
  2726  00AB  1303               	bcf	status, 6	;RP1=0, select bank0
  2727                           	
  2728  00AC  00B3               	movwf	(_LCDWriteString_lcd_string)
  2729                           	line	25
  2730                           ;LCD.c: 25: while(*lcd_string)
  2731  00AD  28BF               	goto	l12
  2732                           	
  2733  00AE                     l13:	
  2734                           	line	27
  2735                           ;LCD.c: 26: {
  2736                           ;LCD.c: 27: LCDWriteData(*lcd_string++);
  2737                           	
  2738  00AE  0833               	movf	(_LCDWriteString_lcd_string),w
  2739                           	FNCALL _LCDWriteString,stringtab
  2740  00AF  120A  118A  2709   	fcall	stringdir
              120A  118A         
  2741  00B4  120A  158A  2620   	fcall	_LCDWriteData
              120A  118A         
  2742  00B9  3001               	movlw	(01h)
  2743  00BA  1283               	bcf	status, 5	;RP0=0, select bank0
  2744  00BB  1303               	bcf	status, 6	;RP1=0, select bank0
  2745  00BC  00B4               	movwf	(??_LCDWriteString+1+0)
  2746                           	
  2747  00BD  0834               	movf	(??_LCDWriteString+1+0),w
  2748  00BE  07B3               	addwf	(_LCDWriteString_lcd_string),f
  2749                           	line	28
  2750                           	
  2751  00BF                     l12:	
  2752                           	line	25
  2753  00BF  1283               	bcf	status, 5	;RP0=0, select bank0
  2754  00C0  1303               	bcf	status, 6	;RP1=0, select bank0
  2755                           	
  2756  00C1  0833               	movf	(_LCDWriteString_lcd_string),w
  2757                           	FNCALL _LCDWriteString,stringtab
  2758  00C2  120A  118A  2709   	fcall	stringdir
              120A  118A         
  2759  00C7  3800               	iorlw	0
  2760  00C8  1D03               	skipz
  2761  00C9  28CB               	goto	u2561
  2762  00CA  28CC               	goto	u2560
  2763  00CB                     u2561:
  2764  00CB  28AE               	goto	l13
  2765  00CC                     u2560:
  2766                           	
  2767  00CC                     l14:	
  2768                           	line	29
  2769                           ;LCD.c: 28: }
  2770                           ;LCD.c: 29: }
  2771  00CC                     l11:	
  2772  00CC  0008               	return
  2773                           ; =============== function _LCDWriteString ends
                                  ===============
  2774                           
  2775                           GLOBAL __end_of_LCDWriteString
  2776  00CD                     	__end_of_LCDWriteString:
  2777                           	FNSIZE	_LCDWriteString,2,0
  2778                           	signat	_LCDWriteString,4216
  2779                           	global	_LCDInitialize
  2780                           	global	??_LCDInitialize
  2781                           	global	?_LCDInitialize
  2782                           
  2783                           ; *************** function _LCDInitialize *****
                                 **********
  2784                           ; Defined at:
  2785                           ;		line 32 in file "C:\Users\Suchitra\Desktop\h
                                 ardik\codes\LM35 wala\LCD.c"
  2786                           ; Parameters:
  2787                           ;		None
  2788                           ; Auto variables:
  2789                           ;		None
  2790                           ; Return value:
  2791                           ;		type: void 
  2792                           ;		size: 0
  2793                           ; Registers used:
  2794                           ;		wreg, status,2, status,0, pclath, cstack
  2795                           ; Tracked objects:
  2796                           ;		On entry : 0/0
  2797                           ;		On exit  : 0/0
  2798                           ;		Unchanged: 0/0
  2799                           ; Data sizes:
  2800                           ;		Autos:    0
  2801                           ;		Params:   0
  2802                           ;		Temp:     1
  2803                           ;		Total:    1
  2804                           ; This function calls:
  2805                           ;		_LCDReset
  2806                           ;		_LCDWriteCommand
  2807                           ; This function is called by:
  2808                           ;		_MainSystemInitialize
  2809                           ; This function uses a non-reentrant model
  2810                           ; 
  2811                           	psect	text199,local,class=CODE,delta=2
  2812                           	file	"C:\Users\Suchitra\Desktop\hardik\codes\L
                                 M35 wala\LCD.c"
  2813                           	line	32
  2814                           ;LCD.c: 31: void LCDInitialize(void)
  2815                           ;LCD.c: 32: {
  2816                           	
  2817  0EC7                     _LCDInitialize:	
  2818                           	opt stack 5
  2819                           ; Regs used in _LCDInitialize: [wreg+status,2+s
                                 tatus,0+pclath+cstack]
  2820                           	line	33
  2821                           ;LCD.c: 33: TRISD = TRISD & 0x03;
  2822  0EC7  1683               	bsf	status, 5	;RP0=1, select bank1
  2823  0EC8  1303               	bcf	status, 6	;RP1=0, select bank1
  2824+                          	
  2825+ 0EC9  0808               	movf	(136)^080h,w	;volatile
  2826+ 0ECA  3903               	andlw	03h
  2827+                          	
  2828+ 0ECB  0088               	movwf	(136)^080h	;volatile
  2829+                          	line	34
  2830+                          ;LCD.c: 34: RD3 = 0;
  2831+ 0ECC  1283               	bcf	status, 5	;RP0=0, select bank0
  2832+ 0ECD  1303               	bcf	status, 6	;RP1=0, select bank0
  2833+ 0ECE  1188               	bcf	(67/8),(67)&7
  2834+                          	line	35
  2835+                          ;LCD.c: 35: RD2 = 0;
  2836+ 0ECF  1108               	bcf	(66/8),(66)&7
  2837+                          	line	36
  2838+                          ;LCD.c: 36: PORTD &= 0x0f;
  2839+ 0ED0  300F               	movlw	(0Fh)
  2840+ 0ED1  00A4               	movwf	(??_LCDInitialize+0+0)
  2841+                          	
  2842+ 0ED2  0824               	movf	(??_LCDInitialize+0+0),w
  2843+ 0ED3  0588               	andwf	(8),f	;volatile
  2844+                          	line	37
  2845+                          ;LCD.c: 37: LCDReset();
  2846+ 0ED4  120A  158A  2654   	fcall	_LCDReset
      +       120A  158A         
  2847+                          	line	38
  2848+                          ;LCD.c: 38: LCDWriteCommand(0x28);
  2849+ 0ED9  3028               	movlw	(028h)
  2850+ 0EDA  120A  118A  27F5   	fcall	_LCDWriteCommand
      +       120A  158A         
  2851+                          	line	39
  2852+                          ;LCD.c: 39: LCDWriteCommand(0x0C);
  2853+ 0EDF  300C               	movlw	(0Ch)
  2854+ 0EE0  120A  118A  27F5   	fcall	_LCDWriteCommand
      +       120A  158A         
  2855+                          	line	40
  2856+                          ;LCD.c: 40: LCDWriteCommand(0x06);
  2857+ 0EE5  3006               	movlw	(06h)
  2858+ 0EE6  120A  118A  27F5   	fcall	_LCDWriteCommand
      +       120A  158A         
  2859+                          	line	41
  2860+                          ;LCD.c: 41: LCDWriteCommand(0x01);
  2861+ 0EEB  3001               	movlw	(01h)
  2862+ 0EEC  120A  118A  27F5   	fcall	_LCDWriteCommand
      +       120A  158A         
  2863+                          	line	43
  2864+                          ;LCD.c: 43: }
  2865+ 0EF1                     l15:	
  2866+ 0EF1  0008               	return
  2867+                          ; =============== function _LCDInitialize ends 
      +                          ===============
  2868+                          
  2869+                          GLOBAL __end_of_LCDInitialize
  2870+ 0EF2                     	__end_of_LCDInitialize:
  2871+                          	FNSIZE	_LCDInitialize,1,0
  2872+                          	signat	_LCDInitialize,88
  2873+                          	global	_ADCInitialize
  2874+                          	global	??_ADCInitialize
  2875+                          	global	?_ADCInitialize
  2876+                          
  2877+                          ; *************** function _ADCInitialize *****
      +                          **********
  2878+                          ; Defined at:
  2879+                          ;		line 4 in file "C:\Users\Suchitra\Desktop\ha
      +                          rdik\codes\LM35 wala\adc.c"
  2880+                          ; Parameters:
  2881+                          ;		None
  2882+                          ; Auto variables:
  2883+                          ;		None
  2884+                          ; Return value:
  2885+                          ;		type: void 
  2886+                          ;		size: 0
  2887+                          ; Registers used:
  2888+                          ;		None
  2889+                          ; Tracked objects:
  2890+                          ;		On entry : BFF/0
  2891+                          ;		On exit  : 0/0
  2892+                          ;		Unchanged: 0/0
  2893+                          ; Data sizes:
  2894+                          ;		Autos:    0
  2895+                          ;		Params:   0
  2896+                          ;		Temp:     0
  2897+                          ;		Total:    0
  2898+                          ; This function calls:
  2899+                          ;		Nothing
  2900+                          ; This function is called by:
  2901+                          ;		_MainSystemInitialize
  2902+                          ; This function uses a non-reentrant model
  2903+                          ; 
  2904+                          	psect	text200,local,class=CODE,delta=2
  2905+                          	file	"C:\Users\Suchitra\Desktop\hardik\codes\L
      +                          M35 wala\adc.c"
  2906+                          	line	4
  2907+                          ;adc.c: 3: void ADCInitialize(void)
  2908+                          ;adc.c: 4: {
  2909+                          	
  2910+ 0E44                     _ADCInitialize:	
  2911+                          	opt stack 5
  2912+                          ; Regs used in _ADCInitialize: []
  2913+                          	line	5
  2914+                          ;adc.c: 5: ADON = 1;
  2915+ 0E44  141F               	bsf	(248/8),(248)&7
  2916+                          	line	6
  2917+                          ;adc.c: 6: ADFM = 1;
  2918+ 0E45  1683               	bsf	status, 5	;RP0=1, select bank1
  2919+ 0E46  1303               	bcf	status, 6	;RP1=0, select bank1
  2920+ 0E47  179F               	bsf	(1279/8)^080h,(1279)&7
  2921+                          	line	7
  2922+                          ;adc.c: 7: ADCS2 = ADCS1 = ADCS0 = 0;
  2923+ 0E48  1283               	bcf	status, 5	;RP0=0, select bank0
  2924+ 0E49  1303               	bcf	status, 6	;RP1=0, select bank0
  2925+ 0E4A  131F               	bcf	(254/8),(254)&7
  2926+ 0E4B  139F               	bcf	(255/8),(255)&7
  2927+ 0E4C  1683               	bsf	status, 5	;RP0=1, select bank1
  2928+ 0E4D  1303               	bcf	status, 6	;RP1=0, select bank1
  2929+ 0E4E  131F               	bcf	(1278/8)^080h,(1278)&7
  2930+                          	line	8
  2931+                          ;adc.c: 8: PCFG3 = PCFG2 = PCFG0 =0;
  2932+ 0E4F  101F               	bcf	(1272/8)^080h,(1272)&7
  2933+ 0E50  111F               	bcf	(1274/8)^080h,(1274)&7
  2934+ 0E51  119F               	bcf	(1275/8)^080h,(1275)&7
  2935+                          	line	9
  2936+                          ;adc.c: 9: PCFG1 = 1;
  2937+ 0E52  149F               	bsf	(1273/8)^080h,(1273)&7
  2938+                          	line	10
  2939+                          ;adc.c: 10: }
  2940+ 0E53                     l48:	
  2941+ 0E53  0008               	return
  2942+                          ; =============== function _ADCInitialize ends 
      +                          ===============
  2943+                          
  2944+                          GLOBAL __end_of_ADCInitialize
  2945+ 0E54                     	__end_of_ADCInitialize:
  2946+                          	FNSIZE	_ADCInitialize,0,0
  2947+                          	signat	_ADCInitialize,88
  2948+                          	global	___awtoft
  2949+                          	global	??___awtoft
  2950+                          	global	?___awtoft
  2951+                          
  2952+                          ; *************** function ___awtoft **********
      +                          *****
  2953+                          ; Defined at:
  2954+                          ;		line 16 in file "C:\Program Files (x86)\HI-T
      +                          ECH Software\PICC\PRO\9.65\sources\awtoft.c"
  2955+                          ; Parameters:
  2956+                          ;		c           	offs:   0	type: int 
  2957+                          ; Auto variables:
  2958+                          ;		f1          	       	type: float 
  2959+                          ; Return value:
  2960+                          ;		type: float 
  2961+                          ;		size: 3
  2962+                          ; Registers used:
  2963+                          ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
      +                          th, cstack
  2964+                          ; Tracked objects:
  2965+                          ;		On entry : 300/0
  2966+                          ;		On exit  : 0/0
  2967+                          ;		Unchanged: 0/0
  2968+                          ; Data sizes:
  2969+                          ;		Autos:    3
  2970+                          ;		Params:   3
  2971+                          ;		Temp:     3
  2972+                          ;		Total:    9
  2973+                          ; This function calls:
  2974+                          ;		___ftpack
  2975+                          ;		___ftneg
  2976+                          ; This function is called by:
  2977+                          ;		_LCDWriteFloat
  2978+                          ; This function uses a non-reentrant model
  2979+                          ; 
  2980+                          	psect	text201,local,class=CODE,delta=2
  2981+                          	file	"C:\Program Files (x86)\HI-TECH Software\
      +                          PICC\PRO\9.65\sources\awtoft.c"
  2982+                          	line	16
  2983+                          	
  2984+ 0F56                     ___awtoft:	
  2985+                          	opt stack 5
  2986+                          ; Regs used in ___awtoft: [wreg-fsr0h+status,2+
      +                          status,0+pclath+cstack]
  2987+                          	line	19
  2988+                          	
  2989+ 0F56  0834               	movf	((___awtoft_c+1)),w
  2990+ 0F57  0433               	iorwf	((___awtoft_c)),w
  2991+ 0F58  1D03               	skipz
  2992+ 0F59  2F5B               	goto	u3271
  2993+ 0F5A  2F5C               	goto	u3270
  2994+ 0F5B                     u3271:
  2995+ 0F5B  2F63               	goto	l225
  2996+ 0F5C                     u3270:
  2997+                          	line	20
  2998+                          	
  2999+ 0F5C  3000               	movlw	0x0
  3000+ 0F5D  00B3               	movwf	(?___awtoft)
  3001+ 0F5E  3000               	movlw	0x0
  3002+ 0F5F  00B4               	movwf	(?___awtoft+1)
  3003+ 0F60  3000               	movlw	0x0
  3004+ 0F61  00B5               	movwf	(?___awtoft+2)
  3005+ 0F62  2FA5               	goto	l224
  3006+                          	
  3007+ 0F63                     l225:	
  3008+                          	line	21
  3009+                          	
  3010+ 0F63  0833               	movf	(___awtoft_c),w
  3011+ 0F64  00B9               	movwf	(??___awtoft+3+0)
  3012+ 0F65  0834               	movf	(___awtoft_c+1),w
  3013+ 0F66  00BA               	movwf	(??___awtoft+3+0+1)
  3014+ 0F67  3000               	movlw	0
  3015+ 0F68  1BBA               	btfsc	(??___awtoft+3+0+1),7
  3016+ 0F69  30FF               	movlw	255
  3017+ 0F6A  00BB               	movwf	(??___awtoft+3+0+2)
  3018+                          	
  3019+ 0F6B  0839               	movf	(??___awtoft+3+0),w
  3020+ 0F6C  00B6               	movwf	(___awtoft_f1)
  3021+ 0F6D  083A               	movf	(??___awtoft+3+1),w
  3022+ 0F6E  00B7               	movwf	(___awtoft_f1+1)
  3023+ 0F6F  083B               	movf	(??___awtoft+3+2),w
  3024+ 0F70  00B8               	movwf	(___awtoft_f1+2)
  3025+                          	line	22
  3026+                          	
  3027+ 0F71  1FB4               	btfss	(___awtoft_c+1),7
  3028+ 0F72  2F74               	goto	u3281
  3029+ 0F73  2F75               	goto	u3280
  3030+ 0F74                     u3281:
  3031+ 0F74  2F7D               	goto	l226
  3032+ 0F75                     u3280:
  3033+                          	line	23
  3034+                          	
  3035+ 0F75  09B6               	comf	(___awtoft_f1),f
  3036+ 0F76  09B7               	comf	(___awtoft_f1+1),f
  3037+ 0F77  09B8               	comf	(___awtoft_f1+2),f
  3038+ 0F78  0AB6               	incf	(___awtoft_f1),f
  3039+ 0F79  1903               	skipnz
  3040+ 0F7A  0AB7               	incf	(___awtoft_f1+1),f
  3041+ 0F7B  1903               	skipnz
  3042+ 0F7C  0AB8               	incf	(___awtoft_f1+2),f
  3043+                          	
  3044+                          	
  3045+ 0F7D                     l226:	
  3046+                          	line	24
  3047+ 0F7D  308E               	movlw	(08Eh)
  3048+                          	
  3049+ 0F7E  00C7               	movwf	(?___ftpack)
  3050+                          	
  3051+ 0F7F  3036               	movlw	((___awtoft_f1))&0ffh
  3052+ 0F80  120A  118A  23BE   	fcall	___ftpack
      +       120A  158A         
  3053+                          	line	25
  3054+ 0F85  1283               	bcf	status, 5	;RP0=0, select bank0
  3055+ 0F86  1303               	bcf	status, 6	;RP1=0, select bank0
  3056+                          	
  3057+ 0F87  1FB4               	btfss	(___awtoft_c+1),7
  3058+ 0F88  2F8A               	goto	u3291
  3059+ 0F89  2F8B               	goto	u3290
  3060+ 0F8A                     u3291:
  3061+ 0F8A  2F9E               	goto	l227
  3062+ 0F8B                     u3290:
  3063                           	line	26
  3064                           	
  3065                           	
  3066  0F8B  0836               	movf	(___awtoft_f1),w
  3067  0F8C  00BC               	movwf	(?___ftneg)
  3068  0F8D  0837               	movf	(___awtoft_f1+1),w
  3069  0F8E  00BD               	movwf	(?___ftneg+1)
  3070  0F8F  0838               	movf	(___awtoft_f1+2),w
  3071  0F90  00BE               	movwf	(?___ftneg+2)
  3072  0F91  120A  158A  262B   	fcall	___ftneg
              120A  158A         
  3073  0F96  1283               	bcf	status, 5	;RP0=0, select bank0
  3074  0F97  1303               	bcf	status, 6	;RP1=0, select bank0
  3075                           	
  3076  0F98  083C               	movf	(0+?___ftneg),w
  3077  0F99  00B6               	movwf	(___awtoft_f1)
  3078  0F9A  083D               	movf	(1+?___ftneg),w
  3079  0F9B  00B7               	movwf	(___awtoft_f1+1)
  3080  0F9C  083E               	movf	(2+?___ftneg),w
  3081  0F9D  00B8               	movwf	(___awtoft_f1+2)
  3082                           	
  3083  0F9E                     l227:	
  3084                           	line	27
  3085                           	
  3086                           	
  3087  0F9E  0836               	movf	(___awtoft_f1),w
  3088  0F9F  00B3               	movwf	(?___awtoft)
  3089  0FA0  0837               	movf	(___awtoft_f1+1),w
  3090  0FA1  00B4               	movwf	(?___awtoft+1)
  3091  0FA2  0838               	movf	(___awtoft_f1+2),w
  3092  0FA3  00B5               	movwf	(?___awtoft+2)
  3093  0FA4  2FA5               	goto	l224
  3094                           	line	28
  3095  0FA5                     l224:	
  3096  0FA5  0008               	return
  3097                           ; =============== function ___awtoft ends =====
                                 ==========
  3098                           
  3099                           GLOBAL __end_of___awtoft
  3100  0FA6                     	__end_of___awtoft:
  3101                           	FNSIZE	___awtoft,6,3
  3102                           	signat	___awtoft,4219
  3103                           	global	_LCDWriteData
  3104                           	global	??_LCDWriteData
  3105                           	global	?_LCDWriteData
  3106                           
  3107                           ; *************** function _LCDWriteData ******
                                 *********
  3108                           ; Defined at:
  3109                           ;		line 18 in file "C:\Users\Suchitra\Desktop\h
                                 ardik\codes\LM35 wala\LCD.c"
  3110                           ; Parameters:
  3111                           ;		LCDData     	reg:   wr	type: unsigned char 
  3112                           ; Auto variables:
  3113                           ;		LCDData     	       	type: unsigned char 
  3114                           ; Return value:
  3115                           ;		type: void 
  3116                           ;		size: 0
  3117                           ; Registers used:
  3118                           ;		wreg, status,2, status,0, pclath, cstack
  3119                           ; Tracked objects:
  3120                           ;		On entry : 0/0
  3121                           ;		On exit  : 0/0
  3122                           ;		Unchanged: 0/0
  3123                           ; Data sizes:
  3124                           ;		Autos:    1
  3125                           ;		Params:   0
  3126                           ;		Temp:     0
  3127                           ;		Total:    1
  3128                           ; This function calls:
  3129                           ;		_LCDWriteByte
  3130                           ; This function is called by:
  3131                           ;		_LCDWriteString
  3132                           ;		_LCDWriteFloat
  3133                           ;		_LCDWriteInteger
  3134                           ; This function uses a non-reentrant model
  3135                           ; 
  3136                           	psect	text202,local,class=CODE,delta=2
  3137                           	file	"C:\Users\Suchitra\Desktop\hardik\codes\L
                                 M35 wala\LCD.c"
  3138                           	line	18
  3139                           ;LCD.c: 17: void LCDWriteData(LCDubyte LCDData)
  3140                           ;LCD.c: 18: {
  3141                           	
  3142  0E20                     _LCDWriteData:	
  3143                           	opt stack 4
  3144                           ; Regs used in _LCDWriteData: [wreg+status,2+st
                                 atus,0+pclath+cstack]
  3145                           ;_LCDWriteData_LCDData stored from wreg
  3146  0E20  1283               	bcf	status, 5	;RP0=0, select bank0
  3147  0E21  1303               	bcf	status, 6	;RP1=0, select bank0
  3148                           	
  3149  0E22  00BD               	movwf	(_LCDWriteData_LCDData)
  3150                           	line	19
  3151                           ;LCD.c: 19: RD2 = 1;
  3152  0E23  1508               	bsf	(66/8),(66)&7
  3153                           	line	20
  3154                           ;LCD.c: 20: LCDWriteByte(LCDData);
  3155                           	
  3156  0E24  083D               	movf	(_LCDWriteData_LCDData),w
  3157  0E25  120A  158A  26F2   	fcall	_LCDWriteByte
              120A  158A         
  3158                           	line	21
  3159                           ;LCD.c: 21: }
  3160  0E2A                     l10:	
  3161  0E2A  0008               	return
  3162                           ; =============== function _LCDWriteData ends =
                                 ==============
  3163                           
  3164                           GLOBAL __end_of_LCDWriteData
  3165  0E2B                     	__end_of_LCDWriteData:
  3166                           	FNSIZE	_LCDWriteData,1,0
  3167                           	signat	_LCDWriteData,4216
  3168                           	global	___ftneg
  3169                           	global	??___ftneg
  3170                           	global	?___ftneg
  3171                           
  3172                           ; *************** function ___ftneg ***********
                                 ****
  3173                           ; Defined at:
  3174                           ;		line 16 in file "C:\Program Files (x86)\HI-T
                                 ECH Software\PICC\PRO\9.65\sources\ftneg.c"
  3175                           ; Parameters:
  3176                           ;		f1          	offs:   0	type: float 
  3177                           ; Auto variables:
  3178                           ;		None
  3179                           ; Return value:
  3180                           ;		type: float 
  3181                           ;		size: 3
  3182                           ; Registers used:
  3183                           ;		wreg
  3184                           ; Tracked objects:
  3185                           ;		On entry : 300/0
  3186                           ;		On exit  : 0/0
  3187                           ;		Unchanged: 0/0
  3188                           ; Data sizes:
  3189                           ;		Autos:    0
  3190                           ;		Params:   3
  3191                           ;		Temp:     0
  3192                           ;		Total:    3
  3193                           ; This function calls:
  3194                           ;		Nothing
  3195                           ; This function is called by:
  3196                           ;		_LCDWriteFloat
  3197                           ;		___awtoft
  3198                           ; This function uses a non-reentrant model
  3199                           ; 
  3200                           	psect	text203,local,class=CODE,delta=2
  3201                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\ftneg.c"
  3202                           	line	16
  3203                           	
  3204  0E2B                     ___ftneg:	
  3205                           	opt stack 4
  3206                           ; Regs used in ___ftneg: [wreg]
  3207                           	line	17
  3208                           	
  3209  0E2B  083E               	movf	(___ftneg_f1+2),w
  3210  0E2C  043D               	iorwf	(___ftneg_f1+1),w
  3211  0E2D  043C               	iorwf	(___ftneg_f1),w
  3212  0E2E  1903               	skipnz
  3213  0E2F  2E31               	goto	u2071
  3214  0E30  2E32               	goto	u2070
  3215  0E31                     u2071:
  3216  0E31  2E34               	goto	l250
  3217  0E32                     u2070:
  3218                           	line	18
  3219                           	
  3220  0E32  3080               	movlw	080h
  3221  0E33  06BE               	xorwf	(___ftneg_f1+2),f
  3222                           	
  3223  0E34                     l250:	
  3224                           	line	19
  3225  0E34  2E35               	goto	l249
  3226                           	line	20
  3227  0E35                     l249:	
  3228  0E35  0008               	return
  3229                           ; =============== function ___ftneg ends ======
                                 =========
  3230                           
  3231                           GLOBAL __end_of___ftneg
  3232  0E36                     	__end_of___ftneg:
  3233                           	FNSIZE	___ftneg,0,3
  3234                           	signat	___ftneg,4219
  3235                           	global	___awmod
  3236                           	global	??___awmod
  3237                           	global	?___awmod
  3238                           
  3239                           ; *************** function ___awmod ***********
                                 ****
  3240                           ; Defined at:
  3241                           ;		line 5 in file "C:\Program Files (x86)\HI-TE
                                 CH Software\PICC\PRO\9.65\sources\awmod.c"
  3242                           ; Parameters:
  3243                           ;		dividend    	offs:   0	type: int 
  3244                           ;		divisor     	offs:   2	type: int 
  3245                           ; Auto variables:
  3246                           ;		sign        	       	type: unsigned char 
  3247                           ;		counter     	       	type: unsigned char 
  3248                           ; Return value:
  3249                           ;		type: int 
  3250                           ;		size: 2
  3251                           ; Registers used:
  3252                           ;		wreg, status,2, status,0
  3253                           ; Tracked objects:
  3254                           ;		On entry : 300/0
  3255                           ;		On exit  : 0/0
  3256                           ;		Unchanged: 0/0
  3257                           ; Data sizes:
  3258                           ;		Autos:    2
  3259                           ;		Params:   4
  3260                           ;		Temp:     1
  3261                           ;		Total:    7
  3262                           ; This function calls:
  3263                           ;		Nothing
  3264                           ; This function is called by:
  3265                           ;		_LCDWriteFloat
  3266                           ;		_LCDWriteInteger
  3267                           ; This function uses a non-reentrant model
  3268                           ; 
  3269                           	psect	text204,local,class=CODE,delta=2
  3270                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\awmod.c"
  3271                           	line	5
  3272                           	
  3273  00CD                     ___awmod:	
  3274                           	opt stack 4
  3275                           ; Regs used in ___awmod: [wreg+status,2+status,
                                 0]
  3276                           	line	8
  3277  00CD  1003               	clrc
  3278                           	
  3279  00CE  3000               	movlw	0
  3280  00CF  1803               	btfsc	status,0
  3281  00D0  3001               	movlw	1
  3282  00D1  00C1               	movwf	(___awmod_sign)
  3283                           	line	9
  3284                           	
  3285  00D2  1FBE               	btfss	(___awmod_dividend+1),7
  3286  00D3  28D5               	goto	u2121
  3287  00D4  28D6               	goto	u2120
  3288  00D5                     u2121:
  3289  00D5  28DE               	goto	l311
  3290  00D6                     u2120:
  3291                           	line	10
  3292                           	
  3293  00D6  09BD               	comf	(___awmod_dividend),f
  3294  00D7  09BE               	comf	(___awmod_dividend+1),f
  3295  00D8  0ABD               	incf	(___awmod_dividend),f
  3296  00D9  1903               	skipnz
  3297  00DA  0ABE               	incf	(___awmod_dividend+1),f
  3298                           	
  3299                           	line	11
  3300                           	
  3301  00DB  01C1               	clrf	(___awmod_sign)
  3302  00DC  1403               	bsf	status,0
  3303  00DD  0DC1               	rlf	(___awmod_sign),f
  3304                           	line	12
  3305                           	
  3306  00DE                     l311:	
  3307                           	line	13
  3308                           	
  3309  00DE  1FC0               	btfss	(___awmod_divisor+1),7
  3310  00DF  28E1               	goto	u2131
  3311  00E0  28E2               	goto	u2130
  3312  00E1                     u2131:
  3313  00E1  28E7               	goto	l312
  3314  00E2                     u2130:
  3315                           	line	14
  3316                           	
  3317  00E2  09BF               	comf	(___awmod_divisor),f
  3318  00E3  09C0               	comf	(___awmod_divisor+1),f
  3319  00E4  0ABF               	incf	(___awmod_divisor),f
  3320  00E5  1903               	skipnz
  3321  00E6  0AC0               	incf	(___awmod_divisor+1),f
  3322                           	
  3323                           	
  3324  00E7                     l312:	
  3325                           	line	15
  3326                           	
  3327  00E7  0840               	movf	(___awmod_divisor+1),w
  3328  00E8  043F               	iorwf	(___awmod_divisor),w
  3329  00E9  1903               	skipnz
  3330  00EA  28EC               	goto	u2141
  3331  00EB  28ED               	goto	u2140
  3332  00EC                     u2141:
  3333  00EC  291D               	goto	l313
  3334  00ED                     u2140:
  3335                           	line	16
  3336                           	
  3337  00ED  01C2               	clrf	(___awmod_counter)
  3338  00EE  1403               	bsf	status,0
  3339  00EF  0DC2               	rlf	(___awmod_counter),f
  3340                           	line	17
  3341  00F0  28FC               	goto	l314
  3342                           	
  3343  00F1                     l315:	
  3344                           	line	18
  3345                           	
  3346  00F1  3001               	movlw	01h
  3347  00F2                     u2155:
  3348  00F2  1003               	clrc
  3349  00F3  0DBF               	rlf	(___awmod_divisor),f
  3350  00F4  0DC0               	rlf	(___awmod_divisor+1),f
  3351  00F5  3EFF               	addlw	-1
  3352  00F6  1D03               	skipz
  3353  00F7  28F2               	goto	u2155
  3354                           	line	19
  3355  00F8  3001               	movlw	(01h)
  3356  00F9  00C3               	movwf	(??___awmod+2+0)
  3357                           	
  3358  00FA  0843               	movf	(??___awmod+2+0),w
  3359  00FB  07C2               	addwf	(___awmod_counter),f
  3360                           	line	20
  3361                           	
  3362  00FC                     l314:	
  3363                           	line	17
  3364                           	
  3365  00FC  1FC0               	btfss	(___awmod_divisor+1),(15)&7
  3366  00FD  28FF               	goto	u2161
  3367  00FE  2900               	goto	u2160
  3368  00FF                     u2161:
  3369  00FF  28F1               	goto	l315
  3370  0100                     u2160:
  3371                           	
  3372  0100                     l316:	
  3373                           	line	21
  3374                           	
  3375  0100                     l319:	
  3376                           	line	22
  3377                           	
  3378                           	
  3379  0100  0840               	movf	(___awmod_divisor+1),w
  3380  0101  023E               	subwf	(___awmod_dividend+1),w
  3381  0102  1D03               	skipz
  3382  0103  2906               	goto	u2175
  3383  0104  083F               	movf	(___awmod_divisor),w
  3384  0105  023D               	subwf	(___awmod_dividend),w
  3385  0106                     u2175:
  3386  0106  1C03               	skipc
  3387  0107  2909               	goto	u2171
  3388  0108  290A               	goto	u2170
  3389  0109                     u2171:
  3390  0109  2910               	goto	l320
  3391  010A                     u2170:
  3392                           	line	23
  3393                           	
  3394                           	
  3395  010A  083F               	movf	(___awmod_divisor),w
  3396  010B  02BD               	subwf	(___awmod_dividend),f
  3397  010C  0840               	movf	(___awmod_divisor+1),w
  3398  010D  1C03               	skipc
  3399  010E  03BE               	decf	(___awmod_dividend+1),f
  3400  010F  02BE               	subwf	(___awmod_dividend+1),f
  3401                           	
  3402  0110                     l320:	
  3403                           	line	24
  3404                           	
  3405  0110  3001               	movlw	01h
  3406  0111                     u2185:
  3407  0111  1003               	clrc
  3408  0112  0CC0               	rrf	(___awmod_divisor+1),f
  3409  0113  0CBF               	rrf	(___awmod_divisor),f
  3410  0114  3EFF               	addlw	-1
  3411  0115  1D03               	skipz
  3412  0116  2911               	goto	u2185
  3413                           	line	25
  3414                           	
  3415                           	
  3416  0117  3001               	movlw	low(01h)
  3417  0118  02C2               	subwf	(___awmod_counter),f
  3418  0119  1D03               	btfss	status,2
  3419  011A  291C               	goto	u2191
  3420  011B  291D               	goto	u2190
  3421  011C                     u2191:
  3422  011C  2900               	goto	l319
  3423  011D                     u2190:
  3424                           	
  3425  011D                     l318:	
  3426                           	line	26
  3427                           	
  3428  011D                     l313:	
  3429                           	line	27
  3430                           	
  3431  011D  08C1               	movf	(___awmod_sign),f
  3432  011E  1D03               	skipz
  3433  011F  2921               	goto	u2200
  3434  0120  2926               	goto	l321
  3435  0121                     u2200:
  3436                           	line	28
  3437                           	
  3438  0121  09BD               	comf	(___awmod_dividend),f
  3439  0122  09BE               	comf	(___awmod_dividend+1),f
  3440  0123  0ABD               	incf	(___awmod_dividend),f
  3441  0124  1903               	skipnz
  3442  0125  0ABE               	incf	(___awmod_dividend+1),f
  3443                           	
  3444                           	
  3445  0126                     l321:	
  3446                           	line	29
  3447  0126  2927               	goto	l310
  3448                           	line	30
  3449  0127                     l310:	
  3450  0127  0008               	return
  3451                           ; =============== function ___awmod ends ======
                                 =========
  3452                           
  3453                           GLOBAL __end_of___awmod
  3454  0128                     	__end_of___awmod:
  3455                           	FNSIZE	___awmod,3,4
  3456                           	signat	___awmod,8314
  3457                           	global	___awdiv
  3458                           	global	??___awdiv
  3459                           	global	?___awdiv
  3460                           
  3461                           ; *************** function ___awdiv ***********
                                 ****
  3462                           ; Defined at:
  3463                           ;		line 5 in file "C:\Program Files (x86)\HI-TE
                                 CH Software\PICC\PRO\9.65\sources\awdiv.c"
  3464                           ; Parameters:
  3465                           ;		dividend    	offs:   0	type: int 
  3466                           ;		divisor     	offs:   2	type: int 
  3467                           ; Auto variables:
  3468                           ;		counter     	       	type: unsigned char 
  3469                           ;		sign        	       	type: unsigned char 
  3470                           ;		quotient    	       	type: int 
  3471                           ; Return value:
  3472                           ;		type: int 
  3473                           ;		size: 2
  3474                           ; Registers used:
  3475                           ;		wreg, status,2, status,0
  3476                           ; Tracked objects:
  3477                           ;		On entry : B00/0
  3478                           ;		On exit  : 0/0
  3479                           ;		Unchanged: 0/0
  3480                           ; Data sizes:
  3481                           ;		Autos:    4
  3482                           ;		Params:   4
  3483                           ;		Temp:     1
  3484                           ;		Total:    9
  3485                           ; This function calls:
  3486                           ;		Nothing
  3487                           ; This function is called by:
  3488                           ;		_LCDWriteFloat
  3489                           ;		_LCDWriteInteger
  3490                           ; This function uses a non-reentrant model
  3491                           ; 
  3492                           	psect	text205,local,class=CODE,delta=2
  3493                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\awdiv.c"
  3494                           	line	5
  3495                           	
  3496  019B                     ___awdiv:	
  3497                           	opt stack 4
  3498                           ; Regs used in ___awdiv: [wreg+status,2+status,
                                 0]
  3499                           	line	9
  3500  019B  1003               	clrc
  3501                           	
  3502  019C  3000               	movlw	0
  3503  019D  1803               	btfsc	status,0
  3504  019E  3001               	movlw	1
  3505  019F  00C1               	movwf	(___awdiv_sign)
  3506                           	line	10
  3507                           	
  3508  01A0  1FC0               	btfss	(___awdiv_divisor+1),7
  3509  01A1  29A3               	goto	u1971
  3510  01A2  29A4               	goto	u1970
  3511  01A3                     u1971:
  3512  01A3  29AC               	goto	l229
  3513  01A4                     u1970:
  3514                           	line	11
  3515                           	
  3516  01A4  09BF               	comf	(___awdiv_divisor),f
  3517  01A5  09C0               	comf	(___awdiv_divisor+1),f
  3518  01A6  0ABF               	incf	(___awdiv_divisor),f
  3519  01A7  1903               	skipnz
  3520  01A8  0AC0               	incf	(___awdiv_divisor+1),f
  3521                           	
  3522                           	line	12
  3523                           	
  3524  01A9  01C1               	clrf	(___awdiv_sign)
  3525  01AA  1403               	bsf	status,0
  3526  01AB  0DC1               	rlf	(___awdiv_sign),f
  3527                           	line	13
  3528                           	
  3529  01AC                     l229:	
  3530                           	line	14
  3531                           	
  3532  01AC  1FBE               	btfss	(___awdiv_dividend+1),7
  3533  01AD  29AF               	goto	u1981
  3534  01AE  29B0               	goto	u1980
  3535  01AF                     u1981:
  3536  01AF  29B9               	goto	l230
  3537  01B0                     u1980:
  3538                           	line	15
  3539                           	
  3540  01B0  09BD               	comf	(___awdiv_dividend),f
  3541  01B1  09BE               	comf	(___awdiv_dividend+1),f
  3542  01B2  0ABD               	incf	(___awdiv_dividend),f
  3543  01B3  1903               	skipnz
  3544  01B4  0ABE               	incf	(___awdiv_dividend+1),f
  3545                           	
  3546                           	line	16
  3547  01B5  3001               	movlw	(01h)
  3548  01B6  00C5               	movwf	(??___awdiv+4+0)
  3549                           	
  3550  01B7  0845               	movf	(??___awdiv+4+0),w
  3551  01B8  06C1               	xorwf	(___awdiv_sign),f
  3552                           	line	17
  3553                           	
  3554  01B9                     l230:	
  3555                           	line	18
  3556  01B9  3000               	movlw	low(0)
  3557                           	
  3558  01BA  00C3               	movwf	(___awdiv_quotient)
  3559  01BB  3000               	movlw	high(0)
  3560  01BC  00C4               	movwf	((___awdiv_quotient))+1
  3561                           	line	19
  3562                           	
  3563  01BD  0840               	movf	(___awdiv_divisor+1),w
  3564  01BE  043F               	iorwf	(___awdiv_divisor),w
  3565  01BF  1903               	skipnz
  3566  01C0  29C2               	goto	u1991
  3567  01C1  29C3               	goto	u1990
  3568  01C2                     u1991:
  3569  01C2  29FE               	goto	l231
  3570  01C3                     u1990:
  3571                           	line	20
  3572                           	
  3573  01C3  01C2               	clrf	(___awdiv_counter)
  3574  01C4  1403               	bsf	status,0
  3575  01C5  0DC2               	rlf	(___awdiv_counter),f
  3576                           	line	21
  3577  01C6  29D2               	goto	l232
  3578                           	
  3579  01C7                     l233:	
  3580                           	line	22
  3581                           	
  3582  01C7  3001               	movlw	01h
  3583  01C8                     u2005:
  3584  01C8  1003               	clrc
  3585  01C9  0DBF               	rlf	(___awdiv_divisor),f
  3586  01CA  0DC0               	rlf	(___awdiv_divisor+1),f
  3587  01CB  3EFF               	addlw	-1
  3588  01CC  1D03               	skipz
  3589  01CD  29C8               	goto	u2005
  3590                           	line	23
  3591  01CE  3001               	movlw	(01h)
  3592  01CF  00C5               	movwf	(??___awdiv+4+0)
  3593                           	
  3594  01D0  0845               	movf	(??___awdiv+4+0),w
  3595  01D1  07C2               	addwf	(___awdiv_counter),f
  3596                           	line	24
  3597                           	
  3598  01D2                     l232:	
  3599                           	line	21
  3600                           	
  3601  01D2  1FC0               	btfss	(___awdiv_divisor+1),(15)&7
  3602  01D3  29D5               	goto	u2011
  3603  01D4  29D6               	goto	u2010
  3604  01D5                     u2011:
  3605  01D5  29C7               	goto	l233
  3606  01D6                     u2010:
  3607                           	
  3608  01D6                     l234:	
  3609                           	line	25
  3610                           	
  3611  01D6                     l237:	
  3612                           	line	26
  3613                           	
  3614  01D6  3001               	movlw	01h
  3615  01D7                     u2025:
  3616  01D7  1003               	clrc
  3617  01D8  0DC3               	rlf	(___awdiv_quotient),f
  3618  01D9  0DC4               	rlf	(___awdiv_quotient+1),f
  3619  01DA  3EFF               	addlw	-1
  3620  01DB  1D03               	skipz
  3621  01DC  29D7               	goto	u2025
  3622                           	line	27
  3623                           	
  3624                           	
  3625  01DD  0840               	movf	(___awdiv_divisor+1),w
  3626  01DE  023E               	subwf	(___awdiv_dividend+1),w
  3627  01DF  1D03               	skipz
  3628  01E0  29E3               	goto	u2035
  3629  01E1  083F               	movf	(___awdiv_divisor),w
  3630  01E2  023D               	subwf	(___awdiv_dividend),w
  3631  01E3                     u2035:
  3632  01E3  1C03               	skipc
  3633  01E4  29E6               	goto	u2031
  3634  01E5  29E7               	goto	u2030
  3635  01E6                     u2031:
  3636  01E6  29F1               	goto	l238
  3637  01E7                     u2030:
  3638                           	line	28
  3639                           	
  3640                           	
  3641  01E7  083F               	movf	(___awdiv_divisor),w
  3642  01E8  02BD               	subwf	(___awdiv_dividend),f
  3643  01E9  0840               	movf	(___awdiv_divisor+1),w
  3644  01EA  1C03               	skipc
  3645  01EB  03BE               	decf	(___awdiv_dividend+1),f
  3646  01EC  02BE               	subwf	(___awdiv_dividend+1),f
  3647                           	line	29
  3648                           	
  3649  01ED  3001               	movlw	low(01h)
  3650  01EE  04C3               	iorwf	(___awdiv_quotient),f
  3651  01EF  3000               	movlw	high(01h)
  3652  01F0  04C4               	iorwf	(___awdiv_quotient+1),f
  3653                           	line	30
  3654                           	
  3655  01F1                     l238:	
  3656                           	line	31
  3657                           	
  3658  01F1  3001               	movlw	01h
  3659  01F2                     u2045:
  3660  01F2  1003               	clrc
  3661  01F3  0CC0               	rrf	(___awdiv_divisor+1),f
  3662  01F4  0CBF               	rrf	(___awdiv_divisor),f
  3663  01F5  3EFF               	addlw	-1
  3664  01F6  1D03               	skipz
  3665  01F7  29F2               	goto	u2045
  3666                           	line	32
  3667                           	
  3668                           	
  3669  01F8  3001               	movlw	low(01h)
  3670  01F9  02C2               	subwf	(___awdiv_counter),f
  3671  01FA  1D03               	btfss	status,2
  3672  01FB  29FD               	goto	u2051
  3673  01FC  29FE               	goto	u2050
  3674  01FD                     u2051:
  3675  01FD  29D6               	goto	l237
  3676  01FE                     u2050:
  3677                           	
  3678  01FE                     l236:	
  3679                           	line	33
  3680                           	
  3681  01FE                     l231:	
  3682                           	line	34
  3683                           	
  3684  01FE  08C1               	movf	(___awdiv_sign),f
  3685  01FF  1D03               	skipz
  3686  0200  2A02               	goto	u2060
  3687  0201  2A07               	goto	l239
  3688  0202                     u2060:
  3689                           	line	35
  3690                           	
  3691  0202  09C3               	comf	(___awdiv_quotient),f
  3692  0203  09C4               	comf	(___awdiv_quotient+1),f
  3693  0204  0AC3               	incf	(___awdiv_quotient),f
  3694  0205  1903               	skipnz
  3695  0206  0AC4               	incf	(___awdiv_quotient+1),f
  3696                           	
  3697                           	
  3698  0207                     l239:	
  3699                           	line	36
  3700                           	
  3701                           	
  3702  0207  0844               	movf	(___awdiv_quotient+1),w
  3703  0208  01BE               	clrf	(?___awdiv+1)
  3704  0209  07BE               	addwf	(?___awdiv+1)
  3705  020A  0843               	movf	(___awdiv_quotient),w
  3706  020B  01BD               	clrf	(?___awdiv)
  3707  020C  07BD               	addwf	(?___awdiv)
  3708                           
  3709  020D  2A0E               	goto	l228
  3710                           	line	37
  3711  020E                     l228:	
  3712  020E  0008               	return
  3713                           ; =============== function ___awdiv ends ======
                                 =========
  3714                           
  3715                           GLOBAL __end_of___awdiv
  3716  020F                     	__end_of___awdiv:
  3717                           	FNSIZE	___awdiv,5,4
  3718                           	signat	___awdiv,8314
  3719                           	global	_LCDReset
  3720                           	global	??_LCDReset
  3721                           	global	?_LCDReset
  3722                           
  3723                           ; *************** function _LCDReset **********
                                 *****
  3724                           ; Defined at:
  3725                           ;		line 45 in file "C:\Users\Suchitra\Desktop\h
                                 ardik\codes\LM35 wala\LCD.c"
  3726                           ; Parameters:
  3727                           ;		None
  3728                           ; Auto variables:
  3729                           ;		None
  3730                           ; Return value:
  3731                           ;		type: void 
  3732                           ;		size: 0
  3733                           ; Registers used:
  3734                           ;		wreg, status,2, status,0, pclath, cstack
  3735                           ; Tracked objects:
  3736                           ;		On entry : 300/0
  3737                           ;		On exit  : 0/0
  3738                           ;		Unchanged: 0/0
  3739                           ; Data sizes:
  3740                           ;		Autos:    0
  3741                           ;		Params:   0
  3742                           ;		Temp:     0
  3743                           ;		Total:    0
  3744                           ; This function calls:
  3745                           ;		_LCDWriteCommand
  3746                           ; This function is called by:
  3747                           ;		_LCDInitialize
  3748                           ; This function uses a non-reentrant model
  3749                           ; 
  3750                           	psect	text206,local,class=CODE,delta=2
  3751                           	file	"C:\Users\Suchitra\Desktop\hardik\codes\L
                                 M35 wala\LCD.c"
  3752                           	line	45
  3753                           ;LCD.c: 44: static void LCDReset(void)
  3754                           ;LCD.c: 45: {
  3755                           	
  3756  0E54                     _LCDReset:	
  3757                           	opt stack 4
  3758                           ; Regs used in _LCDReset: [wreg+status,2+status
                                 ,0+pclath+cstack]
  3759                           	line	46
  3760                           ;LCD.c: 46: LCDWriteCommand(0x33);
  3761  0E54  3033               	movlw	(033h)
  3762  0E55  120A  118A  27F5   	fcall	_LCDWriteCommand
              120A  158A         
  3763                           	line	47
  3764                           ;LCD.c: 47: LCDWriteCommand(0x33);
  3765  0E5A  3033               	movlw	(033h)
  3766  0E5B  120A  118A  27F5   	fcall	_LCDWriteCommand
              120A  158A         
  3767                           	line	48
  3768                           ;LCD.c: 48: LCDWriteCommand(0x32);
  3769  0E60  3032               	movlw	(032h)
  3770  0E61  120A  118A  27F5   	fcall	_LCDWriteCommand
              120A  158A         
  3771                           	line	49
  3772                           ;LCD.c: 49: }
  3773  0E66                     l16:	
  3774  0E66  0008               	return
  3775                           ; =============== function _LCDReset ends =====
                                 ==========
  3776                           
  3777                           GLOBAL __end_of_LCDReset
  3778  0E67                     	__end_of_LCDReset:
  3779                           	FNSIZE	_LCDReset,0,0
  3780                           	signat	_LCDReset,88
  3781                           	global	___ftadd
  3782                           	global	??___ftadd
  3783                           	global	?___ftadd
  3784                           
  3785                           ; *************** function ___ftadd ***********
                                 ****
  3786                           ; Defined at:
  3787                           ;		line 17 in file "C:\Program Files (x86)\HI-T
                                 ECH Software\PICC\PRO\9.65\sources\ftadd.c"
  3788                           ; Parameters:
  3789                           ;		f1          	offs:   0	type: float 
  3790                           ;		f2          	offs:   3	type: float 
  3791                           ; Auto variables:
  3792                           ;		sign2       	       	type: unsigned char 
  3793                           ;		cntr        	       	type: unsigned char 
  3794                           ;		sign1       	       	type: unsigned char 
  3795                           ;		exp2        	       	type: unsigned char 
  3796                           ;		exp1        	       	type: unsigned char 
  3797                           ; Return value:
  3798                           ;		type: float 
  3799                           ;		size: 3
  3800                           ; Registers used:
  3801                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
                                 th, cstack
  3802                           ; Tracked objects:
  3803                           ;		On entry : 300/0
  3804                           ;		On exit  : 0/0
  3805                           ;		Unchanged: 0/0
  3806                           ; Data sizes:
  3807                           ;		Autos:    5
  3808                           ;		Params:   6
  3809                           ;		Temp:     1
  3810                           ;		Total:   12
  3811                           ; This function calls:
  3812                           ;		___ftunpack
  3813                           ;		___ftpack
  3814                           ; This function is called by:
  3815                           ;		_LCDWriteFloat
  3816                           ;		_ADCReadData
  3817                           ;		___ftsub
  3818                           ; This function uses a non-reentrant model
  3819                           ; 
  3820                           	psect	text207,local,class=CODE,delta=2
  3821                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\ftadd.c"
  3822                           	line	17
  3823                           	
  3824  0484                     ___ftadd:	
  3825                           	opt stack 4
  3826                           ; Regs used in ___ftadd: [wreg-fsr0h+status,2+s
                                 tatus,0+pclath+cstack]
  3827                           	line	20
  3828  0484  2C85               	goto	l107
  3829                           	line	21
  3830                           	
  3831  0485                     l107:	
  3832                           	line	22
  3833                           	
  3834  0485  3043               	movlw	((___ftadd_exp1))&0ffh
  3835                           	
  3836  0486  00C7               	movwf	(?___ftunpack)
  3837                           	
  3838  0487  3039               	movlw	((___ftadd_f1))&0ffh
  3839  0488  120A  158A  27A6   	fcall	___ftunpack
              120A  118A         
  3840  048D  1283               	bcf	status, 5	;RP0=0, select bank0
  3841  048E  1303               	bcf	status, 6	;RP1=0, select bank0
  3842                           	
  3843  048F  00C1               	movwf	(___ftadd_sign1)
  3844                           	line	23
  3845                           	
  3846  0490  08C3               	movf	(___ftadd_exp1),f
  3847  0491  1D03               	skipz
  3848  0492  2C94               	goto	u2741
  3849  0493  2C95               	goto	u2740
  3850  0494                     u2741:
  3851  0494  2C9C               	goto	l108
  3852  0495                     u2740:
  3853                           	line	24
  3854                           	
  3855                           	
  3856  0495  083C               	movf	(___ftadd_f2),w
  3857  0496  00B9               	movwf	(?___ftadd)
  3858  0497  083D               	movf	(___ftadd_f2+1),w
  3859  0498  00BA               	movwf	(?___ftadd+1)
  3860  0499  083E               	movf	(___ftadd_f2+2),w
  3861  049A  00BB               	movwf	(?___ftadd+2)
  3862  049B  2DA1               	goto	l106
  3863                           	
  3864  049C                     l108:	
  3865                           	line	25
  3866                           	
  3867  049C  3042               	movlw	((___ftadd_exp2))&0ffh
  3868                           	
  3869  049D  00C7               	movwf	(?___ftunpack)
  3870                           	
  3871  049E  303C               	movlw	((___ftadd_f2))&0ffh
  3872  049F  120A  158A  27A6   	fcall	___ftunpack
              120A  118A         
  3873  04A4  1283               	bcf	status, 5	;RP0=0, select bank0
  3874  04A5  1303               	bcf	status, 6	;RP1=0, select bank0
  3875                           	
  3876  04A6  00BF               	movwf	(___ftadd_sign2)
  3877                           	line	26
  3878                           	
  3879  04A7  08C2               	movf	(___ftadd_exp2),f
  3880  04A8  1D03               	skipz
  3881  04A9  2CAB               	goto	u2750
  3882  04AA  2D90               	goto	l109
  3883  04AB                     u2750:
  3884                           	line	27
  3885  04AB  3006               	movlw	(06h)
  3886                           	
  3887  04AC  00C0               	movwf	(___ftadd_cntr)
  3888                           	line	29
  3889                           	
  3890  04AD  0842               	movf	(___ftadd_exp2),w
  3891                           	
  3892  04AE  0243               	subwf	(___ftadd_exp1),w
  3893  04AF  1803               	skipnc
  3894  04B0  2CB2               	goto	u2761
  3895  04B1  2CB3               	goto	u2760
  3896  04B2                     u2761:
  3897  04B2  2CF2               	goto	l110
  3898  04B3                     u2760:
  3899                           	line	30
  3900                           	
  3901                           	
  3902  04B3  0842               	movf	(___ftadd_exp2),w
  3903  04B4  00C4               	movwf	(??___ftadd+5+0)
  3904  04B5  0843               	movf	(___ftadd_exp1),w
  3905  04B6  02C4               	subwf	(??___ftadd+5+0),f
  3906  04B7  3019               	movlw	(019h)
  3907  04B8  0244               	subwf	0+(??___ftadd+5+0),w
  3908  04B9  1C03               	skipc
  3909  04BA  2CBC               	goto	u2771
  3910  04BB  2CBD               	goto	u2770
  3911  04BC                     u2771:
  3912  04BC  2CC8               	goto	l115
  3913  04BD                     u2770:
  3914                           	line	32
  3915                           	
  3916  04BD  3000               	movlw	0
  3917  04BE  00B9               	movwf	(___ftadd_f1)
  3918  04BF  3000               	movlw	0
  3919  04C0  00BA               	movwf	(___ftadd_f1+1)
  3920  04C1  3000               	movlw	0
  3921  04C2  00BB               	movwf	(___ftadd_f1+2)
  3922                           	line	33
  3923                           	
  3924  04C3  0842               	movf	(___ftadd_exp2),w
  3925                           	
  3926  04C4  00C3               	movwf	(___ftadd_exp1)
  3927                           	line	34
  3928                           	
  3929  04C5  083F               	movf	(___ftadd_sign2),w
  3930                           	
  3931  04C6  00C1               	movwf	(___ftadd_sign1)
  3932                           	line	35
  3933  04C7  2CF1               	goto	l112
  3934                           	line	38
  3935                           	
  3936  04C8                     l115:	
  3937                           	line	39
  3938                           	
  3939  04C8  3001               	movlw	01h
  3940  04C9                     u2785:
  3941  04C9  1003               	clrc
  3942  04CA  0DBC               	rlf	(___ftadd_f2),f
  3943  04CB  0DBD               	rlf	(___ftadd_f2+1),f
  3944  04CC  0DBE               	rlf	(___ftadd_f2+2),f
  3945  04CD  3EFF               	addlw	-1
  3946  04CE  1D03               	skipz
  3947  04CF  2CC9               	goto	u2785
  3948                           	line	40
  3949                           	
  3950                           	
  3951  04D0  3001               	movlw	low(01h)
  3952  04D1  02C2               	subwf	(___ftadd_exp2),f
  3953                           	line	41
  3954                           	
  3955                           	
  3956  04D2  0842               	movf	(___ftadd_exp2),w
  3957  04D3  0643               	xorwf	(___ftadd_exp1),w
  3958  04D4  1903               	skipnz
  3959  04D5  2CD7               	goto	u2791
  3960  04D6  2CD8               	goto	u2790
  3961  04D7                     u2791:
  3962  04D7  2CDE               	goto	l114
  3963  04D8                     u2790:
  3964                           	
  3965                           	
  3966  04D8  3001               	movlw	low(01h)
  3967  04D9  02C0               	subwf	(___ftadd_cntr),f
  3968  04DA  1D03               	btfss	status,2
  3969  04DB  2CDD               	goto	u2801
  3970  04DC  2CDE               	goto	u2800
  3971  04DD                     u2801:
  3972  04DD  2CC8               	goto	l115
  3973  04DE                     u2800:
  3974                           	
  3975  04DE                     l600001115:	
  3976                           	
  3977  04DE                     l114:	
  3978                           	line	42
  3979  04DE  2CEB               	goto	l116
  3980                           	
  3981  04DF                     l117:	
  3982                           	line	43
  3983                           	
  3984  04DF  3001               	movlw	01h
  3985  04E0                     u2815:
  3986  04E0  1003               	clrc
  3987  04E1  0CBB               	rrf	(___ftadd_f1+2),f
  3988  04E2  0CBA               	rrf	(___ftadd_f1+1),f
  3989  04E3  0CB9               	rrf	(___ftadd_f1),f
  3990  04E4  3EFF               	addlw	-1
  3991  04E5  1D03               	skipz
  3992  04E6  2CE0               	goto	u2815
  3993                           
  3994                           	line	44
  3995  04E7  3001               	movlw	(01h)
  3996  04E8  00C4               	movwf	(??___ftadd+5+0)
  3997                           	
  3998  04E9  0844               	movf	(??___ftadd+5+0),w
  3999  04EA  07C3               	addwf	(___ftadd_exp1),f
  4000                           	line	45
  4001                           	
  4002  04EB                     l116:	
  4003                           	line	42
  4004                           	
  4005                           	
  4006  04EB  0843               	movf	(___ftadd_exp1),w
  4007  04EC  0642               	xorwf	(___ftadd_exp2),w
  4008  04ED  1D03               	skipz
  4009  04EE  2CF0               	goto	u2821
  4010  04EF  2CF1               	goto	u2820
  4011  04F0                     u2821:
  4012  04F0  2CDF               	goto	l117
  4013  04F1                     u2820:
  4014                           	
  4015  04F1                     l118:	
  4016                           	line	46
  4017                           	
  4018  04F1                     l112:	
  4019                           	line	47
  4020  04F1  2D32               	goto	l119
  4021                           	
  4022  04F2                     l110:	
  4023                           	
  4024                           	
  4025  04F2  0843               	movf	(___ftadd_exp1),w
  4026  04F3  0642               	xorwf	(___ftadd_exp2),w
  4027  04F4  1903               	skipnz
  4028  04F5  2CF7               	goto	u2831
  4029  04F6  2CF8               	goto	u2830
  4030  04F7                     u2831:
  4031  04F7  2D32               	goto	l119
  4032  04F8                     u2830:
  4033                           	line	48
  4034                           	
  4035                           	
  4036  04F8  0843               	movf	(___ftadd_exp1),w
  4037  04F9  00C4               	movwf	(??___ftadd+5+0)
  4038  04FA  0842               	movf	(___ftadd_exp2),w
  4039  04FB  02C4               	subwf	(??___ftadd+5+0),f
  4040  04FC  3019               	movlw	(019h)
  4041  04FD  0244               	subwf	0+(??___ftadd+5+0),w
  4042  04FE  1C03               	skipc
  4043  04FF  2D01               	goto	u2841
  4044  0500  2D02               	goto	u2840
  4045  0501                     u2841:
  4046  0501  2D09               	goto	l125
  4047  0502                     u2840:
  4048                           	line	49
  4049                           	
  4050  0502  3000               	movlw	0
  4051  0503  00BC               	movwf	(___ftadd_f2)
  4052  0504  3000               	movlw	0
  4053  0505  00BD               	movwf	(___ftadd_f2+1)
  4054  0506  3000               	movlw	0
  4055  0507  00BE               	movwf	(___ftadd_f2+2)
  4056  0508  2D32               	goto	l119
  4057                           	line	53
  4058                           	
  4059  0509                     l125:	
  4060                           	line	54
  4061                           	
  4062  0509  3001               	movlw	01h
  4063  050A                     u2855:
  4064  050A  1003               	clrc
  4065  050B  0DB9               	rlf	(___ftadd_f1),f
  4066  050C  0DBA               	rlf	(___ftadd_f1+1),f
  4067  050D  0DBB               	rlf	(___ftadd_f1+2),f
  4068  050E  3EFF               	addlw	-1
  4069  050F  1D03               	skipz
  4070  0510  2D0A               	goto	u2855
  4071                           	line	55
  4072                           	
  4073                           	
  4074  0511  3001               	movlw	low(01h)
  4075  0512  02C3               	subwf	(___ftadd_exp1),f
  4076                           	line	56
  4077                           	
  4078                           	
  4079  0513  0842               	movf	(___ftadd_exp2),w
  4080  0514  0643               	xorwf	(___ftadd_exp1),w
  4081  0515  1903               	skipnz
  4082  0516  2D18               	goto	u2861
  4083  0517  2D19               	goto	u2860
  4084  0518                     u2861:
  4085  0518  2D1F               	goto	l124
  4086  0519                     u2860:
  4087                           	
  4088                           	
  4089  0519  3001               	movlw	low(01h)
  4090  051A  02C0               	subwf	(___ftadd_cntr),f
  4091  051B  1D03               	btfss	status,2
  4092  051C  2D1E               	goto	u2871
  4093  051D  2D1F               	goto	u2870
  4094  051E                     u2871:
  4095  051E  2D09               	goto	l125
  4096  051F                     u2870:
  4097                           	
  4098  051F                     l600001116:	
  4099                           	
  4100  051F                     l124:	
  4101                           	line	57
  4102  051F  2D2C               	goto	l126
  4103                           	
  4104  0520                     l127:	
  4105                           	line	58
  4106                           	
  4107  0520  3001               	movlw	01h
  4108  0521                     u2885:
  4109  0521  1003               	clrc
  4110  0522  0CBE               	rrf	(___ftadd_f2+2),f
  4111  0523  0CBD               	rrf	(___ftadd_f2+1),f
  4112  0524  0CBC               	rrf	(___ftadd_f2),f
  4113  0525  3EFF               	addlw	-1
  4114  0526  1D03               	skipz
  4115  0527  2D21               	goto	u2885
  4116                           
  4117                           	line	59
  4118  0528  3001               	movlw	(01h)
  4119  0529  00C4               	movwf	(??___ftadd+5+0)
  4120                           	
  4121  052A  0844               	movf	(??___ftadd+5+0),w
  4122  052B  07C2               	addwf	(___ftadd_exp2),f
  4123                           	line	60
  4124                           	
  4125  052C                     l126:	
  4126                           	line	57
  4127                           	
  4128                           	
  4129  052C  0843               	movf	(___ftadd_exp1),w
  4130  052D  0642               	xorwf	(___ftadd_exp2),w
  4131  052E  1D03               	skipz
  4132  052F  2D31               	goto	u2891
  4133  0530  2D32               	goto	u2890
  4134  0531                     u2891:
  4135  0531  2D20               	goto	l127
  4136  0532                     u2890:
  4137                           	
  4138  0532                     l128:	
  4139                           	line	61
  4140                           	
  4141  0532                     l122:	
  4142                           	line	62
  4143                           	
  4144  0532                     l120:	
  4145                           	line	63
  4146                           	
  4147  0532                     l119:	
  4148                           	
  4149  0532  08C1               	movf	(___ftadd_sign1),f
  4150  0533  1D03               	skipz
  4151  0534  2D36               	goto	u2900
  4152  0535  2D4A               	goto	l129
  4153  0536                     u2900:
  4154                           	line	64
  4155                           	
  4156  0536  30FF               	movlw	0FFh
  4157  0537  06B9               	xorwf	(___ftadd_f1),f
  4158  0538  30FF               	movlw	0FFh
  4159  0539  06BA               	xorwf	(___ftadd_f1+1),f
  4160  053A  30FF               	movlw	0FFh
  4161  053B  06BB               	xorwf	(___ftadd_f1+2),f
  4162                           	line	65
  4163                           	
  4164  053C  3001               	movlw	01h
  4165  053D  07B9               	addwf	(___ftadd_f1),f
  4166  053E  3000               	movlw	0
  4167  053F  1103               	clrz
  4168  0540  1803               	skipnc
  4169  0541  3E01               	addlw	1
  4170  0542  1D03               	skipz
  4171  0543  07BA               	addwf	(___ftadd_f1+1),f
  4172  0544  3000               	movlw	0
  4173  0545  1103               	clrz
  4174  0546  1803               	skipnc
  4175  0547  3E01               	addlw	1
  4176  0548  1D03               	skipz
  4177  0549  07BB               	addwf	(___ftadd_f1+2),f
  4178                           	line	66
  4179                           	
  4180  054A                     l129:	
  4181                           	line	67
  4182                           	
  4183  054A  08BF               	movf	(___ftadd_sign2),f
  4184  054B  1D03               	skipz
  4185  054C  2D4E               	goto	u2910
  4186  054D  2D62               	goto	l130
  4187  054E                     u2910:
  4188                           	line	68
  4189                           	
  4190  054E  30FF               	movlw	0FFh
  4191  054F  06BC               	xorwf	(___ftadd_f2),f
  4192  0550  30FF               	movlw	0FFh
  4193  0551  06BD               	xorwf	(___ftadd_f2+1),f
  4194  0552  30FF               	movlw	0FFh
  4195  0553  06BE               	xorwf	(___ftadd_f2+2),f
  4196                           	line	69
  4197                           	
  4198  0554  3001               	movlw	01h
  4199  0555  07BC               	addwf	(___ftadd_f2),f
  4200  0556  3000               	movlw	0
  4201  0557  1103               	clrz
  4202  0558  1803               	skipnc
  4203  0559  3E01               	addlw	1
  4204  055A  1D03               	skipz
  4205  055B  07BD               	addwf	(___ftadd_f2+1),f
  4206  055C  3000               	movlw	0
  4207  055D  1103               	clrz
  4208  055E  1803               	skipnc
  4209  055F  3E01               	addlw	1
  4210  0560  1D03               	skipz
  4211  0561  07BE               	addwf	(___ftadd_f2+2),f
  4212                           	line	70
  4213                           	
  4214  0562                     l130:	
  4215                           	line	71
  4216  0562  1003               	clrc
  4217                           	
  4218  0563  3000               	movlw	0
  4219  0564  1803               	btfsc	status,0
  4220  0565  3001               	movlw	1
  4221  0566  00C1               	movwf	(___ftadd_sign1)
  4222                           	line	72
  4223                           	
  4224                           	
  4225  0567  083C               	movf	(___ftadd_f2),w
  4226  0568  07B9               	addwf	(___ftadd_f1),f
  4227  0569  083D               	movf	(___ftadd_f2+1),w
  4228  056A  1103               	clrz
  4229  056B  1803               	skipnc
  4230  056C  0A3D               	incf	(___ftadd_f2+1),w
  4231  056D  1D03               	skipz
  4232  056E  07BA               	addwf	(___ftadd_f1+1),f
  4233  056F  083E               	movf	(___ftadd_f2+2),w
  4234  0570  1103               	clrz
  4235  0571  1803               	skipnc
  4236  0572  0A3E               	incf	(___ftadd_f2+2),w
  4237  0573  1D03               	skipz
  4238  0574  07BB               	addwf	(___ftadd_f1+2),f
  4239                           	line	73
  4240                           	
  4241  0575  1FBB               	btfss	(___ftadd_f1+2),(23)&7
  4242  0576  2D78               	goto	u2921
  4243  0577  2D79               	goto	u2920
  4244  0578                     u2921:
  4245  0578  2D90               	goto	l109
  4246  0579                     u2920:
  4247                           	line	74
  4248                           	
  4249  0579  30FF               	movlw	0FFh
  4250  057A  06B9               	xorwf	(___ftadd_f1),f
  4251  057B  30FF               	movlw	0FFh
  4252  057C  06BA               	xorwf	(___ftadd_f1+1),f
  4253  057D  30FF               	movlw	0FFh
  4254  057E  06BB               	xorwf	(___ftadd_f1+2),f
  4255                           	line	75
  4256                           	
  4257  057F  3001               	movlw	01h
  4258  0580  07B9               	addwf	(___ftadd_f1),f
  4259  0581  3000               	movlw	0
  4260  0582  1103               	clrz
  4261  0583  1803               	skipnc
  4262  0584  3E01               	addlw	1
  4263  0585  1D03               	skipz
  4264  0586  07BA               	addwf	(___ftadd_f1+1),f
  4265  0587  3000               	movlw	0
  4266  0588  1103               	clrz
  4267  0589  1803               	skipnc
  4268  058A  3E01               	addlw	1
  4269  058B  1D03               	skipz
  4270  058C  07BB               	addwf	(___ftadd_f1+2),f
  4271                           	line	76
  4272                           	
  4273  058D  01C1               	clrf	(___ftadd_sign1)
  4274  058E  1403               	bsf	status,0
  4275  058F  0DC1               	rlf	(___ftadd_sign1),f
  4276                           	line	77
  4277                           	
  4278  0590                     l131:	
  4279                           	line	78
  4280                           	
  4281  0590                     l109:	
  4282                           	line	79
  4283                           	
  4284  0590  0843               	movf	(___ftadd_exp1),w
  4285                           	
  4286  0591  00C7               	movwf	(?___ftpack)
  4287                           	
  4288  0592  3039               	movlw	((___ftadd_f1))&0ffh
  4289  0593  120A  118A  23BE   	fcall	___ftpack
              120A  118A         
  4290                           	line	80
  4291  0598  1283               	bcf	status, 5	;RP0=0, select bank0
  4292  0599  1303               	bcf	status, 6	;RP1=0, select bank0
  4293                           	
  4294  059A  08C1               	movf	(___ftadd_sign1),f
  4295  059B  1D03               	skipz
  4296  059C  2D9E               	goto	u2930
  4297  059D  2DA0               	goto	l132
  4298  059E                     u2930:
  4299                           	line	81
  4300                           	
  4301  059E  3080               	movlw	080h
  4302  059F  06BB               	xorwf	(___ftadd_f1+2),f
  4303                           	
  4304  05A0                     l132:	
  4305                           	line	82
  4306  05A0  2DA1               	goto	l106
  4307                           	line	83
  4308  05A1                     l106:	
  4309  05A1  0008               	return
  4310                           ; =============== function ___ftadd ends ======
                                 =========
  4311                           
  4312                           GLOBAL __end_of___ftadd
  4313  05A2                     	__end_of___ftadd:
  4314                           	FNSIZE	___ftadd,6,6
  4315                           	signat	___ftadd,8315
  4316                           	global	_LCDWriteCommand
  4317                           	global	??_LCDWriteCommand
  4318                           	global	?_LCDWriteCommand
  4319                           
  4320                           ; *************** function _LCDWriteCommand ***
                                 ************
  4321                           ; Defined at:
  4322                           ;		line 12 in file "C:\Users\Suchitra\Desktop\h
                                 ardik\codes\LM35 wala\LCD.c"
  4323                           ; Parameters:
  4324                           ;		LCDData     	reg:   wr	type: unsigned char 
  4325                           ; Auto variables:
  4326                           ;		LCDData     	       	type: unsigned char 
  4327                           ; Return value:
  4328                           ;		type: void 
  4329                           ;		size: 0
  4330                           ; Registers used:
  4331                           ;		wreg, status,2, status,0, pclath, cstack
  4332                           ; Tracked objects:
  4333                           ;		On entry : 0/0
  4334                           ;		On exit  : 0/0
  4335                           ;		Unchanged: 0/0
  4336                           ; Data sizes:
  4337                           ;		Autos:    1
  4338                           ;		Params:   0
  4339                           ;		Temp:     0
  4340                           ;		Total:    1
  4341                           ; This function calls:
  4342                           ;		_LCDWriteByte
  4343                           ; This function is called by:
  4344                           ;		_LCDInitialize
  4345                           ;		_LCDReset
  4346                           ;		_LCDWriteFloat
  4347                           ;		_main
  4348                           ; This function uses a non-reentrant model
  4349                           ; 
  4350                           	psect	text208,local,class=CODE,delta=2
  4351                           	file	"C:\Users\Suchitra\Desktop\hardik\codes\L
                                 M35 wala\LCD.c"
  4352                           	line	12
  4353                           ;LCD.c: 11: void LCDWriteCommand(LCDubyte LCDDa
                                 ta)
  4354                           ;LCD.c: 12: {
  4355                           	
  4356  07F5                     _LCDWriteCommand:	
  4357                           	opt stack 3
  4358                           ; Regs used in _LCDWriteCommand: [wreg+status,2
                                 +status,0+pclath+cstack]
  4359                           ;_LCDWriteCommand_LCDData stored from wreg
  4360  07F5  1283               	bcf	status, 5	;RP0=0, select bank0
  4361  07F6  1303               	bcf	status, 6	;RP1=0, select bank0
  4362                           	
  4363  07F7  00B3               	movwf	(_LCDWriteCommand_LCDData)
  4364                           	line	13
  4365                           ;LCD.c: 13: RD2 = 0;
  4366  07F8  1108               	bcf	(66/8),(66)&7
  4367                           	line	14
  4368                           ;LCD.c: 14: LCDWriteByte(LCDData);
  4369                           	
  4370  07F9  0833               	movf	(_LCDWriteCommand_LCDData),w
  4371  07FA  120A  158A  26F2   	fcall	_LCDWriteByte
              120A  118A         
  4372                           	line	15
  4373                           ;LCD.c: 15: }
  4374  07FF                     l9:	
  4375  07FF  0008               	return
  4376                           ; =============== function _LCDWriteCommand end
                                 s ===============
  4377                           
  4378                           GLOBAL __end_of_LCDWriteCommand
  4379  0800                     	__end_of_LCDWriteCommand:
  4380                           	FNSIZE	_LCDWriteCommand,1,0
  4381                           	signat	_LCDWriteCommand,4216
  4382                           	global	___ftpack
  4383                           	global	??___ftpack
  4384                           	global	?___ftpack
  4385                           
  4386                           ; *************** function ___ftpack **********
                                 *****
  4387                           ; Defined at:
  4388                           ;		line 33 in file "C:\Program Files (x86)\HI-T
                                 ECH Software\PICC\PRO\9.65\sources\float.c"
  4389                           ; Parameters:
  4390                           ;		arg         	reg:   wr	type: PTR unsigned um
                                 ; Largest target is 3
  4391                           ;		 -> __lttoft_f1(3), __attoft_f1(3), __lltoft
                                 _f1(3), __altoft_f1(3), 
  4392                           ;		 -> __lwtoft_f1(3), __awtoft_f1(3), __abtoft
                                 _f1(3), __lbtoft_f1(3), 
  4393                           ;		 -> __ftmul_f3(3), __ftdiv_f3(3), __ftadd_f1
                                 (3), 
  4394                           ;		exp         	offs:   0	type: unsigned char 
  4395                           ; Auto variables:
  4396                           ;		arg         	       	type: PTR unsigned um; 
                                 Largest target is 3
  4397                           ;		 -> __lttoft_f1(3), __attoft_f1(3), __lltoft
                                 _f1(3), __altoft_f1(3), 
  4398                           ;		 -> __lwtoft_f1(3), __awtoft_f1(3), __abtoft
                                 _f1(3), __lbtoft_f1(3), 
  4399                           ;		 -> __ftmul_f3(3), __ftdiv_f3(3), __ftadd_f1
                                 (3), 
  4400                           ; Return value:
  4401                           ;		type: void 
  4402                           ;		size: 0
  4403                           ; Registers used:
  4404                           ;		wreg, fsr0l, fsr0h, status,2, status,0
  4405                           ; Tracked objects:
  4406                           ;		On entry : 300/0
  4407                           ;		On exit  : 0/0
  4408                           ;		Unchanged: 0/0
  4409                           ; Data sizes:
  4410                           ;		Autos:    1
  4411                           ;		Params:   1
  4412                           ;		Temp:     3
  4413                           ;		Total:    5
  4414                           ; This function calls:
  4415                           ;		Nothing
  4416                           ; This function is called by:
  4417                           ;		___ftadd
  4418                           ;		___ftdiv
  4419                           ;		___ftmul
  4420                           ;		___awtoft
  4421                           ;		___lwtoft
  4422                           ; This function uses a non-reentrant model
  4423                           ; 
  4424                           	psect	text209,local,class=CODE,delta=2
  4425                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\float.c"
  4426                           	line	33
  4427                           	
  4428  03BE                     ___ftpack:	
  4429                           	opt stack 3
  4430                           ; Regs used in ___ftpack: [wreg-fsr0h+status,2+
                                 status,0]
  4431                           ;___ftpack_arg stored from wreg
  4432                           	
  4433  03BE  00C8               	movwf	(___ftpack_arg)
  4434                           	line	34
  4435                           	
  4436  03BF  08C7               	movf	(___ftpack_exp),f
  4437  03C0  1D03               	skipz
  4438  03C1  2BC3               	goto	u3170
  4439  03C2  2BD5               	goto	l600001118
  4440  03C3                     u3170:
  4441                           	
  4442  03C3  0848               	movf	(___ftpack_arg),w
  4443  03C4  0084               	movwf	fsr0
  4444  03C5  1383               	bcf	status, 7	;select IRP bank0
  4445  03C6  0800               	movf	indf,w
  4446  03C7  00C9               	movwf	(??___ftpack+1+0)
  4447  03C8  0A84               	incf	fsr0,f
  4448  03C9  0800               	movf	indf,w
  4449  03CA  00CA               	movwf	(??___ftpack+1+0+1)
  4450  03CB  0A84               	incf	fsr0,f
  4451  03CC  0800               	movf	indf,w
  4452  03CD  00CB               	movwf	(??___ftpack+1+0+2)
  4453  03CE  084B               	movf	2+(??___ftpack+1+0),w
  4454  03CF  044A               	iorwf	1+(??___ftpack+1+0),w
  4455  03D0  0449               	iorwf	0+(??___ftpack+1+0),w
  4456  03D1  1D03               	skipz
  4457  03D2  2BD4               	goto	u3181
  4458  03D3  2BD5               	goto	u3180
  4459  03D4                     u3181:
  4460  03D4  2BE1               	goto	l402
  4461  03D5                     u3180:
  4462                           	
  4463  03D5                     l600001118:	
  4464                           	line	35
  4465                           	
  4466  03D5  0848               	movf	(___ftpack_arg),w
  4467  03D6  0084               	movwf	fsr0
  4468  03D7  3000               	movlw	0
  4469  03D8  1383               	bcf	status, 7	;select IRP bank0
  4470  03D9  0080               	movwf	indf
  4471  03DA  0A84               	incf	fsr0,f
  4472  03DB  3000               	movlw	0
  4473  03DC  0080               	movwf	indf
  4474  03DD  0A84               	incf	fsr0,f
  4475  03DE  3000               	movlw	0
  4476  03DF  0080               	movwf	indf
  4477                           	line	36
  4478  03E0  2C83               	goto	l401
  4479                           	line	37
  4480                           	
  4481  03E1                     l402:	
  4482                           	line	38
  4483  03E1  2BF4               	goto	l403
  4484                           	
  4485  03E2                     l404:	
  4486                           	line	39
  4487  03E2  3001               	movlw	(01h)
  4488  03E3  00C9               	movwf	(??___ftpack+1+0)
  4489                           	
  4490  03E4  0849               	movf	(??___ftpack+1+0),w
  4491  03E5  07C7               	addwf	(___ftpack_exp),f
  4492                           	line	40
  4493                           	
  4494  03E6  0848               	movf	(___ftpack_arg),w
  4495  03E7  0084               	movwf	fsr0
  4496  03E8  3001               	movlw	01h
  4497  03E9  00C9               	movwf	(??___ftpack+1+0)
  4498  03EA                     u3195:
  4499  03EA  0A84               	incf	fsr0,f
  4500  03EB  0A84               	incf	fsr0,f
  4501  03EC  1003               	clrc
  4502  03ED  0C80               	rrf	indf,f
  4503  03EE  0384               	decf	fsr0,f
  4504  03EF  0C80               	rrf	indf,f
  4505  03F0  0384               	decf	fsr0,f
  4506  03F1  0C80               	rrf	indf,f
  4507  03F2  0BC9               	decfsz	(??___ftpack+1+0)
  4508  03F3  2BEA               	goto	u3195
  4509                           	line	41
  4510                           	
  4511  03F4                     l403:	
  4512                           	line	38
  4513                           	
  4514  03F4  0848               	movf	(___ftpack_arg),w
  4515  03F5  0084               	movwf	fsr0
  4516  03F6  3000               	movlw	0
  4517  03F7  0500               	andwf	indf,w
  4518  03F8  00C9               	movwf	??___ftpack+1+0
  4519  03F9  0A84               	incf	fsr0,f
  4520  03FA  3000               	movlw	0
  4521  03FB  0500               	andwf	indf,w
  4522  03FC  00CA               	movwf	??___ftpack+1+0+1
  4523  03FD  0A84               	incf	fsr0,f
  4524  03FE  30FE               	movlw	0FEh
  4525  03FF  0500               	andwf	indf,w
  4526  0400  00CB               	movwf	??___ftpack+1+0+2
  4527  0401  084B               	movf	??___ftpack+1+2,w
  4528  0402  044A               	iorwf	??___ftpack+1+1,w
  4529  0403  0449               	iorwf	??___ftpack+1+0,w
  4530  0404  1D03               	skipz
  4531  0405  2C07               	goto	u3201
  4532  0406  2C08               	goto	u3200
  4533  0407                     u3201:
  4534  0407  2BE2               	goto	l404
  4535  0408                     u3200:
  4536                           	
  4537  0408                     l405:	
  4538                           	line	42
  4539  0408  2C2A               	goto	l406
  4540                           	
  4541  0409                     l407:	
  4542                           	line	43
  4543  0409  3001               	movlw	(01h)
  4544  040A  00C9               	movwf	(??___ftpack+1+0)
  4545                           	
  4546  040B  0849               	movf	(??___ftpack+1+0),w
  4547  040C  07C7               	addwf	(___ftpack_exp),f
  4548                           	line	44
  4549                           	
  4550  040D  0848               	movf	(___ftpack_arg),w
  4551  040E  0084               	movwf	fsr0
  4552  040F  3001               	movlw	01h
  4553  0410  0780               	addwf	indf,f
  4554  0411  0A84               	incf	fsr0,f
  4555  0412  3000               	movlw	0
  4556  0413  1803               	skipnc
  4557  0414  3E01               	addlw	1
  4558  0415  1D03               	skipz
  4559  0416  0780               	addwf	indf,f
  4560  0417  0A84               	incf	fsr0,f
  4561  0418  3000               	movlw	0
  4562  0419  1803               	skipnc
  4563  041A  3E01               	addlw	1
  4564  041B  0780               	addwf	indf,f
  4565                           	line	45
  4566                           	
  4567  041C  0848               	movf	(___ftpack_arg),w
  4568  041D  0084               	movwf	fsr0
  4569  041E  3001               	movlw	01h
  4570  041F  00C9               	movwf	(??___ftpack+1+0)
  4571  0420                     u3215:
  4572  0420  0A84               	incf	fsr0,f
  4573  0421  0A84               	incf	fsr0,f
  4574  0422  1003               	clrc
  4575  0423  0C80               	rrf	indf,f
  4576  0424  0384               	decf	fsr0,f
  4577  0425  0C80               	rrf	indf,f
  4578  0426  0384               	decf	fsr0,f
  4579  0427  0C80               	rrf	indf,f
  4580  0428  0BC9               	decfsz	(??___ftpack+1+0)
  4581  0429  2C20               	goto	u3215
  4582                           	line	46
  4583                           	
  4584  042A                     l406:	
  4585                           	line	42
  4586                           	
  4587  042A  0848               	movf	(___ftpack_arg),w
  4588  042B  0084               	movwf	fsr0
  4589  042C  3000               	movlw	0
  4590  042D  0500               	andwf	indf,w
  4591  042E  00C9               	movwf	??___ftpack+1+0
  4592+ 042F  0A84               	incf	fsr0,f
  4593+ 0430  3000               	movlw	0
  4594+ 0431  0500               	andwf	indf,w
  4595+ 0432  00CA               	movwf	??___ftpack+1+0+1
  4596+ 0433  0A84               	incf	fsr0,f
  4597+ 0434  30FF               	movlw	0FFh
  4598+ 0435  0500               	andwf	indf,w
  4599+ 0436  00CB               	movwf	??___ftpack+1+0+2
  4600+ 0437  084B               	movf	??___ftpack+1+2,w
  4601+ 0438  044A               	iorwf	??___ftpack+1+1,w
  4602+ 0439  0449               	iorwf	??___ftpack+1+0,w
  4603+ 043A  1D03               	skipz
  4604+ 043B  2C3D               	goto	u3221
  4605+ 043C  2C3E               	goto	u3220
  4606+ 043D                     u3221:
  4607+ 043D  2C09               	goto	l407
  4608+ 043E                     u3220:
  4609+                          	
  4610+ 043E                     l408:	
  4611+                          	line	47
  4612+ 043E  2C4F               	goto	l409
  4613+                          	
  4614+ 043F                     l410:	
  4615+                          	line	48
  4616+                          	
  4617+                          	
  4618+ 043F  3001               	movlw	low(01h)
  4619+ 0440  02C7               	subwf	(___ftpack_exp),f
  4620+                          	line	49
  4621+                          	
  4622+ 0441  0848               	movf	(___ftpack_arg),w
  4623+ 0442  0084               	movwf	fsr0
  4624+ 0443  3001               	movlw	01h
  4625+ 0444                     u3235:
  4626+ 0444  1003               	clrc
  4627+ 0445  0D80               	rlf	indf,f
  4628+ 0446  0A84               	incf	fsr0,f
  4629+ 0447  0D80               	rlf	indf,f
  4630+ 0448  0A84               	incf	fsr0,f
  4631+ 0449  0D80               	rlf	indf,f
  4632+ 044A  0384               	decf	fsr0,f
  4633+ 044B  0384               	decf	fsr0,f
  4634+ 044C  3EFF               	addlw	-1
  4635+ 044D  1D03               	skipz
  4636+ 044E  2C44               	goto	u3235
  4637+                          	line	50
  4638+                          	
  4639+ 044F                     l409:	
  4640+                          	line	47
  4641+                          	
  4642+ 044F  0848               	movf	(___ftpack_arg),w
  4643+ 0450  0084               	movwf	fsr0
  4644+ 0451  0800               	movf	indf,w
  4645+ 0452  00C9               	movwf	(??___ftpack+1+0)
  4646+ 0453  0A84               	incf	fsr0,f
  4647+ 0454  0800               	movf	indf,w
  4648+ 0455  00CA               	movwf	(??___ftpack+1+0+1)
  4649+ 0456  0A84               	incf	fsr0,f
  4650+ 0457  0800               	movf	indf,w
  4651+ 0458  00CB               	movwf	(??___ftpack+1+0+2)
  4652+ 0459  1FCA               	btfss	1+(??___ftpack+1+0),(15)&7
  4653+ 045A  2C5C               	goto	u3241
  4654+ 045B  2C5D               	goto	u3240
  4655+ 045C                     u3241:
  4656+ 045C  2C3F               	goto	l410
  4657+ 045D                     u3240:
  4658+                          	
  4659+ 045D                     l411:	
  4660+                          	line	51
  4661+                          	
  4662+ 045D  1847               	btfsc	(___ftpack_exp),(0)&7
  4663+ 045E  2C60               	goto	u3251
  4664+ 045F  2C61               	goto	u3250
  4665+ 0460                     u3251:
  4666+ 0460  2C6B               	goto	l412
  4667+ 0461                     u3250:
  4668+                          	line	52
  4669+                          	
  4670+ 0461  0848               	movf	(___ftpack_arg),w
  4671+ 0462  0084               	movwf	fsr0
  4672+ 0463  30FF               	movlw	0FFh
  4673+ 0464  0580               	andwf	indf,f
  4674+ 0465  0A84               	incf	fsr0,f
  4675+ 0466  307F               	movlw	07Fh
  4676+ 0467  0580               	andwf	indf,f
  4677+ 0468  0A84               	incf	fsr0,f
  4678+ 0469  30FF               	movlw	0FFh
  4679+ 046A  0580               	andwf	indf,f
  4680+                          	
  4681+ 046B                     l412:	
  4682+                          	line	53
  4683+                          	
  4684+ 046B  1003               	clrc
  4685+ 046C  0CC7               	rrf	(___ftpack_exp),f
  4686+                          
  4687+                          	line	54
  4688+                          	
  4689+ 046D  0847               	movf	(___ftpack_exp),w
  4690+ 046E  00C9               	movwf	(??___ftpack+1+0)
  4691+ 046F  01CA               	clrf	(??___ftpack+1+0+1)
  4692+ 0470  01CB               	clrf	(??___ftpack+1+0+2)
  4693+ 0471  3010               	movlw	010h
  4694+ 0472                     u3265:
  4695+ 0472  1003               	clrc
  4696+ 0473  0DC9               	rlf	(??___ftpack+1+0),f
  4697+ 0474  0DCA               	rlf	(??___ftpack+1+1),f
  4698+ 0475  0DCB               	rlf	(??___ftpack+1+2),f
  4699+ 0476                     u3260:
  4700+ 0476  3EFF               	addlw	-1
  4701+ 0477  1D03               	skipz
  4702+ 0478  2C72               	goto	u3265
  4703+                          	
  4704+ 0479  0848               	movf	(___ftpack_arg),w
  4705+ 047A  0084               	movwf	fsr0
  4706+ 047B  0849               	movf	(??___ftpack+1+0),w
  4707+ 047C  0480               	iorwf	indf,f
  4708+ 047D  0A84               	incf	fsr0,f
  4709+ 047E  084A               	movf	(??___ftpack+1+1),w
  4710+ 047F  0480               	iorwf	indf,f
  4711+ 0480  0A84               	incf	fsr0,f
  4712+ 0481  084B               	movf	(??___ftpack+1+2),w
  4713+ 0482  0480               	iorwf	indf,f
  4714+                          	line	55
  4715+ 0483                     l401:	
  4716+ 0483  0008               	return
  4717+                          ; =============== function ___ftpack ends =====
      +                          ==========
  4718+                          
  4719+                          GLOBAL __end_of___ftpack
  4720+ 0484                     	__end_of___ftpack:
  4721+                          	FNSIZE	___ftpack,4,1
  4722+                          	signat	___ftpack,8312
  4723+                          	global	___ftunpack
  4724+                          	global	??___ftunpack
  4725+                          	global	?___ftunpack
  4726+                          
  4727+                          ; *************** function ___ftunpack ********
      +                          *******
  4728+                          ; Defined at:
  4729+                          ;		line 13 in file "C:\Program Files (x86)\HI-T
      +                          ECH Software\PICC\PRO\9.65\sources\float.c"
  4730+                          ; Parameters:
  4731+                          ;		arg         	reg:   wr	type: PTR unsigned um
      +                          ; Largest target is 3
  4732+                          ;		 -> __fttol_f1(3), __ftmul_f2(3), __ftmul_f1
      +                          (3), __ftdiv_f2(3), 
  4733+                          ;		 -> __ftdiv_f1(3), __ftadd_f2(3), __ftadd_f1
      +                          (3), 
  4734+                          ;		exp         	offs:   0	type: PTR unsigned ch
      +                          ar ; Largest target is 1
  4735+                          ;		 -> __fttol_exp1(1), __ftmul_cntr(1), __ftmu
      +                          l_exp1(1), __ftdiv_exp2(1), 
  4736+                          ;		 -> __ftdiv_exp1(1), __ftadd_exp2(1), __ftad
      +                          d_exp1(1), 
  4737+                          ; Auto variables:
  4738+                          ;		arg         	       	type: PTR unsigned um; 
      +                          Largest target is 3
  4739+                          ;		 -> __fttol_f1(3), __ftmul_f2(3), __ftmul_f1
      +                          (3), __ftdiv_f2(3), 
  4740+                          ;		 -> __ftdiv_f1(3), __ftadd_f2(3), __ftadd_f1
      +                          (3), 
  4741+                          ;		sign        	       	type: unsigned char 
  4742+                          ; Return value:
  4743+                          ;		type: unsigned char 
  4744+                          ;		size: 1
  4745+                          ; Registers used:
  4746+                          ;		wreg, fsr0l, fsr0h, status,2, status,0
  4747+                          ; Tracked objects:
  4748+                          ;		On entry : 300/0
  4749+                          ;		On exit  : 0/0
  4750+                          ;		Unchanged: 0/0
  4751+                          ; Data sizes:
  4752+                          ;		Autos:    2
  4753+                          ;		Params:   1
  4754+                          ;		Temp:     4
  4755+                          ;		Total:    7
  4756+                          ; This function calls:
  4757+                          ;		Nothing
  4758+                          ; This function is called by:
  4759+                          ;		___ftadd
  4760+                          ;		___ftdiv
  4761+                          ;		___ftmul
  4762+                          ;		___fttol
  4763+                          ; This function uses a non-reentrant model
  4764+                          ; 
  4765+                          	psect	text210,local,class=CODE,delta=2
  4766+                          	file	"C:\Program Files (x86)\HI-TECH Software\
      +                          PICC\PRO\9.65\sources\float.c"
  4767+                          	line	13
  4768+                          	
  4769+ 0FA6                     ___ftunpack:	
  4770+                          	opt stack 3
  4771+                          ; Regs used in ___ftunpack: [wreg-fsr0h+status,
      +                          2+status,0]
  4772+                          ;___ftunpack_arg stored from wreg
  4773+                          	line	16
  4774+                          	
  4775+ 0FA6  00C8               	movwf	(___ftunpack_arg)
  4776+                          	
  4777+ 0FA7  0848               	movf	(___ftunpack_arg),w
  4778+ 0FA8  0084               	movwf	fsr0
  4779+ 0FA9  1383               	bcf	status, 7	;select IRP bank0
  4780+ 0FAA  0800               	movf	indf,w
  4781+ 0FAB  00CA               	movwf	(??___ftunpack+2+0)
  4782+ 0FAC  0A84               	incf	fsr0,f
  4783+ 0FAD  0800               	movf	indf,w
  4784+ 0FAE  00CB               	movwf	(??___ftunpack+2+0+1)
  4785+ 0FAF  0A84               	incf	fsr0,f
  4786+ 0FB0  0800               	movf	indf,w
  4787+ 0FB1  00CC               	movwf	(??___ftunpack+2+0+2)
  4788+ 0FB2  300F               	movlw	0Fh
  4789+ 0FB3                     u3065:
  4790+ 0FB3  1003               	clrc
  4791+ 0FB4  0CCC               	rrf	(??___ftunpack+2+2),f
  4792+ 0FB5  0CCB               	rrf	(??___ftunpack+2+1),f
  4793+ 0FB6  0CCA               	rrf	(??___ftunpack+2+0),f
  4794+ 0FB7                     u3060:
  4795+ 0FB7  3EFF               	addlw	-1
  4796+ 0FB8  1D03               	skipz
  4797+ 0FB9  2FB3               	goto	u3065
  4798+ 0FBA  084A               	movf	(??___ftunpack+2+0),w
  4799+                          	
  4800+ 0FBB  00C9               	movwf	(___ftunpack_sign)
  4801+ 0FBC  00CD               	movwf	(??___ftunpack+5+0)
  4802+                          	
  4803+ 0FBD  0847               	movf	(___ftunpack_exp),w
  4804+ 0FBE  0084               	movwf	fsr0
  4805+ 0FBF  084D               	movf	(??___ftunpack+5+0),w
  4806+ 0FC0  0080               	movwf	indf
  4807+                          	line	17
  4808+                          	
  4809+ 0FC1  08C9               	movf	(___ftunpack_sign),f
  4810+ 0FC2  1D03               	skipz
  4811+ 0FC3  2FC5               	goto	u3071
  4812+ 0FC4  2FC6               	goto	u3070
  4813+ 0FC5                     u3071:
  4814+ 0FC5  2FD2               	goto	l399
  4815+ 0FC6                     u3070:
  4816+                          	line	18
  4817+                          	
  4818+ 0FC6  0848               	movf	(___ftunpack_arg),w
  4819+ 0FC7  0084               	movwf	fsr0
  4820+ 0FC8  3000               	movlw	0
  4821+ 0FC9  0080               	movwf	indf
  4822+ 0FCA  0A84               	incf	fsr0,f
  4823+ 0FCB  3000               	movlw	0
  4824+ 0FCC  0080               	movwf	indf
  4825+ 0FCD  0A84               	incf	fsr0,f
  4826+ 0FCE  3000               	movlw	0
  4827+ 0FCF  0080               	movwf	indf
  4828+                          	line	19
  4829+ 0FD0  3000               	movlw	(0)
  4830+ 0FD1  2FFF               	goto	l398
  4831+                          	line	20
  4832+                          	
  4833+ 0FD2                     l399:	
  4834+                          	line	21
  4835+ 0FD2  1003               	clrc
  4836+                          	
  4837+ 0FD3  3000               	movlw	0
  4838+ 0FD4  1803               	btfsc	status,0
  4839+ 0FD5  3001               	movlw	1
  4840+ 0FD6  00C9               	movwf	(___ftunpack_sign)
  4841+                          	line	22
  4842+                          	
  4843+ 0FD7  0848               	movf	(___ftunpack_arg),w
  4844+ 0FD8  0084               	movwf	fsr0
  4845+ 0FD9  3000               	movlw	0
  4846+ 0FDA  0480               	iorwf	indf,f
  4847+ 0FDB  0A84               	incf	fsr0,f
  4848+ 0FDC  3080               	movlw	080h
  4849+ 0FDD  0480               	iorwf	indf,f
  4850+ 0FDE  0A84               	incf	fsr0,f
  4851+ 0FDF  3000               	movlw	0
  4852+ 0FE0  0480               	iorwf	indf,f
  4853+                          	line	23
  4854+                          	
  4855+ 0FE1  0848               	movf	(___ftunpack_arg),w
  4856+ 0FE2  0084               	movwf	fsr0
  4857+ 0FE3  0800               	movf	indf,w
  4858+ 0FE4  00CA               	movwf	(??___ftunpack+2+0)
  4859+ 0FE5  0A84               	incf	fsr0,f
  4860+ 0FE6  0800               	movf	indf,w
  4861+ 0FE7  00CB               	movwf	(??___ftunpack+2+0+1)
  4862+ 0FE8  0A84               	incf	fsr0,f
  4863+ 0FE9  0800               	movf	indf,w
  4864+ 0FEA  00CC               	movwf	(??___ftunpack+2+0+2)
  4865+ 0FEB  1FCC               	btfss	2+(??___ftunpack+2+0),(23)&7
  4866+ 0FEC  2FEE               	goto	u3081
  4867+ 0FED  2FEF               	goto	u3080
  4868+ 0FEE                     u3081:
  4869+ 0FEE  2FF3               	goto	l400
  4870+ 0FEF                     u3080:
  4871+                          	line	24
  4872+ 0FEF  3001               	movlw	(01h)
  4873+ 0FF0  00CA               	movwf	(??___ftunpack+2+0)
  4874+                          	
  4875+ 0FF1  084A               	movf	(??___ftunpack+2+0),w
  4876+ 0FF2  07C9               	addwf	(___ftunpack_sign),f
  4877+                          	
  4878+ 0FF3                     l400:	
  4879+                          	line	25
  4880+                          	
  4881+ 0FF3  0848               	movf	(___ftunpack_arg),w
  4882+ 0FF4  0084               	movwf	fsr0
  4883+ 0FF5  30FF               	movlw	0FFh
  4884+ 0FF6  0580               	andwf	indf,f
  4885+ 0FF7  0A84               	incf	fsr0,f
  4886+ 0FF8  30FF               	movlw	0FFh
  4887+ 0FF9  0580               	andwf	indf,f
  4888+ 0FFA  0A84               	incf	fsr0,f
  4889+ 0FFB  3000               	movlw	0
  4890+ 0FFC  0580               	andwf	indf,f
  4891+                          	line	26
  4892+                          	
  4893+ 0FFD  0849               	movf	(___ftunpack_sign),w
  4894+ 0FFE  2FFF               	goto	l398
  4895+                          	line	27
  4896+ 0FFF                     l398:	
  4897+ 0FFF  0008               	return
  4898+                          ; =============== function ___ftunpack ends ===
      +                          ============
  4899+                          
  4900+                          GLOBAL __end_of___ftunpack
  4901+ 1000                     	__end_of___ftunpack:
  4902+                          	FNSIZE	___ftunpack,6,1
  4903+                          	signat	___ftunpack,8313
  4904+                          	global	_LCDWriteByte
  4905+                          	global	??_LCDWriteByte
  4906+                          	global	?_LCDWriteByte
  4907+                          
  4908+                          ; *************** function _LCDWriteByte ******
      +                          *********
  4909+                          ; Defined at:
  4910+                          ;		line 64 in file "C:\Users\Suchitra\Desktop\h
      +                          ardik\codes\LM35 wala\LCD.c"
  4911+                          ; Parameters:
  4912+                          ;		LCDData     	reg:   wr	type: unsigned char 
  4913+                          ; Auto variables:
  4914+                          ;		LCDData     	       	type: unsigned char 
  4915+                          ; Return value:
  4916+                          ;		type: void 
  4917+                          ;		size: 0
  4918+                          ; Registers used:
  4919+                          ;		wreg, status,2, status,0, pclath, cstack
  4920+                          ; Tracked objects:
  4921+                          ;		On entry : 300/0
  4922+                          ;		On exit  : 0/0
  4923+                          ;		Unchanged: 0/0
  4924+                          ; Data sizes:
  4925+                          ;		Autos:    1
  4926+                          ;		Params:   0
  4927+                          ;		Temp:     1
  4928+                          ;		Total:    2
  4929+                          ; This function calls:
  4930+                          ;		_LCDEnable
  4931+                          ;		_Delay
  4932+                          ; This function is called by:
  4933+                          ;		_LCDWriteCommand
  4934+                          ;		_LCDWriteData
  4935+                          ; This function uses a non-reentrant model
  4936+                          ; 
  4937+                          	psect	text211,local,class=CODE,delta=2
  4938+                          	file	"C:\Users\Suchitra\Desktop\hardik\codes\L
      +                          M35 wala\LCD.c"
  4939+                          	line	64
  4940+                          ;LCD.c: 63: static void LCDWriteByte(LCDubyte L
      +                          CDData)
  4941+                          ;LCD.c: 64: {
  4942+                          	
  4943+ 0EF2                     _LCDWriteByte:	
  4944+                          	opt stack 2
  4945+                          ; Regs used in _LCDWriteByte: [wreg+status,2+st
      +                          atus,0+pclath+cstack]
  4946+                          ;_LCDWriteByte_LCDData stored from wreg
  4947+                          	
  4948+ 0EF2  00BE               	movwf	(_LCDWriteByte_LCDData)
  4949+                          	line	65
  4950+                          ;LCD.c: 65: PORTD = (PORTD & 0x0F)|(LCDData & 0
      +                          xF0);
  4951+                          	
  4952+ 0EF3  083E               	movf	(_LCDWriteByte_LCDData),w
  4953+ 0EF4  39F0               	andlw	0F0h
  4954+ 0EF5  00BF               	movwf	(??_LCDWriteByte+1+0)
  4955+                          	
  4956+ 0EF6  0808               	movf	(8),w	;volatile
  4957+ 0EF7  390F               	andlw	0Fh
  4958+ 0EF8  043F               	iorwf	(??_LCDWriteByte+1+0),w
  4959+                          	
  4960+ 0EF9  0088               	movwf	(8)	;volatile
  4961+                          	line	66
  4962+                          ;LCD.c: 66: LCDEnable();
  4963+ 0EFA  120A  158A  2636   	fcall	_LCDEnable
      +       120A  158A         
  4964+                          	line	67
  4965+                          ;LCD.c: 67: PORTD = (PORTD & 0x0F)|(LCDData << 
      +                          4);
  4966+ 0EFF  1283               	bcf	status, 5	;RP0=0, select bank0
  4967+ 0F00  1303               	bcf	status, 6	;RP1=0, select bank0
  4968+                          	
  4969+ 0F01  083E               	movf	(_LCDWriteByte_LCDData),w
  4970+ 0F02  00BF               	movwf	(??_LCDWriteByte+1+0)
  4971+ 0F03  3004               	movlw	04h
  4972+ 0F04                     u2555:
  4973+ 0F04  1003               	clrc
  4974+ 0F05  0DBF               	rlf	(??_LCDWriteByte+1+0),f
  4975+ 0F06  3EFF               	addlw	-1
  4976+ 0F07  1D03               	skipz
  4977+ 0F08  2F04               	goto	u2555
  4978+                          	
  4979+ 0F09  0808               	movf	(8),w	;volatile
  4980+ 0F0A  390F               	andlw	0Fh
  4981+ 0F0B  043F               	iorwf	0+(??_LCDWriteByte+1+0),w
  4982+                          	
  4983+ 0F0C  0088               	movwf	(8)	;volatile
  4984+                          	line	68
  4985+                          ;LCD.c: 68: LCDEnable();
  4986+ 0F0D  120A  158A  2636   	fcall	_LCDEnable
      +       120A  158A         
  4987+                          	line	69
  4988+                          ;LCD.c: 69: Delay(2);
  4989+ 0F12  3002               	movlw	low(02h)
  4990+ 0F13  1283               	bcf	status, 5	;RP0=0, select bank0
  4991+ 0F14  1303               	bcf	status, 6	;RP1=0, select bank0
  4992+                          	
  4993+ 0F15  00C0               	movwf	(?_Delay)
  4994+ 0F16  3000               	movlw	high(02h)
  4995+ 0F17  00C1               	movwf	((?_Delay))+1
  4996+ 0F18  120A  158A  2667   	fcall	_Delay
      +       120A  158A         
  4997+                          	line	70
  4998+                          ;LCD.c: 70: }
  4999+ 0F1D                     l21:	
  5000+ 0F1D  0008               	return
  5001+                          ; =============== function _LCDWriteByte ends =
      +                          ==============
  5002+                          
  5003+                          GLOBAL __end_of_LCDWriteByte
  5004+ 0F1E                     	__end_of_LCDWriteByte:
  5005+                          	FNSIZE	_LCDWriteByte,2,0
  5006+                          	signat	_LCDWriteByte,4216
  5007+                          	global	_LCDEnable
  5008+                          	global	??_LCDEnable
  5009+                          	global	?_LCDEnable
  5010+                          
  5011+                          ; *************** function _LCDEnable *********
      +                          ******
  5012+                          ; Defined at:
  5013+                          ;		line 5 in file "C:\Users\Suchitra\Desktop\ha
      +                          rdik\codes\LM35 wala\LCD.c"
  5014+                          ; Parameters:
  5015+                          ;		None
  5016+                          ; Auto variables:
  5017+                          ;		None
  5018+                          ; Return value:
  5019+                          ;		type: void 
  5020+                          ;		size: 0
  5021+                          ; Registers used:
  5022+                          ;		wreg, status,2, status,0, pclath, cstack
  5023+                          ; Tracked objects:
  5024+                          ;		On entry : 300/0
  5025+                          ;		On exit  : 0/0
  5026+                          ;		Unchanged: 0/0
  5027+                          ; Data sizes:
  5028+                          ;		Autos:    0
  5029+                          ;		Params:   0
  5030+                          ;		Temp:     0
  5031+                          ;		Total:    0
  5032+                          ; This function calls:
  5033+                          ;		_Delay
  5034+                          ; This function is called by:
  5035+                          ;		_LCDWriteByte
  5036+                          ; This function uses a non-reentrant model
  5037+                          ; 
  5038+                          	psect	text212,local,class=CODE,delta=2
  5039+                          	file	"C:\Users\Suchitra\Desktop\hardik\codes\L
      +                          M35 wala\LCD.c"
  5040+                          	line	5
  5041+                          ;LCD.c: 4: static void LCDEnable(void)
  5042+                          ;LCD.c: 5: {
  5043+                          	
  5044+ 0E36                     _LCDEnable:	
  5045+                          	opt stack 1
  5046+                          ; Regs used in _LCDEnable: [wreg+status,2+statu
      +                          s,0+pclath+cstack]
  5047+                          	line	6
  5048+                          ;LCD.c: 6: RD3 = 1;
  5049+ 0E36  1588               	bsf	(67/8),(67)&7
  5050+                          	line	7
  5051+                          ;LCD.c: 7: Delay(10);
  5052+ 0E37  300A               	movlw	low(0Ah)
  5053+                          	
  5054+ 0E38  00C0               	movwf	(?_Delay)
  5055+ 0E39  3000               	movlw	high(0Ah)
  5056+ 0E3A  00C1               	movwf	((?_Delay))+1
  5057+ 0E3B  120A  158A  2667   	fcall	_Delay
      +       120A  158A         
  5058+                          	line	8
  5059+                          ;LCD.c: 8: RD3 = 0;
  5060+ 0E40  1283               	bcf	status, 5	;RP0=0, select bank0
  5061+ 0E41  1303               	bcf	status, 6	;RP1=0, select bank0
  5062+ 0E42  1188               	bcf	(67/8),(67)&7
  5063+                          	line	9
  5064+                          ;LCD.c: 9: }
  5065+ 0E43                     l8:	
  5066+ 0E43  0008               	return
  5067+                          ; =============== function _LCDEnable ends ====
      +                          ===========
  5068+                          
  5069+                          GLOBAL __end_of_LCDEnable
  5070+ 0E44                     	__end_of_LCDEnable:
  5071+                          	FNSIZE	_LCDEnable,0,0
  5072+                          	signat	_LCDEnable,88
  5073+                          	global	_Delay
  5074+                          	global	??_Delay
  5075+                          	global	?_Delay
  5076+                          
  5077+                          ; *************** function _Delay *************
      +                          **
  5078+                          ; Defined at:
  5079+                          ;		line 4 in file "C:\Users\Suchitra\Desktop\ha
      +                          rdik\codes\LM35 wala\delay.c"
  5080+                          ; Parameters:
  5081+                          ;		time        	offs:   0	type: unsigned int 
  5082+                          ; Auto variables:
  5083+                          ;		pause       	       	type: unsigned char 
  5084+                          ; Return value:
  5085+                          ;		type: void 
  5086+                          ;		size: 0
  5087+                          ; Registers used:
  5088+                          ;		wreg, status,2, status,0
  5089+                          ; Tracked objects:
  5090+                          ;		On entry : 300/0
  5091+                          ;		On exit  : 0/0
  5092+                          ;		Unchanged: 0/0
  5093+                          ; Data sizes:
  5094+                          ;		Autos:    1
  5095+                          ;		Params:   2
  5096+                          ;		Temp:     0
  5097+                          ;		Total:    3
  5098+                          ; This function calls:
  5099+                          ;		Nothing
  5100+                          ; This function is called by:
  5101+                          ;		_LCDEnable
  5102+                          ;		_LCDWriteByte
  5103+                          ;		_ADCReadData
  5104+                          ; This function uses a non-reentrant model
  5105+                          ; 
  5106+                          	psect	text213,local,class=CODE,delta=2
  5107+                          	file	"C:\Users\Suchitra\Desktop\hardik\codes\L
      +                          M35 wala\delay.c"
  5108+                          	line	4
  5109+                          ;delay.c: 3: void Delay(unsigned int time)
  5110+                          ;delay.c: 4: {
  5111+                          	
  5112+ 0E67                     _Delay:	
  5113+                          	opt stack 0
  5114+                          ; Regs used in _Delay: [wreg+status,2+status,0]
  5115+                          	line	6
  5116+                          ;delay.c: 5: unsigned char pause;
  5117+                          ;delay.c: 6: while( time > 0)
  5118+ 0E67  2E79               	goto	l2
  5119+                          	
  5120+ 0E68                     l3:	
  5121+                          	line	8
  5122+                          ;delay.c: 7: {
  5123+                          ;delay.c: 8: pause = 255;
  5124+                          	
  5125+ 0E68  01C2               	clrf	(_Delay_pause)
  5126+ 0E69  03C2               	decf	(_Delay_pause),f
  5127+                          	line	9
  5128+                          ;delay.c: 9: while(pause--);
  5129+ 0E6A  2E6B               	goto	l5
  5130+                          	
  5131+ 0E6B                     l5:	
  5132+                          	
  5133+                          	
  5134+ 0E6B  3001               	movlw	low(01h)
  5135+ 0E6C  02C2               	subwf	(_Delay_pause),f
  5136+ 0E6D  0842               	movf	((_Delay_pause))&07fh,w
  5137+ 0E6E  3AFF               	xorlw	0FFh
  5138+ 0E6F  1D03               	skipz
  5139+ 0E70  2E72               	goto	u2611
  5140+ 0E71  2E73               	goto	u2610
  5141+ 0E72                     u2611:
  5142+ 0E72  2E6B               	goto	l5
  5143+ 0E73                     u2610:
  5144+                          	
  5145+ 0E73                     l7:	
  5146+                          	line	10
  5147+                          ;delay.c: 10: time--;
  5148+                          	
  5149+ 0E73  3001               	movlw	low(01h)
  5150+ 0E74  02C0               	subwf	(_Delay_time),f
  5151+ 0E75  3000               	movlw	high(01h)
  5152+ 0E76  1C03               	skipc
  5153+ 0E77  03C1               	decf	(_Delay_time+1),f
  5154+ 0E78  02C1               	subwf	(_Delay_time+1),f
  5155+                          	line	11
  5156+                          	
  5157+ 0E79                     l2:	
  5158+                          	line	6
  5159+                          	
  5160+ 0E79  0841               	movf	((_Delay_time+1)),w
  5161+ 0E7A  0440               	iorwf	((_Delay_time)),w
  5162+ 0E7B  1D03               	skipz
  5163+ 0E7C  2E7E               	goto	u2621
  5164+ 0E7D  2E7F               	goto	u2620
  5165+ 0E7E                     u2621:
  5166+ 0E7E  2E68               	goto	l3
  5167+ 0E7F                     u2620:
  5168+                          	
  5169+ 0E7F                     l4:	
  5170+                          	line	12
  5171+                          ;delay.c: 11: }
  5172+                          ;delay.c: 12: }
  5173+ 0E7F                     l1:	
  5174+ 0E7F  0008               	return
  5175+                          ; =============== function _Delay ends ========
      +                          =======
  5176+                          
  5177+                          GLOBAL __end_of_Delay
  5178+ 0E80                     	__end_of_Delay:
  5179+                          	FNSIZE	_Delay,1,2
  5180+                          	signat	_Delay,4216
  5181+                          	FNCALL	_main,_MainSystemInitialize
  5182+                          	FNCALL	_main,_ADCReadData
  5183+                          	FNCALL	_main,___ftmul
  5184+                          	FNCALL	_main,_LCDWriteCommand
  5185+                          	FNCALL	_main,_LCDWriteFloat
  5186+                          	FNCALL	_main,___ftge
  5187+                          	FNCALL	_LCDWriteFloat,___ftge
  5188+                          	FNCALL	_LCDWriteFloat,_LCDWriteData
  5189+                          	FNCALL	_LCDWriteFloat,___ftneg
  5190+                          	FNCALL	_LCDWriteFloat,___fttol
  5191+                          	FNCALL	_LCDWriteFloat,_LCDWriteInteger
  5192+                          	FNCALL	_LCDWriteFloat,___awtoft
  5193+                          	FNCALL	_LCDWriteFloat,___ftsub
  5194+                          	FNCALL	_LCDWriteFloat,___ftadd
  5195+                          	FNCALL	_LCDWriteFloat,___ftmul
  5196+                          	FNCALL	_LCDWriteFloat,___awmod
  5197+                          	FNCALL	_LCDWriteFloat,___awdiv
  5198+                          	FNCALL	_LCDWriteFloat,_LCDWriteCommand
  5199+                          	FNCALL	_LCDWriteFloat,_LCDWriteString
  5200+                          	FNCALL	_ADCReadData,___lwtoft
  5201+                          	FNCALL	_ADCReadData,___ftmul
  5202+                          	FNCALL	_ADCReadData,___ftdiv
  5203+                          	FNCALL	_ADCReadData,___ftadd
  5204+                          	FNCALL	_ADCReadData,_Delay
  5205+                          	FNCALL	_MainSystemInitialize,_ADCInitialize
  5206+                          	FNCALL	_MainSystemInitialize,_LCDInitialize
  5207+                          	FNCALL	___ftmul,___ftunpack
  5208+                          	FNCALL	___ftmul,___ftpack
  5209+                          	FNCALL	___lwtoft,___ftpack
  5210+                          	FNCALL	_LCDWriteInteger,_LCDWriteData
  5211+                          	FNCALL	_LCDWriteInteger,___awmod
  5212+                          	FNCALL	_LCDWriteInteger,___awdiv
  5213+                          	FNCALL	___fttol,___ftunpack
  5214+                          	FNCALL	___ftdiv,___ftunpack
  5215+                          	FNCALL	___ftdiv,___ftpack
  5216+                          	FNCALL	___ftsub,___ftadd
  5217+                          	FNCALL	_LCDWriteString,_LCDWriteData
  5218+                          	FNCALL	_LCDInitialize,_LCDReset
  5219+                          	FNCALL	_LCDInitialize,_LCDWriteCommand
  5220+                          	FNCALL	___awtoft,___ftpack
  5221+                          	FNCALL	___awtoft,___ftneg
  5222+                          	FNCALL	_LCDWriteData,_LCDWriteByte
  5223+                          	FNCALL	_LCDReset,_LCDWriteCommand
  5224+                          	FNCALL	___ftadd,___ftunpack
  5225+                          	FNCALL	___ftadd,___ftpack
  5226+                          	FNCALL	_LCDWriteCommand,_LCDWriteByte
  5227+                          	FNCALL	_LCDWriteByte,_LCDEnable
  5228+                          	FNCALL	_LCDWriteByte,_Delay
  5229+                          	FNCALL	_LCDEnable,_Delay
  5230+                          	FNROOT	_main
  5231+                          ;	FNARG	___ftsub,___awtoft
  5232+                          ;	FNARG	___ftsub,___ftneg
  5233+                          ;	FNARG	___ftadd,___ftdiv
  5234+                          ;	FNARG	___ftadd,___ftmul
  5235+                          ;	FNARG	___ftadd,___awtoft
  5236+                          ;	FNARG	___ftadd,___ftneg
  5237+                          ;	FNARG	___ftmul,___ftsub
  5238+                          ;	FNARG	___ftmul,___awtoft
  5239+                          ;	FNARG	___ftmul,___ftneg
  5240+                          ;	FNARG	___ftdiv,___ftmul
  5241+                          	psect	strings,class=CODE,delta=2,reloc=256
  5242+                          	global	stringdir,stringtab,__stringbase,string
      +                          jmp
  5243+ 0700                     stringtab:
  5244+ 0700  00FE               	movwf	(btemp)&07Fh
  5245+ 0701  1FFE               	btfss	(btemp)&07Fh,7
  5246+ 0702  2F08               	goto	stringcode
  5247+ 0703  1383               	bcf	status,7
  5248+ 0704  187E               	btfsc	btemp&7Fh,0
  5249+ 0705  1783               	bsf	status,7
  5250+ 0706  0800               	movf	indf,w
  5251+ 0707  0008               	return
  5252+ 0708                     stringcode:
  5253+ 0708  0804               	movf	fsr,w
  5254+ 0709                     stringdir:
  5255+ 0709  00FE               movwf btemp&07Fh
  5256+ 070A  3007               movlw high(stringdir)
  5257+ 070B  008A               movwf pclath
  5258+ 070C  087E               movf btemp&07Fh,w
  5259+ 070D                     stringjmp:
  5260+ 070D  0782               	addwf pc
  5261+ 070E                     __stringbase:
  5262+ 070E  3400               	retlw	0
  5263+                          	global	_THigh
  5264+                          	global	_THigh
  5265+                          	psect	common,class=COMMON,space=1
  5266+                          
  5267+                          	DABS	1,118,4	;_THigh
  5268+ 0000                     	_THigh	set	0x76
  5269+                          
  5270+                          	global	_TLow
  5271+                          	global	_TLow
  5272+                          
  5273+                          	DABS	1,122,4	;_TLow
  5274+ 0000                     	_TLow	set	0x7A
  5275+                          
  5276+                          	global	_ADCON0
  5277+ 0000                     	_ADCON0	set	0x1F
  5278+                          
  5279+                          	global	_ADCON1
  5280+                          	global	_ADCON1
  5281+ 0000                     	_ADCON1	set	0x9F
  5282+                          
  5283+                          	global	_ADRESH
  5284+ 0000                     	_ADRESH	set	0x1E
  5285+                          
  5286+                          	global	_ADRESL
  5287+ 0000                     	_ADRESL	set	0x9E
  5288+                          
  5289+                          	global	_CCP1CON
  5290+                          	global	_CCP1CON
  5291+ 0000                     	_CCP1CON	set	0x17
  5292+                          
  5293+                          	global	_CCP2CON
  5294+                          	global	_CCP2CON
  5295+ 0000                     	_CCP2CON	set	0x1D
  5296+                          
  5297+                          	global	_CCPR1H
  5298+                          	global	_CCPR1H
  5299+ 0000                     	_CCPR1H	set	0x16
  5300+                          
  5301+                          	global	_CCPR1L
  5302+                          	global	_CCPR1L
  5303+ 0000                     	_CCPR1L	set	0x15
  5304+                          
  5305+                          	global	_CCPR2H
  5306+                          	global	_CCPR2H
  5307+ 0000                     	_CCPR2H	set	0x1C
  5308+                          
  5309+                          	global	_CCPR2L
  5310+                          	global	_CCPR2L
  5311+ 0000                     	_CCPR2L	set	0x1B
  5312+                          
  5313+                          	global	_CMCON
  5314+                          	global	_CMCON
  5315+ 0000                     	_CMCON	set	0x9C
  5316+                          
  5317+                          	global	_CVRCON
  5318+                          	global	_CVRCON
  5319+ 0000                     	_CVRCON	set	0x9D
  5320+                          
  5321+                          	global	_EEADR
  5322+                          	global	_EEADR
  5323+ 0000                     	_EEADR	set	0x10D
  5324+                          
  5325+                          	global	_EEADRH
  5326+                          	global	_EEADRH
  5327+ 0000                     	_EEADRH	set	0x10F
  5328+                          
  5329+                          	global	_EEADRL
  5330+                          	global	_EEADRL
  5331+ 0000                     	_EEADRL	set	0x10D
  5332+                          
  5333+                          	global	_EECON1
  5334+                          	global	_EECON1
  5335+ 0000                     	_EECON1	set	0x18C
  5336+                          
  5337+                          	global	_EECON2
  5338+                          	global	_EECON2
  5339+ 0000                     	_EECON2	set	0x18D
  5340+                          
  5341+                          	global	_EEDATA
  5342+                          	global	_EEDATA
  5343+ 0000                     	_EEDATA	set	0x10C
  5344+                          
  5345+                          	global	_EEDATH
  5346+                          	global	_EEDATH
  5347+ 0000                     	_EEDATH	set	0x10E
  5348+                          
  5349+                          	global	_FSR
  5350+                          	global	_FSR
  5351+ 0000                     	_FSR	set	0x4
  5352+                          
  5353+                          	global	_INDF
  5354+                          	global	_INDF
  5355+ 0000                     	_INDF	set	0x0
  5356+                          
  5357+                          	global	_INTCON
  5358+                          	global	_INTCON
  5359+ 0000                     	_INTCON	set	0xB
  5360+                          
  5361+                          	global	_OPTION
  5362+                          	global	_OPTION
  5363+ 0000                     	_OPTION	set	0x81
  5364+                          
  5365+                          	global	_PCL
  5366+                          	global	_PCL
  5367+ 0000                     	_PCL	set	0x2
  5368+                          
  5369+                          	global	_PCLATH
  5370+                          	global	_PCLATH
  5371+ 0000                     	_PCLATH	set	0xA
  5372+                          
  5373+                          	global	_PCON
  5374+                          	global	_PCON
  5375+ 0000                     	_PCON	set	0x8E
  5376+                          
  5377+                          	global	_PIE1
  5378+                          	global	_PIE1
  5379+ 0000                     	_PIE1	set	0x8C
  5380+                          
  5381+                          	global	_PIE2
  5382+                          	global	_PIE2
  5383+ 0000                     	_PIE2	set	0x8D
  5384+                          
  5385+                          	global	_PIR1
  5386+                          	global	_PIR1
  5387+ 0000                     	_PIR1	set	0xC
  5388+                          
  5389+                          	global	_PIR2
  5390+                          	global	_PIR2
  5391+ 0000                     	_PIR2	set	0xD
  5392+                          
  5393+                          	global	_PORTA
  5394+                          	global	_PORTA
  5395+ 0000                     	_PORTA	set	0x5
  5396+                          
  5397+                          	global	_PORTB
  5398+                          	global	_PORTB
  5399+ 0000                     	_PORTB	set	0x6
  5400+                          
  5401+                          	global	_PORTC
  5402+                          	global	_PORTC
  5403+ 0000                     	_PORTC	set	0x7
  5404+                          
  5405+                          	global	_PORTD
  5406+ 0000                     	_PORTD	set	0x8
  5407+                          
  5408+                          	global	_PORTE
  5409+ 0000                     	_PORTE	set	0x9
  5410+                          
  5411+                          	global	_PR2
  5412+                          	global	_PR2
  5413+ 0000                     	_PR2	set	0x92
  5414+                          
  5415+                          	global	_RCREG
  5416+                          	global	_RCREG
  5417+ 0000                     	_RCREG	set	0x1A
  5418+                          
  5419+                          	global	_RCSTA
  5420+                          	global	_RCSTA
  5421+ 0000                     	_RCSTA	set	0x18
  5422+                          
  5423+                          	global	_SPBRG
  5424+                          	global	_SPBRG
  5425+ 0000                     	_SPBRG	set	0x99
  5426+                          
  5427+                          	global	_SSPADD
  5428+                          	global	_SSPADD
  5429+ 0000                     	_SSPADD	set	0x93
  5430+                          
  5431+                          	global	_SSPBUF
  5432+                          	global	_SSPBUF
  5433+ 0000                     	_SSPBUF	set	0x13
  5434+                          
  5435+                          	global	_SSPCON
  5436+                          	global	_SSPCON
  5437+ 0000                     	_SSPCON	set	0x14
  5438+                          
  5439+                          	global	_SSPCON2
  5440+                          	global	_SSPCON2
  5441+ 0000                     	_SSPCON2	set	0x91
  5442+                          
  5443+                          	global	_SSPSTAT
  5444+                          	global	_SSPSTAT
  5445+ 0000                     	_SSPSTAT	set	0x94
  5446+                          
  5447+                          	global	_STATUS
  5448+                          	global	_STATUS
  5449+ 0000                     	_STATUS	set	0x3
  5450+                          
  5451+                          	global	_T1CON
  5452+                          	global	_T1CON
  5453+ 0000                     	_T1CON	set	0x10
  5454+                          
  5455+                          	global	_T2CON
  5456+                          	global	_T2CON
  5457+ 0000                     	_T2CON	set	0x12
  5458+                          
  5459+                          	global	_TMR0
  5460+                          	global	_TMR0
  5461+ 0000                     	_TMR0	set	0x1
  5462+                          
  5463+                          	global	_TMR1H
  5464+                          	global	_TMR1H
  5465+ 0000                     	_TMR1H	set	0xF
  5466+                          
  5467+                          	global	_TMR1L
  5468+                          	global	_TMR1L
  5469+ 0000                     	_TMR1L	set	0xE
  5470+                          
  5471+                          	global	_TMR2
  5472+                          	global	_TMR2
  5473+ 0000                     	_TMR2	set	0x11
  5474+                          
  5475+                          	global	_TRISA
  5476+                          	global	_TRISA
  5477+ 0000                     	_TRISA	set	0x85
  5478+                          
  5479+                          	global	_TRISB
  5480+ 0000                     	_TRISB	set	0x86
  5481+                          
  5482+                          	global	_TRISC
  5483+                          	global	_TRISC
  5484+ 0000                     	_TRISC	set	0x87
  5485+                          
  5486+                          	global	_TRISD
  5487+ 0000                     	_TRISD	set	0x88
  5488+                          
  5489+                          	global	_TRISE
  5490+ 0000                     	_TRISE	set	0x89
  5491+                          
  5492+                          	global	_TXREG
  5493+                          	global	_TXREG
  5494+ 0000                     	_TXREG	set	0x19
  5495+                          
  5496+                          	global	_TXSTA
  5497+                          	global	_TXSTA
  5498+ 0000                     	_TXSTA	set	0x98
  5499+                          
  5500+                          	global	_ACKDT
  5501+                          	global	_ACKDT
  5502+ 0000                     	_ACKDT	set	0x48D	;byte address: 0x91
  5503+                          
  5504+                          	global	_ACKEN
  5505+                          	global	_ACKEN
  5506+ 0000                     	_ACKEN	set	0x48C	;byte address: 0x91
  5507+                          
  5508+                          	global	_ACKSTAT
  5509+                          	global	_ACKSTAT
  5510+ 0000                     	_ACKSTAT	set	0x48E	;byte address: 0x91
  5511+                          
  5512+                          	global	_ADCS0
  5513+ 0000                     	_ADCS0	set	0xFE	;byte address: 0x1F
  5514+                          
  5515+                          	global	_ADCS1
  5516+ 0000                     	_ADCS1	set	0xFF	;byte address: 0x1F
  5517+                          
  5518+                          	global	_ADCS2
  5519+ 0000                     	_ADCS2	set	0x4FE	;byte address: 0x9F
  5520+                          
  5521+                          	global	_ADDEN
  5522+                          	global	_ADDEN
  5523+ 0000                     	_ADDEN	set	0xC3	;byte address: 0x18
  5524+                          
  5525+                          	global	_ADFM
  5526+ 0000                     	_ADFM	set	0x4FF	;byte address: 0x9F
  5527+                          
  5528+                          	global	_ADGO
  5529+                          	global	_ADGO
  5530+ 0000                     	_ADGO	set	0xFA	;byte address: 0x1F
  5531+                          
  5532+                          	global	_ADIE
  5533+                          	global	_ADIE
  5534+ 0000                     	_ADIE	set	0x466	;byte address: 0x8C
  5535+                          
  5536+                          	global	_ADIF
  5537+                          	global	_ADIF
  5538+ 0000                     	_ADIF	set	0x66	;byte address: 0xC
  5539+                          
  5540+                          	global	_ADON
  5541+ 0000                     	_ADON	set	0xF8	;byte address: 0x1F
  5542+                          
  5543+                          	global	_BCLIE
  5544+                          	global	_BCLIE
  5545+ 0000                     	_BCLIE	set	0x46B	;byte address: 0x8D
  5546+                          
  5547+                          	global	_BCLIF
  5548+                          	global	_BCLIF
  5549+ 0000                     	_BCLIF	set	0x6B	;byte address: 0xD
  5550+                          
  5551+                          	global	_BF
  5552+                          	global	_BF
  5553+ 0000                     	_BF	set	0x4A0	;byte address: 0x94
  5554+                          
  5555+                          	global	_BOR
  5556+                          	global	_BOR
  5557+ 0000                     	_BOR	set	0x470	;byte address: 0x8E
  5558+                          
  5559+                          	global	_BRGH
  5560+                          	global	_BRGH
  5561+ 0000                     	_BRGH	set	0x4C2	;byte address: 0x98
  5562+                          
  5563+                          	global	_C1INV
  5564+                          	global	_C1INV
  5565+ 0000                     	_C1INV	set	0x4E4	;byte address: 0x9C
  5566+                          
  5567+                          	global	_C1OUT
  5568+                          	global	_C1OUT
  5569+ 0000                     	_C1OUT	set	0x4E6	;byte address: 0x9C
  5570+                          
  5571+                          	global	_C2INV
  5572+                          	global	_C2INV
  5573+ 0000                     	_C2INV	set	0x4E5	;byte address: 0x9C
  5574+                          
  5575+                          	global	_C2OUT
  5576+                          	global	_C2OUT
  5577+ 0000                     	_C2OUT	set	0x4E7	;byte address: 0x9C
  5578+                          
  5579+                          	global	_CARRY
  5580+                          	global	_CARRY
  5581+ 0000                     	_CARRY	set	0x18	;byte address: 0x3
  5582+                          
  5583+                          	global	_CCP1IE
  5584+                          	global	_CCP1IE
  5585+ 0000                     	_CCP1IE	set	0x462	;byte address: 0x8C
  5586+                          
  5587+                          	global	_CCP1IF
  5588+                          	global	_CCP1IF
  5589+ 0000                     	_CCP1IF	set	0x62	;byte address: 0xC
  5590+                          
  5591+                          	global	_CCP1M0
  5592+                          	global	_CCP1M0
  5593+ 0000                     	_CCP1M0	set	0xB8	;byte address: 0x17
  5594+                          
  5595+                          	global	_CCP1M1
  5596+                          	global	_CCP1M1
  5597+ 0000                     	_CCP1M1	set	0xB9	;byte address: 0x17
  5598+                          
  5599+                          	global	_CCP1M2
  5600+                          	global	_CCP1M2
  5601+ 0000                     	_CCP1M2	set	0xBA	;byte address: 0x17
  5602+                          
  5603+                          	global	_CCP1M3
  5604+                          	global	_CCP1M3
  5605+ 0000                     	_CCP1M3	set	0xBB	;byte address: 0x17
  5606+                          
  5607+                          	global	_CCP1X
  5608+                          	global	_CCP1X
  5609+ 0000                     	_CCP1X	set	0xBD	;byte address: 0x17
  5610+                          
  5611+                          	global	_CCP1Y
  5612+                          	global	_CCP1Y
  5613+ 0000                     	_CCP1Y	set	0xBC	;byte address: 0x17
  5614+                          
  5615+                          	global	_CCP2IE
  5616+                          	global	_CCP2IE
  5617+ 0000                     	_CCP2IE	set	0x468	;byte address: 0x8D
  5618+                          
  5619+                          	global	_CCP2IF
  5620+                          	global	_CCP2IF
  5621+ 0000                     	_CCP2IF	set	0x68	;byte address: 0xD
  5622+                          
  5623+                          	global	_CCP2M0
  5624+                          	global	_CCP2M0
  5625+ 0000                     	_CCP2M0	set	0xE8	;byte address: 0x1D
  5626+                          
  5627+                          	global	_CCP2M1
  5628+                          	global	_CCP2M1
  5629+ 0000                     	_CCP2M1	set	0xE9	;byte address: 0x1D
  5630+                          
  5631+                          	global	_CCP2M2
  5632+                          	global	_CCP2M2
  5633+ 0000                     	_CCP2M2	set	0xEA	;byte address: 0x1D
  5634+                          
  5635+                          	global	_CCP2M3
  5636+                          	global	_CCP2M3
  5637+ 0000                     	_CCP2M3	set	0xEB	;byte address: 0x1D
  5638+                          
  5639+                          	global	_CCP2X
  5640+                          	global	_CCP2X
  5641+ 0000                     	_CCP2X	set	0xED	;byte address: 0x1D
  5642+                          
  5643+                          	global	_CCP2Y
  5644+                          	global	_CCP2Y
  5645+ 0000                     	_CCP2Y	set	0xEC	;byte address: 0x1D
  5646+                          
  5647+                          	global	_CHS0
  5648+                          	global	_CHS0
  5649+ 0000                     	_CHS0	set	0xFB	;byte address: 0x1F
  5650+                          
  5651+                          	global	_CHS1
  5652+                          	global	_CHS1
  5653+ 0000                     	_CHS1	set	0xFC	;byte address: 0x1F
  5654+                          
  5655+                          	global	_CHS2
  5656+                          	global	_CHS2
  5657+ 0000                     	_CHS2	set	0xFD	;byte address: 0x1F
  5658+                          
  5659+                          	global	_CIS
  5660+                          	global	_CIS
  5661+ 0000                     	_CIS	set	0x4E3	;byte address: 0x9C
  5662+                          
  5663+                          	global	_CKE
  5664+                          	global	_CKE
  5665+ 0000                     	_CKE	set	0x4A6	;byte address: 0x94
  5666+                          
  5667+                          	global	_CKP
  5668+                          	global	_CKP
  5669+ 0000                     	_CKP	set	0xA4	;byte address: 0x14
  5670+                          
  5671+                          	global	_CM0
  5672+                          	global	_CM0
  5673+ 0000                     	_CM0	set	0x4E0	;byte address: 0x9C
  5674+                          
  5675+                          	global	_CM1
  5676+                          	global	_CM1
  5677+ 0000                     	_CM1	set	0x4E1	;byte address: 0x9C
  5678+                          
  5679+                          	global	_CM2
  5680+                          	global	_CM2
  5681+ 0000                     	_CM2	set	0x4E2	;byte address: 0x9C
  5682+                          
  5683+                          	global	_CMIE
  5684+                          	global	_CMIE
  5685+ 0000                     	_CMIE	set	0x46E	;byte address: 0x8D
  5686+                          
  5687+                          	global	_CMIF
  5688+                          	global	_CMIF
  5689+ 0000                     	_CMIF	set	0x6E	;byte address: 0xD
  5690+                          
  5691+                          	global	_CREN
  5692+                          	global	_CREN
  5693+ 0000                     	_CREN	set	0xC4	;byte address: 0x18
  5694+                          
  5695+                          	global	_CSRC
  5696+                          	global	_CSRC
  5697+ 0000                     	_CSRC	set	0x4C7	;byte address: 0x98
  5698+                          
  5699+                          	global	_CVR0
  5700+                          	global	_CVR0
  5701+ 0000                     	_CVR0	set	0x4E8	;byte address: 0x9D
  5702+                          
  5703+                          	global	_CVR1
  5704+                          	global	_CVR1
  5705+ 0000                     	_CVR1	set	0x4E9	;byte address: 0x9D
  5706+                          
  5707+                          	global	_CVR2
  5708+                          	global	_CVR2
  5709+ 0000                     	_CVR2	set	0x4EA	;byte address: 0x9D
  5710+                          
  5711+                          	global	_CVR3
  5712+                          	global	_CVR3
  5713+ 0000                     	_CVR3	set	0x4EB	;byte address: 0x9D
  5714+                          
  5715+                          	global	_CVREN
  5716+                          	global	_CVREN
  5717+ 0000                     	_CVREN	set	0x4EF	;byte address: 0x9D
  5718+                          
  5719+                          	global	_CVROE
  5720+                          	global	_CVROE
  5721+ 0000                     	_CVROE	set	0x4EE	;byte address: 0x9D
  5722+                          
  5723+                          	global	_CVRR
  5724+                          	global	_CVRR
  5725+ 0000                     	_CVRR	set	0x4ED	;byte address: 0x9D
  5726+                          
  5727+                          	global	_DA
  5728+                          	global	_DA
  5729+ 0000                     	_DA	set	0x4A5	;byte address: 0x94
  5730+                          
  5731+                          	global	_DC
  5732+                          	global	_DC
  5733+ 0000                     	_DC	set	0x19	;byte address: 0x3
  5734+                          
  5735+                          	global	_EEIE
  5736+                          	global	_EEIE
  5737+ 0000                     	_EEIE	set	0x46C	;byte address: 0x8D
  5738+                          
  5739+                          	global	_EEIF
  5740+                          	global	_EEIF
  5741+ 0000                     	_EEIF	set	0x6C	;byte address: 0xD
  5742+                          
  5743+                          	global	_EEPGD
  5744+                          	global	_EEPGD
  5745+ 0000                     	_EEPGD	set	0xC67	;byte address: 0x18C
  5746+                          
  5747+                          	global	_FERR
  5748+                          	global	_FERR
  5749+ 0000                     	_FERR	set	0xC2	;byte address: 0x18
  5750+                          
  5751+                          	global	_GCEN
  5752+                          	global	_GCEN
  5753+ 0000                     	_GCEN	set	0x48F	;byte address: 0x91
  5754+                          
  5755+                          	global	_GIE
  5756+                          	global	_GIE
  5757+ 0000                     	_GIE	set	0x5F	;byte address: 0xB
  5758+                          
  5759+                          	global	_GODONE
  5760+                          	global	_GODONE
  5761+ 0000                     	_GODONE	set	0xFA	;byte address: 0x1F
  5762+                          
  5763+                          	global	_IBF
  5764+                          	global	_IBF
  5765+ 0000                     	_IBF	set	0x44F	;byte address: 0x89
  5766+                          
  5767+                          	global	_IBOV
  5768+                          	global	_IBOV
  5769+ 0000                     	_IBOV	set	0x44D	;byte address: 0x89
  5770+                          
  5771+                          	global	_INTE
  5772+                          	global	_INTE
  5773+ 0000                     	_INTE	set	0x5C	;byte address: 0xB
  5774+                          
  5775+                          	global	_INTEDG
  5776+                          	global	_INTEDG
  5777+ 0000                     	_INTEDG	set	0x40E	;byte address: 0x81
  5778+                          
  5779+                          	global	_INTF
  5780+                          	global	_INTF
  5781+ 0000                     	_INTF	set	0x59	;byte address: 0xB
  5782+                          
  5783+                          	global	_IRP
  5784+                          	global	_IRP
  5785+ 0000                     	_IRP	set	0x1F	;byte address: 0x3
  5786+                          
  5787+                          	global	_OBF
  5788+                          	global	_OBF
  5789+ 0000                     	_OBF	set	0x44E	;byte address: 0x89
  5790+                          
  5791+                          	global	_OERR
  5792+                          	global	_OERR
  5793+ 0000                     	_OERR	set	0xC1	;byte address: 0x18
  5794+                          
  5795+                          	global	_PCFG0
  5796+ 0000                     	_PCFG0	set	0x4F8	;byte address: 0x9F
  5797+                          
  5798+                          	global	_PCFG1
  5799+ 0000                     	_PCFG1	set	0x4F9	;byte address: 0x9F
  5800+                          
  5801+                          	global	_PCFG2
  5802+ 0000                     	_PCFG2	set	0x4FA	;byte address: 0x9F
  5803+                          
  5804+                          	global	_PCFG3
  5805+ 0000                     	_PCFG3	set	0x4FB	;byte address: 0x9F
  5806+                          
  5807+                          	global	_PD
  5808+                          	global	_PD
  5809+ 0000                     	_PD	set	0x1B	;byte address: 0x3
  5810+                          
  5811+                          	global	_PEIE
  5812+                          	global	_PEIE
  5813+ 0000                     	_PEIE	set	0x5E	;byte address: 0xB
  5814+                          
  5815+                          	global	_PEN
  5816+                          	global	_PEN
  5817+ 0000                     	_PEN	set	0x48A	;byte address: 0x91
  5818+                          
  5819+                          	global	_POR
  5820+                          	global	_POR
  5821+ 0000                     	_POR	set	0x471	;byte address: 0x8E
  5822+                          
  5823+                          	global	_PS0
  5824+                          	global	_PS0
  5825+ 0000                     	_PS0	set	0x408	;byte address: 0x81
  5826+                          
  5827+                          	global	_PS1
  5828+                          	global	_PS1
  5829+ 0000                     	_PS1	set	0x409	;byte address: 0x81
  5830+                          
  5831+                          	global	_PS2
  5832+                          	global	_PS2
  5833+ 0000                     	_PS2	set	0x40A	;byte address: 0x81
  5834+                          
  5835+                          	global	_PSA
  5836+                          	global	_PSA
  5837+ 0000                     	_PSA	set	0x40B	;byte address: 0x81
  5838+                          
  5839+                          	global	_PSPIE
  5840+                          	global	_PSPIE
  5841+ 0000                     	_PSPIE	set	0x467	;byte address: 0x8C
  5842+                          
  5843+                          	global	_PSPIF
  5844+                          	global	_PSPIF
  5845+ 0000                     	_PSPIF	set	0x67	;byte address: 0xC
  5846+                          
  5847+                          	global	_PSPMODE
  5848+                          	global	_PSPMODE
  5849+ 0000                     	_PSPMODE	set	0x44C	;byte address: 0x89
  5850+                          
  5851+                          	global	_RA0
  5852+                          	global	_RA0
  5853+ 0000                     	_RA0	set	0x28	;byte address: 0x5
  5854+                          
  5855+                          	global	_RA1
  5856+                          	global	_RA1
  5857+ 0000                     	_RA1	set	0x29	;byte address: 0x5
  5858+                          
  5859+                          	global	_RA2
  5860+                          	global	_RA2
  5861+ 0000                     	_RA2	set	0x2A	;byte address: 0x5
  5862+                          
  5863+                          	global	_RA3
  5864+                          	global	_RA3
  5865+ 0000                     	_RA3	set	0x2B	;byte address: 0x5
  5866+                          
  5867+                          	global	_RA4
  5868+                          	global	_RA4
  5869+ 0000                     	_RA4	set	0x2C	;byte address: 0x5
  5870+                          
  5871+                          	global	_RA5
  5872+                          	global	_RA5
  5873+ 0000                     	_RA5	set	0x2D	;byte address: 0x5
  5874+                          
  5875+                          	global	_RB0
  5876+                          	global	_RB0
  5877+ 0000                     	_RB0	set	0x30	;byte address: 0x6
  5878+                          
  5879+                          	global	_RB1
  5880+ 0000                     	_RB1	set	0x31	;byte address: 0x6
  5881+                          
  5882+                          	global	_RB2
  5883+                          	global	_RB2
  5884+ 0000                     	_RB2	set	0x32	;byte address: 0x6
  5885+                          
  5886+                          	global	_RB3
  5887+                          	global	_RB3
  5888+ 0000                     	_RB3	set	0x33	;byte address: 0x6
  5889+                          
  5890+                          	global	_RB4
  5891+                          	global	_RB4
  5892+ 0000                     	_RB4	set	0x34	;byte address: 0x6
  5893+                          
  5894+                          	global	_RB5
  5895+                          	global	_RB5
  5896+ 0000                     	_RB5	set	0x35	;byte address: 0x6
  5897+                          
  5898+                          	global	_RB6
  5899+                          	global	_RB6
  5900+ 0000                     	_RB6	set	0x36	;byte address: 0x6
  5901+                          
  5902+                          	global	_RB7
  5903+                          	global	_RB7
  5904+ 0000                     	_RB7	set	0x37	;byte address: 0x6
  5905+                          
  5906+                          	global	_RBIE
  5907+                          	global	_RBIE
  5908+ 0000                     	_RBIE	set	0x5B	;byte address: 0xB
  5909+                          
  5910+                          	global	_RBIF
  5911+                          	global	_RBIF
  5912+ 0000                     	_RBIF	set	0x58	;byte address: 0xB
  5913+                          
  5914+                          	global	_RBPU
  5915+                          	global	_RBPU
  5916+ 0000                     	_RBPU	set	0x40F	;byte address: 0x81
  5917+                          
  5918+                          	global	_RC0
  5919+                          	global	_RC0
  5920+ 0000                     	_RC0	set	0x38	;byte address: 0x7
  5921+                          
  5922+                          	global	_RC1
  5923+                          	global	_RC1
  5924+ 0000                     	_RC1	set	0x39	;byte address: 0x7
  5925+                          
  5926+                          	global	_RC2
  5927+                          	global	_RC2
  5928+ 0000                     	_RC2	set	0x3A	;byte address: 0x7
  5929+                          
  5930+                          	global	_RC3
  5931+                          	global	_RC3
  5932+ 0000                     	_RC3	set	0x3B	;byte address: 0x7
  5933+                          
  5934+                          	global	_RC4
  5935+                          	global	_RC4
  5936+ 0000                     	_RC4	set	0x3C	;byte address: 0x7
  5937+                          
  5938+                          	global	_RC5
  5939+                          	global	_RC5
  5940+ 0000                     	_RC5	set	0x3D	;byte address: 0x7
  5941+                          
  5942+                          	global	_RC6
  5943+                          	global	_RC6
  5944+ 0000                     	_RC6	set	0x3E	;byte address: 0x7
  5945+                          
  5946+                          	global	_RC7
  5947+                          	global	_RC7
  5948+ 0000                     	_RC7	set	0x3F	;byte address: 0x7
  5949+                          
  5950+                          	global	_RCEN
  5951+                          	global	_RCEN
  5952+ 0000                     	_RCEN	set	0x48B	;byte address: 0x91
  5953+                          
  5954+                          	global	_RCIE
  5955+                          	global	_RCIE
  5956+ 0000                     	_RCIE	set	0x465	;byte address: 0x8C
  5957+                          
  5958+                          	global	_RCIF
  5959+                          	global	_RCIF
  5960+ 0000                     	_RCIF	set	0x65	;byte address: 0xC
  5961+                          
  5962+                          	global	_RD
  5963+                          	global	_RD
  5964+ 0000                     	_RD	set	0xC60	;byte address: 0x18C
  5965+                          
  5966+                          	global	_RD0
  5967+                          	global	_RD0
  5968+ 0000                     	_RD0	set	0x40	;byte address: 0x8
  5969+                          
  5970+                          	global	_RD1
  5971+                          	global	_RD1
  5972+ 0000                     	_RD1	set	0x41	;byte address: 0x8
  5973+                          
  5974+                          	global	_RD2
  5975+ 0000                     	_RD2	set	0x42	;byte address: 0x8
  5976+                          
  5977+                          	global	_RD3
  5978+ 0000                     	_RD3	set	0x43	;byte address: 0x8
  5979+                          
  5980+                          	global	_RD4
  5981+                          	global	_RD4
  5982+ 0000                     	_RD4	set	0x44	;byte address: 0x8
  5983+                          
  5984+                          	global	_RD5
  5985+                          	global	_RD5
  5986+ 0000                     	_RD5	set	0x45	;byte address: 0x8
  5987+                          
  5988+                          	global	_RD6
  5989+                          	global	_RD6
  5990+ 0000                     	_RD6	set	0x46	;byte address: 0x8
  5991+                          
  5992+                          	global	_RD7
  5993+                          	global	_RD7
  5994+ 0000                     	_RD7	set	0x47	;byte address: 0x8
  5995+                          
  5996+                          	global	_RE0
  5997+                          	global	_RE0
  5998+ 0000                     	_RE0	set	0x48	;byte address: 0x9
  5999+                          
  6000+                          	global	_RE1
  6001+                          	global	_RE1
  6002+ 0000                     	_RE1	set	0x49	;byte address: 0x9
  6003+                          
  6004+                          	global	_RE2
  6005+                          	global	_RE2
  6006+ 0000                     	_RE2	set	0x4A	;byte address: 0x9
  6007+                          
  6008+                          	global	_RP0
  6009+                          	global	_RP0
  6010+ 0000                     	_RP0	set	0x1D	;byte address: 0x3
  6011+                          
  6012+                          	global	_RP1
  6013+                          	global	_RP1
  6014+ 0000                     	_RP1	set	0x1E	;byte address: 0x3
  6015                           
  6016                           	global	_RSEN
  6017                           	global	_RSEN
  6018  0000                     	_RSEN	set	0x489	;byte address: 0x91
  6019                           
  6020                           	global	_RW
  6021                           	global	_RW
  6022  0000                     	_RW	set	0x4A2	;byte address: 0x94
  6023                           
  6024                           	global	_RX9
  6025                           	global	_RX9
  6026  0000                     	_RX9	set	0xC6	;byte address: 0x18
  6027                           
  6028                           	global	_RX9D
  6029                           	global	_RX9D
  6030  0000                     	_RX9D	set	0xC0	;byte address: 0x18
  6031                           
  6032                           	global	_SEN
  6033                           	global	_SEN
  6034  0000                     	_SEN	set	0x488	;byte address: 0x91
  6035                           
  6036                           	global	_SMP
  6037                           	global	_SMP
  6038  0000                     	_SMP	set	0x4A7	;byte address: 0x94
  6039                           
  6040                           	global	_SPEN
  6041                           	global	_SPEN
  6042  0000                     	_SPEN	set	0xC7	;byte address: 0x18
  6043                           
  6044                           	global	_SREN
  6045                           	global	_SREN
  6046  0000                     	_SREN	set	0xC5	;byte address: 0x18
  6047                           
  6048                           	global	_SSPEN
  6049                           	global	_SSPEN
  6050  0000                     	_SSPEN	set	0xA5	;byte address: 0x14
  6051                           
  6052                           	global	_SSPIE
  6053                           	global	_SSPIE
  6054  0000                     	_SSPIE	set	0x463	;byte address: 0x8C
  6055                           
  6056                           	global	_SSPIF
  6057                           	global	_SSPIF
  6058  0000                     	_SSPIF	set	0x63	;byte address: 0xC
  6059                           
  6060                           	global	_SSPM0
  6061                           	global	_SSPM0
  6062  0000                     	_SSPM0	set	0xA0	;byte address: 0x14
  6063                           
  6064                           	global	_SSPM1
  6065                           	global	_SSPM1
  6066  0000                     	_SSPM1	set	0xA1	;byte address: 0x14
  6067                           
  6068                           	global	_SSPM2
  6069                           	global	_SSPM2
  6070  0000                     	_SSPM2	set	0xA2	;byte address: 0x14
  6071                           
  6072                           	global	_SSPM3
  6073                           	global	_SSPM3
  6074  0000                     	_SSPM3	set	0xA3	;byte address: 0x14
  6075                           
  6076                           	global	_SSPOV
  6077                           	global	_SSPOV
  6078  0000                     	_SSPOV	set	0xA6	;byte address: 0x14
  6079                           
  6080                           	global	_START
  6081                           	global	_START
  6082  0000                     	_START	set	0x4A3	;byte address: 0x94
  6083                           
  6084                           	global	_STOP
  6085                           	global	_STOP
  6086  0000                     	_STOP	set	0x4A4	;byte address: 0x94
  6087                           
  6088                           	global	_SYNC
  6089                           	global	_SYNC
  6090  0000                     	_SYNC	set	0x4C4	;byte address: 0x98
  6091                           
  6092                           	global	_T0CS
  6093                           	global	_T0CS
  6094  0000                     	_T0CS	set	0x40D	;byte address: 0x81
  6095                           
  6096                           	global	_T0IE
  6097                           	global	_T0IE
  6098  0000                     	_T0IE	set	0x5D	;byte address: 0xB
  6099                           
  6100                           	global	_T0IF
  6101                           	global	_T0IF
  6102  0000                     	_T0IF	set	0x5A	;byte address: 0xB
  6103                           
  6104                           	global	_T0SE
  6105                           	global	_T0SE
  6106  0000                     	_T0SE	set	0x40C	;byte address: 0x81
  6107                           
  6108                           	global	_T1CKPS0
  6109                           	global	_T1CKPS0
  6110  0000                     	_T1CKPS0	set	0x84	;byte address: 0x10
  6111                           
  6112                           	global	_T1CKPS1
  6113                           	global	_T1CKPS1
  6114  0000                     	_T1CKPS1	set	0x85	;byte address: 0x10
  6115                           
  6116                           	global	_T1OSCEN
  6117                           	global	_T1OSCEN
  6118  0000                     	_T1OSCEN	set	0x83	;byte address: 0x10
  6119                           
  6120                           	global	_T1SYNC
  6121                           	global	_T1SYNC
  6122  0000                     	_T1SYNC	set	0x82	;byte address: 0x10
  6123                           
  6124                           	global	_T2CKPS0
  6125                           	global	_T2CKPS0
  6126  0000                     	_T2CKPS0	set	0x90	;byte address: 0x12
  6127                           
  6128                           	global	_T2CKPS1
  6129                           	global	_T2CKPS1
  6130  0000                     	_T2CKPS1	set	0x91	;byte address: 0x12
  6131                           
  6132                           	global	_TMR0IE
  6133                           	global	_TMR0IE
  6134  0000                     	_TMR0IE	set	0x5D	;byte address: 0xB
  6135                           
  6136                           	global	_TMR0IF
  6137                           	global	_TMR0IF
  6138  0000                     	_TMR0IF	set	0x5A	;byte address: 0xB
  6139                           
  6140                           	global	_TMR1CS
  6141                           	global	_TMR1CS
  6142  0000                     	_TMR1CS	set	0x81	;byte address: 0x10
  6143                           
  6144                           	global	_TMR1IE
  6145                           	global	_TMR1IE
  6146  0000                     	_TMR1IE	set	0x460	;byte address: 0x8C
  6147                           
  6148                           	global	_TMR1IF
  6149                           	global	_TMR1IF
  6150  0000                     	_TMR1IF	set	0x60	;byte address: 0xC
  6151                           
  6152                           	global	_TMR1ON
  6153                           	global	_TMR1ON
  6154  0000                     	_TMR1ON	set	0x80	;byte address: 0x10
  6155                           
  6156                           	global	_TMR2IE
  6157                           	global	_TMR2IE
  6158  0000                     	_TMR2IE	set	0x461	;byte address: 0x8C
  6159                           
  6160                           	global	_TMR2IF
  6161                           	global	_TMR2IF
  6162  0000                     	_TMR2IF	set	0x61	;byte address: 0xC
  6163                           
  6164                           	global	_TMR2ON
  6165                           	global	_TMR2ON
  6166  0000                     	_TMR2ON	set	0x92	;byte address: 0x12
  6167                           
  6168                           	global	_TO
  6169                           	global	_TO
  6170  0000                     	_TO	set	0x1C	;byte address: 0x3
  6171                           
  6172                           	global	_TOUTPS0
  6173                           	global	_TOUTPS0
  6174  0000                     	_TOUTPS0	set	0x93	;byte address: 0x12
  6175                           
  6176                           	global	_TOUTPS1
  6177                           	global	_TOUTPS1
  6178  0000                     	_TOUTPS1	set	0x94	;byte address: 0x12
  6179                           
  6180                           	global	_TOUTPS2
  6181                           	global	_TOUTPS2
  6182  0000                     	_TOUTPS2	set	0x95	;byte address: 0x12
  6183                           
  6184                           	global	_TOUTPS3
  6185                           	global	_TOUTPS3
  6186  0000                     	_TOUTPS3	set	0x96	;byte address: 0x12
  6187                           
  6188                           	global	_TRISA0
  6189                           	global	_TRISA0
  6190  0000                     	_TRISA0	set	0x428	;byte address: 0x85
  6191                           
  6192                           	global	_TRISA1
  6193                           	global	_TRISA1
  6194  0000                     	_TRISA1	set	0x429	;byte address: 0x85
  6195                           
  6196                           	global	_TRISA2
  6197                           	global	_TRISA2
  6198  0000                     	_TRISA2	set	0x42A	;byte address: 0x85
  6199                           
  6200                           	global	_TRISA3
  6201                           	global	_TRISA3
  6202  0000                     	_TRISA3	set	0x42B	;byte address: 0x85
  6203                           
  6204                           	global	_TRISA4
  6205                           	global	_TRISA4
  6206  0000                     	_TRISA4	set	0x42C	;byte address: 0x85
  6207                           
  6208                           	global	_TRISA5
  6209                           	global	_TRISA5
  6210  0000                     	_TRISA5	set	0x42D	;byte address: 0x85
  6211                           
  6212                           	global	_TRISB0
  6213                           	global	_TRISB0
  6214  0000                     	_TRISB0	set	0x430	;byte address: 0x86
  6215                           
  6216                           	global	_TRISB1
  6217                           	global	_TRISB1
  6218  0000                     	_TRISB1	set	0x431	;byte address: 0x86
  6219                           
  6220                           	global	_TRISB2
  6221                           	global	_TRISB2
  6222  0000                     	_TRISB2	set	0x432	;byte address: 0x86
  6223                           
  6224                           	global	_TRISB3
  6225                           	global	_TRISB3
  6226  0000                     	_TRISB3	set	0x433	;byte address: 0x86
  6227                           
  6228                           	global	_TRISB4
  6229                           	global	_TRISB4
  6230  0000                     	_TRISB4	set	0x434	;byte address: 0x86
  6231                           
  6232                           	global	_TRISB5
  6233                           	global	_TRISB5
  6234  0000                     	_TRISB5	set	0x435	;byte address: 0x86
  6235                           
  6236                           	global	_TRISB6
  6237                           	global	_TRISB6
  6238  0000                     	_TRISB6	set	0x436	;byte address: 0x86
  6239                           
  6240                           	global	_TRISB7
  6241                           	global	_TRISB7
  6242  0000                     	_TRISB7	set	0x437	;byte address: 0x86
  6243                           
  6244                           	global	_TRISC0
  6245                           	global	_TRISC0
  6246  0000                     	_TRISC0	set	0x438	;byte address: 0x87
  6247                           
  6248                           	global	_TRISC1
  6249                           	global	_TRISC1
  6250  0000                     	_TRISC1	set	0x439	;byte address: 0x87
  6251                           
  6252                           	global	_TRISC2
  6253                           	global	_TRISC2
  6254  0000                     	_TRISC2	set	0x43A	;byte address: 0x87
  6255                           
  6256                           	global	_TRISC3
  6257                           	global	_TRISC3
  6258  0000                     	_TRISC3	set	0x43B	;byte address: 0x87
  6259                           
  6260                           	global	_TRISC4
  6261                           	global	_TRISC4
  6262  0000                     	_TRISC4	set	0x43C	;byte address: 0x87
  6263                           
  6264                           	global	_TRISC5
  6265                           	global	_TRISC5
  6266  0000                     	_TRISC5	set	0x43D	;byte address: 0x87
  6267                           
  6268                           	global	_TRISC6
  6269                           	global	_TRISC6
  6270  0000                     	_TRISC6	set	0x43E	;byte address: 0x87
  6271                           
  6272                           	global	_TRISC7
  6273                           	global	_TRISC7
  6274  0000                     	_TRISC7	set	0x43F	;byte address: 0x87
  6275                           
  6276                           	global	_TRISD0
  6277                           	global	_TRISD0
  6278  0000                     	_TRISD0	set	0x440	;byte address: 0x88
  6279                           
  6280                           	global	_TRISD1
  6281                           	global	_TRISD1
  6282  0000                     	_TRISD1	set	0x441	;byte address: 0x88
  6283                           
  6284                           	global	_TRISD2
  6285                           	global	_TRISD2
  6286  0000                     	_TRISD2	set	0x442	;byte address: 0x88
  6287                           
  6288                           	global	_TRISD3
  6289                           	global	_TRISD3
  6290  0000                     	_TRISD3	set	0x443	;byte address: 0x88
  6291                           
  6292                           	global	_TRISD4
  6293                           	global	_TRISD4
  6294  0000                     	_TRISD4	set	0x444	;byte address: 0x88
  6295                           
  6296                           	global	_TRISD5
  6297                           	global	_TRISD5
  6298  0000                     	_TRISD5	set	0x445	;byte address: 0x88
  6299                           
  6300                           	global	_TRISD6
  6301                           	global	_TRISD6
  6302  0000                     	_TRISD6	set	0x446	;byte address: 0x88
  6303                           
  6304                           	global	_TRISD7
  6305                           	global	_TRISD7
  6306  0000                     	_TRISD7	set	0x447	;byte address: 0x88
  6307                           
  6308                           	global	_TRISE0
  6309                           	global	_TRISE0
  6310  0000                     	_TRISE0	set	0x448	;byte address: 0x89
  6311                           
  6312                           	global	_TRISE1
  6313                           	global	_TRISE1
  6314  0000                     	_TRISE1	set	0x449	;byte address: 0x89
  6315                           
  6316                           	global	_TRISE2
  6317                           	global	_TRISE2
  6318  0000                     	_TRISE2	set	0x44A	;byte address: 0x89
  6319                           
  6320                           	global	_TRMT
  6321                           	global	_TRMT
  6322  0000                     	_TRMT	set	0x4C1	;byte address: 0x98
  6323                           
  6324                           	global	_TX9
  6325                           	global	_TX9
  6326  0000                     	_TX9	set	0x4C6	;byte address: 0x98
  6327                           
  6328                           	global	_TX9D
  6329                           	global	_TX9D
  6330  0000                     	_TX9D	set	0x4C0	;byte address: 0x98
  6331                           
  6332                           	global	_TXEN
  6333                           	global	_TXEN
  6334  0000                     	_TXEN	set	0x4C5	;byte address: 0x98
  6335                           
  6336                           	global	_TXIE
  6337                           	global	_TXIE
  6338  0000                     	_TXIE	set	0x464	;byte address: 0x8C
  6339                           
  6340                           	global	_TXIF
  6341                           	global	_TXIF
  6342  0000                     	_TXIF	set	0x64	;byte address: 0xC
  6343                           
  6344                           	global	_UA
  6345                           	global	_UA
  6346  0000                     	_UA	set	0x4A1	;byte address: 0x94
  6347                           
  6348                           	global	_WCOL
  6349                           	global	_WCOL
  6350  0000                     	_WCOL	set	0xA7	;byte address: 0x14
  6351                           
  6352                           	global	_WR
  6353                           	global	_WR
  6354  0000                     	_WR	set	0xC61	;byte address: 0x18C
  6355                           
  6356                           	global	_WREN
  6357                           	global	_WREN
  6358  0000                     	_WREN	set	0xC62	;byte address: 0x18C
  6359                           
  6360                           	global	_WRERR
  6361                           	global	_WRERR
  6362  0000                     	_WRERR	set	0xC63	;byte address: 0x18C
  6363                           
  6364                           	global	_ZERO
  6365                           	global	_ZERO
  6366  0000                     	_ZERO	set	0x1A	;byte address: 0x3
  6367                           
  6368                           	psect	strings
  6369                           	
  6370  070F                     STR_1:	
  6371  070F  3449               	retlw	73	;'I'
  6372  0710  344E               	retlw	78	;'N'
  6373  0711  3449               	retlw	73	;'I'
  6374  0712  3454               	retlw	84	;'T'
  6375  0713  3449               	retlw	73	;'I'
  6376  0714  3441               	retlw	65	;'A'
  6377  0715  344C               	retlw	76	;'L'
  6378  0716  3449               	retlw	73	;'I'
  6379  0717  345A               	retlw	90	;'Z'
  6380  0718  3449               	retlw	73	;'I'
  6381  0719  344E               	retlw	78	;'N'
  6382  071A  3447               	retlw	71	;'G'
  6383  071B  342E               	retlw	46	;'.'
  6384  071C  342E               	retlw	46	;'.'
  6385  071D  342E               	retlw	46	;'.'
  6386  071E  342E               	retlw	46	;'.'
  6387  071F  3400               	retlw	0
  6388                           	
  6389  0720                     STR_2:	
  6390  0720  3420               	retlw	32	;' '
  6391  0721  3420               	retlw	32	;' '
  6392  0722  3400               	retlw	0
  6393  0000                     STR_3	equ	STR_2+1
  6394                           	PSECT	fnauto0,class=BANK0,space=1
  6395                           	FNCONF	fnauto0,??,?
  6396                           
  6397                           	DABS	1,126,2	;btemp
  6398                           	global	btemp
  6399  0000                     	btemp set 07Eh
  6400                           	global	wtemp0
  6401  0000                     	wtemp0 set btemp
  6402                           	global	wtemp1
  6403  0000                     	wtemp1 set btemp+2
  6404                           	global	ttemp0
  6405  0000                     	ttemp0 set btemp
  6406                           	global	ltemp0
  6407  0000                     	ltemp0 set btemp
  6408                           apbank macro
  6409                           	bcf	status,5
  6410                           	bcf	status,6
  6411  0020                     	endm


HI-TECH Software PICC Macro Assembler V9.65PL1 build 4898 
Symbol Table                                          Sat Jul 28 21:48:35 2012

                _ADCReadData_f 002F                  _ADCReadData_i 0028  
                            l1 0E7F                              l2 0E79  
                            l3 0E68                              l4 0E7F  
                            l5 0E6B                  _ADCReadData_p 0032  
                            l7 0E73                              l8 0E43  
                            l9 07FF                  _ADCReadData_x 0029  
                _ADCReadData_y 002D                  _ADCReadData_z 002B  
                    __Lrdata_0 0000            __end_of_ADCReadData 07F5  
                            pc 0002                      __Lramdata 0000  
            _LCDWriteInteger_c 0036              _LCDWriteInteger_i 0035  
                           l10 0E2A                             l11 00CC  
                           l12 00BF                             _DA 04A5  
                           l21 0F1D                             l13 00AE  
                           _BF 04A0                             l14 00CC  
                           l30 05D7                             _DC 0019  
                           l15 0EF1                             l31 069A  
                           l16 0E66                             l40 0225  
                           l32 0665                             l41 0231  
                           l33 06A7                             l42 0267  
                           l50 0736                             l34 06B4  
                           l43 0232                             l51 07C9  
                           l35 06AA                             l44 0276  
                           l36 06BE                             l60 0088  
                           l45 0281                             l53 0739  
                           l29 06FF                             l37 06D7  
                           l61 00A2                             l46 0277  
                           l38 06FF                             l62 00A2  
                           l39 028B                             l47 028B  
                           l63 0E1F                             l55 073D  
                           l48 0E53                             l49 07F4  
                           l57 0033                             _PD 001B  
                           _RD 0C60                             _UA 04A1  
                           _TO 001C                             _RW 04A2  
                           _WR 0C61                             fsr 0004  
                          l110 04F2                            l120 0532  
                          l112 04F1                  _ADCInitialize 0E44  
                          l130 0562                            l122 0532  
                          l114 04DE                            l106 05A1  
                          l210 0150                            l131 0590  
                          l115 04C8                            l107 0485  
                          l211 0182                            l132 05A0  
                          l124 051F                            l116 04EB  
                          l108 049C                            l140 02A9  
                          l212 0171                            l125 0509  
                          l117 04DF                            l109 0590  
                          l141 02C0                            l213 017D  
                          l205 019A                            l126 052C  
                          l118 04F1                            l230 01B9  
                          l310 0127                            l214 0172  
                          l206 0162                            l150 0378  
                          l127 0520                            l119 0532  
                          l231 01FE                            l311 00DE  
                          l143 02FF                            l215 0182  
                          l151 0350                            l400 0FF3  
                          l128 0532                            l232 01D2  
                          l320 0110                            l312 00E7  
                          l224 0FA5                            l144 02CB  
                          l216 0191                            l152 0362  
                          l401 0483                            l129 054A  
                          l233 01C7                            l321 0126  
                          l313 011D                            l225 0F63  
                          l145 02F1                            l209 0161  
                          l410 043F                            l402 03E1  
                          l234 01D6                            l314 00FC  
                          l250 0E34                            l226 0F7D  
                          l138 0E9C                            l146 0313  
                          l322 0EC6                            l154 03A2  
                          l411 045D                            l403 03F4  
                          l315 00F1                            l227 0F9E  
                          l139 031A                            l323 0EAA  
                          l155 037A                            l147 03BD  
                          l412 046B                            l404 03E2  
                          l228 020E                            l236 01FE  
                          l316 0100                            l156 038C  
                          l148 0349                            l405 0408  
                          l237 01D6                            l229 01AC  
                          l157 03B6                            l406 042A  
                          l238 01F1                            l318 011D  
                          l407 0409                            l239 0207  
                          l319 0100                            l408 043E  
                          l409 044F                            l249 0E35  
                          l274 0F55                            l275 0F2F  
                          l276 0F40                            _CM0 04E0  
                          _CM1 04E1                            _CM2 04E2  
                          l398 0FFF                            l399 0FD2  
                          _CKE 04A6                            _IBF 044F  
                          _CIS 04E3                       ___awtoft 0F56  
                          _CKP 00A4                            _GIE 005F  
                          _BOR 0470                            _RA0 0028  
                     ___ftpack 03BE                            _RA1 0029  
                          _RB0 0030                            _RA2 002A  
                          _RB1 0031                            _RA3 002B  
                          _RC0 0038                            _RB2 0032  
                          _RA4 002C                            _RC1 0039  
                          _RB3 0033                            _RA5 002D  
                          _RD0 0040                            _RC2 003A  
                          _RB4 0034                            _RD1 0041  
                          _RC3 003B                            _RB5 0035  
                          _RE0 0048                            _RD2 0042  
                          _RC4 003C                            _RB6 0036  
                          _RE1 0049                            _RD3 0043  
                          _RC5 003D                            _RB7 0037  
                          _RE2 004A                            _RD4 0044  
                          _RC6 003E                            _RD5 0045  
                          _RC7 003F                            _RD6 0046  
                          _OBF 044E                            _RD7 0047  
                          _FSR 0004                            _PCL 0002  
                          _PS0 0408                            _PR2 0092  
                          _PS1 0409                            _RP0 001D  
                          _PS2 040A                            _PEN 048A  
                          _IRP 001F                            _RP1 001E  
                          _SEN 0488                            _PSA 040B  
                          _POR 0471                            _RX9 00C6  
                          _SMP 04A7                            _TX9 04C6  
                    l600001115 04DE                      l600001116 051F  
                    l600001117 0342                      l600001118 03D5  
                    ?___awtoft 0033                      ?___ftpack 0047  
                          fsr0 0004                            indf 0000  
                     ___lwtoft 0E9D                        ??_Delay 0042  
                    ?___lwtoft 0039                     ??___awtoft 0036  
                 ?_ADCReadData 0024                     ??___ftpack 0048  
                  _Delay_pause 0042                     ??___lwtoft 003C  
        __end_of_ADCInitialize 0E54                           _ADIE 0466  
                         _ADIF 0066                           _ADFM 04FF  
                         _ADGO 00FA                       __tempreg 0020  
                         _ADON 00F8                           _CHS0 00FB  
                         _CHS1 00FC                           _CHS2 00FD  
                         _EEIE 046C                           _EEIF 006C  
                         STR_1 070F                           STR_2 0720  
                         STR_3 0721                           _GCEN 048F  
                         _CMIE 046E                           _CMIF 006E  
                         _BRGH 04C2                           _T0IE 005D  
                         _T0IF 005A                           _CREN 00C4  
                         _T0CS 040D                           _FERR 00C2  
                         u2010 01D6                           u2011 01D5  
                         _IBOV 044D                           _CVR0 04E8  
                         _CVR1 04E9                           u2005 01C8  
                         _CVR2 04EA                           u2030 01E7  
                         _CVR3 04EB                           u2031 01E6  
                         u2200 0121                           u2120 00D6  
                         u3000 0378                           u2025 01D7  
                         u2121 00D5                           u2105 0F4E  
                         u3001 0377                           u2050 01FE  
                         u2130 00E2                           u3010 037E  
                         _T0SE 040C                           _CSRC 04C7  
                         u2051 01FD                           u2035 01E3  
                         u2131 00E1                           u3011 037D  
                         u2060 0202                           u2140 00ED  
                         u3100 0147                           u2045 01F2  
                         u2141 00EC                           u3101 0146  
                         u2117 0F51                           _INDF 0000  
                         u2070 0E32                           u2118 0F53  
                         u2071 0E31                           u2119 0F54  
                         u3200 0408                           u2160 0100  
                         u3120 0161                           u2080 0F22  
                         u3040 03A2                           u3201 0407  
                         u2161 00FF                           u3121 0160  
                         u2081 0F21                           u3041 03A1  
                         u3025 038D                           u2170 010A  
                         u3130 0168                           u2090 0F33  
                         u3050 03B0                           u2171 0109  
                         u2155 00F2                           u3131 0167  
                         u3115 0151                           u2091 0F32  
                         u3035 0395                           u3060 0FB7  
                         u3220 043E                           u2500 06A7  
                         u3221 043D                           u2501 06A6  
                         u3070 0FC6                           u2190 011D  
                         u3150 0182                           u2510 06BE  
                         u3071 0FC5                           u3215 0420  
                         u2191 011C                           u2175 0106  
                         u3151 0181                           u2511 06BD  
                         u3080 0FEF                           u3240 045D  
                         u3160 0186                           u2600 028B  
                         u2520 06CB                           u3081 0FEE  
                         u3065 0FB3                           u3241 045C  
                         u2185 0111                           u3145 0174  
                         u2601 028A                           u2521 06CA  
                         u2610 0E73                           u3250 0461  
                         u3170 03C3                           u3090 0140  
                         u2530 06E6                           u2611 0E72  
                         u3251 0460                           u3235 0444  
                         u3091 013F                           u2531 06E5  
                         u2620 0E7F                           u3260 0476  
                         u3180 03D5                           u2700 02E1  
                         u2540 06F3                           u2621 0E7E  
                         u3181 03D4                           u2701 02E0  
                         u2541 06F2                           u3270 0F5C  
                         u2470 0084                           _PIE1 008C  
                         u3271 0F5B                           u2471 0083  
                         _PIE2 008D                           u2800 04DE  
                         u3280 0F75                           u2560 00CC  
                         u2720 02FF                           u2640 073D  
                         u2480 009F                           u3265 0472  
                         u2801 04DD                           u3281 0F74  
                         u2561 00CB                           u2721 02FE  
                         u2705 02DD                           u2641 073C  
                         u2481 009E                           u3290 0F8B  
                         u2730 030D                           u2570 0218  
                         u2490 05BC                           u2555 0F04  
                         u3195 03EA                           u3291 0F8A  
                         u2715 02F2                           u2571 0217  
                         u2491 05BB                           u2900 0536  
                         u2820 04F1                           u2740 0495  
                         u2580 022B                           u2660 07C9  
                         u2821 04F0                           u2741 0494  
                         u2581 022A                           u2661 07C8  
                         _CVRR 04ED                           u2910 054E  
                         u2830 04F8                           u2750 04AB  
                         u2670 02A2                           u2590 0276  
                         u2831 04F7                           u2815 04E0  
                         u2671 02A1                           u2591 0275  
                         u2655 0755                           u2920 0579  
                         u2840 0502                           u2760 04B3  
                         u2680 02B9                           u2921 0578  
                         u2841 0501                           u2761 04B2  
                         u2681 02B8                           u2930 059E  
                         u2770 04BD                           u1970 01A4  
                         _PEIE 005E                           u2771 04BC  
                         u1971 01A3                           u2860 0519  
                         u1980 01B0                           u2940 0EA3  
                         _INTE 005C                           u2861 0518  
                         u1981 01AF                           u2941 0EA2  
                         _INTF 0059                           u2870 051F  
                         u2790 04D8                           u1990 01C3  
                         u2950 033D                           _RBIE 005B  
                         u2871 051E                           u2855 050A  
                         u2791 04D7                           u1991 01C2  
                         u2695 02CC                           _RBIF 0058  
                         u2960 0342                           u2785 04C9  
                         u2961 0341                           u2890 0532  
                         u2970 0354                           _RCIE 0465  
                         u2891 0531                           u2971 0353  
                         _RCIF 0065                           _RCEN 048B  
                         u2885 0521                           _PCON 008E  
                         _PIR1 000C                           u2985 0363  
                         _PIR2 000D                           u2995 036B  
                         _OERR 00C1                           _RBPU 040F  
                         _RX9D 00C0                           _TMR0 0001  
                         _TMR2 0011                           _WCOL 00A7  
                         _SPEN 00C7                           _RSEN 0489  
                    __databank 0000                           _TX9D 04C0  
                         _SREN 00C5                           _TRMT 04C1  
                         _STOP 04A4                           _ZERO 001A  
                         _TXIE 0464                           _WREN 0C62  
                         _TXIF 0064                           _TXEN 04C5  
                         _SYNC 04C4                           _TLow 007A  
                         _main 0015                           btemp 007E  
             __end_of_LCDReset 0E67                           start 0000  
                 ___awdiv_sign 0041                _LCDWriteCommand 07F5  
              _LCDWriteFloat_c 002C                _LCDWriteFloat_i 0027  
              _LCDWriteFloat_n 002A                ___awmod_divisor 003F  
                 ___ftadd_exp1 0043                   ___ftadd_exp2 0042  
              ___awmod_counter 0042                   ___ftadd_cntr 0040  
              _LCDWriteInteger 020F               ?_LCDWriteCommand 0033  
                      ?___ftge 0033                       ??___ftge 0039  
                 ___awmod_sign 0041                __end_of___awdiv 020F  
              __end_of___ftadd 05A2                __end_of___awmod 0128  
             ?_LCDWriteInteger 0033                      stringcode 0708  
              __end_of___ftdiv 031B                __end_of___ftneg 0E36  
              __end_of___ftmul 03BE                __end_of___ftsub 0E9D  
              __end_of___fttol 019B                  __end_of_Delay 0E80  
                      _CCP1CON 0017                        _CCP2CON 001D  
                   ___ftadd_f1 0039                     ___ftadd_f2 003C  
                _LCDWriteFloat 05A2                        _ACKSTAT 048E  
                        _C1INV 04E4                     ___ftge_ff1 0033  
                   ___ftge_ff2 0036                          _C2INV 04E5  
                        _C1OUT 04E6                          _C2OUT 04E7  
                        _ADCS0 00FE                          _ADCS1 00FF  
                        _ADCS2 04FE                          _ADDEN 00C3  
                        ?_main 0020                          _ACKEN 048C  
                        _ACKDT 048D                          _BCLIE 046B  
                        _BCLIF 006B                          _CCP1X 00BD  
                        _CCP1Y 00BC                          _CCP2X 00ED  
                        _CCP2Y 00EC                     ___ftdiv_f1 0039  
                   ___ftdiv_f2 003C                     ___ftdiv_f3 0043  
                        _EEADR 010D              ??_LCDWriteCommand 0033  
                 ___ftdiv_exp1 0041                   ___ftdiv_exp2 003F  
                        _CARRY 0018                          _EEPGD 0C67  
    _ADCReadData_ChannelNumber 0027                          _CMCON 009C  
                        _T1CON 0010                          _T2CON 0012  
                   ___ftneg_f1 003C                          u25010 06A3  
                      _T1CKPS0 0084                        _T1CKPS1 0085  
                        u25015 06A1                          u25210 06C7  
                   ___awtoft_c 0033                          u25310 06E2  
                        u25215 06C5                          u25410 06EF  
                        u25315 06E0                          _PCFG0 04F8  
                        _PCFG1 04F9                          u25415 06ED  
                        _PCFG2 04FA                          _PCFG3 04FB  
                      _T2CKPS0 0090                        _T2CKPS1 0091  
                        u25910 0272                          _CVREN 04EF  
                        u25915 0270                          _CVROE 04EE  
               ?_LCDInitialize 0024      _LCDWriteString_lcd_string 0033  
                        _RCREG 001A                          _RCSTA 0018  
                        _TMR1H 000F                          _TMR1L 000E  
                        _SPBRG 0099                          _PORTA 0005  
                        _PORTB 0006                        _T1OSCEN 0083  
                        _PORTC 0007                          _PORTD 0008  
                        _PORTE 0009                          _PSPIE 0467  
                        _PSPIF 0067                          _START 04A3  
                        _SSPM0 00A0                          _SSPM1 00A1  
                        _SSPM2 00A2                          _SSPM3 00A3  
                        _TRISA 0085                          _TRISB 0086  
                        _TRISC 0087                     ___ftmul_f1 0039  
                        _TRISD 0088                     ___ftmul_f2 003C  
                        _SSPIE 0463                          _TRISE 0089  
                   ___ftmul_f3 0042                          _SSPIF 0063  
                        _SSPEN 00A5                          _SSPOV 00A6  
            ??_LCDWriteInteger 0035                          _WRERR 0C63  
              ??_LCDInitialize 0024                          _TXREG 0019  
                        _TXSTA 0098                     ___ftsub_f1 0033  
                   ___ftsub_f2 0036                          _Delay 0E67  
                        _THigh 0076                     ___fttol_f1 0033  
                 ___ftpack_arg 0048                   ___ftpack_exp 0047  
                   ___ftunpack 0FA6             __end_of___ftunpack 1000  
                ??_ADCReadData 0027          __end_of_LCDWriteFloat 0700  
                      _PSPMODE 044C                      _main_temp 0020  
                      _SSPCON2 0091                      _LCDEnable 0E36  
               ??_LCDWriteData 003D              __end_of_LCDEnable 0E44  
               ??_LCDWriteByte 003E  _LCDWriteInteger_IntegerNumber 0033  
                      _SSPSTAT 0094                        _TOUTPS0 0093  
                      _TOUTPS1 0094                        _TOUTPS2 0095  
                      _TOUTPS3 0096                     ___lwtoft_c 0039  
                        pclath 000A                   ___ftmul_exp1 0040  
                  ?___ftunpack 0047                   ___ftmul_cntr 0041  
                        ltemp0 007E                     ?_LCDEnable 0040  
                        ttemp0 007E                          status 0003  
         _MainSystemInitialize 0E15                          wtemp0 007E  
                        wtemp1 0080                   ___fttol_exp1 0038  
                 ___fttol_lval 0039          ?_MainSystemInitialize 0024  
             ___awmod_dividend 003D           _LCDWriteData_LCDData 003D  
                  ??_LCDEnable 0040                  ___ftadd_sign1 0041  
                ___ftadd_sign2 003F         ??_MainSystemInitialize 0024  
             ___awdiv_dividend 003D                    __stringbase 070E  
                      ___awdiv 019B                        ___ftadd 0484  
                      ___awmod 00CD                        ___ftdiv 028C  
                      ___ftneg 0E2B                        ___ftmul 031B  
                      ___ftsub 0E80                        ___fttol 0128  
                     ?___awdiv 003D                       ?___ftadd 0039  
                     ?___awmod 003D                       ?___ftdiv 0039  
                     ?___ftneg 003C                       ?___ftmul 0039  
                     ?___ftsub 0033                       ?___fttol 0033  
      __end_of_LCDWriteCommand 0800                   ??___ftunpack 0048  
                    ??___awdiv 0041                      ??___ftadd 003F  
                    ??___awmod 0041                      ??___ftdiv 003F  
                    ??___ftneg 003F                      ??___ftmul 003F  
                    ??___ftsub 0039                      ??___fttol 0037  
                   _Delay_time 0040                         ??_main 0020  
      __end_of_LCDWriteInteger 028C               __end_of___awtoft 0FA6  
             __end_of___ftpack 0484                 ?_ADCInitialize 0024  
              ??_ADCInitialize 0024               __end_of___lwtoft 0EC7  
                       ?_Delay 0040      _LCDWriteFloat_FloatNumber 0024  
               __end_of___ftge 0F56                       stringdir 0709  
                     stringjmp 070D                       stringtab 0700  
                       _ADCON0 001F                         _ADCON1 009F  
                 _LCDWriteData 0E20                         _CCP1M0 00B8  
                       _CCP1M1 00B9                         _CCP1M2 00BA  
                       _CCP1M3 00BB                         _CCP2M0 00E8  
                       _CCP2M1 00E9                         _CCP2M2 00EA  
                       _CCP2M3 00EB                         _CCP1IE 0462  
                       _CCP1IF 0062                         _CCP2IE 0468  
                       _CCP2IF 0068                   _LCDWriteByte 0EF2  
               _LCDWriteString 00AA                         _ADRESH 001E  
                       _EEADRH 010F                         _ADRESL 009E  
                       _EEADRL 010D                         _EEDATA 010C  
                       _CCPR1H 0016                         _EEDATH 010E  
                       _CCPR2H 001C                         _CCPR1L 0015  
                       _CCPR2L 001B                         _EECON1 018C  
                       _EECON2 018D   __end_of_MainSystemInitialize 0E20  
                 __end_of_main 00A6               ___awdiv_quotient 0043  
                ___ftdiv_sign1 0040                  ___ftdiv_sign2 0042  
              ?_LCDWriteString 0033                    ___awtoft_f1 0036  
                       _GODONE 00FA                         _CVRCON 009D  
                       _T1SYNC 0082                         _INTEDG 040E  
                       _PCLATH 000A                         _INTCON 000B  
         __end_of_LCDWriteData 0E2B           __end_of_LCDWriteByte 0F1E  
                       _TMR0IE 005D                         _TMR0IF 005A  
                       _TMR1IE 0460                         _TMR1IF 0060  
                       _TMR1CS 0081                         _TMR2IE 0461  
                       _TMR2IF 0061                         _TMR1ON 0080  
                       _OPTION 0081        _LCDWriteCommand_LCDData 0033  
                       _TMR2ON 0092                         _SSPADD 0093  
                       _TRISA0 0428               ??_LCDWriteString 0033  
                       _TRISA1 0429                         _TRISB0 0430  
                       _TRISA2 042A                         _TRISB1 0431  
                       _TRISA3 042B                         _TRISC0 0438  
                       _TRISB2 0432                         _TRISA4 042C  
                       _TRISC1 0439                         _TRISB3 0433  
                       _TRISA5 042D                         _TRISD0 0440  
                       _TRISC2 043A                         _TRISB4 0434  
                       _TRISD1 0441                         _TRISC3 043B  
                       _TRISB5 0435                         _TRISE0 0448  
                       _TRISD2 0442                         _TRISC4 043C  
                       _TRISB6 0436                         _TRISE1 0449  
                       _TRISD3 0443                         _TRISC5 043D  
                       _TRISB7 0437                         _TRISE2 044A  
                       _TRISD4 0444                         _TRISC6 043E  
                       _TRISD5 0445                         _TRISC7 043F  
                       _TRISD6 0446                         _TRISD7 0447  
                       _STATUS 0003                         _SSPCON 0014  
                       _SSPBUF 0013                       _LCDReset 0E54  
                    ?_LCDReset 0025                ___awdiv_divisor 003F  
                   ??_LCDReset 0025                         ___ftge 0F1E  
              ___awdiv_counter 0042                ___ftunpack_sign 0049  
               ?_LCDWriteFloat 0024         __end_of_LCDWriteString 00CD  
                _LCDInitialize 0EC7                ??_LCDWriteFloat 0027  
         _LCDWriteByte_LCDData 003E                    ___lwtoft_f1 003C  
                ___ftmul_sign1 003F                 ___ftunpack_arg 0048  
               ___ftunpack_exp 0047                  ?_LCDWriteData 003D  
           _LCDWriteFloat_Temp 0028                  ?_LCDWriteByte 003E  
        __end_of_LCDInitialize 0EF2                  ___fttol_sign1 0037  
                     __Hcommon 007E                      __Hrdata_0 0001  
                    __Hramdata 0001                       __Lcommon 0076  
                  _ADCReadData 0723  
