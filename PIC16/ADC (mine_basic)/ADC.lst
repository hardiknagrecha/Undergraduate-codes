

HI-TECH Software PICC Macro Assembler V9.65PL1 build 4898 
                                                      Sat Jun 30 11:12:52 2012

HI-TECH Software Omniscient Code Generator build 4898
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code 
                                 Generator build 4898"
     2                           
     3                           	processor	16F877A
     4                           clrc	macro
     5                           	bcf	status,0
     6  0000                     	endm
     7                           clrz	macro
     8                           	bcf	status,2
     9  0000                     	endm
    10                           setc	macro
    11                           	bsf	status,0
    12  0000                     	endm
    13                           setz	macro
    14                           	bsf	status,2
    15  0000                     	endm
    16                           skipc	macro
    17                           	btfss	status,0
    18  0000                     	endm
    19                           skipz	macro
    20                           	btfss	status,2
    21  0000                     	endm
    22                           skipnc	macro
    23                           	btfsc	status,0
    24  0000                     	endm
    25                           skipnz	macro
    26                           	btfsc	status,2
    27  0000                     	endm
    28  0000                     indf	equ	0
    29  0000                     indf0	equ	0
    30  0000                     pc	equ	2
    31  0000                     pcl	equ	2
    32  0000                     status	equ	3
    33  0000                     fsr	equ	4
    34  0000                     fsr0	equ	4
    35  0000                     c	equ	1
    36  0000                     z	equ	0
    37  0000                     pclath	equ	10
    38                           # 14 "C:\Users\hardik\Desktop\ADC\main.h"
    39                           	psect config,class=CONFIG,delta=2 ;#
    40                           # 14 "C:\Users\hardik\Desktop\ADC\main.h"
    41  2007  2F0A               	dw 0x2F0A ;#
    42                           	FNCALL _LCDWriteString,stringtab
    43                           	FNCALL _LCDWriteString,stringtab
    44                           	FNCALL _LCDWriteString,stringtab
    45                           	FNCALL _LCDWriteString,stringtab
    46                           	FNCALL _LCDWriteString,stringtab
    47                           	FNCALL _LCDWriteString,stringtab
    48                           global __tempreg
    49  0000                     __tempreg	set	32
    50                           global __Lrdata_0, __Hrdata_0
    51  0000                     __Lrdata_0	equ	0x78
    52  0000                     __Hrdata_0	equ	0x7E
    53                           global __Lramdata, __Lrdata_0, __Hramdata, __Hr
                                 data_0
    54  0000                     __Lramdata	set	__Lrdata_0
    55  0000                     __Hramdata	set	__Hrdata_0
    56                           	GLOBAL	__databank
    57  0000                     __databank	EQU	-1
    58                           	FNCALL _LCDWriteString,stringtab
    59                           	FNCALL _LCDWriteString,stringtab
    60                           	FNCALL _LCDWriteString,stringtab
    61                           	FNCALL _LCDWriteString,stringtab
    62                           	FNCALL _LCDWriteString,stringtab
    63                           	FNCALL _LCDWriteString,stringtab
    64                           	FNCALL _LCDWriteString,stringtab
    65                           	FNCALL _LCDWriteString,stringtab
    66  0000                     _main_z	equ	??_main+0
    67                           	global	_main_z
    68  0000                     _main_x	equ	??_main+2
    69                           	global	_main_x
    70  0000                     _main_y	equ	??_main+4
    71                           	global	_main_y
    72  0000                     _main_c	equ	??_main+6
    73                           	global	_main_c
    74  0000                     _main_f	equ	??_main+8
    75                           	global	_main_f
    76  0000                     _main_p	equ	??_main+11
    77                           	global	_main_p
    78  0000                     ___wmul_product	equ	??___wmul+0
    79                           	global	___wmul_product
    80  0000                     ___wmul_multiplier	equ	?___wmul+0
    81                           	global	___wmul_multiplier
    82  0000                     ___wmul_multiplicand	equ	?___wmul+2
    83                           	global	___wmul_multiplicand
    84  0000                     ___lwtoft_f1	equ	??___lwtoft+0
    85                           	global	___lwtoft_f1
    86  0000                     ___lwtoft_c	equ	?___lwtoft+0
    87                           	global	___lwtoft_c
    88  0000                     _LCDDisplayInitializing_i	equ	??_LCDDisplayInit
                                 ializing+0
    89                           	global	_LCDDisplayInitializing_i
    90  0000                     _LCDWriteFloat_i	equ	??_LCDWriteFloat+0
    91                           	global	_LCDWriteFloat_i
    92  0000                     _LCDWriteFloat_Temp	equ	??_LCDWriteFloat+1
    93                           	global	_LCDWriteFloat_Temp
    94  0000                     _LCDWriteFloat_n	equ	??_LCDWriteFloat+3
    95                           	global	_LCDWriteFloat_n
    96  0000                     _LCDWriteFloat_c	equ	??_LCDWriteFloat+5
    97                           	global	_LCDWriteFloat_c
    98  0000                     _LCDWriteFloat_FloatNumber	equ	?_LCDWriteFloat+
                                 0
    99                           	global	_LCDWriteFloat_FloatNumber
   100  0000                     ___ftdiv_exp2	equ	??___ftdiv+0
   101                           	global	___ftdiv_exp2
   102  0000                     ___ftdiv_sign1	equ	??___ftdiv+1
   103                           	global	___ftdiv_sign1
   104  0000                     ___ftdiv_exp1	equ	??___ftdiv+2
   105                           	global	___ftdiv_exp1
   106  0000                     ___ftdiv_sign2	equ	??___ftdiv+3
   107                           	global	___ftdiv_sign2
   108  0000                     ___ftdiv_f3	equ	??___ftdiv+4
   109                           	global	___ftdiv_f3
   110  0000                     ___ftdiv_f1	equ	?___ftdiv+0
   111                           	global	___ftdiv_f1
   112  0000                     ___ftdiv_f2	equ	?___ftdiv+3
   113                           	global	___ftdiv_f2
   114  0000                     _LCDWriteInteger_i	equ	??_LCDWriteInteger+0
   115                           	global	_LCDWriteInteger_i
   116  0000                     _LCDWriteInteger_c	equ	??_LCDWriteInteger+1
   117                           	global	_LCDWriteInteger_c
   118  0000                     _LCDWriteInteger_IntegerNumber	equ	?_LCDWriteIn
                                 teger+0
   119                           	global	_LCDWriteInteger_IntegerNumber
   120  0000                     ___ftmul_sign1	equ	??___ftmul+0
   121                           	global	___ftmul_sign1
   122  0000                     ___ftmul_exp1	equ	??___ftmul+1
   123                           	global	___ftmul_exp1
   124  0000                     ___ftmul_cntr	equ	??___ftmul+2
   125                           	global	___ftmul_cntr
   126  0000                     ___ftmul_f3	equ	??___ftmul+3
   127                           	global	___ftmul_f3
   128  0000                     ___ftmul_f1	equ	?___ftmul+0
   129                           	global	___ftmul_f1
   130  0000                     ___ftmul_f2	equ	?___ftmul+3
   131                           	global	___ftmul_f2
   132  0000                     _LCDWriteString_lcd_string	equ	??_LCDWriteStrin
                                 g+0
   133                           	global	_LCDWriteString_lcd_string
   134  0000                     ___fttol_sign1	equ	??___fttol+0
   135                           	global	___fttol_sign1
   136  0000                     ___fttol_exp1	equ	??___fttol+1
   137                           	global	___fttol_exp1
   138  0000                     ___fttol_lval	equ	??___fttol+2
   139                           	global	___fttol_lval
   140  0000                     ___fttol_f1	equ	?___fttol+0
   141                           	global	___fttol_f1
   142  0000                     ___ftsub_f1	equ	?___ftsub+0
   143                           	global	___ftsub_f1
   144  0000                     ___ftsub_f2	equ	?___ftsub+3
   145                           	global	___ftsub_f2
   146  0000                     ___ftge_ff1	equ	?___ftge+0
   147                           	global	___ftge_ff1
   148  0000                     ___ftge_ff2	equ	?___ftge+3
   149                           	global	___ftge_ff2
   150  0000                     ___awtoft_f1	equ	??___awtoft+0
   151                           	global	___awtoft_f1
   152  0000                     ___awtoft_c	equ	?___awtoft+0
   153                           	global	___awtoft_c
   154  0000                     ___ftneg_f1	equ	?___ftneg+0
   155                           	global	___ftneg_f1
   156  0000                     ___ftadd_sign2	equ	??___ftadd+0
   157                           	global	___ftadd_sign2
   158  0000                     ___ftadd_cntr	equ	??___ftadd+1
   159                           	global	___ftadd_cntr
   160  0000                     ___ftadd_sign1	equ	??___ftadd+2
   161                           	global	___ftadd_sign1
   162  0000                     ___ftadd_exp2	equ	??___ftadd+3
   163                           	global	___ftadd_exp2
   164  0000                     ___ftadd_exp1	equ	??___ftadd+4
   165                           	global	___ftadd_exp1
   166  0000                     ___ftadd_f1	equ	?___ftadd+0
   167                           	global	___ftadd_f1
   168  0000                     ___ftadd_f2	equ	?___ftadd+3
   169                           	global	___ftadd_f2
   170  0000                     ___awdiv_counter	equ	??___awdiv+0
   171                           	global	___awdiv_counter
   172  0000                     ___awdiv_sign	equ	??___awdiv+1
   173                           	global	___awdiv_sign
   174  0000                     ___awdiv_quotient	equ	??___awdiv+2
   175                           	global	___awdiv_quotient
   176  0000                     ___awdiv_dividend	equ	?___awdiv+0
   177                           	global	___awdiv_dividend
   178  0000                     ___awdiv_divisor	equ	?___awdiv+2
   179                           	global	___awdiv_divisor
   180  0000                     ___awmod_sign	equ	??___awmod+0
   181                           	global	___awmod_sign
   182  0000                     ___awmod_counter	equ	??___awmod+1
   183                           	global	___awmod_counter
   184  0000                     ___awmod_dividend	equ	?___awmod+0
   185                           	global	___awmod_dividend
   186  0000                     ___awmod_divisor	equ	?___awmod+2
   187                           	global	___awmod_divisor
   188  0000                     _LCDWriteData_LCDData	equ	??_LCDWriteData+0
   189                           	global	_LCDWriteData_LCDData
   190  0000                     _LCDWriteCommand_LCDData	equ	??_LCDWriteCommand
                                 +0
   191                           	global	_LCDWriteCommand_LCDData
   192  0000                     ___ftpack_arg	equ	??___ftpack+0
   193                           	global	___ftpack_arg
   194  0000                     ___ftpack_exp	equ	?___ftpack+0
   195                           	global	___ftpack_exp
   196  0000                     ___ftunpack_arg	equ	??___ftunpack+0
   197                           	global	___ftunpack_arg
   198  0000                     ___ftunpack_sign	equ	??___ftunpack+1
   199                           	global	___ftunpack_sign
   200  0000                     ___ftunpack_exp	equ	?___ftunpack+0
   201                           	global	___ftunpack_exp
   202  0000                     _LCDWriteByte_LCDData	equ	??_LCDWriteByte+0
   203                           	global	_LCDWriteByte_LCDData
   204  0000                     _Delay_pause	equ	??_Delay+0
   205                           	global	_Delay_pause
   206  0000                     _Delay_time	equ	?_Delay+0
   207                           	global	_Delay_time
   208                           ;Data sizes: Strings 20, constant 0, data 6, bs
                                 s 0, persistent 0 stack 56
   209                           	global	_main
   210                           	global	??_main
   211                           	global	?_main
   212                           
   213                           ; *************** function _main **************
                                 *
   214                           ; Defined at:
   215                           ;		line 6 in file "C:\Users\hardik\Desktop\ADC\
                                 main.c"
   216                           ; Parameters:
   217                           ;		None
   218                           ; Auto variables:
   219                           ;		Count       	       	type: unsigned char 
   220                           ;		temp        	       	type: unsigned int 
   221                           ;		y           	       	type: unsigned int 
   222                           ;		c           	       	type: unsigned int 
   223                           ;		z           	       	type: unsigned int 
   224                           ;		x           	       	type: unsigned int 
   225                           ;		f           	       	type: float 
   226                           ;		p           	       	type: float 
   227                           ; Return value:
   228                           ;		type: void 
   229                           ;		size: 0
   230                           ; Registers used:
   231                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
                                 th, cstack
   232                           ; Tracked objects:
   233                           ;		On entry : BFF/0
   234                           ;		On exit  : 0/0
   235                           ;		Unchanged: 0/0
   236                           ; Data sizes:
   237                           ;		Autos:   14
   238                           ;		Params:   0
   239                           ;		Temp:     2
   240                           ;		Total:   16
   241                           ; This function calls:
   242                           ;		_MainSystemInitialize
   243                           ;		_LCDDisplayInitializing
   244                           ;		_Delay
   245                           ;		___wmul
   246                           ;		___lwtoft
   247                           ;		___ftmul
   248                           ;		___ftdiv
   249                           ;		_LCDWriteCommand
   250                           ;		_LCDWriteFloat
   251                           ; This function is called by:
   252                           ;		Startup code after reset
   253                           ; This function uses a non-reentrant model
   254                           ; 
   255                           	psect	maintext,class=CODE,delta=2
   256                           	file	"C:\Users\hardik\Desktop\ADC\main.c"
   257                           	line	6
   258                           	psect	maintext
   259                           ;main.c: 3: int i=48,j=48,k=48;
   260                           ;main.c: 5: void main(void)
   261                           ;main.c: 6: {
   262                           	
   263  0018                     _main:	
   264                           	opt stack 7
   265                           ; Regs used in _main: [wreg-fsr0h+status,2+stat
                                 us,0+pclath+cstack]
   266                           	line	8
   267                           ;main.c: 7: unsigned char Count;
   268                           ;main.c: 8: unsigned int z,temp,x,y,c=0xff;
   269  0018  30FF               	movlw	low(0FFh)
   270                           	
   271  0019  00A6               	movwf	(_main_c)
   272  001A  3000               	movlw	high(0FFh)
   273  001B  00A7               	movwf	((_main_c))+1
   274                           	line	9
   275                           ;main.c: 9: float p=0,f;
   276                           	
   277  001C  3000               	movlw	0x0
   278  001D  00AB               	movwf	(_main_p)
   279  001E  3000               	movlw	0x0
   280  001F  00AC               	movwf	(_main_p+1)
   281  0020  3000               	movlw	0x0
   282  0021  00AD               	movwf	(_main_p+2)
   283                           	line	10
   284                           ;main.c: 10: MainSystemInitialize();
   285  0022  120A  118A  20FB   	fcall	_MainSystemInitialize
              120A  118A         
   286                           	line	11
   287                           ;main.c: 11: LCDDisplayInitializing();
   288  0027  120A  158A  2778   	fcall	_LCDDisplayInitializing
              120A  118A         
   289                           	line	15
   290                           ;main.c: 15: TRISC=0;
   291  002C  1003               	clrc
   292  002D  1683               	bsf	status, 5	;RP0=1, select bank1
   293  002E  1303               	bcf	status, 6	;RP1=0, select bank1
   294                           	
   295  002F  3000               	movlw	0
   296  0030  1803               	btfsc	status,0
   297  0031  3001               	movlw	1
   298  0032  0087               	movwf	(135)^080h	;volatile
   299                           	line	16
   300                           ;main.c: 16: TRISD=0;
   301  0033  1003               	clrc
   302                           	
   303  0034  3000               	movlw	0
   304  0035  1803               	btfsc	status,0
   305  0036  3001               	movlw	1
   306  0037  0088               	movwf	(136)^080h	;volatile
   307                           	line	18
   308                           ;main.c: 18: ADON = 1;
   309  0038  1283               	bcf	status, 5	;RP0=0, select bank0
   310  0039  1303               	bcf	status, 6	;RP1=0, select bank0
   311  003A  141F               	bsf	(248/8),(248)&7
   312                           	line	19
   313                           ;main.c: 19: ADFM = 1;
   314  003B  1683               	bsf	status, 5	;RP0=1, select bank1
   315  003C  1303               	bcf	status, 6	;RP1=0, select bank1
   316  003D  179F               	bsf	(1279/8)^080h,(1279)&7
   317                           	line	20
   318                           ;main.c: 20: ADCS2 = ADCS1 = ADCS0 = 0;
   319  003E  1283               	bcf	status, 5	;RP0=0, select bank0
   320  003F  1303               	bcf	status, 6	;RP1=0, select bank0
   321  0040  131F               	bcf	(254/8),(254)&7
   322  0041  139F               	bcf	(255/8),(255)&7
   323  0042  1683               	bsf	status, 5	;RP0=1, select bank1
   324  0043  1303               	bcf	status, 6	;RP1=0, select bank1
   325  0044  131F               	bcf	(1278/8)^080h,(1278)&7
   326                           	line	21
   327                           ;main.c: 21: PCFG3 = PCFG2 = PCFG1 =1;
   328  0045  149F               	bsf	(1273/8)^080h,(1273)&7
   329  0046  151F               	bsf	(1274/8)^080h,(1274)&7
   330  0047  159F               	bsf	(1275/8)^080h,(1275)&7
   331                           	line	22
   332                           ;main.c: 22: PCFG0 = 0;
   333  0048  101F               	bcf	(1272/8)^080h,(1272)&7
   334                           	line	25
   335                           ;main.c: 25: ADON=1;
   336  0049  1283               	bcf	status, 5	;RP0=0, select bank0
   337  004A  1303               	bcf	status, 6	;RP1=0, select bank0
   338  004B  141F               	bsf	(248/8),(248)&7
   339                           	line	26
   340                           ;main.c: 26: while(1)
   341                           	
   342  004C                     l50:	
   343                           	line	28
   344                           ;main.c: 27: {
   345                           ;main.c: 28: Delay(1);
   346  004C  3001               	movlw	low(01h)
   347  004D  1283               	bcf	status, 5	;RP0=0, select bank0
   348  004E  1303               	bcf	status, 6	;RP1=0, select bank0
   349                           	
   350  004F  00CC               	movwf	(?_Delay)
   351  0050  3000               	movlw	high(01h)
   352  0051  00CD               	movwf	((?_Delay))+1
   353  0052  120A  158A  2674   	fcall	_Delay
              120A  118A         
   354                           	line	29
   355                           ;main.c: 29: ADCON0|=0x04;
   356  0057  1283               	bcf	status, 5	;RP0=0, select bank0
   357  0058  1303               	bcf	status, 6	;RP1=0, select bank0
   358                           	
   359  0059  151F               	bsf	(31)+(2/8),(2)&7	;volatile
   360                           	line	30
   361                           ;main.c: 30: while((ADCON0&0x02)==1);
   362  005A  285B               	goto	l52
   363                           	
   364  005B                     l52:	
   365                           	
   366  005B  081F               	movf	(31),w	;volatile
   367  005C  3902               	andlw	02h
   368  005D  3A01               	xorlw	01h
   369  005E  1903               	skipnz
   370  005F  2861               	goto	u2491
   371  0060  2862               	goto	u2490
   372  0061                     u2491:
   373  0061  285B               	goto	l52
   374  0062                     u2490:
   375                           	
   376  0062                     l54:	
   377                           	line	31
   378                           ;main.c: 31: PORTB=ADRESL;
   379  0062  1683               	bsf	status, 5	;RP0=1, select bank1
   380  0063  1303               	bcf	status, 6	;RP1=0, select bank1
   381                           	
   382  0064  081E               	movf	(158)^080h,w	;volatile
   383  0065  1283               	bcf	status, 5	;RP0=0, select bank0
   384  0066  1303               	bcf	status, 6	;RP1=0, select bank0
   385                           	
   386  0067  0086               	movwf	(6)	;volatile
   387                           	line	32
   388                           ;main.c: 32: PORTD=ADRESH;
   389                           	
   390  0068  081E               	movf	(30),w	;volatile
   391                           	
   392  0069  0088               	movwf	(8)	;volatile
   393                           	line	33
   394                           ;main.c: 33: x=ADRESH;
   395                           	
   396  006A  081E               	movf	(30),w	;volatile
   397  006B  00AE               	movwf	(??_main+14+0)
   398  006C  01AF               	clrf	(??_main+14+0+1)
   399                           	
   400  006D  082E               	movf	0+(??_main+14+0),w
   401  006E  00A2               	movwf	(_main_x)
   402  006F  082F               	movf	1+(??_main+14+0),w
   403  0070  00A3               	movwf	(_main_x+1)
   404                           	line	34
   405                           ;main.c: 34: y=ADRESL;
   406  0071  1683               	bsf	status, 5	;RP0=1, select bank1
   407  0072  1303               	bcf	status, 6	;RP1=0, select bank1
   408                           	
   409  0073  081E               	movf	(158)^080h,w	;volatile
   410  0074  1283               	bcf	status, 5	;RP0=0, select bank0
   411  0075  1303               	bcf	status, 6	;RP1=0, select bank0
   412  0076  00AE               	movwf	(??_main+14+0)
   413  0077  01AF               	clrf	(??_main+14+0+1)
   414                           	
   415  0078  082E               	movf	0+(??_main+14+0),w
   416  0079  00A4               	movwf	(_main_y)
   417  007A  082F               	movf	1+(??_main+14+0),w
   418  007B  00A5               	movwf	(_main_y+1)
   419                           	line	35
   420                           ;main.c: 35: z=(x*c)+y;
   421                           	
   422                           	
   423                           	
   424  007C  0827               	movf	(_main_c+1),w
   425  007D  01B3               	clrf	(1+(?___wmul)+02h)
   426  007E  07B3               	addwf	(1+(?___wmul)+02h)
   427  007F  0826               	movf	(_main_c),w
   428  0080  01B2               	clrf	(0+(?___wmul)+02h)
   429  0081  07B2               	addwf	(0+(?___wmul)+02h)
   430                           
   431                           	
   432                           	
   433  0082  0823               	movf	(_main_x+1),w
   434  0083  01B1               	clrf	(?___wmul+1)
   435  0084  07B1               	addwf	(?___wmul+1)
   436  0085  0822               	movf	(_main_x),w
   437  0086  01B0               	clrf	(?___wmul)
   438  0087  07B0               	addwf	(?___wmul)
   439                           
   440  0088  120A  158A  26F7   	fcall	___wmul
              120A  118A         
   441  008D  1283               	bcf	status, 5	;RP0=0, select bank0
   442  008E  1303               	bcf	status, 6	;RP1=0, select bank0
   443  008F  0824               	movf	(_main_y),w
   444  0090  0730               	addwf	(0+?___wmul),w
   445                           	
   446  0091  00A0               	movwf	(_main_z)
   447  0092  0825               	movf	(_main_y+1),w
   448  0093  1803               	skipnc
   449  0094  0A25               	incf	(_main_y+1),w
   450  0095  0731               	addwf	(1+?___wmul),w
   451  0096  00A1               	movwf	1+(_main_z)
   452                           	line	36
   453                           ;main.c: 36: f=z;
   454                           	
   455                           	
   456  0097  0821               	movf	(_main_z+1),w
   457  0098  01B1               	clrf	(?___lwtoft+1)
   458  0099  07B1               	addwf	(?___lwtoft+1)
   459  009A  0820               	movf	(_main_z),w
   460  009B  01B0               	clrf	(?___lwtoft)
   461  009C  07B0               	addwf	(?___lwtoft)
   462                           
   463  009D  120A  158A  26CD   	fcall	___lwtoft
              120A  118A         
   464  00A2  1283               	bcf	status, 5	;RP0=0, select bank0
   465  00A3  1303               	bcf	status, 6	;RP1=0, select bank0
   466                           	
   467  00A4  0830               	movf	(0+?___lwtoft),w
   468  00A5  00A8               	movwf	(_main_f)
   469  00A6  0831               	movf	(1+?___lwtoft),w
   470  00A7  00A9               	movwf	(_main_f+1)
   471  00A8  0832               	movf	(2+?___lwtoft),w
   472  00A9  00AA               	movwf	(_main_f+2)
   473                           	line	37
   474                           ;main.c: 37: p =(f*5)/1023;
   475                           	
   476  00AA  3000               	movlw	0x0
   477  00AB  00C2               	movwf	(0+(?___ftmul)+03h)
   478  00AC  30A0               	movlw	0xa0
   479  00AD  00C3               	movwf	(1+(?___ftmul)+03h)
   480  00AE  3040               	movlw	0x40
   481  00AF  00C4               	movwf	(2+(?___ftmul)+03h)
   482                           	
   483                           	
   484  00B0  0828               	movf	(_main_f),w
   485  00B1  00BF               	movwf	(?___ftmul)
   486  00B2  0829               	movf	(_main_f+1),w
   487  00B3  00C0               	movwf	(?___ftmul+1)
   488  00B4  082A               	movf	(_main_f+2),w
   489  00B5  00C1               	movwf	(?___ftmul+2)
   490  00B6  120A  118A  23E1   	fcall	___ftmul
              120A  118A         
   491  00BB  1283               	bcf	status, 5	;RP0=0, select bank0
   492  00BC  1303               	bcf	status, 6	;RP1=0, select bank0
   493                           	
   494  00BD  083F               	movf	(0+?___ftmul),w
   495  00BE  00B0               	movwf	(?___ftdiv)
   496  00BF  0840               	movf	(1+?___ftmul),w
   497  00C0  00B1               	movwf	(?___ftdiv+1)
   498  00C1  0841               	movf	(2+?___ftmul),w
   499  00C2  00B2               	movwf	(?___ftdiv+2)
   500                           	
   501  00C3  30C0               	movlw	0xc0
   502+ 00C4  00B3               	movwf	(0+(?___ftdiv)+03h)
   503+ 00C5  307F               	movlw	0x7f
   504  00C6  00B4               	movwf	(1+(?___ftdiv)+03h)
   505  00C7  3044               	movlw	0x44
   506  00C8  00B5               	movwf	(2+(?___ftdiv)+03h)
   507  00C9  120A  118A  2352   	fcall	___ftdiv
              120A  118A         
   508  00CE  1283               	bcf	status, 5	;RP0=0, select bank0
   509  00CF  1303               	bcf	status, 6	;RP1=0, select bank0
   510                           	
   511  00D0  0830               	movf	(0+?___ftdiv),w
   512  00D1  00AB               	movwf	(_main_p)
   513  00D2  0831               	movf	(1+?___ftdiv),w
   514  00D3  00AC               	movwf	(_main_p+1)
   515  00D4  0832               	movf	(2+?___ftdiv),w
   516  00D5  00AD               	movwf	(_main_p+2)
   517                           	line	38
   518                           ;main.c: 38: LCDWriteCommand(0x01);
   519  00D6  3001               	movlw	(01h)
   520  00D7  120A  158A  264B   	fcall	_LCDWriteCommand
              120A  118A         
   521                           	line	39
   522                           ;main.c: 39: LCDWriteFloat(p);
   523  00DC  1283               	bcf	status, 5	;RP0=0, select bank0
   524  00DD  1303               	bcf	status, 6	;RP1=0, select bank0
   525                           	
   526                           	
   527  00DE  082B               	movf	(_main_p),w
   528  00DF  00B0               	movwf	(?_LCDWriteFloat)
   529  00E0  082C               	movf	(_main_p+1),w
   530  00E1  00B1               	movwf	(?_LCDWriteFloat+1)
   531  00E2  082D               	movf	(_main_p+2),w
   532  00E3  00B2               	movwf	(?_LCDWriteFloat+2)
   533  00E4  120A  118A  25A2   	fcall	_LCDWriteFloat
              120A  118A         
   534                           	line	40
   535                           ;main.c: 40: Delay(2000);
   536  00E9  30D0               	movlw	low(07D0h)
   537  00EA  1283               	bcf	status, 5	;RP0=0, select bank0
   538  00EB  1303               	bcf	status, 6	;RP1=0, select bank0
   539                           	
   540  00EC  00CC               	movwf	(?_Delay)
   541  00ED  3007               	movlw	high(07D0h)
   542  00EE  00CD               	movwf	((?_Delay))+1
   543  00EF  120A  158A  2674   	fcall	_Delay
              120A  118A         
   544                           	line	42
   545                           	
   546  00F4                     l49:	
   547                           	line	26
   548  00F4  284C               	goto	l50
   549                           	global	start
   550  00F5  120A  118A  2800   	ljmp	start
   551                           ; =============== function _main ends =========
                                 ======
   552                           
   553                           GLOBAL __end_of_main
   554  00F8                     	__end_of_main:
   555                           	FNSIZE	_main,16,0
   556                           	psect	maintext
   557                           	line	44
   558                           	signat	_main,88
   559                           	global	___wmul
   560                           	global	??___wmul
   561                           	global	?___wmul
   562                           
   563                           ; *************** function ___wmul ************
                                 ***
   564                           ; Defined at:
   565                           ;		line 3 in file "C:\Program Files (x86)\HI-TE
                                 CH Software\PICC\PRO\9.65\sources\wmul.c"
   566                           ; Parameters:
   567                           ;		multiplier  	offs:   0	type: unsigned int 
   568                           ;		multiplicand	offs:   2	type: unsigned int 
   569                           ; Auto variables:
   570                           ;		product     	       	type: unsigned int 
   571                           ; Return value:
   572                           ;		type: unsigned int 
   573                           ;		size: 2
   574                           ; Registers used:
   575                           ;		wreg, status,2, status,0
   576                           ; Tracked objects:
   577                           ;		On entry : 300/0
   578                           ;		On exit  : 0/0
   579                           ;		Unchanged: 0/0
   580                           ; Data sizes:
   581                           ;		Autos:    2
   582                           ;		Params:   4
   583                           ;		Temp:     0
   584                           ;		Total:    6
   585                           ; This function calls:
   586                           ;		Nothing
   587                           ; This function is called by:
   588                           ;		_main
   589                           ; This function uses a non-reentrant model
   590                           ; 
   591                           	psect	text193,local,class=CODE,delta=2
   592                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\wmul.c"
   593                           	line	3
   594                           	
   595  0EF7                     ___wmul:	
   596                           	opt stack 6
   597                           ; Regs used in ___wmul: [wreg+status,2+status,0
                                 ]
   598                           	line	4
   599  0EF7  3000               	movlw	low(0)
   600                           	
   601  0EF8  00B4               	movwf	(___wmul_product)
   602  0EF9  3000               	movlw	high(0)
   603  0EFA  00B5               	movwf	((___wmul_product))+1
   604                           	line	6
   605                           	
   606  0EFB                     l64:	
   607                           	line	7
   608                           	
   609  0EFB  1C30               	btfss	(___wmul_multiplier),(0)&7
   610  0EFC  2EFE               	goto	u2661
   611  0EFD  2EFF               	goto	u2660
   612  0EFE                     u2661:
   613  0EFE  2F05               	goto	l65
   614  0EFF                     u2660:
   615                           	line	8
   616                           	
   617                           	
   618  0EFF  0832               	movf	(___wmul_multiplicand),w
   619  0F00  07B4               	addwf	(___wmul_product),f
   620  0F01  1803               	skipnc
   621  0F02  0AB5               	incf	(___wmul_product+1),f
   622  0F03  0833               	movf	(___wmul_multiplicand+1),w
   623  0F04  07B5               	addwf	(___wmul_product+1),f
   624                           	
   625  0F05                     l65:	
   626                           	line	9
   627                           	
   628  0F05  3001               	movlw	01h
   629  0F06                     u2675:
   630  0F06  1003               	clrc
   631  0F07  0DB2               	rlf	(___wmul_multiplicand),f
   632  0F08  0DB3               	rlf	(___wmul_multiplicand+1),f
   633  0F09  3EFF               	addlw	-1
   634  0F0A  1D03               	skipz
   635+ 0F0B  2F06               	goto	u2675
   636+                          	line	10
   637+                          	
   638+ 0F0C  3001               	movlw	01h
   639  0F0D                     u2685:
   640  0F0D  1003               	clrc
   641  0F0E  0CB1               	rrf	(___wmul_multiplier+1),f
   642  0F0F  0CB0               	rrf	(___wmul_multiplier),f
   643  0F10  3EFF               	addlw	-1
   644  0F11  1D03               	skipz
   645  0F12  2F0D               	goto	u2685
   646                           	line	11
   647                           	
   648  0F13  0831               	movf	((___wmul_multiplier+1)),w
   649  0F14  0430               	iorwf	((___wmul_multiplier)),w
   650  0F15  1D03               	skipz
   651  0F16  2F18               	goto	u2691
   652  0F17  2F19               	goto	u2690
   653  0F18                     u2691:
   654  0F18  2EFB               	goto	l64
   655  0F19                     u2690:
   656                           	
   657  0F19                     l63:	
   658                           	line	12
   659                           	
   660                           	
   661  0F19  0835               	movf	(___wmul_product+1),w
   662  0F1A  01B1               	clrf	(?___wmul+1)
   663  0F1B  07B1               	addwf	(?___wmul+1)
   664  0F1C  0834               	movf	(___wmul_product),w
   665  0F1D  01B0               	clrf	(?___wmul)
   666  0F1E  07B0               	addwf	(?___wmul)
   667                           
   668  0F1F  2F20               	goto	l61
   669                           	line	13
   670  0F20                     l61:	
   671  0F20  0008               	return
   672                           ; =============== function ___wmul ends =======
                                 ========
   673                           
   674                           GLOBAL __end_of___wmul
   675  0F21                     	__end_of___wmul:
   676                           	FNSIZE	___wmul,2,4
   677                           	signat	___wmul,8314
   678                           	global	___lwtoft
   679                           	global	??___lwtoft
   680                           	global	?___lwtoft
   681                           
   682                           ; *************** function ___lwtoft **********
                                 *****
   683                           ; Defined at:
   684                           ;		line 16 in file "C:\Program Files (x86)\HI-T
                                 ECH Software\PICC\PRO\9.65\sources\lwtoft.c"
   685                           ; Parameters:
   686                           ;		c           	offs:   0	type: unsigned int 
   687                           ; Auto variables:
   688                           ;		f1          	       	type: float 
   689                           ; Return value:
   690                           ;		type: float 
   691                           ;		size: 3
   692                           ; Registers used:
   693                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
                                 th, cstack
   694                           ; Tracked objects:
   695                           ;		On entry : 300/0
   696                           ;		On exit  : 0/0
   697                           ;		Unchanged: 0/0
   698                           ; Data sizes:
   699                           ;		Autos:    3
   700                           ;		Params:   3
   701                           ;		Temp:     3
   702                           ;		Total:    9
   703                           ; This function calls:
   704                           ;		___ftpack
   705                           ; This function is called by:
   706                           ;		_main
   707                           ; This function uses a non-reentrant model
   708                           ; 
   709                           	psect	text194,local,class=CODE,delta=2
   710                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\lwtoft.c"
   711                           	line	16
   712                           	
   713  0ECD                     ___lwtoft:	
   714                           	opt stack 6
   715                           ; Regs used in ___lwtoft: [wreg-fsr0h+status,2+
                                 status,0+pclath+cstack]
   716                           	line	19
   717                           	
   718  0ECD  0831               	movf	((___lwtoft_c+1)),w
   719  0ECE  0430               	iorwf	((___lwtoft_c)),w
   720  0ECF  1D03               	skipz
   721  0ED0  2ED2               	goto	u2701
   722  0ED1  2ED3               	goto	u2700
   723  0ED2                     u2701:
   724  0ED2  2EDA               	goto	l315
   725  0ED3                     u2700:
   726                           	line	20
   727                           	
   728  0ED3  3000               	movlw	0x0
   729  0ED4  00B0               	movwf	(?___lwtoft)
   730  0ED5  3000               	movlw	0x0
   731  0ED6  00B1               	movwf	(?___lwtoft+1)
   732  0ED7  3000               	movlw	0x0
   733  0ED8  00B2               	movwf	(?___lwtoft+2)
   734  0ED9  2EF6               	goto	l314
   735                           	
   736  0EDA                     l315:	
   737                           	line	21
   738                           	
   739  0EDA  0830               	movf	(___lwtoft_c),w
   740  0EDB  00B6               	movwf	(??___lwtoft+3+0)
   741  0EDC  0831               	movf	(___lwtoft_c+1),w
   742  0EDD  00B7               	movwf	(??___lwtoft+3+0+1)
   743  0EDE  01B8               	clrf	(??___lwtoft+3+0+2)
   744                           	
   745  0EDF  0836               	movf	(??___lwtoft+3+0),w
   746  0EE0  00B3               	movwf	(___lwtoft_f1)
   747  0EE1  0837               	movf	(??___lwtoft+3+1),w
   748  0EE2  00B4               	movwf	(___lwtoft_f1+1)
   749  0EE3  0838               	movf	(??___lwtoft+3+2),w
   750  0EE4  00B5               	movwf	(___lwtoft_f1+2)
   751                           	line	22
   752  0EE5  308E               	movlw	(08Eh)
   753                           	
   754  0EE6  00D1               	movwf	(?___ftpack)
   755                           	
   756  0EE7  3033               	movlw	((___lwtoft_f1))&0ffh
   757  0EE8  120A  118A  2729   	fcall	___ftpack
              120A  158A         
   758                           	line	23
   759  0EED  1283               	bcf	status, 5	;RP0=0, select bank0
   760  0EEE  1303               	bcf	status, 6	;RP1=0, select bank0
   761                           	
   762                           	
   763  0EEF  0833               	movf	(___lwtoft_f1),w
   764  0EF0  00B0               	movwf	(?___lwtoft)
   765  0EF1  0834               	movf	(___lwtoft_f1+1),w
   766  0EF2  00B1               	movwf	(?___lwtoft+1)
   767  0EF3  0835               	movf	(___lwtoft_f1+2),w
   768  0EF4  00B2               	movwf	(?___lwtoft+2)
   769  0EF5  2EF6               	goto	l314
   770                           	line	24
   771  0EF6                     l314:	
   772  0EF6  0008               	return
   773                           ; =============== function ___lwtoft ends =====
                                 ==========
   774                           
   775                           GLOBAL __end_of___lwtoft
   776  0EF7                     	__end_of___lwtoft:
   777                           	FNSIZE	___lwtoft,6,3
   778                           	signat	___lwtoft,4219
   779                           	global	_LCDDisplayInitializing
   780                           	global	??_LCDDisplayInitializing
   781                           	global	?_LCDDisplayInitializing
   782                           
   783                           ; *************** function _LCDDisplayInitializ
                                 ing ***************
   784                           ; Defined at:
   785                           ;		line 53 in file "C:\Users\hardik\Desktop\ADC
                                 \LCD.c"
   786                           ; Parameters:
   787                           ;		None
   788                           ; Auto variables:
   789                           ;		i           	       	type: unsigned char 
   790                           ; Return value:
   791                           ;		type: void 
   792                           ;		size: 0
   793                           ; Registers used:
   794                           ;		wreg, status,2, status,0, pclath, cstack
   795                           ; Tracked objects:
   796                           ;		On entry : 0/0
   797                           ;		On exit  : 0/0
   798                           ;		Unchanged: 0/0
   799                           ; Data sizes:
   800                           ;		Autos:    1
   801                           ;		Params:   0
   802                           ;		Temp:     1
   803                           ;		Total:    2
   804                           ; This function calls:
   805                           ;		_LCDWriteString
   806                           ;		_LCDWriteCommand
   807                           ;		_LCDWriteData
   808                           ;		_Delay
   809                           ; This function is called by:
   810                           ;		_main
   811                           ; This function uses a non-reentrant model
   812                           ; 
   813                           	psect	text195,local,class=CODE,delta=2
   814                           	file	"C:\Users\hardik\Desktop\ADC\LCD.c"
   815                           	line	53
   816                           ;LCD.c: 52: void LCDDisplayInitializing(void)
   817                           ;LCD.c: 53: {
   818                           	
   819  0F78                     _LCDDisplayInitializing:	
   820                           	opt stack 6
   821                           ; Regs used in _LCDDisplayInitializing: [wreg+s
                                 tatus,2+status,0+pclath+cstack]
   822                           	line	56
   823                           ;LCD.c: 55: LCDubyte i;
   824                           ;LCD.c: 56: LCDWriteString("INITIALIZING....");
   825  0F78  3001               	movlw	((STR_1-__stringbase))&0ffh
   826  0F79  120A  158A  26AA   	fcall	_LCDWriteString
              120A  158A         
   827                           	line	57
   828                           ;LCD.c: 57: LCDWriteCommand(0xC0);
   829  0F7E  30C0               	movlw	(0C0h)
   830  0F7F  120A  158A  264B   	fcall	_LCDWriteCommand
              120A  158A         
   831                           	line	58
   832                           ;LCD.c: 58: for(i = 0 ; i < 16; i++)
   833  0F84  1003               	clrc
   834  0F85  1283               	bcf	status, 5	;RP0=0, select bank0
   835  0F86  1303               	bcf	status, 6	;RP1=0, select bank0
   836                           	
   837  0F87  3000               	movlw	0
   838  0F88  1803               	btfsc	status,0
   839  0F89  3001               	movlw	1
   840  0F8A  00B0               	movwf	(_LCDDisplayInitializing_i)
   841  0F8B  2F8C               	goto	l18
   842                           	line	59
   843                           	
   844  0F8C                     l18:	
   845                           	line	60
   846                           ;LCD.c: 59: {
   847                           ;LCD.c: 60: LCDWriteData(46);
   848  0F8C  302E               	movlw	(02Eh)
   849  0F8D  120A  158A  2640   	fcall	_LCDWriteData
              120A  158A         
   850                           	line	61
   851                           ;LCD.c: 61: Delay(100);
   852  0F92  3064               	movlw	low(064h)
   853  0F93  1283               	bcf	status, 5	;RP0=0, select bank0
   854  0F94  1303               	bcf	status, 6	;RP1=0, select bank0
   855                           	
   856  0F95  00CC               	movwf	(?_Delay)
   857  0F96  3000               	movlw	high(064h)
   858  0F97  00CD               	movwf	((?_Delay))+1
   859  0F98  120A  158A  2674   	fcall	_Delay
              120A  158A         
   860                           	line	58
   861  0F9D  3001               	movlw	(01h)
   862  0F9E  1283               	bcf	status, 5	;RP0=0, select bank0
   863  0F9F  1303               	bcf	status, 6	;RP1=0, select bank0
   864  0FA0  00B1               	movwf	(??_LCDDisplayInitializing+1+0)
   865                           	
   866  0FA1  0831               	movf	(??_LCDDisplayInitializing+1+0),w
   867  0FA2  07B0               	addwf	(_LCDDisplayInitializing_i),f
   868  0FA3  3010               	movlw	(010h)
   869                           	
   870  0FA4  0230               	subwf	(_LCDDisplayInitializing_i),w
   871  0FA5  1C03               	skipc
   872  0FA6  2FA8               	goto	u2511
   873  0FA7  2FA9               	goto	u2510
   874  0FA8                     u2511:
   875  0FA8  2F8C               	goto	l18
   876  0FA9                     u2510:
   877                           	
   878  0FA9                     l19:	
   879                           	line	63
   880                           ;LCD.c: 62: }
   881                           ;LCD.c: 63: LCDWriteCommand(0x01);
   882  0FA9  3001               	movlw	(01h)
   883  0FAA  120A  158A  264B   	fcall	_LCDWriteCommand
              120A  158A         
   884                           	line	64
   885                           ;LCD.c: 64: }
   886  0FAF                     l17:	
   887  0FAF  0008               	return
   888                           ; =============== function _LCDDisplayInitializ
                                 ing ends ===============
   889                           
   890                           GLOBAL __end_of_LCDDisplayInitializing
   891  0FB0                     	__end_of_LCDDisplayInitializing:
   892                           	FNSIZE	_LCDDisplayInitializing,2,0
   893                           	signat	_LCDDisplayInitializing,88
   894                           	global	_LCDWriteFloat
   895                           	global	??_LCDWriteFloat
   896                           	global	?_LCDWriteFloat
   897                           
   898                           ; *************** function _LCDWriteFloat *****
                                 **********
   899                           ; Defined at:
   900                           ;		line 93 in file "C:\Users\hardik\Desktop\ADC
                                 \LCD.c"
   901                           ; Parameters:
   902                           ;		FloatNumber 	offs:   0	type: float 
   903                           ; Auto variables:
   904                           ;		i           	       	type: unsigned char 
   905                           ;		Temp        	       	type: int 
   906                           ;		n           	       	type: int 
   907                           ;		c           	       	type: unsigned char [6]
   908                           ; Return value:
   909                           ;		type: void 
   910                           ;		size: 0
   911                           ; Registers used:
   912                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
                                 th, cstack
   913                           ; Tracked objects:
   914                           ;		On entry : 300/0
   915                           ;		On exit  : 0/0
   916                           ;		Unchanged: 0/0
   917                           ; Data sizes:
   918                           ;		Autos:   11
   919                           ;		Params:   3
   920                           ;		Temp:     1
   921                           ;		Total:   15
   922                           ; This function calls:
   923                           ;		___ftge
   924                           ;		_LCDWriteData
   925                           ;		___ftneg
   926                           ;		___fttol
   927                           ;		_LCDWriteInteger
   928                           ;		___awtoft
   929                           ;		___ftsub
   930                           ;		___ftadd
   931                           ;		___ftmul
   932                           ;		___awmod
   933                           ;		___awdiv
   934                           ;		_LCDWriteCommand
   935                           ;		_LCDWriteString
   936                           ; This function is called by:
   937                           ;		_main
   938                           ; This function uses a non-reentrant model
   939                           ; 
   940                           	psect	text196,local,class=CODE,delta=2
   941                           	file	"C:\Users\hardik\Desktop\ADC\LCD.c"
   942                           	line	93
   943                           ;LCD.c: 92: void LCDWriteFloat(float FloatNumbe
                                 r)
   944                           ;LCD.c: 93: {
   945                           	
   946  05A2                     _LCDWriteFloat:	
   947                           	opt stack 6
   948                           ; Regs used in _LCDWriteFloat: [wreg-fsr0h+stat
                                 us,2+status,0+pclath+cstack]
   949                           	line	95
   950                           ;LCD.c: 94: unsigned char c[6];
   951                           ;LCD.c: 95: unsigned char i = 0;
   952  05A2  1003               	clrc
   953                           	
   954  05A3  3000               	movlw	0
   955  05A4  1803               	btfsc	status,0
   956  05A5  3001               	movlw	1
   957  05A6  00B3               	movwf	(_LCDWriteFloat_i)
   958                           	line	97
   959                           ;LCD.c: 96: int n, Temp;
   960                           ;LCD.c: 97: if(FloatNumber < 0)
   961                           	
   962  05A7  3000               	movlw	0x0
   963  05A8  00C2               	movwf	(0+(?___ftge)+03h)
   964  05A9  3000               	movlw	0x0
   965  05AA  00C3               	movwf	(1+(?___ftge)+03h)
   966  05AB  3000               	movlw	0x0
   967  05AC  00C4               	movwf	(2+(?___ftge)+03h)
   968                           	
   969                           	
   970  05AD  0830               	movf	(_LCDWriteFloat_FloatNumber),w
   971  05AE  00BF               	movwf	(?___ftge)
   972  05AF  0831               	movf	(_LCDWriteFloat_FloatNumber+1),w
   973  05B0  00C0               	movwf	(?___ftge+1)
   974  05B1  0832               	movf	(_LCDWriteFloat_FloatNumber+2),w
   975  05B2  00C1               	movwf	(?___ftge+2)
   976  05B3  120A  118A  2101   	fcall	___ftge
              120A  118A         
   977  05B8  1803               	btfsc	status,0
   978  05B9  2DBB               	goto	u2521
   979  05BA  2DBC               	goto	u2520
   980  05BB                     u2521:
   981  05BB  2DD7               	goto	l30
   982  05BC                     u2520:
   983                           	line	99
   984                           ;LCD.c: 98: {
   985                           ;LCD.c: 99: LCDWriteData('-');
   986  05BC  302D               	movlw	(02Dh)
   987  05BD  120A  158A  2640   	fcall	_LCDWriteData
              120A  118A         
   988                           	line	100
   989                           ;LCD.c: 100: FloatNumber = -(FloatNumber);
   990  05C2  1283               	bcf	status, 5	;RP0=0, select bank0
   991  05C3  1303               	bcf	status, 6	;RP1=0, select bank0
   992                           	
   993                           	
   994  05C4  0830               	movf	(_LCDWriteFloat_FloatNumber),w
   995  05C5  00C8               	movwf	(?___ftneg)
   996  05C6  0831               	movf	(_LCDWriteFloat_FloatNumber+1),w
   997  05C7  00C9               	movwf	(?___ftneg+1)
   998  05C8  0832               	movf	(_LCDWriteFloat_FloatNumber+2),w
   999  05C9  00CA               	movwf	(?___ftneg+2)
  1000  05CA  120A  158A  2656   	fcall	___ftneg
              120A  118A         
  1001  05CF  1283               	bcf	status, 5	;RP0=0, select bank0
  1002  05D0  1303               	bcf	status, 6	;RP1=0, select bank0
  1003                           	
  1004  05D1  0848               	movf	(0+?___ftneg),w
  1005+ 05D2  00B0               	movwf	(_LCDWriteFloat_FloatNumber)
  1006  05D3  0849               	movf	(1+?___ftneg),w
  1007  05D4  00B1               	movwf	(_LCDWriteFloat_FloatNumber+1)
  1008  05D5  084A               	movf	(2+?___ftneg),w
  1009  05D6  00B2               	movwf	(_LCDWriteFloat_FloatNumber+2)
  1010                           	line	101
  1011                           	
  1012  05D7                     l30:	
  1013                           	line	102
  1014                           ;LCD.c: 101: }
  1015                           ;LCD.c: 102: n = FloatNumber;
  1016  05D7  1283               	bcf	status, 5	;RP0=0, select bank0
  1017  05D8  1303               	bcf	status, 6	;RP1=0, select bank0
  1018                           	
  1019                           	
  1020  05D9  0830               	movf	(_LCDWriteFloat_FloatNumber),w
  1021  05DA  00BF               	movwf	(?___fttol)
  1022  05DB  0831               	movf	(_LCDWriteFloat_FloatNumber+1),w
  1023  05DC  00C0               	movwf	(?___fttol+1)
  1024  05DD  0832               	movf	(_LCDWriteFloat_FloatNumber+2),w
  1025  05DE  00C1               	movwf	(?___fttol+2)
  1026  05DF  120A  118A  21EE   	fcall	___fttol
              120A  118A         
  1027  05E4  1283               	bcf	status, 5	;RP0=0, select bank0
  1028  05E5  1303               	bcf	status, 6	;RP1=0, select bank0
  1029                           	
  1030  05E6  0840               	movf	(1+?___fttol),w
  1031  05E7  01B7               	clrf	(_LCDWriteFloat_n+1)
  1032  05E8  07B7               	addwf	(_LCDWriteFloat_n+1)
  1033  05E9  083F               	movf	(0+?___fttol),w
  1034  05EA  01B6               	clrf	(_LCDWriteFloat_n)
  1035  05EB  07B6               	addwf	(_LCDWriteFloat_n)
  1036                           
  1037                           	line	103
  1038                           ;LCD.c: 103: Temp = n;
  1039                           	
  1040                           	
  1041  05EC  0837               	movf	(_LCDWriteFloat_n+1),w
  1042  05ED  01B5               	clrf	(_LCDWriteFloat_Temp+1)
  1043  05EE  07B5               	addwf	(_LCDWriteFloat_Temp+1)
  1044  05EF  0836               	movf	(_LCDWriteFloat_n),w
  1045  05F0  01B4               	clrf	(_LCDWriteFloat_Temp)
  1046  05F1  07B4               	addwf	(_LCDWriteFloat_Temp)
  1047                           
  1048                           	line	104
  1049                           ;LCD.c: 104: LCDWriteInteger(n);
  1050                           	
  1051                           	
  1052  05F2  0837               	movf	(_LCDWriteFloat_n+1),w
  1053  05F3  01C0               	clrf	(?_LCDWriteInteger+1)
  1054  05F4  07C0               	addwf	(?_LCDWriteInteger+1)
  1055  05F5  0836               	movf	(_LCDWriteFloat_n),w
  1056+ 05F6  01BF               	clrf	(?_LCDWriteInteger)
  1057  05F7  07BF               	addwf	(?_LCDWriteInteger)
  1058                           
  1059  05F8  120A  118A  22D5   	fcall	_LCDWriteInteger
              120A  118A         
  1060                           	line	105
  1061                           ;LCD.c: 105: LCDWriteData('.');
  1062  05FD  302E               	movlw	(02Eh)
  1063  05FE  120A  158A  2640   	fcall	_LCDWriteData
              120A  118A         
  1064                           	line	106
  1065                           ;LCD.c: 106: FloatNumber = ((FloatNumber - n) +
                                  1) * 1000;
  1066  0603  1283               	bcf	status, 5	;RP0=0, select bank0
  1067  0604  1303               	bcf	status, 6	;RP1=0, select bank0
  1068                           	
  1069                           	
  1070  0605  0837               	movf	(_LCDWriteFloat_n+1),w
  1071  0606  01C0               	clrf	(?___awtoft+1)
  1072  0607  07C0               	addwf	(?___awtoft+1)
  1073  0608  0836               	movf	(_LCDWriteFloat_n),w
  1074  0609  01BF               	clrf	(?___awtoft)
  1075  060A  07BF               	addwf	(?___awtoft)
  1076                           
  1077  060B  120A  158A  27B0   	fcall	___awtoft
              120A  118A         
  1078  0610  1283               	bcf	status, 5	;RP0=0, select bank0
  1079  0611  1303               	bcf	status, 6	;RP1=0, select bank0
  1080                           	
  1081  0612  083F               	movf	(0+?___awtoft),w
  1082  0613  00C2               	movwf	(0+(?___ftsub)+03h)
  1083  0614  0840               	movf	(1+?___awtoft),w
  1084  0615  00C3               	movwf	(1+(?___ftsub)+03h)
  1085  0616  0841               	movf	(2+?___awtoft),w
  1086  0617  00C4               	movwf	(2+(?___ftsub)+03h)
  1087                           	
  1088                           	
  1089  0618  0830               	movf	(_LCDWriteFloat_FloatNumber),w
  1090  0619  00BF               	movwf	(?___ftsub)
  1091  061A  0831               	movf	(_LCDWriteFloat_FloatNumber+1),w
  1092  061B  00C0               	movwf	(?___ftsub+1)
  1093  061C  0832               	movf	(_LCDWriteFloat_FloatNumber+2),w
  1094  061D  00C1               	movwf	(?___ftsub+2)
  1095  061E  120A  158A  268D   	fcall	___ftsub
              120A  118A         
  1096  0623  1283               	bcf	status, 5	;RP0=0, select bank0
  1097  0624  1303               	bcf	status, 6	;RP1=0, select bank0
  1098                           	
  1099  0625  083F               	movf	(0+?___ftsub),w
  1100  0626  00C5               	movwf	(?___ftadd)
  1101  0627  0840               	movf	(1+?___ftsub),w
  1102  0628  00C6               	movwf	(?___ftadd+1)
  1103  0629  0841               	movf	(2+?___ftsub),w
  1104  062A  00C7               	movwf	(?___ftadd+2)
  1105                           	
  1106  062B  3000               	movlw	0x0
  1107  062C  00C8               	movwf	(0+(?___ftadd)+03h)
  1108  062D  3080               	movlw	0x80
  1109  062E  00C9               	movwf	(1+(?___ftadd)+03h)
  1110  062F  303F               	movlw	0x3f
  1111  0630  00CA               	movwf	(2+(?___ftadd)+03h)
  1112  0631  120A  118A  2484   	fcall	___ftadd
              120A  118A         
  1113  0636  1283               	bcf	status, 5	;RP0=0, select bank0
  1114  0637  1303               	bcf	status, 6	;RP1=0, select bank0
  1115                           	
  1116  0638  0845               	movf	(0+?___ftadd),w
  1117  0639  00BF               	movwf	(?___ftmul)
  1118  063A  0846               	movf	(1+?___ftadd),w
  1119  063B  00C0               	movwf	(?___ftmul+1)
  1120  063C  0847               	movf	(2+?___ftadd),w
  1121  063D  00C1               	movwf	(?___ftmul+2)
  1122                           	
  1123  063E  3000               	movlw	0x0
  1124  063F  00C2               	movwf	(0+(?___ftmul)+03h)
  1125  0640  307A               	movlw	0x7a
  1126  0641  00C3               	movwf	(1+(?___ftmul)+03h)
  1127  0642  3044               	movlw	0x44
  1128  0643  00C4               	movwf	(2+(?___ftmul)+03h)
  1129  0644  120A  118A  23E1   	fcall	___ftmul
              120A  118A         
  1130  0649  1283               	bcf	status, 5	;RP0=0, select bank0
  1131  064A  1303               	bcf	status, 6	;RP1=0, select bank0
  1132                           	
  1133  064B  083F               	movf	(0+?___ftmul),w
  1134  064C  00B0               	movwf	(_LCDWriteFloat_FloatNumber)
  1135  064D  0840               	movf	(1+?___ftmul),w
  1136  064E  00B1               	movwf	(_LCDWriteFloat_FloatNumber+1)
  1137  064F  0841               	movf	(2+?___ftmul),w
  1138  0650  00B2               	movwf	(_LCDWriteFloat_FloatNumber+2)
  1139                           	line	107
  1140                           ;LCD.c: 107: n = FloatNumber;
  1141                           	
  1142                           	
  1143  0651  0830               	movf	(_LCDWriteFloat_FloatNumber),w
  1144  0652  00BF               	movwf	(?___fttol)
  1145  0653  0831               	movf	(_LCDWriteFloat_FloatNumber+1),w
  1146  0654  00C0               	movwf	(?___fttol+1)
  1147  0655  0832               	movf	(_LCDWriteFloat_FloatNumber+2),w
  1148  0656  00C1               	movwf	(?___fttol+2)
  1149  0657  120A  118A  21EE   	fcall	___fttol
              120A  118A         
  1150  065C  1283               	bcf	status, 5	;RP0=0, select bank0
  1151  065D  1303               	bcf	status, 6	;RP1=0, select bank0
  1152                           	
  1153  065E  0840               	movf	(1+?___fttol),w
  1154  065F  01B7               	clrf	(_LCDWriteFloat_n+1)
  1155  0660  07B7               	addwf	(_LCDWriteFloat_n+1)
  1156  0661  083F               	movf	(0+?___fttol),w
  1157  0662  01B6               	clrf	(_LCDWriteFloat_n)
  1158  0663  07B6               	addwf	(_LCDWriteFloat_n)
  1159                           
  1160                           	line	109
  1161                           ;LCD.c: 109: while(n > 0)
  1162  0664  2E9A               	goto	l31
  1163                           	
  1164  0665                     l32:	
  1165                           	line	111
  1166                           ;LCD.c: 110: {
  1167                           ;LCD.c: 111: c[i++] = (n % 10) + 48;
  1168  0665  300A               	movlw	low(0Ah)
  1169                           	
  1170  0666  00CB               	movwf	(0+(?___awmod)+02h)
  1171  0667  3000               	movlw	high(0Ah)
  1172  0668  00CC               	movwf	((0+(?___awmod)+02h))+1
  1173                           	
  1174                           	
  1175  0669  0837               	movf	(_LCDWriteFloat_n+1),w
  1176  066A  01CA               	clrf	(?___awmod+1)
  1177  066B  07CA               	addwf	(?___awmod+1)
  1178  066C  0836               	movf	(_LCDWriteFloat_n),w
  1179  066D  01C9               	clrf	(?___awmod)
  1180  066E  07C9               	addwf	(?___awmod)
  1181                           
  1182  066F  120A  118A  2193   	fcall	___awmod
              120A  118A         
  1183  0674  1283               	bcf	status, 5	;RP0=0, select bank0
  1184  0675  1303               	bcf	status, 6	;RP1=0, select bank0
  1185  0676  0849               	movf	(0+?___awmod),w
  1186  0677  3E30               	addlw	030h
  1187  0678  00BE               	movwf	(??_LCDWriteFloat+11+0)
  1188                           	
  1189  0679  0833               	movf	(_LCDWriteFloat_i),w
  1190  067A  3E38               	addlw	(_LCDWriteFloat_c)&0ffh
  1191  067B  1383               	bcf	status, 7	;select IRP bank0
  1192                           	
  1193  067C  0084               	movwf	fsr0
  1194  067D  083E               	movf	(??_LCDWriteFloat+11+0),w
  1195  067E  0080               	movwf	indf
  1196  067F  3001               	movlw	(01h)
  1197  0680  00BE               	movwf	(??_LCDWriteFloat+11+0)
  1198                           	
  1199  0681  083E               	movf	(??_LCDWriteFloat+11+0),w
  1200  0682  07B3               	addwf	(_LCDWriteFloat_i),f
  1201                           	line	112
  1202                           ;LCD.c: 112: n /= 10;
  1203  0683  300A               	movlw	low(0Ah)
  1204                           	
  1205  0684  00CB               	movwf	(0+(?___awdiv)+02h)
  1206  0685  3000               	movlw	high(0Ah)
  1207  0686  00CC               	movwf	((0+(?___awdiv)+02h))+1
  1208                           	
  1209                           	
  1210  0687  0837               	movf	(_LCDWriteFloat_n+1),w
  1211  0688  01CA               	clrf	(?___awdiv+1)
  1212  0689  07CA               	addwf	(?___awdiv+1)
  1213  068A  0836               	movf	(_LCDWriteFloat_n),w
  1214  068B  01C9               	clrf	(?___awdiv)
  1215  068C  07C9               	addwf	(?___awdiv)
  1216                           
  1217  068D  120A  118A  2261   	fcall	___awdiv
              120A  118A         
  1218  0692  1283               	bcf	status, 5	;RP0=0, select bank0
  1219  0693  1303               	bcf	status, 6	;RP1=0, select bank0
  1220                           	
  1221  0694  084A               	movf	(1+?___awdiv),w
  1222  0695  01B7               	clrf	(_LCDWriteFloat_n+1)
  1223  0696  07B7               	addwf	(_LCDWriteFloat_n+1)
  1224  0697  0849               	movf	(0+?___awdiv),w
  1225  0698  01B6               	clrf	(_LCDWriteFloat_n)
  1226  0699  07B6               	addwf	(_LCDWriteFloat_n)
  1227                           
  1228                           	line	113
  1229                           	
  1230  069A                     l31:	
  1231                           	line	109
  1232                           	
  1233  069A  0837               	movf	(_LCDWriteFloat_n+1),w
  1234  069B  3A80               	xorlw	80h
  1235  069C  00BE               	movwf	(??_LCDWriteFloat+11+0)
  1236  069D  3080               	movlw	(high(01h))^80h
  1237  069E  023E               	subwf	(??_LCDWriteFloat+11+0),w
  1238  069F  1D03               	skipz
  1239  06A0  2EA3               	goto	u25310
  1240  06A1                     u25315:
  1241  06A1  3001               	movlw	low(01h)
  1242  06A2  0236               	subwf	(_LCDWriteFloat_n),w
  1243  06A3                     u25310:
  1244                           
  1245  06A3  1803               	skipnc
  1246  06A4  2EA6               	goto	u2531
  1247  06A5  2EA7               	goto	u2530
  1248  06A6                     u2531:
  1249  06A6  2E65               	goto	l32
  1250  06A7                     u2530:
  1251                           	
  1252  06A7                     l33:	
  1253                           	line	114
  1254                           ;LCD.c: 113: }
  1255                           ;LCD.c: 114: i -= 1;
  1256                           	
  1257                           	
  1258  06A7  3001               	movlw	low(01h)
  1259  06A8  02B3               	subwf	(_LCDWriteFloat_i),f
  1260                           	line	115
  1261                           ;LCD.c: 115: while(i-- > 1)
  1262  06A9  2EB4               	goto	l34
  1263                           	
  1264  06AA                     l35:	
  1265                           	line	116
  1266                           ;LCD.c: 116: LCDWriteData(c[i]);
  1267                           	
  1268  06AA  0833               	movf	(_LCDWriteFloat_i),w
  1269  06AB  3E38               	addlw	(_LCDWriteFloat_c)&0ffh
  1270  06AC  1383               	bcf	status, 7	;select IRP bank0
  1271                           	
  1272  06AD  0084               	movwf	fsr0
  1273  06AE  0800               	movf	indf,w
  1274  06AF  120A  158A  2640   	fcall	_LCDWriteData
              120A  118A         
  1275                           	
  1276  06B4                     l34:	
  1277                           	line	115
  1278                           	
  1279  06B4  1283               	bcf	status, 5	;RP0=0, select bank0
  1280  06B5  1303               	bcf	status, 6	;RP1=0, select bank0
  1281                           	
  1282  06B6  3001               	movlw	low(01h)
  1283  06B7  02B3               	subwf	(_LCDWriteFloat_i),f
  1284  06B8  3001               	movlw	(01h)
  1285  06B9  0233               	subwf	((_LCDWriteFloat_i))&07fh,w
  1286  06BA  1803               	skipnc
  1287  06BB  2EBD               	goto	u2541
  1288  06BC  2EBE               	goto	u2540
  1289  06BD                     u2541:
  1290  06BD  2EAA               	goto	l35
  1291  06BE                     u2540:
  1292                           	
  1293  06BE                     l36:	
  1294                           	line	118
  1295                           ;LCD.c: 118: if(Temp < 10)
  1296                           	
  1297  06BE  0835               	movf	(_LCDWriteFloat_Temp+1),w
  1298  06BF  3A80               	xorlw	80h
  1299  06C0  00BE               	movwf	(??_LCDWriteFloat+11+0)
  1300  06C1  3080               	movlw	(high(0Ah))^80h
  1301  06C2  023E               	subwf	(??_LCDWriteFloat+11+0),w
  1302  06C3  1D03               	skipz
  1303  06C4  2EC7               	goto	u25510
  1304  06C5                     u25515:
  1305  06C5  300A               	movlw	low(0Ah)
  1306  06C6  0234               	subwf	(_LCDWriteFloat_Temp),w
  1307  06C7                     u25510:
  1308                           
  1309  06C7  1803               	skipnc
  1310  06C8  2ECA               	goto	u2551
  1311  06C9  2ECB               	goto	u2550
  1312  06CA                     u2551:
  1313  06CA  2ED7               	goto	l37
  1314  06CB                     u2550:
  1315                           	line	120
  1316                           ;LCD.c: 119: {
  1317                           ;LCD.c: 120: LCDWriteCommand(0xcc);
  1318  06CB  30CC               	movlw	(0CCh)
  1319  06CC  120A  158A  264B   	fcall	_LCDWriteCommand
              120A  118A         
  1320                           	line	121
  1321                           ;LCD.c: 121: LCDWriteString("  ");
  1322  06D1  3012               	movlw	((STR_2-__stringbase))&0ffh
  1323  06D2  120A  158A  26AA   	fcall	_LCDWriteString
              120A  118A         
  1324                           	line	123
  1325                           	
  1326  06D7                     l37:	
  1327                           	line	124
  1328                           ;LCD.c: 123: }
  1329                           ;LCD.c: 124: if(Temp >= 10 && Temp < 100)
  1330  06D7  1283               	bcf	status, 5	;RP0=0, select bank0
  1331  06D8  1303               	bcf	status, 6	;RP1=0, select bank0
  1332                           	
  1333  06D9  0835               	movf	(_LCDWriteFloat_Temp+1),w
  1334  06DA  3A80               	xorlw	80h
  1335  06DB  00BE               	movwf	(??_LCDWriteFloat+11+0)
  1336  06DC  3080               	movlw	(high(0Ah))^80h
  1337  06DD  023E               	subwf	(??_LCDWriteFloat+11+0),w
  1338  06DE  1D03               	skipz
  1339  06DF  2EE2               	goto	u25610
  1340  06E0                     u25615:
  1341  06E0  300A               	movlw	low(0Ah)
  1342  06E1  0234               	subwf	(_LCDWriteFloat_Temp),w
  1343  06E2                     u25610:
  1344                           
  1345  06E2  1C03               	skipc
  1346  06E3  2EE5               	goto	u2561
  1347  06E4  2EE6               	goto	u2560
  1348  06E5                     u2561:
  1349  06E5  2EFF               	goto	l38
  1350  06E6                     u2560:
  1351                           	
  1352  06E6  0835               	movf	(_LCDWriteFloat_Temp+1),w
  1353  06E7  3A80               	xorlw	80h
  1354  06E8  00BE               	movwf	(??_LCDWriteFloat+11+0)
  1355  06E9  3080               	movlw	(high(064h))^80h
  1356  06EA  023E               	subwf	(??_LCDWriteFloat+11+0),w
  1357  06EB  1D03               	skipz
  1358  06EC  2EEF               	goto	u25710
  1359  06ED                     u25715:
  1360  06ED  3064               	movlw	low(064h)
  1361  06EE  0234               	subwf	(_LCDWriteFloat_Temp),w
  1362  06EF                     u25710:
  1363                           
  1364  06EF  1803               	skipnc
  1365  06F0  2EF2               	goto	u2571
  1366  06F1  2EF3               	goto	u2570
  1367  06F2                     u2571:
  1368  06F2  2EFF               	goto	l38
  1369  06F3                     u2570:
  1370                           	line	126
  1371                           ;LCD.c: 125: {
  1372                           ;LCD.c: 126: LCDWriteCommand(0xcd);
  1373  06F3  30CD               	movlw	(0CDh)
  1374  06F4  120A  158A  264B   	fcall	_LCDWriteCommand
              120A  118A         
  1375                           	line	127
  1376                           ;LCD.c: 127: LCDWriteString(" ");
  1377  06F9  3013               	movlw	((STR_3-__stringbase))&0ffh
  1378  06FA  120A  158A  26AA   	fcall	_LCDWriteString
              120A  118A         
  1379                           	line	129
  1380                           	
  1381  06FF                     l38:	
  1382                           	line	130
  1383                           ;LCD.c: 129: }
  1384                           ;LCD.c: 130: }
  1385  06FF                     l29:	
  1386  06FF  0008               	return
  1387                           ; =============== function _LCDWriteFloat ends 
                                 ===============
  1388                           
  1389                           GLOBAL __end_of_LCDWriteFloat
  1390  0700                     	__end_of_LCDWriteFloat:
  1391                           	FNSIZE	_LCDWriteFloat,12,3
  1392                           	signat	_LCDWriteFloat,4216
  1393                           	global	_MainSystemInitialize
  1394                           	global	??_MainSystemInitialize
  1395                           	global	?_MainSystemInitialize
  1396                           
  1397                           ; *************** function _MainSystemInitializ
                                 e ***************
  1398                           ; Defined at:
  1399                           ;		line 47 in file "C:\Users\hardik\Desktop\ADC
                                 \main.c"
  1400                           ; Parameters:
  1401                           ;		None
  1402                           ; Auto variables:
  1403                           ;		None
  1404                           ; Return value:
  1405                           ;		type: void 
  1406                           ;		size: 0
  1407                           ; Registers used:
  1408                           ;		wreg, status,2, status,0, pclath, cstack
  1409                           ; Tracked objects:
  1410                           ;		On entry : BFF/0
  1411                           ;		On exit  : 0/0
  1412                           ;		Unchanged: 0/0
  1413                           ; Data sizes:
  1414                           ;		Autos:    0
  1415                           ;		Params:   0
  1416                           ;		Temp:     0
  1417                           ;		Total:    0
  1418                           ; This function calls:
  1419                           ;		_LCDInitialize
  1420                           ; This function is called by:
  1421                           ;		_main
  1422                           ; This function uses a non-reentrant model
  1423                           ; 
  1424                           	psect	text197,local,class=CODE,delta=2
  1425                           	file	"C:\Users\hardik\Desktop\ADC\main.c"
  1426                           	line	47
  1427                           ;main.c: 46: static void MainSystemInitialize(v
                                 oid)
  1428                           ;main.c: 47: {
  1429                           	
  1430  00FB                     _MainSystemInitialize:	
  1431                           	opt stack 6
  1432                           ; Regs used in _MainSystemInitialize: [wreg+sta
                                 tus,2+status,0+pclath+cstack]
  1433                           	line	48
  1434                           ;main.c: 48: LCDInitialize();
  1435  00FB  120A  158A  2721   	fcall	_LCDInitialize
              120A  118A         
  1436                           	line	49
  1437                           ;main.c: 49: }
  1438  0100                     l55:	
  1439  0100  0008               	return
  1440                           ; =============== function _MainSystemInitializ
                                 e ends ===============
  1441                           
  1442                           GLOBAL __end_of_MainSystemInitialize
  1443  0101                     	__end_of_MainSystemInitialize:
  1444                           	FNSIZE	_MainSystemInitialize,0,0
  1445                           	signat	_MainSystemInitialize,88
  1446                           	global	___ftdiv
  1447                           	global	??___ftdiv
  1448                           	global	?___ftdiv
  1449                           
  1450                           ; *************** function ___ftdiv ***********
                                 ****
  1451                           ; Defined at:
  1452                           ;		line 19 in file "C:\Program Files (x86)\HI-T
                                 ECH Software\PICC\PRO\9.65\sources\ftdiv.c"
  1453                           ; Parameters:
  1454                           ;		f1          	offs:   0	type: float 
  1455                           ;		f2          	offs:   3	type: float 
  1456                           ; Auto variables:
  1457                           ;		exp2        	       	type: unsigned char 
  1458                           ;		sign1       	       	type: unsigned char 
  1459                           ;		sign2       	       	type: unsigned char 
  1460                           ;		exp1        	       	type: unsigned char 
  1461                           ;		f3          	       	type: float 
  1462                           ; Return value:
  1463                           ;		type: float 
  1464                           ;		size: 3
  1465                           ; Registers used:
  1466                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
                                 th, cstack
  1467                           ; Tracked objects:
  1468                           ;		On entry : 300/0
  1469                           ;		On exit  : 0/0
  1470                           ;		Unchanged: 0/0
  1471                           ; Data sizes:
  1472                           ;		Autos:    7
  1473                           ;		Params:   6
  1474                           ;		Temp:     1
  1475                           ;		Total:   14
  1476                           ; This function calls:
  1477                           ;		___ftunpack
  1478                           ;		___ftpack
  1479                           ; This function is called by:
  1480                           ;		_main
  1481                           ; This function uses a non-reentrant model
  1482                           ; 
  1483                           	psect	text198,local,class=CODE,delta=2
  1484                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\ftdiv.c"
  1485                           	line	19
  1486                           	
  1487  0352                     ___ftdiv:	
  1488                           	opt stack 6
  1489                           ; Regs used in ___ftdiv: [wreg-fsr0h+status,2+s
                                 tatus,0+pclath+cstack]
  1490                           	line	23
  1491                           	
  1492  0352  3000               	movlw	0
  1493  0353  00BA               	movwf	(___ftdiv_f3)
  1494  0354  3000               	movlw	0
  1495  0355  00BB               	movwf	(___ftdiv_f3+1)
  1496  0356  3000               	movlw	0
  1497  0357  00BC               	movwf	(___ftdiv_f3+2)
  1498                           	line	24
  1499                           	
  1500  0358  3038               	movlw	((___ftdiv_exp1))&0ffh
  1501                           	
  1502  0359  00D1               	movwf	(?___ftunpack)
  1503                           	
  1504  035A  3030               	movlw	((___ftdiv_f1))&0ffh
  1505  035B  120A  118A  2139   	fcall	___ftunpack
              120A  118A         
  1506  0360  1283               	bcf	status, 5	;RP0=0, select bank0
  1507  0361  1303               	bcf	status, 6	;RP1=0, select bank0
  1508                           	
  1509  0362  00B7               	movwf	(___ftdiv_sign1)
  1510                           	line	25
  1511                           	
  1512  0363  08B8               	movf	(___ftdiv_exp1),f
  1513  0364  1D03               	skipz
  1514  0365  2B67               	goto	u2711
  1515  0366  2B68               	goto	u2710
  1516  0367                     u2711:
  1517  0367  2B6F               	goto	l132
  1518  0368                     u2710:
  1519                           	line	26
  1520                           	
  1521                           	
  1522  0368  083A               	movf	(___ftdiv_f3),w
  1523  0369  00B0               	movwf	(?___ftdiv)
  1524  036A  083B               	movf	(___ftdiv_f3+1),w
  1525  036B  00B1               	movwf	(?___ftdiv+1)
  1526  036C  083C               	movf	(___ftdiv_f3+2),w
  1527  036D  00B2               	movwf	(?___ftdiv+2)
  1528  036E  2BE0               	goto	l131
  1529                           	
  1530  036F                     l132:	
  1531                           	line	27
  1532                           	
  1533  036F  3036               	movlw	((___ftdiv_exp2))&0ffh
  1534                           	
  1535  0370  00D1               	movwf	(?___ftunpack)
  1536                           	
  1537  0371  3033               	movlw	((___ftdiv_f2))&0ffh
  1538  0372  120A  118A  2139   	fcall	___ftunpack
              120A  118A         
  1539  0377  1283               	bcf	status, 5	;RP0=0, select bank0
  1540  0378  1303               	bcf	status, 6	;RP1=0, select bank0
  1541                           	
  1542  0379  00B9               	movwf	(___ftdiv_sign2)
  1543                           	line	28
  1544                           	
  1545  037A  08B6               	movf	(___ftdiv_exp2),f
  1546  037B  1D03               	skipz
  1547  037C  2B7E               	goto	u2721
  1548  037D  2B7F               	goto	u2720
  1549  037E                     u2721:
  1550  037E  2B86               	goto	l133
  1551  037F                     u2720:
  1552                           	line	29
  1553                           	
  1554                           	
  1555  037F  083A               	movf	(___ftdiv_f3),w
  1556  0380  00B0               	movwf	(?___ftdiv)
  1557  0381  083B               	movf	(___ftdiv_f3+1),w
  1558  0382  00B1               	movwf	(?___ftdiv+1)
  1559  0383  083C               	movf	(___ftdiv_f3+2),w
  1560  0384  00B2               	movwf	(?___ftdiv+2)
  1561  0385  2BE0               	goto	l131
  1562                           	
  1563  0386                     l133:	
  1564                           	line	30
  1565                           	
  1566  0386  0836               	movf	(___ftdiv_exp2),w
  1567  0387  3E89               	addlw	089h
  1568  0388  00BD               	movwf	(??___ftdiv+7+0)
  1569                           	
  1570  0389  083D               	movf	(??___ftdiv+7+0),w
  1571  038A  02B8               	subwf	(___ftdiv_exp1),f
  1572                           	line	31
  1573                           	
  1574  038B  0839               	movf	(___ftdiv_sign2),w
  1575  038C  00BD               	movwf	(??___ftdiv+7+0)
  1576                           	
  1577  038D  083D               	movf	(??___ftdiv+7+0),w
  1578  038E  06B7               	xorwf	(___ftdiv_sign1),f
  1579                           	line	32
  1580  038F  3018               	movlw	(018h)
  1581                           	
  1582  0390  00B9               	movwf	(___ftdiv_sign2)
  1583                           	line	33
  1584                           	
  1585  0391                     l136:	
  1586                           	line	34
  1587                           	
  1588  0391  3001               	movlw	01h
  1589  0392                     u2735:
  1590  0392  1003               	clrc
  1591  0393  0DBA               	rlf	(___ftdiv_f3),f
  1592  0394  0DBB               	rlf	(___ftdiv_f3+1),f
  1593  0395  0DBC               	rlf	(___ftdiv_f3+2),f
  1594  0396  3EFF               	addlw	-1
  1595  0397  1D03               	skipz
  1596  0398  2B92               	goto	u2735
  1597                           	line	35
  1598                           	
  1599                           	
  1600  0399  0835               	movf	(___ftdiv_f2+2),w
  1601  039A  0232               	subwf	(___ftdiv_f1+2),w
  1602  039B  1D03               	skipz
  1603  039C  2BA3               	goto	u2745
  1604  039D  0834               	movf	(___ftdiv_f2+1),w
  1605  039E  0231               	subwf	(___ftdiv_f1+1),w
  1606  039F  1D03               	skipz
  1607  03A0  2BA3               	goto	u2745
  1608  03A1  0833               	movf	(___ftdiv_f2),w
  1609  03A2  0230               	subwf	(___ftdiv_f1),w
  1610  03A3                     u2745:
  1611  03A3  1C03               	skipc
  1612  03A4  2BA6               	goto	u2741
  1613  03A5  2BA7               	goto	u2740
  1614  03A6                     u2741:
  1615  03A6  2BB7               	goto	l137
  1616  03A7                     u2740:
  1617                           	line	36
  1618                           	
  1619                           	
  1620  03A7  0833               	movf	(___ftdiv_f2),w
  1621  03A8  02B0               	subwf	(___ftdiv_f1),f
  1622  03A9  0834               	movf	(___ftdiv_f2+1),w
  1623  03AA  1C03               	skipc
  1624  03AB  0F34               	incfsz	(___ftdiv_f2+1),w
  1625  03AC  02B1               	subwf	(___ftdiv_f1+1),f
  1626  03AD  0835               	movf	(___ftdiv_f2+2),w
  1627  03AE  1C03               	skipc
  1628  03AF  0A35               	incf	(___ftdiv_f2+2),w
  1629  03B0  02B2               	subwf	(___ftdiv_f1+2),f
  1630                           	line	37
  1631                           	
  1632  03B1  3001               	movlw	01h
  1633  03B2  04BA               	iorwf	(___ftdiv_f3),f
  1634  03B3  3000               	movlw	0
  1635  03B4  04BB               	iorwf	(___ftdiv_f3+1),f
  1636  03B5  3000               	movlw	0
  1637  03B6  04BC               	iorwf	(___ftdiv_f3+2),f
  1638                           	line	38
  1639                           	
  1640  03B7                     l137:	
  1641                           	line	39
  1642                           	
  1643  03B7  3001               	movlw	01h
  1644  03B8                     u2755:
  1645  03B8  1003               	clrc
  1646  03B9  0DB0               	rlf	(___ftdiv_f1),f
  1647  03BA  0DB1               	rlf	(___ftdiv_f1+1),f
  1648  03BB  0DB2               	rlf	(___ftdiv_f1+2),f
  1649  03BC  3EFF               	addlw	-1
  1650  03BD  1D03               	skipz
  1651  03BE  2BB8               	goto	u2755
  1652                           	line	40
  1653                           	
  1654                           	
  1655  03BF  3001               	movlw	low(01h)
  1656  03C0  02B9               	subwf	(___ftdiv_sign2),f
  1657  03C1  1D03               	btfss	status,2
  1658  03C2  2BC4               	goto	u2761
  1659  03C3  2BC5               	goto	u2760
  1660  03C4                     u2761:
  1661  03C4  2B91               	goto	l136
  1662  03C5                     u2760:
  1663                           	
  1664  03C5                     l135:	
  1665                           	line	41
  1666                           	
  1667  03C5  0838               	movf	(___ftdiv_exp1),w
  1668                           	
  1669  03C6  00D1               	movwf	(?___ftpack)
  1670                           	
  1671  03C7  303A               	movlw	((___ftdiv_f3))&0ffh
  1672  03C8  120A  118A  2729   	fcall	___ftpack
              120A  118A         
  1673                           	line	42
  1674  03CD  1283               	bcf	status, 5	;RP0=0, select bank0
  1675  03CE  1303               	bcf	status, 6	;RP1=0, select bank0
  1676                           	
  1677  03CF  08B7               	movf	(___ftdiv_sign1),f
  1678  03D0  1D03               	skipz
  1679  03D1  2BD3               	goto	u2770
  1680  03D2  2BD9               	goto	l138
  1681  03D3                     u2770:
  1682                           	line	43
  1683                           	
  1684  03D3  3000               	movlw	0
  1685  03D4  04BA               	iorwf	(___ftdiv_f3),f
  1686  03D5  3000               	movlw	0
  1687  03D6  04BB               	iorwf	(___ftdiv_f3+1),f
  1688  03D7  3080               	movlw	080h
  1689  03D8  04BC               	iorwf	(___ftdiv_f3+2),f
  1690                           	
  1691  03D9                     l138:	
  1692                           	line	44
  1693                           	
  1694                           	
  1695  03D9  083A               	movf	(___ftdiv_f3),w
  1696  03DA  00B0               	movwf	(?___ftdiv)
  1697  03DB  083B               	movf	(___ftdiv_f3+1),w
  1698  03DC  00B1               	movwf	(?___ftdiv+1)
  1699  03DD  083C               	movf	(___ftdiv_f3+2),w
  1700  03DE  00B2               	movwf	(?___ftdiv+2)
  1701  03DF  2BE0               	goto	l131
  1702                           	line	45
  1703  03E0                     l131:	
  1704  03E0  0008               	return
  1705                           ; =============== function ___ftdiv ends ======
                                 =========
  1706                           
  1707                           GLOBAL __end_of___ftdiv
  1708  03E1                     	__end_of___ftdiv:
  1709                           	FNSIZE	___ftdiv,8,6
  1710                           	signat	___ftdiv,8315
  1711                           	global	_LCDWriteInteger
  1712                           	global	??_LCDWriteInteger
  1713                           	global	?_LCDWriteInteger
  1714                           
  1715                           ; *************** function _LCDWriteInteger ***
                                 ************
  1716                           ; Defined at:
  1717                           ;		line 132 in file "C:\Users\hardik\Desktop\AD
                                 C\LCD.c"
  1718                           ; Parameters:
  1719                           ;		IntegerNumbe	offs:   0	type: int 
  1720                           ; Auto variables:
  1721                           ;		i           	       	type: unsigned char 
  1722                           ;		c           	       	type: unsigned char [6]
  1723                           ; Return value:
  1724                           ;		type: void 
  1725                           ;		size: 0
  1726                           ; Registers used:
  1727                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
                                 th, cstack
  1728                           ; Tracked objects:
  1729                           ;		On entry : 300/0
  1730                           ;		On exit  : 0/0
  1731                           ;		Unchanged: 0/0
  1732                           ; Data sizes:
  1733                           ;		Autos:    7
  1734                           ;		Params:   2
  1735                           ;		Temp:     1
  1736                           ;		Total:   10
  1737                           ; This function calls:
  1738                           ;		_LCDWriteData
  1739                           ;		___awmod
  1740                           ;		___awdiv
  1741                           ; This function is called by:
  1742                           ;		_LCDWriteFloat
  1743                           ; This function uses a non-reentrant model
  1744                           ; 
  1745                           	psect	text199,local,class=CODE,delta=2
  1746                           	file	"C:\Users\hardik\Desktop\ADC\LCD.c"
  1747                           	line	132
  1748                           ;LCD.c: 131: void LCDWriteInteger(int IntegerNu
                                 mber)
  1749                           ;LCD.c: 132: {
  1750                           	
  1751  02D5                     _LCDWriteInteger:	
  1752                           	opt stack 5
  1753                           ; Regs used in _LCDWriteInteger: [wreg-fsr0h+st
                                 atus,2+status,0+pclath+cstack]
  1754                           	line	134
  1755                           ;LCD.c: 133: unsigned char c[6];
  1756                           ;LCD.c: 134: unsigned char i = 0;
  1757  02D5  1003               	clrc
  1758                           	
  1759  02D6  3000               	movlw	0
  1760  02D7  1803               	btfsc	status,0
  1761  02D8  3001               	movlw	1
  1762  02D9  00C1               	movwf	(_LCDWriteInteger_i)
  1763                           	line	136
  1764                           ;LCD.c: 136: if(IntegerNumber < 0)
  1765                           	
  1766  02DA  1FC0               	btfss	(_LCDWriteInteger_IntegerNumber+1),7
  1767  02DB  2ADD               	goto	u2601
  1768  02DC  2ADE               	goto	u2600
  1769  02DD                     u2601:
  1770  02DD  2AEB               	goto	l40
  1771  02DE                     u2600:
  1772                           	line	138
  1773                           ;LCD.c: 137: {
  1774                           ;LCD.c: 138: LCDWriteData('-');
  1775  02DE  302D               	movlw	(02Dh)
  1776  02DF  120A  158A  2640   	fcall	_LCDWriteData
              120A  118A         
  1777                           	line	139
  1778                           ;LCD.c: 139: IntegerNumber = - (IntegerNumber);
  1779  02E4  1283               	bcf	status, 5	;RP0=0, select bank0
  1780  02E5  1303               	bcf	status, 6	;RP1=0, select bank0
  1781                           	
  1782  02E6  09BF               	comf	(_LCDWriteInteger_IntegerNumber),f
  1783  02E7  09C0               	comf	(_LCDWriteInteger_IntegerNumber+1),f
  1784  02E8  0ABF               	incf	(_LCDWriteInteger_IntegerNumber),f
  1785  02E9  1903               	skipnz
  1786  02EA  0AC0               	incf	(_LCDWriteInteger_IntegerNumber+1),f
  1787                           	
  1788                           	line	140
  1789                           	
  1790  02EB                     l40:	
  1791                           	line	142
  1792                           ;LCD.c: 140: }
  1793                           ;LCD.c: 142: if(IntegerNumber == 0)
  1794                           	
  1795  02EB  0840               	movf	((_LCDWriteInteger_IntegerNumber+1)),w
  1796  02EC  043F               	iorwf	((_LCDWriteInteger_IntegerNumber)),w
  1797  02ED  1D03               	skipz
  1798  02EE  2AF0               	goto	u2611
  1799  02EF  2AF1               	goto	u2610
  1800  02F0                     u2611:
  1801  02F0  2AF7               	goto	l41
  1802  02F1                     u2610:
  1803                           	line	143
  1804                           ;LCD.c: 143: LCDWriteData(0x30);
  1805  02F1  3030               	movlw	(030h)
  1806  02F2  120A  158A  2640   	fcall	_LCDWriteData
              120A  118A         
  1807                           	
  1808  02F7                     l41:	
  1809                           	line	145
  1810                           ;LCD.c: 145: while( IntegerNumber > 0)
  1811  02F7  2B2D               	goto	l42
  1812                           	
  1813  02F8                     l43:	
  1814                           	line	147
  1815                           ;LCD.c: 146: {
  1816                           ;LCD.c: 147: c[i++] = ((IntegerNumber % 10) | 0
                                 x30);
  1817  02F8  300A               	movlw	low(0Ah)
  1818                           	
  1819  02F9  00CB               	movwf	(0+(?___awmod)+02h)
  1820  02FA  3000               	movlw	high(0Ah)
  1821  02FB  00CC               	movwf	((0+(?___awmod)+02h))+1
  1822                           	
  1823                           	
  1824  02FC  0840               	movf	(_LCDWriteInteger_IntegerNumber+1),w
  1825  02FD  01CA               	clrf	(?___awmod+1)
  1826  02FE  07CA               	addwf	(?___awmod+1)
  1827  02FF  083F               	movf	(_LCDWriteInteger_IntegerNumber),w
  1828  0300  01C9               	clrf	(?___awmod)
  1829  0301  07C9               	addwf	(?___awmod)
  1830                           
  1831  0302  120A  118A  2193   	fcall	___awmod
              120A  118A         
  1832  0307  1283               	bcf	status, 5	;RP0=0, select bank0
  1833  0308  1303               	bcf	status, 6	;RP1=0, select bank0
  1834  0309  0849               	movf	(0+?___awmod),w
  1835  030A  3830               	iorlw	030h
  1836  030B  00C8               	movwf	(??_LCDWriteInteger+7+0)
  1837                           	
  1838  030C  0841               	movf	(_LCDWriteInteger_i),w
  1839  030D  3E42               	addlw	(_LCDWriteInteger_c)&0ffh
  1840  030E  1383               	bcf	status, 7	;select IRP bank0
  1841                           	
  1842  030F  0084               	movwf	fsr0
  1843  0310  0848               	movf	(??_LCDWriteInteger+7+0),w
  1844  0311  0080               	movwf	indf
  1845  0312  3001               	movlw	(01h)
  1846  0313  00C8               	movwf	(??_LCDWriteInteger+7+0)
  1847                           	
  1848  0314  0848               	movf	(??_LCDWriteInteger+7+0),w
  1849  0315  07C1               	addwf	(_LCDWriteInteger_i),f
  1850                           	line	148
  1851                           ;LCD.c: 148: IntegerNumber /= 10;
  1852  0316  300A               	movlw	low(0Ah)
  1853                           	
  1854  0317  00CB               	movwf	(0+(?___awdiv)+02h)
  1855  0318  3000               	movlw	high(0Ah)
  1856  0319  00CC               	movwf	((0+(?___awdiv)+02h))+1
  1857                           	
  1858                           	
  1859  031A  0840               	movf	(_LCDWriteInteger_IntegerNumber+1),w
  1860  031B  01CA               	clrf	(?___awdiv+1)
  1861  031C  07CA               	addwf	(?___awdiv+1)
  1862  031D  083F               	movf	(_LCDWriteInteger_IntegerNumber),w
  1863  031E  01C9               	clrf	(?___awdiv)
  1864  031F  07C9               	addwf	(?___awdiv)
  1865                           
  1866  0320  120A  118A  2261   	fcall	___awdiv
              120A  118A         
  1867  0325  1283               	bcf	status, 5	;RP0=0, select bank0
  1868  0326  1303               	bcf	status, 6	;RP1=0, select bank0
  1869                           	
  1870  0327  084A               	movf	(1+?___awdiv),w
  1871  0328  01C0               	clrf	(_LCDWriteInteger_IntegerNumber+1)
  1872  0329  07C0               	addwf	(_LCDWriteInteger_IntegerNumber+1)
  1873  032A  0849               	movf	(0+?___awdiv),w
  1874  032B  01BF               	clrf	(_LCDWriteInteger_IntegerNumber)
  1875  032C  07BF               	addwf	(_LCDWriteInteger_IntegerNumber)
  1876                           
  1877                           	line	149
  1878                           	
  1879  032D                     l42:	
  1880                           	line	145
  1881  032D  1283               	bcf	status, 5	;RP0=0, select bank0
  1882  032E  1303               	bcf	status, 6	;RP1=0, select bank0
  1883                           	
  1884  032F  0840               	movf	(_LCDWriteInteger_IntegerNumber+1),w
  1885  0330  3A80               	xorlw	80h
  1886  0331  00C8               	movwf	(??_LCDWriteInteger+7+0)
  1887  0332  3080               	movlw	(high(01h))^80h
  1888  0333  0248               	subwf	(??_LCDWriteInteger+7+0),w
  1889  0334  1D03               	skipz
  1890  0335  2B38               	goto	u26210
  1891  0336                     u26215:
  1892  0336  3001               	movlw	low(01h)
  1893  0337  023F               	subwf	(_LCDWriteInteger_IntegerNumber),w
  1894  0338                     u26210:
  1895                           
  1896  0338  1803               	skipnc
  1897  0339  2B3B               	goto	u2621
  1898  033A  2B3C               	goto	u2620
  1899  033B                     u2621:
  1900  033B  2AF8               	goto	l43
  1901  033C                     u2620:
  1902                           	
  1903  033C                     l44:	
  1904                           	line	151
  1905                           ;LCD.c: 149: }
  1906                           ;LCD.c: 151: while(i-- > 0)
  1907  033C  2B47               	goto	l45
  1908                           	
  1909  033D                     l46:	
  1910                           	line	152
  1911                           ;LCD.c: 152: LCDWriteData(c[i]);
  1912                           	
  1913  033D  0841               	movf	(_LCDWriteInteger_i),w
  1914  033E  3E42               	addlw	(_LCDWriteInteger_c)&0ffh
  1915  033F  1383               	bcf	status, 7	;select IRP bank0
  1916                           	
  1917  0340  0084               	movwf	fsr0
  1918  0341  0800               	movf	indf,w
  1919  0342  120A  158A  2640   	fcall	_LCDWriteData
              120A  118A         
  1920                           	
  1921  0347                     l45:	
  1922                           	line	151
  1923                           	
  1924  0347  1283               	bcf	status, 5	;RP0=0, select bank0
  1925  0348  1303               	bcf	status, 6	;RP1=0, select bank0
  1926                           	
  1927  0349  3001               	movlw	low(01h)
  1928  034A  02C1               	subwf	(_LCDWriteInteger_i),f
  1929  034B  0841               	movf	((_LCDWriteInteger_i))&07fh,w
  1930  034C  3AFF               	xorlw	0FFh
  1931  034D  1D03               	skipz
  1932  034E  2B50               	goto	u2631
  1933  034F  2B51               	goto	u2630
  1934  0350                     u2631:
  1935  0350  2B3D               	goto	l46
  1936  0351                     u2630:
  1937                           	
  1938  0351                     l47:	
  1939                           	line	155
  1940                           ;LCD.c: 155: }
  1941  0351                     l39:	
  1942  0351  0008               	return
  1943                           ; =============== function _LCDWriteInteger end
                                 s ===============
  1944                           
  1945                           GLOBAL __end_of_LCDWriteInteger
  1946  0352                     	__end_of_LCDWriteInteger:
  1947                           	FNSIZE	_LCDWriteInteger,8,2
  1948                           	signat	_LCDWriteInteger,4216
  1949                           	global	___ftmul
  1950                           	global	??___ftmul
  1951                           	global	?___ftmul
  1952                           
  1953                           ; *************** function ___ftmul ***********
                                 ****
  1954                           ; Defined at:
  1955                           ;		line 18 in file "C:\Program Files (x86)\HI-T
                                 ECH Software\PICC\PRO\9.65\sources\ftmul.c"
  1956                           ; Parameters:
  1957                           ;		f1          	offs:   0	type: float 
  1958                           ;		f2          	offs:   3	type: float 
  1959                           ; Auto variables:
  1960                           ;		sign1       	       	type: unsigned char 
  1961                           ;		exp1        	       	type: unsigned char 
  1962                           ;		cntr        	       	type: unsigned char 
  1963                           ;		f3          	       	type: float 
  1964                           ; Return value:
  1965                           ;		type: float 
  1966                           ;		size: 3
  1967                           ; Registers used:
  1968                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
                                 th, cstack
  1969                           ; Tracked objects:
  1970                           ;		On entry : 300/0
  1971                           ;		On exit  : 0/0
  1972                           ;		Unchanged: 0/0
  1973                           ; Data sizes:
  1974                           ;		Autos:    6
  1975                           ;		Params:   6
  1976                           ;		Temp:     1
  1977                           ;		Total:   13
  1978                           ; This function calls:
  1979                           ;		___ftunpack
  1980                           ;		___ftpack
  1981                           ; This function is called by:
  1982                           ;		_LCDWriteFloat
  1983                           ;		_main
  1984                           ; This function uses a non-reentrant model
  1985                           ; 
  1986                           	psect	text200,local,class=CODE,delta=2
  1987                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\ftmul.c"
  1988                           	line	18
  1989                           	
  1990  03E1                     ___ftmul:	
  1991                           	opt stack 5
  1992                           ; Regs used in ___ftmul: [wreg-fsr0h+status,2+s
                                 tatus,0+pclath+cstack]
  1993                           	line	22
  1994                           	
  1995  03E1  3000               	movlw	0
  1996  03E2  00C8               	movwf	(___ftmul_f3)
  1997  03E3  3000               	movlw	0
  1998  03E4  00C9               	movwf	(___ftmul_f3+1)
  1999  03E5  3000               	movlw	0
  2000  03E6  00CA               	movwf	(___ftmul_f3+2)
  2001                           	line	23
  2002                           	
  2003  03E7  3046               	movlw	((___ftmul_exp1))&0ffh
  2004                           	
  2005  03E8  00D1               	movwf	(?___ftunpack)
  2006                           	
  2007  03E9  303F               	movlw	((___ftmul_f1))&0ffh
  2008  03EA  120A  118A  2139   	fcall	___ftunpack
              120A  118A         
  2009  03EF  1283               	bcf	status, 5	;RP0=0, select bank0
  2010  03F0  1303               	bcf	status, 6	;RP1=0, select bank0
  2011                           	
  2012  03F1  00C5               	movwf	(___ftmul_sign1)
  2013                           	line	24
  2014                           	
  2015  03F2  3047               	movlw	((___ftmul_cntr))&0ffh
  2016                           	
  2017  03F3  00D1               	movwf	(?___ftunpack)
  2018                           	
  2019  03F4  3042               	movlw	((___ftmul_f2))&0ffh
  2020  03F5  120A  118A  2139   	fcall	___ftunpack
              120A  118A         
  2021  03FA  1283               	bcf	status, 5	;RP0=0, select bank0
  2022  03FB  1303               	bcf	status, 6	;RP1=0, select bank0
  2023  03FC  00CB               	movwf	(??___ftmul+6+0)
  2024                           	
  2025  03FD  084B               	movf	(??___ftmul+6+0),w
  2026  03FE  06C5               	xorwf	(___ftmul_sign1),f
  2027                           	line	25
  2028                           	
  2029  03FF  08C7               	movf	(___ftmul_cntr),f
  2030  0400  1D03               	skipz
  2031  0401  2C03               	goto	u2780
  2032  0402  2C08               	goto	l600000815
  2033  0403                     u2780:
  2034                           	
  2035  0403  08C6               	movf	(___ftmul_exp1),f
  2036  0404  1D03               	skipz
  2037  0405  2C07               	goto	u2791
  2038  0406  2C08               	goto	u2790
  2039  0407                     u2791:
  2040  0407  2C0F               	goto	l140
  2041  0408                     u2790:
  2042                           	
  2043  0408                     l600000815:	
  2044                           	line	26
  2045                           	
  2046                           	
  2047  0408  0848               	movf	(___ftmul_f3),w
  2048  0409  00BF               	movwf	(?___ftmul)
  2049  040A  0849               	movf	(___ftmul_f3+1),w
  2050  040B  00C0               	movwf	(?___ftmul+1)
  2051  040C  084A               	movf	(___ftmul_f3+2),w
  2052  040D  00C1               	movwf	(?___ftmul+2)
  2053  040E  2C83               	goto	l139
  2054                           	
  2055  040F                     l140:	
  2056                           	line	27
  2057                           	
  2058  040F  0847               	movf	(___ftmul_cntr),w
  2059  0410  3E7B               	addlw	07Bh
  2060  0411  00CB               	movwf	(??___ftmul+6+0)
  2061                           	
  2062  0412  084B               	movf	(??___ftmul+6+0),w
  2063  0413  07C6               	addwf	(___ftmul_exp1),f
  2064                           	line	28
  2065  0414  3007               	movlw	(07h)
  2066                           	
  2067  0415  00C7               	movwf	(___ftmul_cntr)
  2068                           	line	29
  2069                           	
  2070  0416                     l143:	
  2071                           	line	30
  2072                           	
  2073  0416  1C3F               	btfss	(___ftmul_f1),(0)&7
  2074  0417  2C19               	goto	u2801
  2075  0418  2C1A               	goto	u2800
  2076  0419                     u2801:
  2077  0419  2C28               	goto	l144
  2078  041A                     u2800:
  2079                           	line	31
  2080                           	
  2081                           	
  2082  041A  0842               	movf	(___ftmul_f2),w
  2083  041B  07C8               	addwf	(___ftmul_f3),f
  2084  041C  0843               	movf	(___ftmul_f2+1),w
  2085  041D  1103               	clrz
  2086  041E  1803               	skipnc
  2087  041F  0A43               	incf	(___ftmul_f2+1),w
  2088  0420  1D03               	skipz
  2089  0421  07C9               	addwf	(___ftmul_f3+1),f
  2090  0422  0844               	movf	(___ftmul_f2+2),w
  2091  0423  1103               	clrz
  2092  0424  1803               	skipnc
  2093  0425  0A44               	incf	(___ftmul_f2+2),w
  2094  0426  1D03               	skipz
  2095  0427  07CA               	addwf	(___ftmul_f3+2),f
  2096                           	
  2097  0428                     l144:	
  2098                           	line	32
  2099                           	
  2100  0428  3001               	movlw	01h
  2101  0429                     u2815:
  2102  0429  1003               	clrc
  2103  042A  0CC1               	rrf	(___ftmul_f1+2),f
  2104  042B  0CC0               	rrf	(___ftmul_f1+1),f
  2105  042C  0CBF               	rrf	(___ftmul_f1),f
  2106  042D  3EFF               	addlw	-1
  2107  042E  1D03               	skipz
  2108  042F  2C29               	goto	u2815
  2109                           
  2110                           	line	33
  2111                           	
  2112  0430  3001               	movlw	01h
  2113  0431                     u2825:
  2114  0431  1003               	clrc
  2115  0432  0DC2               	rlf	(___ftmul_f2),f
  2116  0433  0DC3               	rlf	(___ftmul_f2+1),f
  2117  0434  0DC4               	rlf	(___ftmul_f2+2),f
  2118  0435  3EFF               	addlw	-1
  2119  0436  1D03               	skipz
  2120  0437  2C31               	goto	u2825
  2121                           	line	34
  2122                           	
  2123                           	
  2124  0438  3001               	movlw	low(01h)
  2125  0439  02C7               	subwf	(___ftmul_cntr),f
  2126  043A  1D03               	btfss	status,2
  2127  043B  2C3D               	goto	u2831
  2128  043C  2C3E               	goto	u2830
  2129  043D                     u2831:
  2130  043D  2C16               	goto	l143
  2131  043E                     u2830:
  2132                           	
  2133  043E                     l142:	
  2134                           	line	35
  2135  043E  3009               	movlw	(09h)
  2136                           	
  2137  043F  00C7               	movwf	(___ftmul_cntr)
  2138                           	line	36
  2139                           	
  2140  0440                     l147:	
  2141                           	line	37
  2142                           	
  2143  0440  1C3F               	btfss	(___ftmul_f1),(0)&7
  2144  0441  2C43               	goto	u2841
  2145  0442  2C44               	goto	u2840
  2146  0443                     u2841:
  2147  0443  2C52               	goto	l148
  2148  0444                     u2840:
  2149                           	line	38
  2150                           	
  2151                           	
  2152  0444  0842               	movf	(___ftmul_f2),w
  2153  0445  07C8               	addwf	(___ftmul_f3),f
  2154  0446  0843               	movf	(___ftmul_f2+1),w
  2155  0447  1103               	clrz
  2156  0448  1803               	skipnc
  2157  0449  0A43               	incf	(___ftmul_f2+1),w
  2158  044A  1D03               	skipz
  2159  044B  07C9               	addwf	(___ftmul_f3+1),f
  2160  044C  0844               	movf	(___ftmul_f2+2),w
  2161  044D  1103               	clrz
  2162  044E  1803               	skipnc
  2163  044F  0A44               	incf	(___ftmul_f2+2),w
  2164  0450  1D03               	skipz
  2165  0451  07CA               	addwf	(___ftmul_f3+2),f
  2166                           	
  2167  0452                     l148:	
  2168                           	line	39
  2169                           	
  2170  0452  3001               	movlw	01h
  2171  0453                     u2855:
  2172  0453  1003               	clrc
  2173  0454  0CC1               	rrf	(___ftmul_f1+2),f
  2174  0455  0CC0               	rrf	(___ftmul_f1+1),f
  2175  0456  0CBF               	rrf	(___ftmul_f1),f
  2176  0457  3EFF               	addlw	-1
  2177  0458  1D03               	skipz
  2178  0459  2C53               	goto	u2855
  2179                           
  2180                           	line	40
  2181                           	
  2182  045A  3001               	movlw	01h
  2183  045B                     u2865:
  2184  045B  1003               	clrc
  2185  045C  0CCA               	rrf	(___ftmul_f3+2),f
  2186  045D  0CC9               	rrf	(___ftmul_f3+1),f
  2187  045E  0CC8               	rrf	(___ftmul_f3),f
  2188  045F  3EFF               	addlw	-1
  2189  0460  1D03               	skipz
  2190  0461  2C5B               	goto	u2865
  2191                           
  2192                           	line	41
  2193                           	
  2194                           	
  2195  0462  3001               	movlw	low(01h)
  2196  0463  02C7               	subwf	(___ftmul_cntr),f
  2197  0464  1D03               	btfss	status,2
  2198  0465  2C67               	goto	u2871
  2199  0466  2C68               	goto	u2870
  2200  0467                     u2871:
  2201  0467  2C40               	goto	l147
  2202  0468                     u2870:
  2203                           	
  2204  0468                     l146:	
  2205                           	line	42
  2206                           	
  2207  0468  0846               	movf	(___ftmul_exp1),w
  2208                           	
  2209  0469  00D1               	movwf	(?___ftpack)
  2210                           	
  2211  046A  3048               	movlw	((___ftmul_f3))&0ffh
  2212  046B  120A  118A  2729   	fcall	___ftpack
              120A  118A         
  2213                           	line	43
  2214  0470  1283               	bcf	status, 5	;RP0=0, select bank0
  2215  0471  1303               	bcf	status, 6	;RP1=0, select bank0
  2216                           	
  2217  0472  08C5               	movf	(___ftmul_sign1),f
  2218  0473  1D03               	skipz
  2219  0474  2C76               	goto	u2880
  2220  0475  2C7C               	goto	l149
  2221  0476                     u2880:
  2222                           	line	44
  2223                           	
  2224  0476  3000               	movlw	0
  2225  0477  04C8               	iorwf	(___ftmul_f3),f
  2226  0478  3000               	movlw	0
  2227  0479  04C9               	iorwf	(___ftmul_f3+1),f
  2228  047A  3080               	movlw	080h
  2229  047B  04CA               	iorwf	(___ftmul_f3+2),f
  2230                           	
  2231  047C                     l149:	
  2232                           	line	45
  2233                           	
  2234                           	
  2235  047C  0848               	movf	(___ftmul_f3),w
  2236  047D  00BF               	movwf	(?___ftmul)
  2237  047E  0849               	movf	(___ftmul_f3+1),w
  2238  047F  00C0               	movwf	(?___ftmul+1)
  2239  0480  084A               	movf	(___ftmul_f3+2),w
  2240  0481  00C1               	movwf	(?___ftmul+2)
  2241  0482  2C83               	goto	l139
  2242                           	line	46
  2243  0483                     l139:	
  2244  0483  0008               	return
  2245                           ; =============== function ___ftmul ends ======
                                 =========
  2246                           
  2247                           GLOBAL __end_of___ftmul
  2248  0484                     	__end_of___ftmul:
  2249                           	FNSIZE	___ftmul,7,6
  2250                           	signat	___ftmul,8315
  2251                           	global	_LCDWriteString
  2252                           	global	??_LCDWriteString
  2253                           	global	?_LCDWriteString
  2254                           
  2255                           ; *************** function _LCDWriteString ****
                                 ***********
  2256                           ; Defined at:
  2257                           ;		line 25 in file "C:\Users\hardik\Desktop\ADC
                                 \LCD.c"
  2258                           ; Parameters:
  2259                           ;		lcd_string  	reg:   wr	type: PTR const unsig
                                 ned char ; Largest target is 17
  2260                           ;		 -> STR_3(2), STR_2(3), STR_1(17), 
  2261                           ; Auto variables:
  2262                           ;		lcd_string  	       	type: PTR const unsigne
                                 d char ; Largest target is 17
  2263                           ;		 -> STR_3(2), STR_2(3), STR_1(17), 
  2264                           ; Return value:
  2265                           ;		type: void 
  2266                           ;		size: 0
  2267                           ; Registers used:
  2268                           ;		wreg, status,2, status,0, pclath, cstack
  2269                           ; Tracked objects:
  2270                           ;		On entry : 0/0
  2271                           ;		On exit  : 0/0
  2272                           ;		Unchanged: 0/0
  2273                           ; Data sizes:
  2274                           ;		Autos:    1
  2275                           ;		Params:   0
  2276                           ;		Temp:     1
  2277                           ;		Total:    2
  2278                           ; This function calls:
  2279                           ;		_LCDWriteData
  2280                           ; This function is called by:
  2281                           ;		_LCDDisplayInitializing
  2282                           ;		_LCDWriteFloat
  2283                           ; This function uses a non-reentrant model
  2284                           ; 
  2285                           	psect	text201,local,class=CODE,delta=2
  2286                           	file	"C:\Users\hardik\Desktop\ADC\LCD.c"
  2287                           	line	25
  2288                           ;LCD.c: 24: void LCDWriteString(const char *lcd
                                 _string)
  2289                           ;LCD.c: 25: {
  2290                           	
  2291  0EAA                     _LCDWriteString:	
  2292                           	opt stack 5
  2293                           ; Regs used in _LCDWriteString: [wreg+status,2+
                                 status,0+pclath+cstack]
  2294                           ;_LCDWriteString_lcd_string stored from wreg
  2295  0EAA  1283               	bcf	status, 5	;RP0=0, select bank0
  2296  0EAB  1303               	bcf	status, 6	;RP1=0, select bank0
  2297                           	
  2298  0EAC  00BF               	movwf	(_LCDWriteString_lcd_string)
  2299                           	line	26
  2300                           ;LCD.c: 26: while(*lcd_string)
  2301  0EAD  2EBF               	goto	l12
  2302                           	
  2303  0EAE                     l13:	
  2304                           	line	28
  2305                           ;LCD.c: 27: {
  2306                           ;LCD.c: 28: LCDWriteData(*lcd_string++);
  2307                           	
  2308  0EAE  083F               	movf	(_LCDWriteString_lcd_string),w
  2309                           	FNCALL _LCDWriteString,stringtab
  2310  0EAF  120A  118A  2709   	fcall	stringdir
              120A  158A         
  2311  0EB4  120A  158A  2640   	fcall	_LCDWriteData
              120A  158A         
  2312  0EB9  3001               	movlw	(01h)
  2313  0EBA  1283               	bcf	status, 5	;RP0=0, select bank0
  2314  0EBB  1303               	bcf	status, 6	;RP1=0, select bank0
  2315  0EBC  00C0               	movwf	(??_LCDWriteString+1+0)
  2316                           	
  2317  0EBD  0840               	movf	(??_LCDWriteString+1+0),w
  2318  0EBE  07BF               	addwf	(_LCDWriteString_lcd_string),f
  2319                           	line	29
  2320                           	
  2321  0EBF                     l12:	
  2322                           	line	26
  2323  0EBF  1283               	bcf	status, 5	;RP0=0, select bank0
  2324  0EC0  1303               	bcf	status, 6	;RP1=0, select bank0
  2325                           	
  2326  0EC1  083F               	movf	(_LCDWriteString_lcd_string),w
  2327                           	FNCALL _LCDWriteString,stringtab
  2328  0EC2  120A  118A  2709   	fcall	stringdir
              120A  158A         
  2329  0EC7  3800               	iorlw	0
  2330  0EC8  1D03               	skipz
  2331  0EC9  2ECB               	goto	u2591
  2332  0ECA  2ECC               	goto	u2590
  2333  0ECB                     u2591:
  2334  0ECB  2EAE               	goto	l13
  2335  0ECC                     u2590:
  2336                           	
  2337  0ECC                     l14:	
  2338                           	line	30
  2339                           ;LCD.c: 29: }
  2340                           ;LCD.c: 30: }
  2341  0ECC                     l11:	
  2342  0ECC  0008               	return
  2343                           ; =============== function _LCDWriteString ends
                                  ===============
  2344                           
  2345                           GLOBAL __end_of_LCDWriteString
  2346  0ECD                     	__end_of_LCDWriteString:
  2347                           	FNSIZE	_LCDWriteString,2,0
  2348                           	signat	_LCDWriteString,4216
  2349                           	global	___fttol
  2350                           	global	??___fttol
  2351                           	global	?___fttol
  2352                           
  2353                           ; *************** function ___fttol ***********
                                 ****
  2354                           ; Defined at:
  2355                           ;		line 16 in file "C:\Program Files (x86)\HI-T
                                 ECH Software\PICC\PRO\9.65\sources\fttol.c"
  2356                           ; Parameters:
  2357                           ;		f1          	offs:   0	type: float 
  2358                           ; Auto variables:
  2359                           ;		sign1       	       	type: unsigned char 
  2360                           ;		exp1        	       	type: unsigned char 
  2361                           ;		lval        	       	type: unsigned long 
  2362                           ; Return value:
  2363                           ;		type: long 
  2364                           ;		size: 4
  2365                           ; Registers used:
  2366                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
                                 th, cstack
  2367                           ; Tracked objects:
  2368                           ;		On entry : 300/0
  2369                           ;		On exit  : 0/0
  2370                           ;		Unchanged: 0/0
  2371                           ; Data sizes:
  2372                           ;		Autos:    6
  2373                           ;		Params:   4
  2374                           ;		Temp:     1
  2375                           ;		Total:   11
  2376                           ; This function calls:
  2377                           ;		___ftunpack
  2378                           ; This function is called by:
  2379                           ;		_LCDWriteFloat
  2380                           ; This function uses a non-reentrant model
  2381                           ; 
  2382                           	psect	text202,local,class=CODE,delta=2
  2383                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\fttol.c"
  2384                           	line	16
  2385                           	
  2386  01EE                     ___fttol:	
  2387                           	opt stack 5
  2388                           ; Regs used in ___fttol: [wreg-fsr0h+status,2+s
                                 tatus,0+pclath+cstack]
  2389                           	line	20
  2390                           	
  2391  01EE  3044               	movlw	((___fttol_exp1))&0ffh
  2392                           	
  2393  01EF  00D1               	movwf	(?___ftunpack)
  2394                           	
  2395  01F0  303F               	movlw	((___fttol_f1))&0ffh
  2396  01F1  120A  118A  2139   	fcall	___ftunpack
              120A  118A         
  2397  01F6  1283               	bcf	status, 5	;RP0=0, select bank0
  2398  01F7  1303               	bcf	status, 6	;RP1=0, select bank0
  2399                           	
  2400  01F8  00C3               	movwf	(___fttol_sign1)
  2401                           	line	21
  2402                           	
  2403  01F9  083F               	movf	(___fttol_f1),w
  2404                           	
  2405  01FA  00C5               	movwf	(___fttol_lval)
  2406  01FB  0840               	movf	(___fttol_f1+1),w
  2407  01FC  00C6               	movwf	((___fttol_lval))+1
  2408                           	
  2409  01FD  0841               	movf	(___fttol_f1+2),w
  2410  01FE  00C7               	movwf	((___fttol_lval))+2
  2411                           	
  2412  01FF  01C8               	clrf	3+(___fttol_lval)
  2413                           	line	22
  2414                           	
  2415                           	
  2416  0200  308E               	movlw	low(08Eh)
  2417  0201  02C4               	subwf	(___fttol_exp1),f
  2418                           	line	23
  2419                           	
  2420  0202  1FC4               	btfss	(___fttol_exp1),7
  2421  0203  2A05               	goto	u2891
  2422  0204  2A06               	goto	u2890
  2423  0205                     u2891:
  2424  0205  2A28               	goto	l198
  2425  0206                     u2890:
  2426                           	line	24
  2427                           	
  2428  0206  0844               	movf	(___fttol_exp1),w
  2429  0207  3A80               	xorlw	80h
  2430  0208  3E8F               	addlw	-((-15)^80h)
  2431  0209  1803               	skipnc
  2432  020A  2A0C               	goto	u2901
  2433  020B  2A0D               	goto	u2900
  2434  020C                     u2901:
  2435  020C  2A16               	goto	l202
  2436  020D                     u2900:
  2437                           	line	25
  2438                           	
  2439  020D  3000               	movlw	0
  2440  020E  00C2               	movwf	(?___fttol+3)
  2441  020F  3000               	movlw	0
  2442  0210  00C1               	movwf	(?___fttol+2)
  2443  0211  3000               	movlw	0
  2444  0212  00C0               	movwf	(?___fttol+1)
  2445  0213  3000               	movlw	0
  2446  0214  00BF               	movwf	(?___fttol)
  2447                           
  2448  0215  2A60               	goto	l197
  2449                           	line	26
  2450                           	
  2451  0216                     l202:	
  2452                           	line	27
  2453                           	
  2454  0216  3001               	movlw	01h
  2455  0217                     u2915:
  2456  0217  1003               	clrc
  2457  0218  0CC8               	rrf	(___fttol_lval+3),f
  2458  0219  0CC7               	rrf	(___fttol_lval+2),f
  2459  021A  0CC6               	rrf	(___fttol_lval+1),f
  2460  021B  0CC5               	rrf	(___fttol_lval),f
  2461  021C  3EFF               	addlw	-1
  2462  021D  1D03               	skipz
  2463  021E  2A17               	goto	u2915
  2464                           
  2465                           	line	28
  2466  021F  3001               	movlw	(01h)
  2467  0220  00C9               	movwf	(??___fttol+6+0)
  2468                           	
  2469  0221  0849               	movf	(??___fttol+6+0),w
  2470  0222  07C4               	addwf	(___fttol_exp1),f
  2471  0223  1D03               	btfss	status,2
  2472  0224  2A26               	goto	u2921
  2473  0225  2A27               	goto	u2920
  2474  0226                     u2921:
  2475  0226  2A16               	goto	l202
  2476  0227                     u2920:
  2477                           	
  2478  0227                     l201:	
  2479                           	line	29
  2480  0227  2A48               	goto	l203
  2481                           	
  2482  0228                     l198:	
  2483                           	line	30
  2484  0228  3020               	movlw	(020h)
  2485                           	
  2486  0229  0244               	subwf	(___fttol_exp1),w
  2487  022A  1C03               	skipc
  2488  022B  2A2D               	goto	u2931
  2489  022C  2A2E               	goto	u2930
  2490  022D                     u2931:
  2491  022D  2A37               	goto	l204
  2492  022E                     u2930:
  2493                           	line	31
  2494                           	
  2495  022E  3000               	movlw	0
  2496  022F  00C2               	movwf	(?___fttol+3)
  2497  0230  3000               	movlw	0
  2498  0231  00C1               	movwf	(?___fttol+2)
  2499  0232  3000               	movlw	0
  2500  0233  00C0               	movwf	(?___fttol+1)
  2501  0234  3000               	movlw	0
  2502  0235  00BF               	movwf	(?___fttol)
  2503                           
  2504  0236  2A60               	goto	l197
  2505                           	
  2506  0237                     l204:	
  2507                           	line	32
  2508  0237  2A43               	goto	l205
  2509                           	
  2510  0238                     l206:	
  2511                           	line	33
  2512                           	
  2513  0238  3001               	movlw	01h
  2514  0239  00C9               	movwf	(??___fttol+6+0)
  2515  023A                     u2945:
  2516  023A  1003               	clrc
  2517  023B  0DC5               	rlf	(___fttol_lval),f
  2518  023C  0DC6               	rlf	(___fttol_lval+1),f
  2519  023D  0DC7               	rlf	(___fttol_lval+2),f
  2520  023E  0DC8               	rlf	(___fttol_lval+3),f
  2521  023F  0BC9               	decfsz	(??___fttol+6+0)
  2522  0240  2A3A               	goto	u2945
  2523                           	line	34
  2524                           	
  2525                           	
  2526  0241  3001               	movlw	low(01h)
  2527  0242  02C4               	subwf	(___fttol_exp1),f
  2528                           	line	35
  2529                           	
  2530  0243                     l205:	
  2531                           	line	32
  2532                           	
  2533  0243  08C4               	movf	(___fttol_exp1),f
  2534  0244  1D03               	skipz
  2535  0245  2A47               	goto	u2951
  2536  0246  2A48               	goto	u2950
  2537  0247                     u2951:
  2538  0247  2A38               	goto	l206
  2539  0248                     u2950:
  2540                           	
  2541  0248                     l207:	
  2542                           	line	36
  2543                           	
  2544  0248                     l203:	
  2545                           	line	37
  2546                           	
  2547  0248  08C3               	movf	(___fttol_sign1),f
  2548  0249  1D03               	skipz
  2549  024A  2A4C               	goto	u2960
  2550  024B  2A57               	goto	l208
  2551  024C                     u2960:
  2552                           	line	38
  2553                           	
  2554  024C  09C5               	comf	(___fttol_lval),f
  2555  024D  09C6               	comf	(___fttol_lval+1),f
  2556  024E  09C7               	comf	(___fttol_lval+2),f
  2557  024F  09C8               	comf	(___fttol_lval+3),f
  2558  0250  0AC5               	incf	(___fttol_lval),f
  2559  0251  1903               	skipnz
  2560  0252  0AC6               	incf	(___fttol_lval+1),f
  2561  0253  1903               	skipnz
  2562  0254  0AC7               	incf	(___fttol_lval+2),f
  2563  0255  1903               	skipnz
  2564  0256  0AC8               	incf	(___fttol_lval+3),f
  2565                           	
  2566                           	
  2567  0257                     l208:	
  2568                           	line	39
  2569                           	
  2570                           	
  2571  0257  0848               	movf	(___fttol_lval+3),w
  2572  0258  00C2               	movwf	(?___fttol+3)
  2573  0259  0847               	movf	(___fttol_lval+2),w
  2574  025A  00C1               	movwf	(?___fttol+2)
  2575  025B  0846               	movf	(___fttol_lval+1),w
  2576  025C  00C0               	movwf	(?___fttol+1)
  2577  025D  0845               	movf	(___fttol_lval),w
  2578  025E  00BF               	movwf	(?___fttol)
  2579                           
  2580  025F  2A60               	goto	l197
  2581                           	line	40
  2582  0260                     l197:	
  2583  0260  0008               	return
  2584                           ; =============== function ___fttol ends ======
                                 =========
  2585                           
  2586                           GLOBAL __end_of___fttol
  2587  0261                     	__end_of___fttol:
  2588                           	FNSIZE	___fttol,7,4
  2589                           	signat	___fttol,4220
  2590                           	global	_LCDInitialize
  2591                           	global	??_LCDInitialize
  2592                           	global	?_LCDInitialize
  2593                           
  2594                           ; *************** function _LCDInitialize *****
                                 **********
  2595                           ; Defined at:
  2596                           ;		line 34 in file "C:\Users\hardik\Desktop\ADC
                                 \LCD.c"
  2597                           ; Parameters:
  2598                           ;		None
  2599                           ; Auto variables:
  2600                           ;		None
  2601                           ; Return value:
  2602                           ;		type: void 
  2603                           ;		size: 0
  2604                           ; Registers used:
  2605                           ;		wreg, status,2, status,0, pclath, cstack
  2606                           ; Tracked objects:
  2607                           ;		On entry : BFF/0
  2608                           ;		On exit  : 0/0
  2609                           ;		Unchanged: 0/0
  2610                           ; Data sizes:
  2611                           ;		Autos:    0
  2612                           ;		Params:   0
  2613                           ;		Temp:     1
  2614                           ;		Total:    1
  2615                           ; This function calls:
  2616                           ;		_LCDReset
  2617                           ;		_LCDWriteCommand
  2618                           ; This function is called by:
  2619                           ;		_MainSystemInitialize
  2620                           ; This function uses a non-reentrant model
  2621                           ; 
  2622                           	psect	text203,local,class=CODE,delta=2
  2623                           	file	"C:\Users\hardik\Desktop\ADC\LCD.c"
  2624                           	line	34
  2625                           ;LCD.c: 33: void LCDInitialize(void)
  2626                           ;LCD.c: 34: {
  2627                           	
  2628  0F21                     _LCDInitialize:	
  2629                           	opt stack 5
  2630                           ; Regs used in _LCDInitialize: [wreg+status,2+s
                                 tatus,0+pclath+cstack]
  2631                           	line	35
  2632                           ;LCD.c: 35: TRISD = TRISD & 0x03;
  2633  0F21  1683               	bsf	status, 5	;RP0=1, select bank1
  2634  0F22  1303               	bcf	status, 6	;RP1=0, select bank1
  2635                           	
  2636  0F23  0808               	movf	(136)^080h,w	;volatile
  2637  0F24  3903               	andlw	03h
  2638                           	
  2639  0F25  0088               	movwf	(136)^080h	;volatile
  2640                           	line	36
  2641                           ;LCD.c: 36: RD3 = 0;
  2642  0F26  1283               	bcf	status, 5	;RP0=0, select bank0
  2643  0F27  1303               	bcf	status, 6	;RP1=0, select bank0
  2644  0F28  1188               	bcf	(67/8),(67)&7
  2645                           	line	37
  2646                           ;LCD.c: 37: RD2 = 0;
  2647  0F29  1108               	bcf	(66/8),(66)&7
  2648                           	line	38
  2649                           ;LCD.c: 38: PORTD &= 0x0f;
  2650  0F2A  300F               	movlw	(0Fh)
  2651  0F2B  00B0               	movwf	(??_LCDInitialize+0+0)
  2652                           	
  2653  0F2C  0830               	movf	(??_LCDInitialize+0+0),w
  2654  0F2D  0588               	andwf	(8),f	;volatile
  2655                           	line	39
  2656                           ;LCD.c: 39: LCDReset();
  2657  0F2E  120A  158A  2661   	fcall	_LCDReset
              120A  158A         
  2658                           	line	40
  2659                           ;LCD.c: 40: LCDWriteCommand(0x28);
  2660  0F33  3028               	movlw	(028h)
  2661  0F34  120A  158A  264B   	fcall	_LCDWriteCommand
              120A  158A         
  2662                           	line	41
  2663                           ;LCD.c: 41: LCDWriteCommand(0x0C);
  2664  0F39  300C               	movlw	(0Ch)
  2665  0F3A  120A  158A  264B   	fcall	_LCDWriteCommand
              120A  158A         
  2666                           	line	42
  2667                           ;LCD.c: 42: LCDWriteCommand(0x06);
  2668  0F3F  3006               	movlw	(06h)
  2669  0F40  120A  158A  264B   	fcall	_LCDWriteCommand
              120A  158A         
  2670                           	line	43
  2671                           ;LCD.c: 43: LCDWriteCommand(0x01);
  2672  0F45  3001               	movlw	(01h)
  2673  0F46  120A  158A  264B   	fcall	_LCDWriteCommand
              120A  158A         
  2674                           	line	45
  2675                           ;LCD.c: 45: }
  2676  0F4B                     l15:	
  2677  0F4B  0008               	return
  2678                           ; =============== function _LCDInitialize ends 
                                 ===============
  2679                           
  2680                           GLOBAL __end_of_LCDInitialize
  2681  0F4C                     	__end_of_LCDInitialize:
  2682                           	FNSIZE	_LCDInitialize,1,0
  2683                           	signat	_LCDInitialize,88
  2684                           	global	___ftsub
  2685                           	global	??___ftsub
  2686                           	global	?___ftsub
  2687                           
  2688                           ; *************** function ___ftsub ***********
                                 ****
  2689                           ; Defined at:
  2690                           ;		line 17 in file "C:\Program Files (x86)\HI-T
                                 ECH Software\PICC\PRO\9.65\sources\ftsub.c"
  2691                           ; Parameters:
  2692                           ;		f1          	offs:   0	type: float 
  2693                           ;		f2          	offs:   3	type: float 
  2694                           ; Auto variables:
  2695                           ;		None
  2696                           ; Return value:
  2697                           ;		type: float 
  2698                           ;		size: 3
  2699                           ; Registers used:
  2700                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
                                 th, cstack
  2701                           ; Tracked objects:
  2702                           ;		On entry : 300/0
  2703                           ;		On exit  : 0/0
  2704                           ;		Unchanged: 0/0
  2705                           ; Data sizes:
  2706                           ;		Autos:    0
  2707                           ;		Params:   6
  2708                           ;		Temp:     0
  2709                           ;		Total:    6
  2710                           ; This function calls:
  2711                           ;		___ftadd
  2712                           ; This function is called by:
  2713                           ;		_LCDWriteFloat
  2714                           ; This function uses a non-reentrant model
  2715                           ; 
  2716                           	psect	text204,local,class=CODE,delta=2
  2717                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\ftsub.c"
  2718                           	line	17
  2719                           	
  2720  0E8D                     ___ftsub:	
  2721                           	opt stack 5
  2722                           ; Regs used in ___ftsub: [wreg-fsr0h+status,2+s
                                 tatus,0+pclath+cstack]
  2723                           	line	18
  2724                           	
  2725  0E8D  3080               	movlw	080h
  2726  0E8E  06C4               	xorwf	(___ftsub_f2+2),f
  2727                           	line	19
  2728                           	
  2729                           	
  2730  0E8F  0842               	movf	(___ftsub_f2),w
  2731  0E90  00C8               	movwf	(0+(?___ftadd)+03h)
  2732  0E91  0843               	movf	(___ftsub_f2+1),w
  2733  0E92  00C9               	movwf	(1+(?___ftadd)+03h)
  2734  0E93  0844               	movf	(___ftsub_f2+2),w
  2735  0E94  00CA               	movwf	(2+(?___ftadd)+03h)
  2736                           	
  2737                           	
  2738  0E95  083F               	movf	(___ftsub_f1),w
  2739  0E96  00C5               	movwf	(?___ftadd)
  2740  0E97  0840               	movf	(___ftsub_f1+1),w
  2741  0E98  00C6               	movwf	(?___ftadd+1)
  2742  0E99  0841               	movf	(___ftsub_f1+2),w
  2743  0E9A  00C7               	movwf	(?___ftadd+2)
  2744  0E9B  120A  118A  2484   	fcall	___ftadd
              120A  158A         
  2745  0EA0  1283               	bcf	status, 5	;RP0=0, select bank0
  2746  0EA1  1303               	bcf	status, 6	;RP1=0, select bank0
  2747                           	
  2748  0EA2  0845               	movf	(0+?___ftadd),w
  2749  0EA3  00BF               	movwf	(?___ftsub)
  2750  0EA4  0846               	movf	(1+?___ftadd),w
  2751  0EA5  00C0               	movwf	(?___ftsub+1)
  2752  0EA6  0847               	movf	(2+?___ftadd),w
  2753  0EA7  00C1               	movwf	(?___ftsub+2)
  2754  0EA8  2EA9               	goto	l130
  2755                           	line	20
  2756  0EA9                     l130:	
  2757  0EA9  0008               	return
  2758                           ; =============== function ___ftsub ends ======
                                 =========
  2759                           
  2760                           GLOBAL __end_of___ftsub
  2761  0EAA                     	__end_of___ftsub:
  2762                           	FNSIZE	___ftsub,0,6
  2763                           	signat	___ftsub,8315
  2764                           	global	___ftge
  2765                           	global	??___ftge
  2766                           	global	?___ftge
  2767                           
  2768                           ; *************** function ___ftge ************
                                 ***
  2769                           ; Defined at:
  2770                           ;		line 5 in file "C:\Program Files (x86)\HI-TE
                                 CH Software\PICC\PRO\9.65\sources\ftge.c"
  2771                           ; Parameters:
  2772                           ;		ff1         	offs:   0	type: float 
  2773                           ;		ff2         	offs:   3	type: float 
  2774                           ; Auto variables:
  2775                           ;		None
  2776                           ; Return value:
  2777                           ;		type: bit 
  2778                           ;		size: 0
  2779                           ; Registers used:
  2780                           ;		wreg, status,2, status,0
  2781                           ; Tracked objects:
  2782                           ;		On entry : 300/0
  2783                           ;		On exit  : 0/0
  2784                           ;		Unchanged: 0/0
  2785                           ; Data sizes:
  2786                           ;		Autos:    0
  2787                           ;		Params:   6
  2788                           ;		Temp:     0
  2789                           ;		Total:    6
  2790                           ; This function calls:
  2791                           ;		Nothing
  2792                           ; This function is called by:
  2793                           ;		_LCDWriteFloat
  2794                           ; This function uses a non-reentrant model
  2795                           ; 
  2796                           	psect	text205,local,class=CODE,delta=2
  2797                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\ftge.c"
  2798                           	line	5
  2799                           	
  2800  0101                     ___ftge:	
  2801                           	opt stack 5
  2802                           ; Regs used in ___ftge: [wreg+status,2+status,0
                                 ]
  2803                           	line	6
  2804                           	
  2805  0101  1FC1               	btfss	(___ftge_ff1+2),(23)&7
  2806  0102  2904               	goto	u2971
  2807  0103  2905               	goto	u2970
  2808  0104                     u2971:
  2809  0104  2912               	goto	l267
  2810  0105                     u2970:
  2811                           	line	7
  2812                           	
  2813  0105  083F               	movf	(___ftge_ff1),w
  2814  0106  3C00               	sublw	low(0800000h)
  2815                           	
  2816  0107  00BF               	movwf	(___ftge_ff1)
  2817  0108  0840               	movf	(___ftge_ff1+1),w
  2818  0109  1C03               	skipc
  2819  010A  0A40               	incf	(___ftge_ff1+1),w
  2820  010B  3C00               	sublw	high(0800000h)
  2821  010C  00C0               	movwf	1+(___ftge_ff1)
  2822  010D  0841               	movf	(___ftge_ff1+2),w
  2823  010E  1C03               	skipc
  2824  010F  0A41               	incf	(___ftge_ff1+2),w
  2825  0110  3C80               	sublw	low highword(0800000h)
  2826  0111  00C1               	movwf	2+(___ftge_ff1)
  2827                           	
  2828  0112                     l267:	
  2829                           	line	8
  2830                           	
  2831  0112  1FC4               	btfss	(___ftge_ff2+2),(23)&7
  2832  0113  2915               	goto	u2981
  2833  0114  2916               	goto	u2980
  2834  0115                     u2981:
  2835  0115  2923               	goto	l268
  2836  0116                     u2980:
  2837                           	line	9
  2838                           	
  2839  0116  0842               	movf	(___ftge_ff2),w
  2840  0117  3C00               	sublw	low(0800000h)
  2841                           	
  2842  0118  00C2               	movwf	(___ftge_ff2)
  2843  0119  0843               	movf	(___ftge_ff2+1),w
  2844  011A  1C03               	skipc
  2845  011B  0A43               	incf	(___ftge_ff2+1),w
  2846  011C  3C00               	sublw	high(0800000h)
  2847  011D  00C3               	movwf	1+(___ftge_ff2)
  2848  011E  0844               	movf	(___ftge_ff2+2),w
  2849  011F  1C03               	skipc
  2850  0120  0A44               	incf	(___ftge_ff2+2),w
  2851  0121  3C80               	sublw	low highword(0800000h)
  2852  0122  00C4               	movwf	2+(___ftge_ff2)
  2853                           	
  2854  0123                     l268:	
  2855                           	line	10
  2856                           	
  2857  0123  3080               	movlw	080h
  2858  0124  06C1               	xorwf	(___ftge_ff1+2),f
  2859                           	line	11
  2860                           	
  2861  0125  3080               	movlw	080h
  2862  0126  06C4               	xorwf	(___ftge_ff2+2),f
  2863                           	line	12
  2864                           	
  2865                           	
  2866  0127  0844               	movf	(___ftge_ff2+2),w
  2867  0128  0241               	subwf	(___ftge_ff1+2),w
  2868  0129  1D03               	skipz
  2869  012A  2931               	goto	u2995
  2870  012B  0843               	movf	(___ftge_ff2+1),w
  2871  012C  0240               	subwf	(___ftge_ff1+1),w
  2872  012D  1D03               	skipz
  2873  012E  2931               	goto	u2995
  2874  012F  0842               	movf	(___ftge_ff2),w
  2875  0130  023F               	subwf	(___ftge_ff1),w
  2876  0131                     u2995:
  2877  0131  1803               	skipnc
  2878  0132  2934               	goto	u3007
  2879  0133  2936               	goto	u3008
  2880  0134                     u3007:
  2881  0134  1403               	bsf	status,0
  2882  0135  2937               	goto	u3009
  2883  0136                     u3008:
  2884  0136  1003               	bcf	status,0
  2885  0137                     u3009:
  2886  0137  2938               	goto	l266
  2887                           	line	13
  2888  0138                     l266:	
  2889  0138  0008               	return
  2890                           ; =============== function ___ftge ends =======
                                 ========
  2891                           
  2892                           GLOBAL __end_of___ftge
  2893  0139                     	__end_of___ftge:
  2894                           	FNSIZE	___ftge,0,6
  2895                           	signat	___ftge,8312
  2896                           	global	___awtoft
  2897                           	global	??___awtoft
  2898                           	global	?___awtoft
  2899                           
  2900                           ; *************** function ___awtoft **********
                                 *****
  2901                           ; Defined at:
  2902                           ;		line 16 in file "C:\Program Files (x86)\HI-T
                                 ECH Software\PICC\PRO\9.65\sources\awtoft.c"
  2903                           ; Parameters:
  2904                           ;		c           	offs:   0	type: int 
  2905                           ; Auto variables:
  2906                           ;		f1          	       	type: float 
  2907                           ; Return value:
  2908                           ;		type: float 
  2909                           ;		size: 3
  2910                           ; Registers used:
  2911                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
                                 th, cstack
  2912                           ; Tracked objects:
  2913                           ;		On entry : 300/0
  2914                           ;		On exit  : 0/0
  2915                           ;		Unchanged: 0/0
  2916                           ; Data sizes:
  2917                           ;		Autos:    3
  2918                           ;		Params:   3
  2919                           ;		Temp:     3
  2920                           ;		Total:    9
  2921                           ; This function calls:
  2922                           ;		___ftpack
  2923                           ;		___ftneg
  2924                           ; This function is called by:
  2925                           ;		_LCDWriteFloat
  2926                           ; This function uses a non-reentrant model
  2927                           ; 
  2928                           	psect	text206,local,class=CODE,delta=2
  2929                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\awtoft.c"
  2930                           	line	16
  2931                           	
  2932  0FB0                     ___awtoft:	
  2933                           	opt stack 5
  2934                           ; Regs used in ___awtoft: [wreg-fsr0h+status,2+
                                 status,0+pclath+cstack]
  2935                           	line	19
  2936                           	
  2937  0FB0  0840               	movf	((___awtoft_c+1)),w
  2938  0FB1  043F               	iorwf	((___awtoft_c)),w
  2939  0FB2  1D03               	skipz
  2940  0FB3  2FB5               	goto	u3011
  2941  0FB4  2FB6               	goto	u3010
  2942  0FB5                     u3011:
  2943  0FB5  2FBD               	goto	l217
  2944  0FB6                     u3010:
  2945                           	line	20
  2946                           	
  2947  0FB6  3000               	movlw	0x0
  2948  0FB7  00BF               	movwf	(?___awtoft)
  2949  0FB8  3000               	movlw	0x0
  2950  0FB9  00C0               	movwf	(?___awtoft+1)
  2951  0FBA  3000               	movlw	0x0
  2952  0FBB  00C1               	movwf	(?___awtoft+2)
  2953  0FBC  2FFF               	goto	l216
  2954                           	
  2955  0FBD                     l217:	
  2956                           	line	21
  2957                           	
  2958  0FBD  083F               	movf	(___awtoft_c),w
  2959  0FBE  00C5               	movwf	(??___awtoft+3+0)
  2960  0FBF  0840               	movf	(___awtoft_c+1),w
  2961  0FC0  00C6               	movwf	(??___awtoft+3+0+1)
  2962  0FC1  3000               	movlw	0
  2963  0FC2  1BC6               	btfsc	(??___awtoft+3+0+1),7
  2964  0FC3  30FF               	movlw	255
  2965  0FC4  00C7               	movwf	(??___awtoft+3+0+2)
  2966                           	
  2967  0FC5  0845               	movf	(??___awtoft+3+0),w
  2968  0FC6  00C2               	movwf	(___awtoft_f1)
  2969  0FC7  0846               	movf	(??___awtoft+3+1),w
  2970  0FC8  00C3               	movwf	(___awtoft_f1+1)
  2971  0FC9  0847               	movf	(??___awtoft+3+2),w
  2972  0FCA  00C4               	movwf	(___awtoft_f1+2)
  2973                           	line	22
  2974                           	
  2975  0FCB  1FC0               	btfss	(___awtoft_c+1),7
  2976  0FCC  2FCE               	goto	u3021
  2977  0FCD  2FCF               	goto	u3020
  2978  0FCE                     u3021:
  2979  0FCE  2FD7               	goto	l218
  2980  0FCF                     u3020:
  2981                           	line	23
  2982                           	
  2983  0FCF  09C2               	comf	(___awtoft_f1),f
  2984  0FD0  09C3               	comf	(___awtoft_f1+1),f
  2985  0FD1  09C4               	comf	(___awtoft_f1+2),f
  2986  0FD2  0AC2               	incf	(___awtoft_f1),f
  2987  0FD3  1903               	skipnz
  2988  0FD4  0AC3               	incf	(___awtoft_f1+1),f
  2989  0FD5  1903               	skipnz
  2990  0FD6  0AC4               	incf	(___awtoft_f1+2),f
  2991                           	
  2992                           	
  2993  0FD7                     l218:	
  2994                           	line	24
  2995  0FD7  308E               	movlw	(08Eh)
  2996                           	
  2997  0FD8  00D1               	movwf	(?___ftpack)
  2998                           	
  2999  0FD9  3042               	movlw	((___awtoft_f1))&0ffh
  3000  0FDA  120A  118A  2729   	fcall	___ftpack
              120A  158A         
  3001                           	line	25
  3002  0FDF  1283               	bcf	status, 5	;RP0=0, select bank0
  3003  0FE0  1303               	bcf	status, 6	;RP1=0, select bank0
  3004                           	
  3005  0FE1  1FC0               	btfss	(___awtoft_c+1),7
  3006  0FE2  2FE4               	goto	u3031
  3007  0FE3  2FE5               	goto	u3030
  3008  0FE4                     u3031:
  3009  0FE4  2FF8               	goto	l219
  3010  0FE5                     u3030:
  3011                           	line	26
  3012                           	
  3013                           	
  3014  0FE5  0842               	movf	(___awtoft_f1),w
  3015  0FE6  00C8               	movwf	(?___ftneg)
  3016  0FE7  0843               	movf	(___awtoft_f1+1),w
  3017  0FE8  00C9               	movwf	(?___ftneg+1)
  3018  0FE9  0844               	movf	(___awtoft_f1+2),w
  3019  0FEA  00CA               	movwf	(?___ftneg+2)
  3020  0FEB  120A  158A  2656   	fcall	___ftneg
              120A  158A         
  3021  0FF0  1283               	bcf	status, 5	;RP0=0, select bank0
  3022  0FF1  1303               	bcf	status, 6	;RP1=0, select bank0
  3023                           	
  3024  0FF2  0848               	movf	(0+?___ftneg),w
  3025  0FF3  00C2               	movwf	(___awtoft_f1)
  3026  0FF4  0849               	movf	(1+?___ftneg),w
  3027  0FF5  00C3               	movwf	(___awtoft_f1+1)
  3028  0FF6  084A               	movf	(2+?___ftneg),w
  3029  0FF7  00C4               	movwf	(___awtoft_f1+2)
  3030                           	
  3031  0FF8                     l219:	
  3032                           	line	27
  3033                           	
  3034                           	
  3035  0FF8  0842               	movf	(___awtoft_f1),w
  3036  0FF9  00BF               	movwf	(?___awtoft)
  3037  0FFA  0843               	movf	(___awtoft_f1+1),w
  3038  0FFB  00C0               	movwf	(?___awtoft+1)
  3039  0FFC  0844               	movf	(___awtoft_f1+2),w
  3040  0FFD  00C1               	movwf	(?___awtoft+2)
  3041  0FFE  2FFF               	goto	l216
  3042                           	line	28
  3043  0FFF                     l216:	
  3044  0FFF  0008               	return
  3045                           ; =============== function ___awtoft ends =====
                                 ==========
  3046                           
  3047                           GLOBAL __end_of___awtoft
  3048  1000                     	__end_of___awtoft:
  3049                           	FNSIZE	___awtoft,6,3
  3050                           	signat	___awtoft,4219
  3051                           	global	___ftneg
  3052                           	global	??___ftneg
  3053                           	global	?___ftneg
  3054                           
  3055                           ; *************** function ___ftneg ***********
                                 ****
  3056                           ; Defined at:
  3057                           ;		line 16 in file "C:\Program Files (x86)\HI-T
                                 ECH Software\PICC\PRO\9.65\sources\ftneg.c"
  3058                           ; Parameters:
  3059                           ;		f1          	offs:   0	type: float 
  3060                           ; Auto variables:
  3061                           ;		None
  3062                           ; Return value:
  3063                           ;		type: float 
  3064                           ;		size: 3
  3065                           ; Registers used:
  3066                           ;		wreg
  3067                           ; Tracked objects:
  3068                           ;		On entry : 300/0
  3069                           ;		On exit  : 0/0
  3070                           ;		Unchanged: 0/0
  3071                           ; Data sizes:
  3072                           ;		Autos:    0
  3073                           ;		Params:   3
  3074                           ;		Temp:     0
  3075                           ;		Total:    3
  3076                           ; This function calls:
  3077                           ;		Nothing
  3078                           ; This function is called by:
  3079                           ;		_LCDWriteFloat
  3080                           ;		___awtoft
  3081                           ; This function uses a non-reentrant model
  3082                           ; 
  3083                           	psect	text207,local,class=CODE,delta=2
  3084                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\ftneg.c"
  3085                           	line	16
  3086                           	
  3087  0E56                     ___ftneg:	
  3088                           	opt stack 4
  3089                           ; Regs used in ___ftneg: [wreg]
  3090                           	line	17
  3091                           	
  3092  0E56  084A               	movf	(___ftneg_f1+2),w
  3093  0E57  0449               	iorwf	(___ftneg_f1+1),w
  3094  0E58  0448               	iorwf	(___ftneg_f1),w
  3095  0E59  1903               	skipnz
  3096  0E5A  2E5C               	goto	u3041
  3097  0E5B  2E5D               	goto	u3040
  3098  0E5C                     u3041:
  3099  0E5C  2E5F               	goto	l242
  3100  0E5D                     u3040:
  3101                           	line	18
  3102                           	
  3103  0E5D  3080               	movlw	080h
  3104  0E5E  06CA               	xorwf	(___ftneg_f1+2),f
  3105                           	
  3106  0E5F                     l242:	
  3107                           	line	19
  3108  0E5F  2E60               	goto	l241
  3109                           	line	20
  3110  0E60                     l241:	
  3111  0E60  0008               	return
  3112                           ; =============== function ___ftneg ends ======
                                 =========
  3113                           
  3114                           GLOBAL __end_of___ftneg
  3115  0E61                     	__end_of___ftneg:
  3116                           	FNSIZE	___ftneg,0,3
  3117                           	signat	___ftneg,4219
  3118                           	global	___ftadd
  3119                           	global	??___ftadd
  3120                           	global	?___ftadd
  3121                           
  3122                           ; *************** function ___ftadd ***********
                                 ****
  3123                           ; Defined at:
  3124                           ;		line 17 in file "C:\Program Files (x86)\HI-T
                                 ECH Software\PICC\PRO\9.65\sources\ftadd.c"
  3125                           ; Parameters:
  3126                           ;		f1          	offs:   0	type: float 
  3127                           ;		f2          	offs:   3	type: float 
  3128                           ; Auto variables:
  3129                           ;		sign2       	       	type: unsigned char 
  3130                           ;		cntr        	       	type: unsigned char 
  3131                           ;		sign1       	       	type: unsigned char 
  3132                           ;		exp2        	       	type: unsigned char 
  3133                           ;		exp1        	       	type: unsigned char 
  3134                           ; Return value:
  3135                           ;		type: float 
  3136                           ;		size: 3
  3137                           ; Registers used:
  3138                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
                                 th, cstack
  3139                           ; Tracked objects:
  3140                           ;		On entry : 300/0
  3141                           ;		On exit  : 0/0
  3142                           ;		Unchanged: 0/0
  3143                           ; Data sizes:
  3144                           ;		Autos:    5
  3145                           ;		Params:   6
  3146                           ;		Temp:     1
  3147                           ;		Total:   12
  3148                           ; This function calls:
  3149                           ;		___ftunpack
  3150                           ;		___ftpack
  3151                           ; This function is called by:
  3152                           ;		_LCDWriteFloat
  3153                           ;		___ftsub
  3154                           ; This function uses a non-reentrant model
  3155                           ; 
  3156                           	psect	text208,local,class=CODE,delta=2
  3157                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\ftadd.c"
  3158                           	line	17
  3159                           	
  3160  0484                     ___ftadd:	
  3161                           	opt stack 4
  3162                           ; Regs used in ___ftadd: [wreg-fsr0h+status,2+s
                                 tatus,0+pclath+cstack]
  3163                           	line	20
  3164  0484  2C85               	goto	l99
  3165                           	line	21
  3166                           	
  3167  0485                     l99:	
  3168                           	line	22
  3169                           	
  3170  0485  304F               	movlw	((___ftadd_exp1))&0ffh
  3171                           	
  3172  0486  00D1               	movwf	(?___ftunpack)
  3173                           	
  3174  0487  3045               	movlw	((___ftadd_f1))&0ffh
  3175  0488  120A  118A  2139   	fcall	___ftunpack
              120A  118A         
  3176  048D  1283               	bcf	status, 5	;RP0=0, select bank0
  3177  048E  1303               	bcf	status, 6	;RP1=0, select bank0
  3178                           	
  3179  048F  00CD               	movwf	(___ftadd_sign1)
  3180                           	line	23
  3181                           	
  3182  0490  08CF               	movf	(___ftadd_exp1),f
  3183  0491  1D03               	skipz
  3184  0492  2C94               	goto	u3051
  3185  0493  2C95               	goto	u3050
  3186  0494                     u3051:
  3187  0494  2C9C               	goto	l100
  3188  0495                     u3050:
  3189                           	line	24
  3190                           	
  3191                           	
  3192  0495  0848               	movf	(___ftadd_f2),w
  3193  0496  00C5               	movwf	(?___ftadd)
  3194  0497  0849               	movf	(___ftadd_f2+1),w
  3195  0498  00C6               	movwf	(?___ftadd+1)
  3196  0499  084A               	movf	(___ftadd_f2+2),w
  3197  049A  00C7               	movwf	(?___ftadd+2)
  3198  049B  2DA1               	goto	l98
  3199                           	
  3200  049C                     l100:	
  3201                           	line	25
  3202                           	
  3203  049C  304E               	movlw	((___ftadd_exp2))&0ffh
  3204                           	
  3205  049D  00D1               	movwf	(?___ftunpack)
  3206                           	
  3207  049E  3048               	movlw	((___ftadd_f2))&0ffh
  3208  049F  120A  118A  2139   	fcall	___ftunpack
              120A  118A         
  3209  04A4  1283               	bcf	status, 5	;RP0=0, select bank0
  3210  04A5  1303               	bcf	status, 6	;RP1=0, select bank0
  3211                           	
  3212  04A6  00CB               	movwf	(___ftadd_sign2)
  3213                           	line	26
  3214                           	
  3215  04A7  08CE               	movf	(___ftadd_exp2),f
  3216  04A8  1D03               	skipz
  3217  04A9  2CAB               	goto	u3060
  3218  04AA  2D90               	goto	l101
  3219  04AB                     u3060:
  3220                           	line	27
  3221  04AB  3006               	movlw	(06h)
  3222                           	
  3223  04AC  00CC               	movwf	(___ftadd_cntr)
  3224                           	line	29
  3225                           	
  3226  04AD  084E               	movf	(___ftadd_exp2),w
  3227                           	
  3228  04AE  024F               	subwf	(___ftadd_exp1),w
  3229  04AF  1803               	skipnc
  3230  04B0  2CB2               	goto	u3071
  3231  04B1  2CB3               	goto	u3070
  3232  04B2                     u3071:
  3233  04B2  2CF2               	goto	l102
  3234  04B3                     u3070:
  3235                           	line	30
  3236                           	
  3237                           	
  3238  04B3  084E               	movf	(___ftadd_exp2),w
  3239  04B4  00D0               	movwf	(??___ftadd+5+0)
  3240  04B5  084F               	movf	(___ftadd_exp1),w
  3241  04B6  02D0               	subwf	(??___ftadd+5+0),f
  3242  04B7  3019               	movlw	(019h)
  3243  04B8  0250               	subwf	0+(??___ftadd+5+0),w
  3244  04B9  1C03               	skipc
  3245  04BA  2CBC               	goto	u3081
  3246  04BB  2CBD               	goto	u3080
  3247  04BC                     u3081:
  3248  04BC  2CC8               	goto	l107
  3249  04BD                     u3080:
  3250                           	line	32
  3251                           	
  3252  04BD  3000               	movlw	0
  3253  04BE  00C5               	movwf	(___ftadd_f1)
  3254  04BF  3000               	movlw	0
  3255  04C0  00C6               	movwf	(___ftadd_f1+1)
  3256  04C1  3000               	movlw	0
  3257  04C2  00C7               	movwf	(___ftadd_f1+2)
  3258                           	line	33
  3259                           	
  3260  04C3  084E               	movf	(___ftadd_exp2),w
  3261                           	
  3262  04C4  00CF               	movwf	(___ftadd_exp1)
  3263                           	line	34
  3264                           	
  3265  04C5  084B               	movf	(___ftadd_sign2),w
  3266                           	
  3267  04C6  00CD               	movwf	(___ftadd_sign1)
  3268                           	line	35
  3269  04C7  2CF1               	goto	l104
  3270                           	line	38
  3271                           	
  3272  04C8                     l107:	
  3273                           	line	39
  3274                           	
  3275  04C8  3001               	movlw	01h
  3276  04C9                     u3095:
  3277  04C9  1003               	clrc
  3278  04CA  0DC8               	rlf	(___ftadd_f2),f
  3279  04CB  0DC9               	rlf	(___ftadd_f2+1),f
  3280  04CC  0DCA               	rlf	(___ftadd_f2+2),f
  3281  04CD  3EFF               	addlw	-1
  3282  04CE  1D03               	skipz
  3283  04CF  2CC9               	goto	u3095
  3284                           	line	40
  3285                           	
  3286                           	
  3287  04D0  3001               	movlw	low(01h)
  3288  04D1  02CE               	subwf	(___ftadd_exp2),f
  3289                           	line	41
  3290                           	
  3291                           	
  3292  04D2  084E               	movf	(___ftadd_exp2),w
  3293  04D3  064F               	xorwf	(___ftadd_exp1),w
  3294  04D4  1903               	skipnz
  3295  04D5  2CD7               	goto	u3101
  3296  04D6  2CD8               	goto	u3100
  3297  04D7                     u3101:
  3298  04D7  2CDE               	goto	l106
  3299  04D8                     u3100:
  3300                           	
  3301                           	
  3302  04D8  3001               	movlw	low(01h)
  3303  04D9  02CC               	subwf	(___ftadd_cntr),f
  3304  04DA  1D03               	btfss	status,2
  3305  04DB  2CDD               	goto	u3111
  3306  04DC  2CDE               	goto	u3110
  3307  04DD                     u3111:
  3308  04DD  2CC8               	goto	l107
  3309  04DE                     u3110:
  3310                           	
  3311  04DE                     l600000817:	
  3312                           	
  3313  04DE                     l106:	
  3314                           	line	42
  3315  04DE  2CEB               	goto	l108
  3316                           	
  3317  04DF                     l109:	
  3318                           	line	43
  3319                           	
  3320  04DF  3001               	movlw	01h
  3321  04E0                     u3125:
  3322  04E0  1003               	clrc
  3323  04E1  0CC7               	rrf	(___ftadd_f1+2),f
  3324  04E2  0CC6               	rrf	(___ftadd_f1+1),f
  3325  04E3  0CC5               	rrf	(___ftadd_f1),f
  3326  04E4  3EFF               	addlw	-1
  3327  04E5  1D03               	skipz
  3328  04E6  2CE0               	goto	u3125
  3329                           
  3330                           	line	44
  3331  04E7  3001               	movlw	(01h)
  3332  04E8  00D0               	movwf	(??___ftadd+5+0)
  3333                           	
  3334  04E9  0850               	movf	(??___ftadd+5+0),w
  3335  04EA  07CF               	addwf	(___ftadd_exp1),f
  3336                           	line	45
  3337                           	
  3338  04EB                     l108:	
  3339                           	line	42
  3340                           	
  3341                           	
  3342  04EB  084F               	movf	(___ftadd_exp1),w
  3343  04EC  064E               	xorwf	(___ftadd_exp2),w
  3344  04ED  1D03               	skipz
  3345  04EE  2CF0               	goto	u3131
  3346  04EF  2CF1               	goto	u3130
  3347  04F0                     u3131:
  3348  04F0  2CDF               	goto	l109
  3349  04F1                     u3130:
  3350                           	
  3351  04F1                     l110:	
  3352                           	line	46
  3353                           	
  3354  04F1                     l104:	
  3355                           	line	47
  3356  04F1  2D32               	goto	l111
  3357                           	
  3358  04F2                     l102:	
  3359                           	
  3360                           	
  3361  04F2  084F               	movf	(___ftadd_exp1),w
  3362  04F3  064E               	xorwf	(___ftadd_exp2),w
  3363  04F4  1903               	skipnz
  3364  04F5  2CF7               	goto	u3141
  3365  04F6  2CF8               	goto	u3140
  3366  04F7                     u3141:
  3367  04F7  2D32               	goto	l111
  3368  04F8                     u3140:
  3369                           	line	48
  3370                           	
  3371                           	
  3372  04F8  084F               	movf	(___ftadd_exp1),w
  3373  04F9  00D0               	movwf	(??___ftadd+5+0)
  3374  04FA  084E               	movf	(___ftadd_exp2),w
  3375  04FB  02D0               	subwf	(??___ftadd+5+0),f
  3376  04FC  3019               	movlw	(019h)
  3377  04FD  0250               	subwf	0+(??___ftadd+5+0),w
  3378  04FE  1C03               	skipc
  3379  04FF  2D01               	goto	u3151
  3380  0500  2D02               	goto	u3150
  3381  0501                     u3151:
  3382  0501  2D09               	goto	l117
  3383  0502                     u3150:
  3384                           	line	49
  3385                           	
  3386  0502  3000               	movlw	0
  3387  0503  00C8               	movwf	(___ftadd_f2)
  3388  0504  3000               	movlw	0
  3389  0505  00C9               	movwf	(___ftadd_f2+1)
  3390  0506  3000               	movlw	0
  3391  0507  00CA               	movwf	(___ftadd_f2+2)
  3392  0508  2D32               	goto	l111
  3393                           	line	53
  3394                           	
  3395  0509                     l117:	
  3396                           	line	54
  3397                           	
  3398  0509  3001               	movlw	01h
  3399  050A                     u3165:
  3400  050A  1003               	clrc
  3401  050B  0DC5               	rlf	(___ftadd_f1),f
  3402  050C  0DC6               	rlf	(___ftadd_f1+1),f
  3403  050D  0DC7               	rlf	(___ftadd_f1+2),f
  3404  050E  3EFF               	addlw	-1
  3405  050F  1D03               	skipz
  3406  0510  2D0A               	goto	u3165
  3407                           	line	55
  3408                           	
  3409                           	
  3410  0511  3001               	movlw	low(01h)
  3411  0512  02CF               	subwf	(___ftadd_exp1),f
  3412                           	line	56
  3413                           	
  3414                           	
  3415  0513  084E               	movf	(___ftadd_exp2),w
  3416  0514  064F               	xorwf	(___ftadd_exp1),w
  3417  0515  1903               	skipnz
  3418  0516  2D18               	goto	u3171
  3419  0517  2D19               	goto	u3170
  3420  0518                     u3171:
  3421  0518  2D1F               	goto	l116
  3422  0519                     u3170:
  3423                           	
  3424                           	
  3425  0519  3001               	movlw	low(01h)
  3426  051A  02CC               	subwf	(___ftadd_cntr),f
  3427  051B  1D03               	btfss	status,2
  3428  051C  2D1E               	goto	u3181
  3429  051D  2D1F               	goto	u3180
  3430  051E                     u3181:
  3431  051E  2D09               	goto	l117
  3432  051F                     u3180:
  3433                           	
  3434  051F                     l600000818:	
  3435                           	
  3436  051F                     l116:	
  3437                           	line	57
  3438  051F  2D2C               	goto	l118
  3439                           	
  3440  0520                     l119:	
  3441                           	line	58
  3442                           	
  3443  0520  3001               	movlw	01h
  3444  0521                     u3195:
  3445  0521  1003               	clrc
  3446  0522  0CCA               	rrf	(___ftadd_f2+2),f
  3447  0523  0CC9               	rrf	(___ftadd_f2+1),f
  3448  0524  0CC8               	rrf	(___ftadd_f2),f
  3449  0525  3EFF               	addlw	-1
  3450  0526  1D03               	skipz
  3451  0527  2D21               	goto	u3195
  3452                           
  3453                           	line	59
  3454  0528  3001               	movlw	(01h)
  3455  0529  00D0               	movwf	(??___ftadd+5+0)
  3456                           	
  3457  052A  0850               	movf	(??___ftadd+5+0),w
  3458  052B  07CE               	addwf	(___ftadd_exp2),f
  3459                           	line	60
  3460                           	
  3461  052C                     l118:	
  3462                           	line	57
  3463                           	
  3464                           	
  3465  052C  084F               	movf	(___ftadd_exp1),w
  3466  052D  064E               	xorwf	(___ftadd_exp2),w
  3467  052E  1D03               	skipz
  3468  052F  2D31               	goto	u3201
  3469  0530  2D32               	goto	u3200
  3470  0531                     u3201:
  3471  0531  2D20               	goto	l119
  3472  0532                     u3200:
  3473                           	
  3474  0532                     l120:	
  3475                           	line	61
  3476                           	
  3477  0532                     l114:	
  3478                           	line	62
  3479                           	
  3480  0532                     l112:	
  3481                           	line	63
  3482                           	
  3483  0532                     l111:	
  3484                           	
  3485  0532  08CD               	movf	(___ftadd_sign1),f
  3486  0533  1D03               	skipz
  3487  0534  2D36               	goto	u3210
  3488  0535  2D4A               	goto	l121
  3489  0536                     u3210:
  3490                           	line	64
  3491                           	
  3492  0536  30FF               	movlw	0FFh
  3493  0537  06C5               	xorwf	(___ftadd_f1),f
  3494  0538  30FF               	movlw	0FFh
  3495  0539  06C6               	xorwf	(___ftadd_f1+1),f
  3496  053A  30FF               	movlw	0FFh
  3497  053B  06C7               	xorwf	(___ftadd_f1+2),f
  3498                           	line	65
  3499                           	
  3500  053C  3001               	movlw	01h
  3501  053D  07C5               	addwf	(___ftadd_f1),f
  3502  053E  3000               	movlw	0
  3503  053F  1103               	clrz
  3504  0540  1803               	skipnc
  3505  0541  3E01               	addlw	1
  3506  0542  1D03               	skipz
  3507  0543  07C6               	addwf	(___ftadd_f1+1),f
  3508  0544  3000               	movlw	0
  3509  0545  1103               	clrz
  3510  0546  1803               	skipnc
  3511  0547  3E01               	addlw	1
  3512  0548  1D03               	skipz
  3513  0549  07C7               	addwf	(___ftadd_f1+2),f
  3514                           	line	66
  3515                           	
  3516  054A                     l121:	
  3517                           	line	67
  3518                           	
  3519  054A  08CB               	movf	(___ftadd_sign2),f
  3520  054B  1D03               	skipz
  3521  054C  2D4E               	goto	u3220
  3522  054D  2D62               	goto	l122
  3523  054E                     u3220:
  3524                           	line	68
  3525                           	
  3526  054E  30FF               	movlw	0FFh
  3527  054F  06C8               	xorwf	(___ftadd_f2),f
  3528  0550  30FF               	movlw	0FFh
  3529  0551  06C9               	xorwf	(___ftadd_f2+1),f
  3530  0552  30FF               	movlw	0FFh
  3531  0553  06CA               	xorwf	(___ftadd_f2+2),f
  3532                           	line	69
  3533                           	
  3534  0554  3001               	movlw	01h
  3535  0555  07C8               	addwf	(___ftadd_f2),f
  3536  0556  3000               	movlw	0
  3537  0557  1103               	clrz
  3538  0558  1803               	skipnc
  3539  0559  3E01               	addlw	1
  3540  055A  1D03               	skipz
  3541  055B  07C9               	addwf	(___ftadd_f2+1),f
  3542  055C  3000               	movlw	0
  3543  055D  1103               	clrz
  3544  055E  1803               	skipnc
  3545  055F  3E01               	addlw	1
  3546  0560  1D03               	skipz
  3547  0561  07CA               	addwf	(___ftadd_f2+2),f
  3548                           	line	70
  3549                           	
  3550  0562                     l122:	
  3551                           	line	71
  3552  0562  1003               	clrc
  3553                           	
  3554  0563  3000               	movlw	0
  3555  0564  1803               	btfsc	status,0
  3556  0565  3001               	movlw	1
  3557  0566  00CD               	movwf	(___ftadd_sign1)
  3558                           	line	72
  3559                           	
  3560                           	
  3561  0567  0848               	movf	(___ftadd_f2),w
  3562  0568  07C5               	addwf	(___ftadd_f1),f
  3563  0569  0849               	movf	(___ftadd_f2+1),w
  3564  056A  1103               	clrz
  3565  056B  1803               	skipnc
  3566  056C  0A49               	incf	(___ftadd_f2+1),w
  3567  056D  1D03               	skipz
  3568  056E  07C6               	addwf	(___ftadd_f1+1),f
  3569  056F  084A               	movf	(___ftadd_f2+2),w
  3570  0570  1103               	clrz
  3571  0571  1803               	skipnc
  3572  0572  0A4A               	incf	(___ftadd_f2+2),w
  3573  0573  1D03               	skipz
  3574  0574  07C7               	addwf	(___ftadd_f1+2),f
  3575                           	line	73
  3576                           	
  3577  0575  1FC7               	btfss	(___ftadd_f1+2),(23)&7
  3578  0576  2D78               	goto	u3231
  3579  0577  2D79               	goto	u3230
  3580  0578                     u3231:
  3581  0578  2D90               	goto	l101
  3582  0579                     u3230:
  3583                           	line	74
  3584                           	
  3585  0579  30FF               	movlw	0FFh
  3586  057A  06C5               	xorwf	(___ftadd_f1),f
  3587  057B  30FF               	movlw	0FFh
  3588  057C  06C6               	xorwf	(___ftadd_f1+1),f
  3589  057D  30FF               	movlw	0FFh
  3590  057E  06C7               	xorwf	(___ftadd_f1+2),f
  3591                           	line	75
  3592                           	
  3593  057F  3001               	movlw	01h
  3594  0580  07C5               	addwf	(___ftadd_f1),f
  3595  0581  3000               	movlw	0
  3596  0582  1103               	clrz
  3597  0583  1803               	skipnc
  3598  0584  3E01               	addlw	1
  3599  0585  1D03               	skipz
  3600  0586  07C6               	addwf	(___ftadd_f1+1),f
  3601  0587  3000               	movlw	0
  3602  0588  1103               	clrz
  3603  0589  1803               	skipnc
  3604  058A  3E01               	addlw	1
  3605  058B  1D03               	skipz
  3606  058C  07C7               	addwf	(___ftadd_f1+2),f
  3607                           	line	76
  3608                           	
  3609  058D  01CD               	clrf	(___ftadd_sign1)
  3610  058E  1403               	bsf	status,0
  3611  058F  0DCD               	rlf	(___ftadd_sign1),f
  3612                           	line	77
  3613                           	
  3614  0590                     l123:	
  3615                           	line	78
  3616                           	
  3617  0590                     l101:	
  3618                           	line	79
  3619                           	
  3620  0590  084F               	movf	(___ftadd_exp1),w
  3621                           	
  3622  0591  00D1               	movwf	(?___ftpack)
  3623                           	
  3624  0592  3045               	movlw	((___ftadd_f1))&0ffh
  3625  0593  120A  118A  2729   	fcall	___ftpack
              120A  118A         
  3626                           	line	80
  3627  0598  1283               	bcf	status, 5	;RP0=0, select bank0
  3628  0599  1303               	bcf	status, 6	;RP1=0, select bank0
  3629                           	
  3630  059A  08CD               	movf	(___ftadd_sign1),f
  3631  059B  1D03               	skipz
  3632  059C  2D9E               	goto	u3240
  3633  059D  2DA0               	goto	l124
  3634  059E                     u3240:
  3635                           	line	81
  3636                           	
  3637  059E  3080               	movlw	080h
  3638  059F  06C7               	xorwf	(___ftadd_f1+2),f
  3639                           	
  3640  05A0                     l124:	
  3641                           	line	82
  3642  05A0  2DA1               	goto	l98
  3643                           	line	83
  3644  05A1                     l98:	
  3645  05A1  0008               	return
  3646                           ; =============== function ___ftadd ends ======
                                 =========
  3647                           
  3648                           GLOBAL __end_of___ftadd
  3649  05A2                     	__end_of___ftadd:
  3650                           	FNSIZE	___ftadd,6,6
  3651                           	signat	___ftadd,8315
  3652                           	global	_LCDReset
  3653                           	global	??_LCDReset
  3654                           	global	?_LCDReset
  3655                           
  3656                           ; *************** function _LCDReset **********
                                 *****
  3657                           ; Defined at:
  3658                           ;		line 47 in file "C:\Users\hardik\Desktop\ADC
                                 \LCD.c"
  3659                           ; Parameters:
  3660                           ;		None
  3661                           ; Auto variables:
  3662                           ;		None
  3663                           ; Return value:
  3664                           ;		type: void 
  3665                           ;		size: 0
  3666                           ; Registers used:
  3667                           ;		wreg, status,2, status,0, pclath, cstack
  3668                           ; Tracked objects:
  3669                           ;		On entry : BFF/0
  3670                           ;		On exit  : 0/0
  3671                           ;		Unchanged: 0/0
  3672                           ; Data sizes:
  3673                           ;		Autos:    0
  3674                           ;		Params:   0
  3675                           ;		Temp:     0
  3676                           ;		Total:    0
  3677                           ; This function calls:
  3678                           ;		_LCDWriteCommand
  3679                           ; This function is called by:
  3680                           ;		_LCDInitialize
  3681                           ; This function uses a non-reentrant model
  3682                           ; 
  3683                           	psect	text209,local,class=CODE,delta=2
  3684                           	file	"C:\Users\hardik\Desktop\ADC\LCD.c"
  3685                           	line	47
  3686                           ;LCD.c: 46: static void LCDReset(void)
  3687                           ;LCD.c: 47: {
  3688                           	
  3689  0E61                     _LCDReset:	
  3690                           	opt stack 4
  3691                           ; Regs used in _LCDReset: [wreg+status,2+status
                                 ,0+pclath+cstack]
  3692                           	line	48
  3693                           ;LCD.c: 48: LCDWriteCommand(0x33);
  3694  0E61  3033               	movlw	(033h)
  3695  0E62  120A  158A  264B   	fcall	_LCDWriteCommand
              120A  158A         
  3696                           	line	49
  3697                           ;LCD.c: 49: LCDWriteCommand(0x33);
  3698  0E67  3033               	movlw	(033h)
  3699  0E68  120A  158A  264B   	fcall	_LCDWriteCommand
              120A  158A         
  3700                           	line	50
  3701                           ;LCD.c: 50: LCDWriteCommand(0x32);
  3702  0E6D  3032               	movlw	(032h)
  3703  0E6E  120A  158A  264B   	fcall	_LCDWriteCommand
              120A  158A         
  3704                           	line	51
  3705                           ;LCD.c: 51: }
  3706  0E73                     l16:	
  3707  0E73  0008               	return
  3708                           ; =============== function _LCDReset ends =====
                                 ==========
  3709                           
  3710                           GLOBAL __end_of_LCDReset
  3711  0E74                     	__end_of_LCDReset:
  3712                           	FNSIZE	_LCDReset,0,0
  3713                           	signat	_LCDReset,88
  3714                           	global	___awdiv
  3715                           	global	??___awdiv
  3716                           	global	?___awdiv
  3717                           
  3718                           ; *************** function ___awdiv ***********
                                 ****
  3719                           ; Defined at:
  3720                           ;		line 5 in file "C:\Program Files (x86)\HI-TE
                                 CH Software\PICC\PRO\9.65\sources\awdiv.c"
  3721                           ; Parameters:
  3722                           ;		dividend    	offs:   0	type: int 
  3723                           ;		divisor     	offs:   2	type: int 
  3724                           ; Auto variables:
  3725                           ;		sign        	       	type: unsigned char 
  3726                           ;		counter     	       	type: unsigned char 
  3727                           ;		quotient    	       	type: int 
  3728                           ; Return value:
  3729                           ;		type: int 
  3730                           ;		size: 2
  3731                           ; Registers used:
  3732                           ;		wreg, status,2, status,0
  3733                           ; Tracked objects:
  3734                           ;		On entry : B00/0
  3735                           ;		On exit  : 0/0
  3736                           ;		Unchanged: 0/0
  3737                           ; Data sizes:
  3738                           ;		Autos:    4
  3739                           ;		Params:   4
  3740                           ;		Temp:     1
  3741                           ;		Total:    9
  3742                           ; This function calls:
  3743                           ;		Nothing
  3744                           ; This function is called by:
  3745                           ;		_LCDWriteFloat
  3746                           ;		_LCDWriteInteger
  3747                           ; This function uses a non-reentrant model
  3748                           ; 
  3749                           	psect	text210,local,class=CODE,delta=2
  3750                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\awdiv.c"
  3751                           	line	5
  3752                           	
  3753  0261                     ___awdiv:	
  3754                           	opt stack 4
  3755                           ; Regs used in ___awdiv: [wreg+status,2+status,
                                 0]
  3756                           	line	9
  3757  0261  1003               	clrc
  3758                           	
  3759  0262  3000               	movlw	0
  3760  0263  1803               	btfsc	status,0
  3761  0264  3001               	movlw	1
  3762  0265  00CE               	movwf	(___awdiv_sign)
  3763                           	line	10
  3764                           	
  3765  0266  1FCC               	btfss	(___awdiv_divisor+1),7
  3766  0267  2A69               	goto	u3251
  3767  0268  2A6A               	goto	u3250
  3768  0269                     u3251:
  3769  0269  2A72               	goto	l221
  3770  026A                     u3250:
  3771                           	line	11
  3772                           	
  3773  026A  09CB               	comf	(___awdiv_divisor),f
  3774  026B  09CC               	comf	(___awdiv_divisor+1),f
  3775  026C  0ACB               	incf	(___awdiv_divisor),f
  3776  026D  1903               	skipnz
  3777  026E  0ACC               	incf	(___awdiv_divisor+1),f
  3778                           	
  3779                           	line	12
  3780                           	
  3781  026F  01CE               	clrf	(___awdiv_sign)
  3782  0270  1403               	bsf	status,0
  3783  0271  0DCE               	rlf	(___awdiv_sign),f
  3784                           	line	13
  3785                           	
  3786  0272                     l221:	
  3787                           	line	14
  3788                           	
  3789  0272  1FCA               	btfss	(___awdiv_dividend+1),7
  3790  0273  2A75               	goto	u3261
  3791  0274  2A76               	goto	u3260
  3792  0275                     u3261:
  3793  0275  2A7F               	goto	l222
  3794  0276                     u3260:
  3795                           	line	15
  3796                           	
  3797  0276  09C9               	comf	(___awdiv_dividend),f
  3798  0277  09CA               	comf	(___awdiv_dividend+1),f
  3799  0278  0AC9               	incf	(___awdiv_dividend),f
  3800  0279  1903               	skipnz
  3801  027A  0ACA               	incf	(___awdiv_dividend+1),f
  3802                           	
  3803                           	line	16
  3804  027B  3001               	movlw	(01h)
  3805  027C  00D1               	movwf	(??___awdiv+4+0)
  3806                           	
  3807  027D  0851               	movf	(??___awdiv+4+0),w
  3808  027E  06CE               	xorwf	(___awdiv_sign),f
  3809                           	line	17
  3810                           	
  3811  027F                     l222:	
  3812                           	line	18
  3813  027F  3000               	movlw	low(0)
  3814                           	
  3815  0280  00CF               	movwf	(___awdiv_quotient)
  3816  0281  3000               	movlw	high(0)
  3817  0282  00D0               	movwf	((___awdiv_quotient))+1
  3818                           	line	19
  3819                           	
  3820  0283  084C               	movf	(___awdiv_divisor+1),w
  3821  0284  044B               	iorwf	(___awdiv_divisor),w
  3822  0285  1903               	skipnz
  3823  0286  2A88               	goto	u3271
  3824  0287  2A89               	goto	u3270
  3825  0288                     u3271:
  3826  0288  2AC4               	goto	l223
  3827  0289                     u3270:
  3828                           	line	20
  3829                           	
  3830  0289  01CD               	clrf	(___awdiv_counter)
  3831  028A  1403               	bsf	status,0
  3832  028B  0DCD               	rlf	(___awdiv_counter),f
  3833                           	line	21
  3834  028C  2A98               	goto	l224
  3835                           	
  3836  028D                     l225:	
  3837                           	line	22
  3838                           	
  3839  028D  3001               	movlw	01h
  3840  028E                     u3285:
  3841  028E  1003               	clrc
  3842  028F  0DCB               	rlf	(___awdiv_divisor),f
  3843  0290  0DCC               	rlf	(___awdiv_divisor+1),f
  3844  0291  3EFF               	addlw	-1
  3845  0292  1D03               	skipz
  3846  0293  2A8E               	goto	u3285
  3847                           	line	23
  3848  0294  3001               	movlw	(01h)
  3849  0295  00D1               	movwf	(??___awdiv+4+0)
  3850                           	
  3851  0296  0851               	movf	(??___awdiv+4+0),w
  3852  0297  07CD               	addwf	(___awdiv_counter),f
  3853                           	line	24
  3854                           	
  3855  0298                     l224:	
  3856                           	line	21
  3857                           	
  3858  0298  1FCC               	btfss	(___awdiv_divisor+1),(15)&7
  3859  0299  2A9B               	goto	u3291
  3860  029A  2A9C               	goto	u3290
  3861  029B                     u3291:
  3862  029B  2A8D               	goto	l225
  3863  029C                     u3290:
  3864                           	
  3865  029C                     l226:	
  3866                           	line	25
  3867                           	
  3868  029C                     l229:	
  3869                           	line	26
  3870                           	
  3871  029C  3001               	movlw	01h
  3872  029D                     u3305:
  3873  029D  1003               	clrc
  3874  029E  0DCF               	rlf	(___awdiv_quotient),f
  3875  029F  0DD0               	rlf	(___awdiv_quotient+1),f
  3876  02A0  3EFF               	addlw	-1
  3877  02A1  1D03               	skipz
  3878  02A2  2A9D               	goto	u3305
  3879                           	line	27
  3880                           	
  3881                           	
  3882  02A3  084C               	movf	(___awdiv_divisor+1),w
  3883  02A4  024A               	subwf	(___awdiv_dividend+1),w
  3884  02A5  1D03               	skipz
  3885  02A6  2AA9               	goto	u3315
  3886  02A7  084B               	movf	(___awdiv_divisor),w
  3887  02A8  0249               	subwf	(___awdiv_dividend),w
  3888  02A9                     u3315:
  3889  02A9  1C03               	skipc
  3890  02AA  2AAC               	goto	u3311
  3891  02AB  2AAD               	goto	u3310
  3892  02AC                     u3311:
  3893  02AC  2AB7               	goto	l230
  3894  02AD                     u3310:
  3895                           	line	28
  3896                           	
  3897                           	
  3898  02AD  084B               	movf	(___awdiv_divisor),w
  3899  02AE  02C9               	subwf	(___awdiv_dividend),f
  3900  02AF  084C               	movf	(___awdiv_divisor+1),w
  3901  02B0  1C03               	skipc
  3902  02B1  03CA               	decf	(___awdiv_dividend+1),f
  3903  02B2  02CA               	subwf	(___awdiv_dividend+1),f
  3904                           	line	29
  3905                           	
  3906  02B3  3001               	movlw	low(01h)
  3907  02B4  04CF               	iorwf	(___awdiv_quotient),f
  3908  02B5  3000               	movlw	high(01h)
  3909  02B6  04D0               	iorwf	(___awdiv_quotient+1),f
  3910                           	line	30
  3911                           	
  3912  02B7                     l230:	
  3913                           	line	31
  3914                           	
  3915  02B7  3001               	movlw	01h
  3916  02B8                     u3325:
  3917  02B8  1003               	clrc
  3918  02B9  0CCC               	rrf	(___awdiv_divisor+1),f
  3919  02BA  0CCB               	rrf	(___awdiv_divisor),f
  3920  02BB  3EFF               	addlw	-1
  3921  02BC  1D03               	skipz
  3922  02BD  2AB8               	goto	u3325
  3923                           	line	32
  3924                           	
  3925                           	
  3926  02BE  3001               	movlw	low(01h)
  3927  02BF  02CD               	subwf	(___awdiv_counter),f
  3928  02C0  1D03               	btfss	status,2
  3929  02C1  2AC3               	goto	u3331
  3930  02C2  2AC4               	goto	u3330
  3931  02C3                     u3331:
  3932  02C3  2A9C               	goto	l229
  3933  02C4                     u3330:
  3934                           	
  3935  02C4                     l228:	
  3936                           	line	33
  3937                           	
  3938  02C4                     l223:	
  3939                           	line	34
  3940                           	
  3941  02C4  08CE               	movf	(___awdiv_sign),f
  3942  02C5  1D03               	skipz
  3943  02C6  2AC8               	goto	u3340
  3944  02C7  2ACD               	goto	l231
  3945  02C8                     u3340:
  3946                           	line	35
  3947                           	
  3948  02C8  09CF               	comf	(___awdiv_quotient),f
  3949  02C9  09D0               	comf	(___awdiv_quotient+1),f
  3950  02CA  0ACF               	incf	(___awdiv_quotient),f
  3951  02CB  1903               	skipnz
  3952  02CC  0AD0               	incf	(___awdiv_quotient+1),f
  3953                           	
  3954                           	
  3955  02CD                     l231:	
  3956                           	line	36
  3957                           	
  3958                           	
  3959  02CD  0850               	movf	(___awdiv_quotient+1),w
  3960  02CE  01CA               	clrf	(?___awdiv+1)
  3961  02CF  07CA               	addwf	(?___awdiv+1)
  3962  02D0  084F               	movf	(___awdiv_quotient),w
  3963  02D1  01C9               	clrf	(?___awdiv)
  3964  02D2  07C9               	addwf	(?___awdiv)
  3965                           
  3966  02D3  2AD4               	goto	l220
  3967                           	line	37
  3968  02D4                     l220:	
  3969  02D4  0008               	return
  3970                           ; =============== function ___awdiv ends ======
                                 =========
  3971                           
  3972                           GLOBAL __end_of___awdiv
  3973  02D5                     	__end_of___awdiv:
  3974                           	FNSIZE	___awdiv,5,4
  3975                           	signat	___awdiv,8314
  3976                           	global	___awmod
  3977                           	global	??___awmod
  3978                           	global	?___awmod
  3979                           
  3980                           ; *************** function ___awmod ***********
                                 ****
  3981                           ; Defined at:
  3982                           ;		line 5 in file "C:\Program Files (x86)\HI-TE
                                 CH Software\PICC\PRO\9.65\sources\awmod.c"
  3983                           ; Parameters:
  3984                           ;		dividend    	offs:   0	type: int 
  3985                           ;		divisor     	offs:   2	type: int 
  3986                           ; Auto variables:
  3987                           ;		sign        	       	type: unsigned char 
  3988                           ;		counter     	       	type: unsigned char 
  3989                           ; Return value:
  3990                           ;		type: int 
  3991                           ;		size: 2
  3992                           ; Registers used:
  3993                           ;		wreg, status,2, status,0
  3994                           ; Tracked objects:
  3995                           ;		On entry : 300/0
  3996                           ;		On exit  : 0/0
  3997                           ;		Unchanged: 0/0
  3998                           ; Data sizes:
  3999                           ;		Autos:    2
  4000                           ;		Params:   4
  4001                           ;		Temp:     1
  4002                           ;		Total:    7
  4003                           ; This function calls:
  4004                           ;		Nothing
  4005                           ; This function is called by:
  4006                           ;		_LCDWriteFloat
  4007                           ;		_LCDWriteInteger
  4008                           ; This function uses a non-reentrant model
  4009                           ; 
  4010                           	psect	text211,local,class=CODE,delta=2
  4011                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\awmod.c"
  4012                           	line	5
  4013                           	
  4014  0193                     ___awmod:	
  4015                           	opt stack 4
  4016                           ; Regs used in ___awmod: [wreg+status,2+status,
                                 0]
  4017                           	line	8
  4018  0193  1003               	clrc
  4019                           	
  4020  0194  3000               	movlw	0
  4021  0195  1803               	btfsc	status,0
  4022  0196  3001               	movlw	1
  4023  0197  00CD               	movwf	(___awmod_sign)
  4024                           	line	9
  4025                           	
  4026  0198  1FCA               	btfss	(___awmod_dividend+1),7
  4027  0199  299B               	goto	u3351
  4028  019A  299C               	goto	u3350
  4029  019B                     u3351:
  4030  019B  29A4               	goto	l303
  4031  019C                     u3350:
  4032                           	line	10
  4033                           	
  4034  019C  09C9               	comf	(___awmod_dividend),f
  4035  019D  09CA               	comf	(___awmod_dividend+1),f
  4036  019E  0AC9               	incf	(___awmod_dividend),f
  4037  019F  1903               	skipnz
  4038  01A0  0ACA               	incf	(___awmod_dividend+1),f
  4039                           	
  4040                           	line	11
  4041                           	
  4042  01A1  01CD               	clrf	(___awmod_sign)
  4043  01A2  1403               	bsf	status,0
  4044  01A3  0DCD               	rlf	(___awmod_sign),f
  4045                           	line	12
  4046                           	
  4047  01A4                     l303:	
  4048                           	line	13
  4049                           	
  4050  01A4  1FCC               	btfss	(___awmod_divisor+1),7
  4051  01A5  29A7               	goto	u3361
  4052  01A6  29A8               	goto	u3360
  4053  01A7                     u3361:
  4054  01A7  29AD               	goto	l304
  4055  01A8                     u3360:
  4056                           	line	14
  4057                           	
  4058  01A8  09CB               	comf	(___awmod_divisor),f
  4059  01A9  09CC               	comf	(___awmod_divisor+1),f
  4060  01AA  0ACB               	incf	(___awmod_divisor),f
  4061  01AB  1903               	skipnz
  4062  01AC  0ACC               	incf	(___awmod_divisor+1),f
  4063                           	
  4064                           	
  4065  01AD                     l304:	
  4066                           	line	15
  4067                           	
  4068  01AD  084C               	movf	(___awmod_divisor+1),w
  4069  01AE  044B               	iorwf	(___awmod_divisor),w
  4070  01AF  1903               	skipnz
  4071  01B0  29B2               	goto	u3371
  4072  01B1  29B3               	goto	u3370
  4073  01B2                     u3371:
  4074  01B2  29E3               	goto	l305
  4075  01B3                     u3370:
  4076                           	line	16
  4077                           	
  4078  01B3  01CE               	clrf	(___awmod_counter)
  4079  01B4  1403               	bsf	status,0
  4080  01B5  0DCE               	rlf	(___awmod_counter),f
  4081                           	line	17
  4082  01B6  29C2               	goto	l306
  4083                           	
  4084  01B7                     l307:	
  4085                           	line	18
  4086                           	
  4087  01B7  3001               	movlw	01h
  4088  01B8                     u3385:
  4089  01B8  1003               	clrc
  4090  01B9  0DCB               	rlf	(___awmod_divisor),f
  4091  01BA  0DCC               	rlf	(___awmod_divisor+1),f
  4092  01BB  3EFF               	addlw	-1
  4093  01BC  1D03               	skipz
  4094  01BD  29B8               	goto	u3385
  4095                           	line	19
  4096  01BE  3001               	movlw	(01h)
  4097  01BF  00CF               	movwf	(??___awmod+2+0)
  4098                           	
  4099  01C0  084F               	movf	(??___awmod+2+0),w
  4100  01C1  07CE               	addwf	(___awmod_counter),f
  4101                           	line	20
  4102                           	
  4103  01C2                     l306:	
  4104                           	line	17
  4105                           	
  4106  01C2  1FCC               	btfss	(___awmod_divisor+1),(15)&7
  4107  01C3  29C5               	goto	u3391
  4108  01C4  29C6               	goto	u3390
  4109  01C5                     u3391:
  4110  01C5  29B7               	goto	l307
  4111  01C6                     u3390:
  4112                           	
  4113  01C6                     l308:	
  4114                           	line	21
  4115                           	
  4116  01C6                     l311:	
  4117                           	line	22
  4118                           	
  4119                           	
  4120  01C6  084C               	movf	(___awmod_divisor+1),w
  4121  01C7  024A               	subwf	(___awmod_dividend+1),w
  4122  01C8  1D03               	skipz
  4123  01C9  29CC               	goto	u3405
  4124  01CA  084B               	movf	(___awmod_divisor),w
  4125  01CB  0249               	subwf	(___awmod_dividend),w
  4126  01CC                     u3405:
  4127  01CC  1C03               	skipc
  4128  01CD  29CF               	goto	u3401
  4129  01CE  29D0               	goto	u3400
  4130  01CF                     u3401:
  4131  01CF  29D6               	goto	l312
  4132  01D0                     u3400:
  4133                           	line	23
  4134                           	
  4135                           	
  4136  01D0  084B               	movf	(___awmod_divisor),w
  4137  01D1  02C9               	subwf	(___awmod_dividend),f
  4138  01D2  084C               	movf	(___awmod_divisor+1),w
  4139  01D3  1C03               	skipc
  4140  01D4  03CA               	decf	(___awmod_dividend+1),f
  4141  01D5  02CA               	subwf	(___awmod_dividend+1),f
  4142                           	
  4143  01D6                     l312:	
  4144                           	line	24
  4145                           	
  4146  01D6  3001               	movlw	01h
  4147  01D7                     u3415:
  4148  01D7  1003               	clrc
  4149  01D8  0CCC               	rrf	(___awmod_divisor+1),f
  4150  01D9  0CCB               	rrf	(___awmod_divisor),f
  4151  01DA  3EFF               	addlw	-1
  4152  01DB  1D03               	skipz
  4153  01DC  29D7               	goto	u3415
  4154                           	line	25
  4155                           	
  4156                           	
  4157  01DD  3001               	movlw	low(01h)
  4158  01DE  02CE               	subwf	(___awmod_counter),f
  4159  01DF  1D03               	btfss	status,2
  4160  01E0  29E2               	goto	u3421
  4161  01E1  29E3               	goto	u3420
  4162  01E2                     u3421:
  4163  01E2  29C6               	goto	l311
  4164  01E3                     u3420:
  4165                           	
  4166  01E3                     l310:	
  4167                           	line	26
  4168                           	
  4169  01E3                     l305:	
  4170                           	line	27
  4171                           	
  4172  01E3  08CD               	movf	(___awmod_sign),f
  4173  01E4  1D03               	skipz
  4174  01E5  29E7               	goto	u3430
  4175  01E6  29EC               	goto	l313
  4176  01E7                     u3430:
  4177                           	line	28
  4178                           	
  4179  01E7  09C9               	comf	(___awmod_dividend),f
  4180  01E8  09CA               	comf	(___awmod_dividend+1),f
  4181  01E9  0AC9               	incf	(___awmod_dividend),f
  4182  01EA  1903               	skipnz
  4183  01EB  0ACA               	incf	(___awmod_dividend+1),f
  4184                           	
  4185                           	
  4186  01EC                     l313:	
  4187                           	line	29
  4188  01EC  29ED               	goto	l302
  4189                           	line	30
  4190  01ED                     l302:	
  4191  01ED  0008               	return
  4192                           ; =============== function ___awmod ends ======
                                 =========
  4193                           
  4194                           GLOBAL __end_of___awmod
  4195  01EE                     	__end_of___awmod:
  4196+                          	FNSIZE	___awmod,3,4
  4197+                          	signat	___awmod,8314
  4198+                          	global	_LCDWriteData
  4199+                          	global	??_LCDWriteData
  4200+                          	global	?_LCDWriteData
  4201+                          
  4202+                          ; *************** function _LCDWriteData ******
      +                          *********
  4203+                          ; Defined at:
  4204+                          ;		line 18 in file "C:\Users\hardik\Desktop\ADC
      +                          \LCD.c"
  4205+                          ; Parameters:
  4206+                          ;		LCDData     	reg:   wr	type: unsigned char 
  4207+                          ; Auto variables:
  4208+                          ;		LCDData     	       	type: unsigned char 
  4209+                          ; Return value:
  4210+                          ;		type: void 
  4211+                          ;		size: 0
  4212+                          ; Registers used:
  4213+                          ;		wreg, status,2, status,0, pclath, cstack
  4214+                          ; Tracked objects:
  4215+                          ;		On entry : 0/0
  4216+                          ;		On exit  : 0/0
  4217+                          ;		Unchanged: 0/0
  4218+                          ; Data sizes:
  4219+                          ;		Autos:    1
  4220+                          ;		Params:   0
  4221+                          ;		Temp:     0
  4222+                          ;		Total:    1
  4223+                          ; This function calls:
  4224+                          ;		_LCDWriteByte
  4225+                          ; This function is called by:
  4226+                          ;		_LCDWriteString
  4227+                          ;		_LCDDisplayInitializing
  4228+                          ;		_LCDWriteFloat
  4229+                          ;		_LCDWriteInteger
  4230+                          ; This function uses a non-reentrant model
  4231+                          ; 
  4232+                          	psect	text212,local,class=CODE,delta=2
  4233+                          	file	"C:\Users\hardik\Desktop\ADC\LCD.c"
  4234+                          	line	18
  4235+                          ;LCD.c: 17: void LCDWriteData(LCDubyte LCDData)
  4236+                          ;LCD.c: 18: {
  4237+                          	
  4238+ 0E40                     _LCDWriteData:	
  4239+                          	opt stack 4
  4240+                          ; Regs used in _LCDWriteData: [wreg+status,2+st
      +                          atus,0+pclath+cstack]
  4241+                          ;_LCDWriteData_LCDData stored from wreg
  4242+ 0E40  1283               	bcf	status, 5	;RP0=0, select bank0
  4243+ 0E41  1303               	bcf	status, 6	;RP1=0, select bank0
  4244+                          	
  4245+ 0E42  00C9               	movwf	(_LCDWriteData_LCDData)
  4246+                          	line	19
  4247+                          ;LCD.c: 19: RD2 = 1;
  4248+ 0E43  1508               	bsf	(66/8),(66)&7
  4249+                          	line	20
  4250+                          ;LCD.c: 20: LCDWriteByte(LCDData);
  4251+                          	
  4252+ 0E44  0849               	movf	(_LCDWriteData_LCDData),w
  4253+ 0E45  120A  158A  274C   	fcall	_LCDWriteByte
      +       120A  158A         
  4254+                          	line	21
  4255+                          ;LCD.c: 21: }
  4256+ 0E4A                     l10:	
  4257+ 0E4A  0008               	return
  4258+                          ; =============== function _LCDWriteData ends =
      +                          ==============
  4259+                          
  4260+                          GLOBAL __end_of_LCDWriteData
  4261+ 0E4B                     	__end_of_LCDWriteData:
  4262+                          	FNSIZE	_LCDWriteData,1,0
  4263+                          	signat	_LCDWriteData,4216
  4264+                          	global	_LCDWriteCommand
  4265+                          	global	??_LCDWriteCommand
  4266+                          	global	?_LCDWriteCommand
  4267+                          
  4268+                          ; *************** function _LCDWriteCommand ***
      +                          ************
  4269+                          ; Defined at:
  4270+                          ;		line 12 in file "C:\Users\hardik\Desktop\ADC
      +                          \LCD.c"
  4271+                          ; Parameters:
  4272+                          ;		LCDData     	reg:   wr	type: unsigned char 
  4273+                          ; Auto variables:
  4274+                          ;		LCDData     	       	type: unsigned char 
  4275+                          ; Return value:
  4276+                          ;		type: void 
  4277+                          ;		size: 0
  4278+                          ; Registers used:
  4279+                          ;		wreg, status,2, status,0, pclath, cstack
  4280+                          ; Tracked objects:
  4281+                          ;		On entry : 0/0
  4282+                          ;		On exit  : 0/0
  4283+                          ;		Unchanged: 0/0
  4284+                          ; Data sizes:
  4285+                          ;		Autos:    1
  4286+                          ;		Params:   0
  4287+                          ;		Temp:     0
  4288+                          ;		Total:    1
  4289+                          ; This function calls:
  4290+                          ;		_LCDWriteByte
  4291+                          ; This function is called by:
  4292+                          ;		_LCDInitialize
  4293+                          ;		_LCDReset
  4294+                          ;		_LCDDisplayInitializing
  4295+                          ;		_LCDWriteFloat
  4296+                          ;		_main
  4297+                          ; This function uses a non-reentrant model
  4298+                          ; 
  4299+                          	psect	text213,local,class=CODE,delta=2
  4300+                          	file	"C:\Users\hardik\Desktop\ADC\LCD.c"
  4301+                          	line	12
  4302+                          ;LCD.c: 11: void LCDWriteCommand(LCDubyte LCDDa
      +                          ta)
  4303+                          ;LCD.c: 12: {
  4304+                          	
  4305+ 0E4B                     _LCDWriteCommand:	
  4306+                          	opt stack 3
  4307+                          ; Regs used in _LCDWriteCommand: [wreg+status,2
      +                          +status,0+pclath+cstack]
  4308+                          ;_LCDWriteCommand_LCDData stored from wreg
  4309+ 0E4B  1283               	bcf	status, 5	;RP0=0, select bank0
  4310+ 0E4C  1303               	bcf	status, 6	;RP1=0, select bank0
  4311+                          	
  4312+ 0E4D  00BF               	movwf	(_LCDWriteCommand_LCDData)
  4313+                          	line	13
  4314+                          ;LCD.c: 13: RD2 = 0;
  4315+ 0E4E  1108               	bcf	(66/8),(66)&7
  4316+                          	line	14
  4317+                          ;LCD.c: 14: LCDWriteByte(LCDData);
  4318+                          	
  4319+ 0E4F  083F               	movf	(_LCDWriteCommand_LCDData),w
  4320+ 0E50  120A  158A  274C   	fcall	_LCDWriteByte
      +       120A  158A         
  4321+                          	line	15
  4322+                          ;LCD.c: 15: }
  4323+ 0E55                     l9:	
  4324+ 0E55  0008               	return
  4325+                          ; =============== function _LCDWriteCommand end
      +                          s ===============
  4326+                          
  4327+                          GLOBAL __end_of_LCDWriteCommand
  4328+ 0E56                     	__end_of_LCDWriteCommand:
  4329+                          	FNSIZE	_LCDWriteCommand,1,0
  4330+                          	signat	_LCDWriteCommand,4216
  4331+                          	global	___ftpack
  4332+                          	global	??___ftpack
  4333+                          	global	?___ftpack
  4334+                          
  4335+                          ; *************** function ___ftpack **********
      +                          *****
  4336+                          ; Defined at:
  4337+                          ;		line 33 in file "C:\Program Files (x86)\HI-T
      +                          ECH Software\PICC\PRO\9.65\sources\float.c"
  4338+                          ; Parameters:
  4339+                          ;		arg         	reg:   wr	type: PTR unsigned um
      +                          ; Largest target is 3
  4340+                          ;		 -> __lttoft_f1(3), __attoft_f1(3), __lltoft
      +                          _f1(3), __altoft_f1(3), 
  4341+                          ;		 -> __lwtoft_f1(3), __awtoft_f1(3), __abtoft
      +                          _f1(3), __lbtoft_f1(3), 
  4342+                          ;		 -> __ftmul_f3(3), __ftdiv_f3(3), __ftadd_f1
      +                          (3), 
  4343+                          ;		exp         	offs:   0	type: unsigned char 
  4344+                          ; Auto variables:
  4345+                          ;		arg         	       	type: PTR unsigned um; 
      +                          Largest target is 3
  4346+                          ;		 -> __lttoft_f1(3), __attoft_f1(3), __lltoft
      +                          _f1(3), __altoft_f1(3), 
  4347+                          ;		 -> __lwtoft_f1(3), __awtoft_f1(3), __abtoft
      +                          _f1(3), __lbtoft_f1(3), 
  4348+                          ;		 -> __ftmul_f3(3), __ftdiv_f3(3), __ftadd_f1
      +                          (3), 
  4349+                          ; Return value:
  4350+                          ;		type: void 
  4351+                          ;		size: 0
  4352+                          ; Registers used:
  4353+                          ;		wreg, fsr0l, fsr0h, status,2, status,0
  4354+                          ; Tracked objects:
  4355+                          ;		On entry : 300/0
  4356+                          ;		On exit  : 0/0
  4357+                          ;		Unchanged: 0/0
  4358+                          ; Data sizes:
  4359+                          ;		Autos:    1
  4360+                          ;		Params:   1
  4361+                          ;		Temp:     3
  4362+                          ;		Total:    5
  4363+                          ; This function calls:
  4364+                          ;		Nothing
  4365+                          ; This function is called by:
  4366+                          ;		___ftadd
  4367+                          ;		___ftdiv
  4368+                          ;		___ftmul
  4369+                          ;		___awtoft
  4370+                          ;		___lwtoft
  4371+                          ; This function uses a non-reentrant model
  4372+                          ; 
  4373+                          	psect	text214,local,class=CODE,delta=2
  4374+                          	file	"C:\Program Files (x86)\HI-TECH Software\
      +                          PICC\PRO\9.65\sources\float.c"
  4375+                          	line	33
  4376+                          	
  4377+ 0729                     ___ftpack:	
  4378+                          	opt stack 3
  4379+                          ; Regs used in ___ftpack: [wreg-fsr0h+status,2+
      +                          status,0]
  4380+                          ;___ftpack_arg stored from wreg
  4381+                          	
  4382+ 0729  00D2               	movwf	(___ftpack_arg)
  4383+                          	line	34
  4384+                          	
  4385+ 072A  08D1               	movf	(___ftpack_exp),f
  4386+ 072B  1D03               	skipz
  4387+ 072C  2F2E               	goto	u3440
  4388+ 072D  2F40               	goto	l600000819
  4389+ 072E                     u3440:
  4390+                          	
  4391+ 072E  0852               	movf	(___ftpack_arg),w
  4392+ 072F  0084               	movwf	fsr0
  4393+ 0730  1383               	bcf	status, 7	;select IRP bank0
  4394+ 0731  0800               	movf	indf,w
  4395+ 0732  00D3               	movwf	(??___ftpack+1+0)
  4396+ 0733  0A84               	incf	fsr0,f
  4397+ 0734  0800               	movf	indf,w
  4398+ 0735  00D4               	movwf	(??___ftpack+1+0+1)
  4399+ 0736  0A84               	incf	fsr0,f
  4400+ 0737  0800               	movf	indf,w
  4401+ 0738  00D5               	movwf	(??___ftpack+1+0+2)
  4402+ 0739  0855               	movf	2+(??___ftpack+1+0),w
  4403+ 073A  0454               	iorwf	1+(??___ftpack+1+0),w
  4404+ 073B  0453               	iorwf	0+(??___ftpack+1+0),w
  4405+ 073C  1D03               	skipz
  4406+ 073D  2F3F               	goto	u3451
  4407+ 073E  2F40               	goto	u3450
  4408+ 073F                     u3451:
  4409+ 073F  2F4C               	goto	l394
  4410+ 0740                     u3450:
  4411+                          	
  4412+ 0740                     l600000819:	
  4413+                          	line	35
  4414+                          	
  4415+ 0740  0852               	movf	(___ftpack_arg),w
  4416+ 0741  0084               	movwf	fsr0
  4417+ 0742  3000               	movlw	0
  4418+ 0743  1383               	bcf	status, 7	;select IRP bank0
  4419+ 0744  0080               	movwf	indf
  4420+ 0745  0A84               	incf	fsr0,f
  4421+ 0746  3000               	movlw	0
  4422+ 0747  0080               	movwf	indf
  4423+ 0748  0A84               	incf	fsr0,f
  4424+ 0749  3000               	movlw	0
  4425+ 074A  0080               	movwf	indf
  4426+                          	line	36
  4427+ 074B  2FEE               	goto	l393
  4428+                          	line	37
  4429+                          	
  4430+ 074C                     l394:	
  4431+                          	line	38
  4432+ 074C  2F5F               	goto	l395
  4433+                          	
  4434+ 074D                     l396:	
  4435+                          	line	39
  4436+ 074D  3001               	movlw	(01h)
  4437+ 074E  00D3               	movwf	(??___ftpack+1+0)
  4438+                          	
  4439+ 074F  0853               	movf	(??___ftpack+1+0),w
  4440+ 0750  07D1               	addwf	(___ftpack_exp),f
  4441+                          	line	40
  4442+                          	
  4443+ 0751  0852               	movf	(___ftpack_arg),w
  4444+ 0752  0084               	movwf	fsr0
  4445+ 0753  3001               	movlw	01h
  4446+ 0754  00D3               	movwf	(??___ftpack+1+0)
  4447+ 0755                     u3465:
  4448+ 0755  0A84               	incf	fsr0,f
  4449+ 0756  0A84               	incf	fsr0,f
  4450+ 0757  1003               	clrc
  4451+ 0758  0C80               	rrf	indf,f
  4452+ 0759  0384               	decf	fsr0,f
  4453+ 075A  0C80               	rrf	indf,f
  4454+ 075B  0384               	decf	fsr0,f
  4455+ 075C  0C80               	rrf	indf,f
  4456+ 075D  0BD3               	decfsz	(??___ftpack+1+0)
  4457+ 075E  2F55               	goto	u3465
  4458+                          	line	41
  4459+                          	
  4460+ 075F                     l395:	
  4461+                          	line	38
  4462+                          	
  4463+ 075F  0852               	movf	(___ftpack_arg),w
  4464+ 0760  0084               	movwf	fsr0
  4465+ 0761  3000               	movlw	0
  4466+ 0762  0500               	andwf	indf,w
  4467+ 0763  00D3               	movwf	??___ftpack+1+0
  4468+ 0764  0A84               	incf	fsr0,f
  4469+ 0765  3000               	movlw	0
  4470+ 0766  0500               	andwf	indf,w
  4471+ 0767  00D4               	movwf	??___ftpack+1+0+1
  4472+ 0768  0A84               	incf	fsr0,f
  4473+ 0769  30FE               	movlw	0FEh
  4474+ 076A  0500               	andwf	indf,w
  4475+ 076B  00D5               	movwf	??___ftpack+1+0+2
  4476+ 076C  0855               	movf	??___ftpack+1+2,w
  4477+ 076D  0454               	iorwf	??___ftpack+1+1,w
  4478+ 076E  0453               	iorwf	??___ftpack+1+0,w
  4479+ 076F  1D03               	skipz
  4480+ 0770  2F72               	goto	u3471
  4481+ 0771  2F73               	goto	u3470
  4482+ 0772                     u3471:
  4483+ 0772  2F4D               	goto	l396
  4484+ 0773                     u3470:
  4485+                          	
  4486+ 0773                     l397:	
  4487+                          	line	42
  4488+ 0773  2F95               	goto	l398
  4489+                          	
  4490+ 0774                     l399:	
  4491+                          	line	43
  4492+ 0774  3001               	movlw	(01h)
  4493+ 0775  00D3               	movwf	(??___ftpack+1+0)
  4494+                          	
  4495+ 0776  0853               	movf	(??___ftpack+1+0),w
  4496+ 0777  07D1               	addwf	(___ftpack_exp),f
  4497+                          	line	44
  4498+                          	
  4499+ 0778  0852               	movf	(___ftpack_arg),w
  4500+ 0779  0084               	movwf	fsr0
  4501+ 077A  3001               	movlw	01h
  4502+ 077B  0780               	addwf	indf,f
  4503+ 077C  0A84               	incf	fsr0,f
  4504+ 077D  3000               	movlw	0
  4505+ 077E  1803               	skipnc
  4506+ 077F  3E01               	addlw	1
  4507+ 0780  1D03               	skipz
  4508+ 0781  0780               	addwf	indf,f
  4509+ 0782  0A84               	incf	fsr0,f
  4510+ 0783  3000               	movlw	0
  4511+ 0784  1803               	skipnc
  4512+ 0785  3E01               	addlw	1
  4513+ 0786  0780               	addwf	indf,f
  4514+                          	line	45
  4515+                          	
  4516+ 0787  0852               	movf	(___ftpack_arg),w
  4517+ 0788  0084               	movwf	fsr0
  4518+ 0789  3001               	movlw	01h
  4519+ 078A  00D3               	movwf	(??___ftpack+1+0)
  4520+ 078B                     u3485:
  4521+ 078B  0A84               	incf	fsr0,f
  4522+ 078C  0A84               	incf	fsr0,f
  4523+ 078D  1003               	clrc
  4524+ 078E  0C80               	rrf	indf,f
  4525+ 078F  0384               	decf	fsr0,f
  4526+ 0790  0C80               	rrf	indf,f
  4527+ 0791  0384               	decf	fsr0,f
  4528+ 0792  0C80               	rrf	indf,f
  4529+ 0793  0BD3               	decfsz	(??___ftpack+1+0)
  4530+ 0794  2F8B               	goto	u3485
  4531+                          	line	46
  4532+                          	
  4533+ 0795                     l398:	
  4534+                          	line	42
  4535+                          	
  4536+ 0795  0852               	movf	(___ftpack_arg),w
  4537+ 0796  0084               	movwf	fsr0
  4538+ 0797  3000               	movlw	0
  4539+ 0798  0500               	andwf	indf,w
  4540+ 0799  00D3               	movwf	??___ftpack+1+0
  4541+ 079A  0A84               	incf	fsr0,f
  4542+ 079B  3000               	movlw	0
  4543+ 079C  0500               	andwf	indf,w
  4544+ 079D  00D4               	movwf	??___ftpack+1+0+1
  4545+ 079E  0A84               	incf	fsr0,f
  4546+ 079F  30FF               	movlw	0FFh
  4547+ 07A0  0500               	andwf	indf,w
  4548+ 07A1  00D5               	movwf	??___ftpack+1+0+2
  4549+ 07A2  0855               	movf	??___ftpack+1+2,w
  4550+ 07A3  0454               	iorwf	??___ftpack+1+1,w
  4551+ 07A4  0453               	iorwf	??___ftpack+1+0,w
  4552+ 07A5  1D03               	skipz
  4553+ 07A6  2FA8               	goto	u3491
  4554+ 07A7  2FA9               	goto	u3490
  4555+ 07A8                     u3491:
  4556+ 07A8  2F74               	goto	l399
  4557+ 07A9                     u3490:
  4558+                          	
  4559+ 07A9                     l400:	
  4560+                          	line	47
  4561+ 07A9  2FBA               	goto	l401
  4562+                          	
  4563+ 07AA                     l402:	
  4564+                          	line	48
  4565+                          	
  4566+                          	
  4567+ 07AA  3001               	movlw	low(01h)
  4568+ 07AB  02D1               	subwf	(___ftpack_exp),f
  4569+                          	line	49
  4570+                          	
  4571+ 07AC  0852               	movf	(___ftpack_arg),w
  4572+ 07AD  0084               	movwf	fsr0
  4573+ 07AE  3001               	movlw	01h
  4574+ 07AF                     u3505:
  4575+ 07AF  1003               	clrc
  4576+ 07B0  0D80               	rlf	indf,f
  4577+ 07B1  0A84               	incf	fsr0,f
  4578+ 07B2  0D80               	rlf	indf,f
  4579+ 07B3  0A84               	incf	fsr0,f
  4580+ 07B4  0D80               	rlf	indf,f
  4581+ 07B5  0384               	decf	fsr0,f
  4582+ 07B6  0384               	decf	fsr0,f
  4583+ 07B7  3EFF               	addlw	-1
  4584+ 07B8  1D03               	skipz
  4585+ 07B9  2FAF               	goto	u3505
  4586+                          	line	50
  4587+                          	
  4588+ 07BA                     l401:	
  4589+                          	line	47
  4590+                          	
  4591+ 07BA  0852               	movf	(___ftpack_arg),w
  4592+ 07BB  0084               	movwf	fsr0
  4593+ 07BC  0800               	movf	indf,w
  4594+ 07BD  00D3               	movwf	(??___ftpack+1+0)
  4595+ 07BE  0A84               	incf	fsr0,f
  4596+ 07BF  0800               	movf	indf,w
  4597+ 07C0  00D4               	movwf	(??___ftpack+1+0+1)
  4598+ 07C1  0A84               	incf	fsr0,f
  4599+ 07C2  0800               	movf	indf,w
  4600+ 07C3  00D5               	movwf	(??___ftpack+1+0+2)
  4601+ 07C4  1FD4               	btfss	1+(??___ftpack+1+0),(15)&7
  4602+ 07C5  2FC7               	goto	u3511
  4603+ 07C6  2FC8               	goto	u3510
  4604+ 07C7                     u3511:
  4605+ 07C7  2FAA               	goto	l402
  4606+ 07C8                     u3510:
  4607+                          	
  4608+ 07C8                     l403:	
  4609+                          	line	51
  4610+                          	
  4611+ 07C8  1851               	btfsc	(___ftpack_exp),(0)&7
  4612+ 07C9  2FCB               	goto	u3521
  4613+ 07CA  2FCC               	goto	u3520
  4614+ 07CB                     u3521:
  4615+ 07CB  2FD6               	goto	l404
  4616+ 07CC                     u3520:
  4617+                          	line	52
  4618+                          	
  4619+ 07CC  0852               	movf	(___ftpack_arg),w
  4620+ 07CD  0084               	movwf	fsr0
  4621+ 07CE  30FF               	movlw	0FFh
  4622+ 07CF  0580               	andwf	indf,f
  4623+ 07D0  0A84               	incf	fsr0,f
  4624+ 07D1  307F               	movlw	07Fh
  4625+ 07D2  0580               	andwf	indf,f
  4626+ 07D3  0A84               	incf	fsr0,f
  4627+ 07D4  30FF               	movlw	0FFh
  4628+ 07D5  0580               	andwf	indf,f
  4629+                          	
  4630+ 07D6                     l404:	
  4631+                          	line	53
  4632+                          	
  4633+ 07D6  1003               	clrc
  4634+ 07D7  0CD1               	rrf	(___ftpack_exp),f
  4635+                          
  4636+                          	line	54
  4637+                          	
  4638+ 07D8  0851               	movf	(___ftpack_exp),w
  4639+ 07D9  00D3               	movwf	(??___ftpack+1+0)
  4640+ 07DA  01D4               	clrf	(??___ftpack+1+0+1)
  4641+ 07DB  01D5               	clrf	(??___ftpack+1+0+2)
  4642+ 07DC  3010               	movlw	010h
  4643+ 07DD                     u3535:
  4644+ 07DD  1003               	clrc
  4645+ 07DE  0DD3               	rlf	(??___ftpack+1+0),f
  4646+ 07DF  0DD4               	rlf	(??___ftpack+1+1),f
  4647+ 07E0  0DD5               	rlf	(??___ftpack+1+2),f
  4648+ 07E1                     u3530:
  4649+ 07E1  3EFF               	addlw	-1
  4650+ 07E2  1D03               	skipz
  4651+ 07E3  2FDD               	goto	u3535
  4652+                          	
  4653+ 07E4  0852               	movf	(___ftpack_arg),w
  4654+ 07E5  0084               	movwf	fsr0
  4655+ 07E6  0853               	movf	(??___ftpack+1+0),w
  4656+ 07E7  0480               	iorwf	indf,f
  4657+ 07E8  0A84               	incf	fsr0,f
  4658+ 07E9  0854               	movf	(??___ftpack+1+1),w
  4659+ 07EA  0480               	iorwf	indf,f
  4660+ 07EB  0A84               	incf	fsr0,f
  4661+ 07EC  0855               	movf	(??___ftpack+1+2),w
  4662+ 07ED  0480               	iorwf	indf,f
  4663+                          	line	55
  4664+ 07EE                     l393:	
  4665+ 07EE  0008               	return
  4666+                          ; =============== function ___ftpack ends =====
      +                          ==========
  4667+                          
  4668+                          GLOBAL __end_of___ftpack
  4669+ 07EF                     	__end_of___ftpack:
  4670+                          	FNSIZE	___ftpack,4,1
  4671+                          	signat	___ftpack,8312
  4672+                          	global	___ftunpack
  4673+                          	global	??___ftunpack
  4674+                          	global	?___ftunpack
  4675+                          
  4676+                          ; *************** function ___ftunpack ********
      +                          *******
  4677+                          ; Defined at:
  4678+                          ;		line 13 in file "C:\Program Files (x86)\HI-T
      +                          ECH Software\PICC\PRO\9.65\sources\float.c"
  4679+                          ; Parameters:
  4680+                          ;		arg         	reg:   wr	type: PTR unsigned um
      +                          ; Largest target is 3
  4681+                          ;		 -> __fttol_f1(3), __ftmul_f2(3), __ftmul_f1
      +                          (3), __ftdiv_f2(3), 
  4682+                          ;		 -> __ftdiv_f1(3), __ftadd_f2(3), __ftadd_f1
      +                          (3), 
  4683+                          ;		exp         	offs:   0	type: PTR unsigned ch
      +                          ar ; Largest target is 1
  4684+                          ;		 -> __fttol_exp1(1), __ftmul_cntr(1), __ftmu
      +                          l_exp1(1), __ftdiv_exp2(1), 
  4685+                          ;		 -> __ftdiv_exp1(1), __ftadd_exp2(1), __ftad
      +                          d_exp1(1), 
  4686+                          ; Auto variables:
  4687+                          ;		arg         	       	type: PTR unsigned um; 
      +                          Largest target is 3
  4688+                          ;		 -> __fttol_f1(3), __ftmul_f2(3), __ftmul_f1
      +                          (3), __ftdiv_f2(3), 
  4689+                          ;		 -> __ftdiv_f1(3), __ftadd_f2(3), __ftadd_f1
      +                          (3), 
  4690+                          ;		sign        	       	type: unsigned char 
  4691+                          ; Return value:
  4692+                          ;		type: unsigned char 
  4693+                          ;		size: 1
  4694+                          ; Registers used:
  4695+                          ;		wreg, fsr0l, fsr0h, status,2, status,0
  4696+                          ; Tracked objects:
  4697+                          ;		On entry : 300/0
  4698+                          ;		On exit  : 0/0
  4699+                          ;		Unchanged: 0/0
  4700+                          ; Data sizes:
  4701+                          ;		Autos:    2
  4702+                          ;		Params:   1
  4703+                          ;		Temp:     4
  4704+                          ;		Total:    7
  4705+                          ; This function calls:
  4706+                          ;		Nothing
  4707+                          ; This function is called by:
  4708+                          ;		___ftadd
  4709+                          ;		___ftdiv
  4710+                          ;		___ftmul
  4711+                          ;		___fttol
  4712+                          ; This function uses a non-reentrant model
  4713+                          ; 
  4714+                          	psect	text215,local,class=CODE,delta=2
  4715+                          	file	"C:\Program Files (x86)\HI-TECH Software\
      +                          PICC\PRO\9.65\sources\float.c"
  4716+                          	line	13
  4717+                          	
  4718+ 0139                     ___ftunpack:	
  4719+                          	opt stack 3
  4720+                          ; Regs used in ___ftunpack: [wreg-fsr0h+status,
      +                          2+status,0]
  4721+                          ;___ftunpack_arg stored from wreg
  4722+                          	line	16
  4723+                          	
  4724+ 0139  00D2               	movwf	(___ftunpack_arg)
  4725+                          	
  4726+ 013A  0852               	movf	(___ftunpack_arg),w
  4727+ 013B  0084               	movwf	fsr0
  4728+ 013C  1383               	bcf	status, 7	;select IRP bank0
  4729+ 013D  0800               	movf	indf,w
  4730+ 013E  00D4               	movwf	(??___ftunpack+2+0)
  4731+ 013F  0A84               	incf	fsr0,f
  4732+ 0140  0800               	movf	indf,w
  4733+ 0141  00D5               	movwf	(??___ftunpack+2+0+1)
  4734+ 0142  0A84               	incf	fsr0,f
  4735+ 0143  0800               	movf	indf,w
  4736+ 0144  00D6               	movwf	(??___ftunpack+2+0+2)
  4737+ 0145  300F               	movlw	0Fh
  4738+ 0146                     u3545:
  4739+ 0146  1003               	clrc
  4740+ 0147  0CD6               	rrf	(??___ftunpack+2+2),f
  4741+ 0148  0CD5               	rrf	(??___ftunpack+2+1),f
  4742+ 0149  0CD4               	rrf	(??___ftunpack+2+0),f
  4743+ 014A                     u3540:
  4744+ 014A  3EFF               	addlw	-1
  4745+ 014B  1D03               	skipz
  4746+ 014C  2946               	goto	u3545
  4747+ 014D  0854               	movf	(??___ftunpack+2+0),w
  4748+                          	
  4749+ 014E  00D3               	movwf	(___ftunpack_sign)
  4750+ 014F  00D7               	movwf	(??___ftunpack+5+0)
  4751+                          	
  4752+ 0150  0851               	movf	(___ftunpack_exp),w
  4753+ 0151  0084               	movwf	fsr0
  4754+ 0152  0857               	movf	(??___ftunpack+5+0),w
  4755+ 0153  0080               	movwf	indf
  4756+                          	line	17
  4757+                          	
  4758+ 0154  08D3               	movf	(___ftunpack_sign),f
  4759+ 0155  1D03               	skipz
  4760+ 0156  2958               	goto	u3551
  4761+ 0157  2959               	goto	u3550
  4762+ 0158                     u3551:
  4763+ 0158  2965               	goto	l391
  4764+ 0159                     u3550:
  4765+                          	line	18
  4766+                          	
  4767+ 0159  0852               	movf	(___ftunpack_arg),w
  4768+ 015A  0084               	movwf	fsr0
  4769+ 015B  3000               	movlw	0
  4770+ 015C  0080               	movwf	indf
  4771+ 015D  0A84               	incf	fsr0,f
  4772+ 015E  3000               	movlw	0
  4773+ 015F  0080               	movwf	indf
  4774+ 0160  0A84               	incf	fsr0,f
  4775+ 0161  3000               	movlw	0
  4776+ 0162  0080               	movwf	indf
  4777+                          	line	19
  4778+ 0163  3000               	movlw	(0)
  4779+ 0164  2992               	goto	l390
  4780+                          	line	20
  4781+                          	
  4782+ 0165                     l391:	
  4783+                          	line	21
  4784+ 0165  1003               	clrc
  4785+                          	
  4786+ 0166  3000               	movlw	0
  4787+ 0167  1803               	btfsc	status,0
  4788+ 0168  3001               	movlw	1
  4789+ 0169  00D3               	movwf	(___ftunpack_sign)
  4790+                          	line	22
  4791+                          	
  4792+ 016A  0852               	movf	(___ftunpack_arg),w
  4793+ 016B  0084               	movwf	fsr0
  4794+ 016C  3000               	movlw	0
  4795+ 016D  0480               	iorwf	indf,f
  4796+ 016E  0A84               	incf	fsr0,f
  4797+ 016F  3080               	movlw	080h
  4798+ 0170  0480               	iorwf	indf,f
  4799+ 0171  0A84               	incf	fsr0,f
  4800+ 0172  3000               	movlw	0
  4801+ 0173  0480               	iorwf	indf,f
  4802+                          	line	23
  4803+                          	
  4804+ 0174  0852               	movf	(___ftunpack_arg),w
  4805+ 0175  0084               	movwf	fsr0
  4806+ 0176  0800               	movf	indf,w
  4807+ 0177  00D4               	movwf	(??___ftunpack+2+0)
  4808+ 0178  0A84               	incf	fsr0,f
  4809+ 0179  0800               	movf	indf,w
  4810+ 017A  00D5               	movwf	(??___ftunpack+2+0+1)
  4811+ 017B  0A84               	incf	fsr0,f
  4812+ 017C  0800               	movf	indf,w
  4813+ 017D  00D6               	movwf	(??___ftunpack+2+0+2)
  4814+ 017E  1FD6               	btfss	2+(??___ftunpack+2+0),(23)&7
  4815+ 017F  2981               	goto	u3561
  4816+ 0180  2982               	goto	u3560
  4817+ 0181                     u3561:
  4818+ 0181  2986               	goto	l392
  4819+ 0182                     u3560:
  4820+                          	line	24
  4821+ 0182  3001               	movlw	(01h)
  4822+ 0183  00D4               	movwf	(??___ftunpack+2+0)
  4823+                          	
  4824+ 0184  0854               	movf	(??___ftunpack+2+0),w
  4825+ 0185  07D3               	addwf	(___ftunpack_sign),f
  4826+                          	
  4827+ 0186                     l392:	
  4828+                          	line	25
  4829+                          	
  4830+ 0186  0852               	movf	(___ftunpack_arg),w
  4831+ 0187  0084               	movwf	fsr0
  4832+ 0188  30FF               	movlw	0FFh
  4833+ 0189  0580               	andwf	indf,f
  4834+ 018A  0A84               	incf	fsr0,f
  4835+ 018B  30FF               	movlw	0FFh
  4836+ 018C  0580               	andwf	indf,f
  4837+ 018D  0A84               	incf	fsr0,f
  4838+ 018E  3000               	movlw	0
  4839+ 018F  0580               	andwf	indf,f
  4840+                          	line	26
  4841+                          	
  4842+ 0190  0853               	movf	(___ftunpack_sign),w
  4843+ 0191  2992               	goto	l390
  4844+                          	line	27
  4845+ 0192                     l390:	
  4846+ 0192  0008               	return
  4847+                          ; =============== function ___ftunpack ends ===
      +                          ============
  4848+                          
  4849+                          GLOBAL __end_of___ftunpack
  4850+ 0193                     	__end_of___ftunpack:
  4851+                          	FNSIZE	___ftunpack,6,1
  4852+                          	signat	___ftunpack,8313
  4853+                          	global	_LCDWriteByte
  4854+                          	global	??_LCDWriteByte
  4855+                          	global	?_LCDWriteByte
  4856+                          
  4857+                          ; *************** function _LCDWriteByte ******
      +                          *********
  4858+                          ; Defined at:
  4859+                          ;		line 66 in file "C:\Users\hardik\Desktop\ADC
      +                          \LCD.c"
  4860+                          ; Parameters:
  4861+                          ;		LCDData     	reg:   wr	type: unsigned char 
  4862+                          ; Auto variables:
  4863+                          ;		LCDData     	       	type: unsigned char 
  4864+                          ; Return value:
  4865+                          ;		type: void 
  4866+                          ;		size: 0
  4867+                          ; Registers used:
  4868+                          ;		wreg, status,2, status,0, pclath, cstack
  4869+                          ; Tracked objects:
  4870+                          ;		On entry : 300/0
  4871+                          ;		On exit  : 0/0
  4872+                          ;		Unchanged: 0/0
  4873+                          ; Data sizes:
  4874+                          ;		Autos:    1
  4875+                          ;		Params:   0
  4876+                          ;		Temp:     1
  4877+                          ;		Total:    2
  4878+                          ; This function calls:
  4879+                          ;		_LCDEnable
  4880+                          ;		_Delay
  4881+                          ; This function is called by:
  4882+                          ;		_LCDWriteCommand
  4883+                          ;		_LCDWriteData
  4884+                          ; This function uses a non-reentrant model
  4885+                          ; 
  4886+                          	psect	text216,local,class=CODE,delta=2
  4887+                          	file	"C:\Users\hardik\Desktop\ADC\LCD.c"
  4888+                          	line	66
  4889+                          ;LCD.c: 65: static void LCDWriteByte(LCDubyte L
      +                          CDData)
  4890+                          ;LCD.c: 66: {
  4891+                          	
  4892+ 0F4C                     _LCDWriteByte:	
  4893+                          	opt stack 2
  4894+                          ; Regs used in _LCDWriteByte: [wreg+status,2+st
      +                          atus,0+pclath+cstack]
  4895+                          ;_LCDWriteByte_LCDData stored from wreg
  4896+                          	
  4897+ 0F4C  00CA               	movwf	(_LCDWriteByte_LCDData)
  4898+                          	line	67
  4899+                          ;LCD.c: 67: PORTD = (PORTD & 0x0F)|(LCDData & 0
      +                          xF0);
  4900+                          	
  4901+ 0F4D  084A               	movf	(_LCDWriteByte_LCDData),w
  4902+ 0F4E  39F0               	andlw	0F0h
  4903+ 0F4F  00CB               	movwf	(??_LCDWriteByte+1+0)
  4904+                          	
  4905+ 0F50  0808               	movf	(8),w	;volatile
  4906+ 0F51  390F               	andlw	0Fh
  4907+ 0F52  044B               	iorwf	(??_LCDWriteByte+1+0),w
  4908+                          	
  4909+ 0F53  0088               	movwf	(8)	;volatile
  4910+                          	line	68
  4911+                          ;LCD.c: 68: LCDEnable();
  4912+ 0F54  120A  118A  27EF   	fcall	_LCDEnable
      +       120A  158A         
  4913+                          	line	69
  4914+                          ;LCD.c: 69: PORTD = (PORTD & 0x0F)|(LCDData << 
      +                          4);
  4915+ 0F59  1283               	bcf	status, 5	;RP0=0, select bank0
  4916+ 0F5A  1303               	bcf	status, 6	;RP1=0, select bank0
  4917+                          	
  4918+ 0F5B  084A               	movf	(_LCDWriteByte_LCDData),w
  4919+ 0F5C  00CB               	movwf	(??_LCDWriteByte+1+0)
  4920+ 0F5D  3004               	movlw	04h
  4921+ 0F5E                     u2585:
  4922+ 0F5E  1003               	clrc
  4923+ 0F5F  0DCB               	rlf	(??_LCDWriteByte+1+0),f
  4924+ 0F60  3EFF               	addlw	-1
  4925+ 0F61  1D03               	skipz
  4926+ 0F62  2F5E               	goto	u2585
  4927+                          	
  4928+ 0F63  0808               	movf	(8),w	;volatile
  4929+ 0F64  390F               	andlw	0Fh
  4930+ 0F65  044B               	iorwf	0+(??_LCDWriteByte+1+0),w
  4931+                          	
  4932+ 0F66  0088               	movwf	(8)	;volatile
  4933+                          	line	70
  4934+                          ;LCD.c: 70: LCDEnable();
  4935+ 0F67  120A  118A  27EF   	fcall	_LCDEnable
      +       120A  158A         
  4936+                          	line	71
  4937+                          ;LCD.c: 71: Delay(2);
  4938+ 0F6C  3002               	movlw	low(02h)
  4939+ 0F6D  1283               	bcf	status, 5	;RP0=0, select bank0
  4940+ 0F6E  1303               	bcf	status, 6	;RP1=0, select bank0
  4941+                          	
  4942+ 0F6F  00CC               	movwf	(?_Delay)
  4943+ 0F70  3000               	movlw	high(02h)
  4944+ 0F71  00CD               	movwf	((?_Delay))+1
  4945+ 0F72  120A  158A  2674   	fcall	_Delay
      +       120A  158A         
  4946+                          	line	72
  4947+                          ;LCD.c: 72: }
  4948+ 0F77                     l21:	
  4949+ 0F77  0008               	return
  4950+                          ; =============== function _LCDWriteByte ends =
      +                          ==============
  4951+                          
  4952+                          GLOBAL __end_of_LCDWriteByte
  4953+ 0F78                     	__end_of_LCDWriteByte:
  4954+                          	FNSIZE	_LCDWriteByte,2,0
  4955+                          	signat	_LCDWriteByte,4216
  4956+                          	global	_LCDEnable
  4957+                          	global	??_LCDEnable
  4958+                          	global	?_LCDEnable
  4959+                          
  4960+                          ; *************** function _LCDEnable *********
      +                          ******
  4961+                          ; Defined at:
  4962+                          ;		line 5 in file "C:\Users\hardik\Desktop\ADC\
      +                          LCD.c"
  4963+                          ; Parameters:
  4964+                          ;		None
  4965+                          ; Auto variables:
  4966+                          ;		None
  4967+                          ; Return value:
  4968+                          ;		type: void 
  4969+                          ;		size: 0
  4970+                          ; Registers used:
  4971+                          ;		wreg, status,2, status,0, pclath, cstack
  4972+                          ; Tracked objects:
  4973+                          ;		On entry : 300/0
  4974+                          ;		On exit  : 0/0
  4975+                          ;		Unchanged: 0/0
  4976+                          ; Data sizes:
  4977+                          ;		Autos:    0
  4978+                          ;		Params:   0
  4979+                          ;		Temp:     0
  4980+                          ;		Total:    0
  4981+                          ; This function calls:
  4982+                          ;		_Delay
  4983+                          ; This function is called by:
  4984+                          ;		_LCDWriteByte
  4985+                          ; This function uses a non-reentrant model
  4986+                          ; 
  4987+                          	psect	text217,local,class=CODE,delta=2
  4988+                          	file	"C:\Users\hardik\Desktop\ADC\LCD.c"
  4989+                          	line	5
  4990+                          ;LCD.c: 4: static void LCDEnable(void)
  4991+                          ;LCD.c: 5: {
  4992+                          	
  4993+ 07EF                     _LCDEnable:	
  4994+                          	opt stack 1
  4995+                          ; Regs used in _LCDEnable: [wreg+status,2+statu
      +                          s,0+pclath+cstack]
  4996+                          	line	6
  4997+                          ;LCD.c: 6: RD3 = 1;
  4998+ 07EF  1588               	bsf	(67/8),(67)&7
  4999+                          	line	7
  5000+                          ;LCD.c: 7: Delay(10);
  5001+ 07F0  300A               	movlw	low(0Ah)
  5002+                          	
  5003+ 07F1  00CC               	movwf	(?_Delay)
  5004+ 07F2  3000               	movlw	high(0Ah)
  5005+ 07F3  00CD               	movwf	((?_Delay))+1
  5006+ 07F4  120A  158A  2674   	fcall	_Delay
      +       120A  118A         
  5007+                          	line	8
  5008+                          ;LCD.c: 8: RD3 = 0;
  5009+ 07F9  1283               	bcf	status, 5	;RP0=0, select bank0
  5010+ 07FA  1303               	bcf	status, 6	;RP1=0, select bank0
  5011+ 07FB  1188               	bcf	(67/8),(67)&7
  5012+                          	line	9
  5013+                          ;LCD.c: 9: }
  5014+ 07FC                     l8:	
  5015+ 07FC  0008               	return
  5016+                          ; =============== function _LCDEnable ends ====
      +                          ===========
  5017+                          
  5018+                          GLOBAL __end_of_LCDEnable
  5019+ 07FD                     	__end_of_LCDEnable:
  5020+                          	FNSIZE	_LCDEnable,0,0
  5021+                          	signat	_LCDEnable,88
  5022+                          	global	_Delay
  5023+                          	global	??_Delay
  5024+                          	global	?_Delay
  5025+                          
  5026+                          ; *************** function _Delay *************
      +                          **
  5027+                          ; Defined at:
  5028+                          ;		line 4 in file "C:\Users\hardik\Desktop\ADC\
      +                          delay.c"
  5029+                          ; Parameters:
  5030+                          ;		time        	offs:   0	type: unsigned int 
  5031+                          ; Auto variables:
  5032+                          ;		pause       	       	type: unsigned char 
  5033+                          ; Return value:
  5034+                          ;		type: void 
  5035+                          ;		size: 0
  5036+                          ; Registers used:
  5037+                          ;		wreg, status,2, status,0
  5038+                          ; Tracked objects:
  5039+                          ;		On entry : 300/0
  5040+                          ;		On exit  : 0/0
  5041+                          ;		Unchanged: 0/0
  5042+                          ; Data sizes:
  5043+                          ;		Autos:    1
  5044+                          ;		Params:   2
  5045+                          ;		Temp:     0
  5046+                          ;		Total:    3
  5047+                          ; This function calls:
  5048+                          ;		Nothing
  5049+                          ; This function is called by:
  5050+                          ;		_LCDEnable
  5051+                          ;		_LCDDisplayInitializing
  5052+                          ;		_LCDWriteByte
  5053+                          ;		_main
  5054+                          ; This function uses a non-reentrant model
  5055+                          ; 
  5056+                          	psect	text218,local,class=CODE,delta=2
  5057+                          	file	"C:\Users\hardik\Desktop\ADC\delay.c"
  5058+                          	line	4
  5059+                          ;delay.c: 3: void Delay(unsigned int time)
  5060+                          ;delay.c: 4: {
  5061+                          	
  5062+ 0E74                     _Delay:	
  5063+                          	opt stack 0
  5064+                          ; Regs used in _Delay: [wreg+status,2+status,0]
  5065+                          	line	6
  5066+                          ;delay.c: 5: unsigned char pause;
  5067+                          ;delay.c: 6: while( time > 0)
  5068+ 0E74  2E86               	goto	l2
  5069+                          	
  5070+ 0E75                     l3:	
  5071+                          	line	8
  5072+                          ;delay.c: 7: {
  5073+                          ;delay.c: 8: pause = 255;
  5074+                          	
  5075+ 0E75  01CE               	clrf	(_Delay_pause)
  5076+ 0E76  03CE               	decf	(_Delay_pause),f
  5077+                          	line	9
  5078+                          ;delay.c: 9: while(pause--);
  5079+ 0E77  2E78               	goto	l5
  5080+                          	
  5081+ 0E78                     l5:	
  5082+                          	
  5083+                          	
  5084+ 0E78  3001               	movlw	low(01h)
  5085+ 0E79  02CE               	subwf	(_Delay_pause),f
  5086+ 0E7A  084E               	movf	((_Delay_pause))&07fh,w
  5087+ 0E7B  3AFF               	xorlw	0FFh
  5088+ 0E7C  1D03               	skipz
  5089+ 0E7D  2E7F               	goto	u2641
  5090+ 0E7E  2E80               	goto	u2640
  5091+ 0E7F                     u2641:
  5092+ 0E7F  2E78               	goto	l5
  5093+ 0E80                     u2640:
  5094+                          	
  5095+ 0E80                     l7:	
  5096+                          	line	10
  5097+                          ;delay.c: 10: time--;
  5098+                          	
  5099+ 0E80  3001               	movlw	low(01h)
  5100+ 0E81  02CC               	subwf	(_Delay_time),f
  5101+ 0E82  3000               	movlw	high(01h)
  5102+ 0E83  1C03               	skipc
  5103+ 0E84  03CD               	decf	(_Delay_time+1),f
  5104+ 0E85  02CD               	subwf	(_Delay_time+1),f
  5105+                          	line	11
  5106+                          	
  5107+ 0E86                     l2:	
  5108+                          	line	6
  5109+                          	
  5110+ 0E86  084D               	movf	((_Delay_time+1)),w
  5111+ 0E87  044C               	iorwf	((_Delay_time)),w
  5112+ 0E88  1D03               	skipz
  5113+ 0E89  2E8B               	goto	u2651
  5114+ 0E8A  2E8C               	goto	u2650
  5115+ 0E8B                     u2651:
  5116+ 0E8B  2E75               	goto	l3
  5117+ 0E8C                     u2650:
  5118+                          	
  5119+ 0E8C                     l4:	
  5120+                          	line	12
  5121+                          ;delay.c: 11: }
  5122+                          ;delay.c: 12: }
  5123+ 0E8C                     l1:	
  5124+ 0E8C  0008               	return
  5125+                          ; =============== function _Delay ends ========
      +                          =======
  5126+                          
  5127+                          GLOBAL __end_of_Delay
  5128+ 0E8D                     	__end_of_Delay:
  5129+                          	FNSIZE	_Delay,1,2
  5130+                          	signat	_Delay,4216
  5131+                          	FNCALL	_main,_MainSystemInitialize
  5132+                          	FNCALL	_main,_LCDDisplayInitializing
  5133+                          	FNCALL	_main,_Delay
  5134+                          	FNCALL	_main,___wmul
  5135+                          	FNCALL	_main,___lwtoft
  5136+                          	FNCALL	_main,___ftmul
  5137+                          	FNCALL	_main,___ftdiv
  5138+                          	FNCALL	_main,_LCDWriteCommand
  5139+                          	FNCALL	_main,_LCDWriteFloat
  5140+                          	FNCALL	___lwtoft,___ftpack
  5141+                          	FNCALL	_LCDDisplayInitializing,_LCDWriteString
  5142+                          	FNCALL	_LCDDisplayInitializing,_LCDWriteComman
      +                          d
  5143+                          	FNCALL	_LCDDisplayInitializing,_LCDWriteData
  5144+                          	FNCALL	_LCDDisplayInitializing,_Delay
  5145+                          	FNCALL	_LCDWriteFloat,___ftge
  5146+                          	FNCALL	_LCDWriteFloat,_LCDWriteData
  5147+                          	FNCALL	_LCDWriteFloat,___ftneg
  5148+                          	FNCALL	_LCDWriteFloat,___fttol
  5149+                          	FNCALL	_LCDWriteFloat,_LCDWriteInteger
  5150+                          	FNCALL	_LCDWriteFloat,___awtoft
  5151+                          	FNCALL	_LCDWriteFloat,___ftsub
  5152+                          	FNCALL	_LCDWriteFloat,___ftadd
  5153+                          	FNCALL	_LCDWriteFloat,___ftmul
  5154+                          	FNCALL	_LCDWriteFloat,___awmod
  5155+                          	FNCALL	_LCDWriteFloat,___awdiv
  5156+                          	FNCALL	_LCDWriteFloat,_LCDWriteCommand
  5157+                          	FNCALL	_LCDWriteFloat,_LCDWriteString
  5158+                          	FNCALL	_MainSystemInitialize,_LCDInitialize
  5159+                          	FNCALL	___ftdiv,___ftunpack
  5160+                          	FNCALL	___ftdiv,___ftpack
  5161+                          	FNCALL	_LCDWriteInteger,_LCDWriteData
  5162+                          	FNCALL	_LCDWriteInteger,___awmod
  5163+                          	FNCALL	_LCDWriteInteger,___awdiv
  5164+                          	FNCALL	___ftmul,___ftunpack
  5165+                          	FNCALL	___ftmul,___ftpack
  5166+                          	FNCALL	_LCDWriteString,_LCDWriteData
  5167+                          	FNCALL	___fttol,___ftunpack
  5168+                          	FNCALL	_LCDInitialize,_LCDReset
  5169+                          	FNCALL	_LCDInitialize,_LCDWriteCommand
  5170+                          	FNCALL	___ftsub,___ftadd
  5171+                          	FNCALL	___awtoft,___ftpack
  5172+                          	FNCALL	___awtoft,___ftneg
  5173+                          	FNCALL	___ftadd,___ftunpack
  5174+                          	FNCALL	___ftadd,___ftpack
  5175+                          	FNCALL	_LCDReset,_LCDWriteCommand
  5176+                          	FNCALL	_LCDWriteData,_LCDWriteByte
  5177+                          	FNCALL	_LCDWriteCommand,_LCDWriteByte
  5178+                          	FNCALL	_LCDWriteByte,_LCDEnable
  5179+                          	FNCALL	_LCDWriteByte,_Delay
  5180+                          	FNCALL	_LCDEnable,_Delay
  5181+                          	FNROOT	_main
  5182+                          ;	FNARG	___ftdiv,___ftmul
  5183+                          ;	FNARG	___ftsub,___awtoft
  5184+                          ;	FNARG	___ftsub,___ftneg
  5185+                          ;	FNARG	___ftadd,___awtoft
  5186+                          ;	FNARG	___ftadd,___ftneg
  5187+                          ;	FNARG	___ftmul,___ftadd
  5188+                          ;	FNARG	___ftmul,___ftsub
  5189+                          ;	FNARG	___ftmul,___awtoft
  5190+                          ;	FNARG	___ftmul,___ftneg
  5191+                          	global	_i
  5192+                          	global	_i
  5193+                          	psect	common,class=COMMON,space=1
  5194+                          
  5195+                          	DABS	1,120,2	;_i
  5196+ 0000                     	_i	set	0x78
  5197+                          
  5198+                          	global	_j
  5199+                          	global	_j
  5200+                          
  5201+                          	DABS	1,122,2	;_j
  5202+ 0000                     	_j	set	0x7A
  5203+                          
  5204+                          	global	_k
  5205+                          	global	_k
  5206+                          
  5207+                          	DABS	1,124,2	;_k
  5208+ 0000                     	_k	set	0x7C
  5209+                          
  5210+                          	psect	idata,class=CODE,delta=2,space=0
  5211+                          	file	"C:\Users\hardik\Desktop\ADC\main.c"
  5212+                          	line	3
  5213+                          
  5214+                          ;initializer for _i
  5215+ 0723  3430               	retlw	030h
  5216+ 0724  3400               	retlw	0
  5217+                          
  5218+                          ;initializer for _j
  5219+ 0725  3430               	retlw	030h
  5220+ 0726  3400               	retlw	0
  5221+                          
  5222+                          ;initializer for _k
  5223+ 0727  3430               	retlw	030h
  5224+ 0728  3400               	retlw	0
  5225+                          	psect	strings,class=CODE,delta=2,reloc=256
  5226+                          	global	stringdir,stringtab,__stringbase,string
      +                          jmp
  5227+ 0700                     stringtab:
  5228+ 0700  00FE               	movwf	(btemp)&07Fh
  5229+ 0701  1FFE               	btfss	(btemp)&07Fh,7
  5230+ 0702  2F08               	goto	stringcode
  5231+ 0703  1383               	bcf	status,7
  5232+ 0704  187E               	btfsc	btemp&7Fh,0
  5233+ 0705  1783               	bsf	status,7
  5234+ 0706  0800               	movf	indf,w
  5235+ 0707  0008               	return
  5236+ 0708                     stringcode:
  5237+ 0708  0804               	movf	fsr,w
  5238+ 0709                     stringdir:
  5239+ 0709  00FE               movwf btemp&07Fh
  5240+ 070A  3007               movlw high(stringdir)
  5241+ 070B  008A               movwf pclath
  5242+ 070C  087E               movf btemp&07Fh,w
  5243+ 070D                     stringjmp:
  5244+ 070D  0782               	addwf pc
  5245+ 070E                     __stringbase:
  5246+ 070E  3400               	retlw	0
  5247+                          	global	_ADCON0
  5248+ 0000                     	_ADCON0	set	0x1F
  5249+                          
  5250+                          	global	_ADCON1
  5251+                          	global	_ADCON1
  5252+ 0000                     	_ADCON1	set	0x9F
  5253+                          
  5254+                          	global	_ADRESH
  5255+ 0000                     	_ADRESH	set	0x1E
  5256+                          
  5257+                          	global	_ADRESL
  5258+ 0000                     	_ADRESL	set	0x9E
  5259+                          
  5260+                          	global	_CCP1CON
  5261+                          	global	_CCP1CON
  5262+ 0000                     	_CCP1CON	set	0x17
  5263+                          
  5264+                          	global	_CCP2CON
  5265+                          	global	_CCP2CON
  5266+ 0000                     	_CCP2CON	set	0x1D
  5267+                          
  5268+                          	global	_CCPR1H
  5269+                          	global	_CCPR1H
  5270+ 0000                     	_CCPR1H	set	0x16
  5271+                          
  5272+                          	global	_CCPR1L
  5273+                          	global	_CCPR1L
  5274+ 0000                     	_CCPR1L	set	0x15
  5275+                          
  5276+                          	global	_CCPR2H
  5277+                          	global	_CCPR2H
  5278+ 0000                     	_CCPR2H	set	0x1C
  5279+                          
  5280+                          	global	_CCPR2L
  5281+                          	global	_CCPR2L
  5282+ 0000                     	_CCPR2L	set	0x1B
  5283+                          
  5284+                          	global	_CMCON
  5285+                          	global	_CMCON
  5286+ 0000                     	_CMCON	set	0x9C
  5287+                          
  5288+                          	global	_CVRCON
  5289+                          	global	_CVRCON
  5290+ 0000                     	_CVRCON	set	0x9D
  5291+                          
  5292+                          	global	_EEADR
  5293+                          	global	_EEADR
  5294+ 0000                     	_EEADR	set	0x10D
  5295+                          
  5296+                          	global	_EEADRH
  5297+                          	global	_EEADRH
  5298+ 0000                     	_EEADRH	set	0x10F
  5299+                          
  5300+                          	global	_EEADRL
  5301+                          	global	_EEADRL
  5302+ 0000                     	_EEADRL	set	0x10D
  5303+                          
  5304+                          	global	_EECON1
  5305+                          	global	_EECON1
  5306+ 0000                     	_EECON1	set	0x18C
  5307+                          
  5308+                          	global	_EECON2
  5309+                          	global	_EECON2
  5310+ 0000                     	_EECON2	set	0x18D
  5311+                          
  5312+                          	global	_EEDATA
  5313+                          	global	_EEDATA
  5314+ 0000                     	_EEDATA	set	0x10C
  5315+                          
  5316+                          	global	_EEDATH
  5317+                          	global	_EEDATH
  5318+ 0000                     	_EEDATH	set	0x10E
  5319+                          
  5320+                          	global	_FSR
  5321+                          	global	_FSR
  5322+ 0000                     	_FSR	set	0x4
  5323+                          
  5324+                          	global	_INDF
  5325+                          	global	_INDF
  5326+ 0000                     	_INDF	set	0x0
  5327+                          
  5328+                          	global	_INTCON
  5329+                          	global	_INTCON
  5330+ 0000                     	_INTCON	set	0xB
  5331+                          
  5332+                          	global	_OPTION
  5333+                          	global	_OPTION
  5334+ 0000                     	_OPTION	set	0x81
  5335+                          
  5336+                          	global	_PCL
  5337+                          	global	_PCL
  5338+ 0000                     	_PCL	set	0x2
  5339+                          
  5340+                          	global	_PCLATH
  5341+                          	global	_PCLATH
  5342+ 0000                     	_PCLATH	set	0xA
  5343+                          
  5344+                          	global	_PCON
  5345+                          	global	_PCON
  5346+ 0000                     	_PCON	set	0x8E
  5347+                          
  5348+                          	global	_PIE1
  5349+                          	global	_PIE1
  5350+ 0000                     	_PIE1	set	0x8C
  5351+                          
  5352+                          	global	_PIE2
  5353+                          	global	_PIE2
  5354+ 0000                     	_PIE2	set	0x8D
  5355+                          
  5356+                          	global	_PIR1
  5357+                          	global	_PIR1
  5358+ 0000                     	_PIR1	set	0xC
  5359+                          
  5360+                          	global	_PIR2
  5361+                          	global	_PIR2
  5362+ 0000                     	_PIR2	set	0xD
  5363+                          
  5364+                          	global	_PORTA
  5365+                          	global	_PORTA
  5366+ 0000                     	_PORTA	set	0x5
  5367+                          
  5368+                          	global	_PORTB
  5369+ 0000                     	_PORTB	set	0x6
  5370+                          
  5371+                          	global	_PORTC
  5372+                          	global	_PORTC
  5373+ 0000                     	_PORTC	set	0x7
  5374+                          
  5375+                          	global	_PORTD
  5376+ 0000                     	_PORTD	set	0x8
  5377+                          
  5378+                          	global	_PORTE
  5379+                          	global	_PORTE
  5380+ 0000                     	_PORTE	set	0x9
  5381+                          
  5382+                          	global	_PR2
  5383+                          	global	_PR2
  5384+ 0000                     	_PR2	set	0x92
  5385+                          
  5386+                          	global	_RCREG
  5387+                          	global	_RCREG
  5388+ 0000                     	_RCREG	set	0x1A
  5389+                          
  5390+                          	global	_RCSTA
  5391+                          	global	_RCSTA
  5392+ 0000                     	_RCSTA	set	0x18
  5393+                          
  5394+                          	global	_SPBRG
  5395+                          	global	_SPBRG
  5396+ 0000                     	_SPBRG	set	0x99
  5397+                          
  5398+                          	global	_SSPADD
  5399+                          	global	_SSPADD
  5400+ 0000                     	_SSPADD	set	0x93
  5401+                          
  5402+                          	global	_SSPBUF
  5403+                          	global	_SSPBUF
  5404+ 0000                     	_SSPBUF	set	0x13
  5405+                          
  5406+                          	global	_SSPCON
  5407+                          	global	_SSPCON
  5408+ 0000                     	_SSPCON	set	0x14
  5409+                          
  5410+                          	global	_SSPCON2
  5411+                          	global	_SSPCON2
  5412+ 0000                     	_SSPCON2	set	0x91
  5413+                          
  5414+                          	global	_SSPSTAT
  5415+                          	global	_SSPSTAT
  5416+ 0000                     	_SSPSTAT	set	0x94
  5417+                          
  5418+                          	global	_STATUS
  5419+                          	global	_STATUS
  5420+ 0000                     	_STATUS	set	0x3
  5421+                          
  5422+                          	global	_T1CON
  5423+                          	global	_T1CON
  5424+ 0000                     	_T1CON	set	0x10
  5425+                          
  5426+                          	global	_T2CON
  5427+                          	global	_T2CON
  5428+ 0000                     	_T2CON	set	0x12
  5429+                          
  5430+                          	global	_TMR0
  5431+                          	global	_TMR0
  5432+ 0000                     	_TMR0	set	0x1
  5433+                          
  5434+                          	global	_TMR1H
  5435+                          	global	_TMR1H
  5436+ 0000                     	_TMR1H	set	0xF
  5437+                          
  5438+                          	global	_TMR1L
  5439+                          	global	_TMR1L
  5440+ 0000                     	_TMR1L	set	0xE
  5441+                          
  5442+                          	global	_TMR2
  5443+                          	global	_TMR2
  5444+ 0000                     	_TMR2	set	0x11
  5445+                          
  5446+                          	global	_TRISA
  5447+                          	global	_TRISA
  5448+ 0000                     	_TRISA	set	0x85
  5449+                          
  5450+                          	global	_TRISB
  5451+                          	global	_TRISB
  5452+ 0000                     	_TRISB	set	0x86
  5453+                          
  5454+                          	global	_TRISC
  5455+ 0000                     	_TRISC	set	0x87
  5456+                          
  5457+                          	global	_TRISD
  5458+ 0000                     	_TRISD	set	0x88
  5459+                          
  5460+                          	global	_TRISE
  5461+                          	global	_TRISE
  5462+ 0000                     	_TRISE	set	0x89
  5463+                          
  5464+                          	global	_TXREG
  5465+                          	global	_TXREG
  5466+ 0000                     	_TXREG	set	0x19
  5467+                          
  5468+                          	global	_TXSTA
  5469+                          	global	_TXSTA
  5470+ 0000                     	_TXSTA	set	0x98
  5471+                          
  5472+                          	global	_ACKDT
  5473+                          	global	_ACKDT
  5474+ 0000                     	_ACKDT	set	0x48D	;byte address: 0x91
  5475+                          
  5476+                          	global	_ACKEN
  5477+                          	global	_ACKEN
  5478+ 0000                     	_ACKEN	set	0x48C	;byte address: 0x91
  5479+                          
  5480+                          	global	_ACKSTAT
  5481+                          	global	_ACKSTAT
  5482+ 0000                     	_ACKSTAT	set	0x48E	;byte address: 0x91
  5483+                          
  5484+                          	global	_ADCS0
  5485+ 0000                     	_ADCS0	set	0xFE	;byte address: 0x1F
  5486+                          
  5487+                          	global	_ADCS1
  5488+ 0000                     	_ADCS1	set	0xFF	;byte address: 0x1F
  5489+                          
  5490+                          	global	_ADCS2
  5491+ 0000                     	_ADCS2	set	0x4FE	;byte address: 0x9F
  5492+                          
  5493+                          	global	_ADDEN
  5494+                          	global	_ADDEN
  5495+ 0000                     	_ADDEN	set	0xC3	;byte address: 0x18
  5496+                          
  5497+                          	global	_ADFM
  5498+ 0000                     	_ADFM	set	0x4FF	;byte address: 0x9F
  5499+                          
  5500+                          	global	_ADGO
  5501+                          	global	_ADGO
  5502+ 0000                     	_ADGO	set	0xFA	;byte address: 0x1F
  5503+                          
  5504+                          	global	_ADIE
  5505+                          	global	_ADIE
  5506+ 0000                     	_ADIE	set	0x466	;byte address: 0x8C
  5507+                          
  5508+                          	global	_ADIF
  5509+                          	global	_ADIF
  5510+ 0000                     	_ADIF	set	0x66	;byte address: 0xC
  5511+                          
  5512+                          	global	_ADON
  5513+ 0000                     	_ADON	set	0xF8	;byte address: 0x1F
  5514+                          
  5515+                          	global	_BCLIE
  5516+                          	global	_BCLIE
  5517+ 0000                     	_BCLIE	set	0x46B	;byte address: 0x8D
  5518+                          
  5519+                          	global	_BCLIF
  5520+                          	global	_BCLIF
  5521+ 0000                     	_BCLIF	set	0x6B	;byte address: 0xD
  5522+                          
  5523+                          	global	_BF
  5524+                          	global	_BF
  5525+ 0000                     	_BF	set	0x4A0	;byte address: 0x94
  5526+                          
  5527+                          	global	_BOR
  5528+                          	global	_BOR
  5529+ 0000                     	_BOR	set	0x470	;byte address: 0x8E
  5530+                          
  5531+                          	global	_BRGH
  5532+                          	global	_BRGH
  5533+ 0000                     	_BRGH	set	0x4C2	;byte address: 0x98
  5534+                          
  5535+                          	global	_C1INV
  5536+                          	global	_C1INV
  5537+ 0000                     	_C1INV	set	0x4E4	;byte address: 0x9C
  5538+                          
  5539+                          	global	_C1OUT
  5540+                          	global	_C1OUT
  5541+ 0000                     	_C1OUT	set	0x4E6	;byte address: 0x9C
  5542+                          
  5543+                          	global	_C2INV
  5544+                          	global	_C2INV
  5545+ 0000                     	_C2INV	set	0x4E5	;byte address: 0x9C
  5546+                          
  5547+                          	global	_C2OUT
  5548+                          	global	_C2OUT
  5549+ 0000                     	_C2OUT	set	0x4E7	;byte address: 0x9C
  5550+                          
  5551+                          	global	_CARRY
  5552+                          	global	_CARRY
  5553+ 0000                     	_CARRY	set	0x18	;byte address: 0x3
  5554+                          
  5555+                          	global	_CCP1IE
  5556+                          	global	_CCP1IE
  5557+ 0000                     	_CCP1IE	set	0x462	;byte address: 0x8C
  5558+                          
  5559+                          	global	_CCP1IF
  5560+                          	global	_CCP1IF
  5561+ 0000                     	_CCP1IF	set	0x62	;byte address: 0xC
  5562+                          
  5563+                          	global	_CCP1M0
  5564+                          	global	_CCP1M0
  5565+ 0000                     	_CCP1M0	set	0xB8	;byte address: 0x17
  5566+                          
  5567+                          	global	_CCP1M1
  5568+                          	global	_CCP1M1
  5569+ 0000                     	_CCP1M1	set	0xB9	;byte address: 0x17
  5570+                          
  5571+                          	global	_CCP1M2
  5572+                          	global	_CCP1M2
  5573+ 0000                     	_CCP1M2	set	0xBA	;byte address: 0x17
  5574+                          
  5575+                          	global	_CCP1M3
  5576+                          	global	_CCP1M3
  5577+ 0000                     	_CCP1M3	set	0xBB	;byte address: 0x17
  5578+                          
  5579+                          	global	_CCP1X
  5580+                          	global	_CCP1X
  5581+ 0000                     	_CCP1X	set	0xBD	;byte address: 0x17
  5582+                          
  5583+                          	global	_CCP1Y
  5584+                          	global	_CCP1Y
  5585+ 0000                     	_CCP1Y	set	0xBC	;byte address: 0x17
  5586+                          
  5587+                          	global	_CCP2IE
  5588+                          	global	_CCP2IE
  5589+ 0000                     	_CCP2IE	set	0x468	;byte address: 0x8D
  5590+                          
  5591+                          	global	_CCP2IF
  5592+                          	global	_CCP2IF
  5593+ 0000                     	_CCP2IF	set	0x68	;byte address: 0xD
  5594+                          
  5595+                          	global	_CCP2M0
  5596+                          	global	_CCP2M0
  5597+ 0000                     	_CCP2M0	set	0xE8	;byte address: 0x1D
  5598+                          
  5599+                          	global	_CCP2M1
  5600+                          	global	_CCP2M1
  5601+ 0000                     	_CCP2M1	set	0xE9	;byte address: 0x1D
  5602+                          
  5603+                          	global	_CCP2M2
  5604+                          	global	_CCP2M2
  5605+ 0000                     	_CCP2M2	set	0xEA	;byte address: 0x1D
  5606+                          
  5607+                          	global	_CCP2M3
  5608+                          	global	_CCP2M3
  5609+ 0000                     	_CCP2M3	set	0xEB	;byte address: 0x1D
  5610+                          
  5611+                          	global	_CCP2X
  5612+                          	global	_CCP2X
  5613+ 0000                     	_CCP2X	set	0xED	;byte address: 0x1D
  5614+                          
  5615+                          	global	_CCP2Y
  5616+                          	global	_CCP2Y
  5617+ 0000                     	_CCP2Y	set	0xEC	;byte address: 0x1D
  5618+                          
  5619+                          	global	_CHS0
  5620+                          	global	_CHS0
  5621+ 0000                     	_CHS0	set	0xFB	;byte address: 0x1F
  5622+                          
  5623+                          	global	_CHS1
  5624+                          	global	_CHS1
  5625+ 0000                     	_CHS1	set	0xFC	;byte address: 0x1F
  5626+                          
  5627+                          	global	_CHS2
  5628+                          	global	_CHS2
  5629+ 0000                     	_CHS2	set	0xFD	;byte address: 0x1F
  5630+                          
  5631+                          	global	_CIS
  5632+                          	global	_CIS
  5633+ 0000                     	_CIS	set	0x4E3	;byte address: 0x9C
  5634+                          
  5635+                          	global	_CKE
  5636+                          	global	_CKE
  5637+ 0000                     	_CKE	set	0x4A6	;byte address: 0x94
  5638+                          
  5639+                          	global	_CKP
  5640+                          	global	_CKP
  5641+ 0000                     	_CKP	set	0xA4	;byte address: 0x14
  5642+                          
  5643+                          	global	_CM0
  5644+                          	global	_CM0
  5645+ 0000                     	_CM0	set	0x4E0	;byte address: 0x9C
  5646+                          
  5647+                          	global	_CM1
  5648+                          	global	_CM1
  5649+ 0000                     	_CM1	set	0x4E1	;byte address: 0x9C
  5650+                          
  5651+                          	global	_CM2
  5652+                          	global	_CM2
  5653+ 0000                     	_CM2	set	0x4E2	;byte address: 0x9C
  5654+                          
  5655+                          	global	_CMIE
  5656+                          	global	_CMIE
  5657+ 0000                     	_CMIE	set	0x46E	;byte address: 0x8D
  5658+                          
  5659+                          	global	_CMIF
  5660+                          	global	_CMIF
  5661+ 0000                     	_CMIF	set	0x6E	;byte address: 0xD
  5662+                          
  5663+                          	global	_CREN
  5664+                          	global	_CREN
  5665+ 0000                     	_CREN	set	0xC4	;byte address: 0x18
  5666+                          
  5667+                          	global	_CSRC
  5668+                          	global	_CSRC
  5669+ 0000                     	_CSRC	set	0x4C7	;byte address: 0x98
  5670+                          
  5671+                          	global	_CVR0
  5672+                          	global	_CVR0
  5673+ 0000                     	_CVR0	set	0x4E8	;byte address: 0x9D
  5674+                          
  5675+                          	global	_CVR1
  5676+                          	global	_CVR1
  5677+ 0000                     	_CVR1	set	0x4E9	;byte address: 0x9D
  5678+                          
  5679+                          	global	_CVR2
  5680+                          	global	_CVR2
  5681+ 0000                     	_CVR2	set	0x4EA	;byte address: 0x9D
  5682+                          
  5683+                          	global	_CVR3
  5684+                          	global	_CVR3
  5685+ 0000                     	_CVR3	set	0x4EB	;byte address: 0x9D
  5686+                          
  5687+                          	global	_CVREN
  5688+                          	global	_CVREN
  5689+ 0000                     	_CVREN	set	0x4EF	;byte address: 0x9D
  5690+                          
  5691+                          	global	_CVROE
  5692+                          	global	_CVROE
  5693+ 0000                     	_CVROE	set	0x4EE	;byte address: 0x9D
  5694+                          
  5695+                          	global	_CVRR
  5696+                          	global	_CVRR
  5697+ 0000                     	_CVRR	set	0x4ED	;byte address: 0x9D
  5698+                          
  5699+                          	global	_DA
  5700+                          	global	_DA
  5701+ 0000                     	_DA	set	0x4A5	;byte address: 0x94
  5702+                          
  5703+                          	global	_DC
  5704+                          	global	_DC
  5705+ 0000                     	_DC	set	0x19	;byte address: 0x3
  5706+                          
  5707+                          	global	_EEIE
  5708+                          	global	_EEIE
  5709+ 0000                     	_EEIE	set	0x46C	;byte address: 0x8D
  5710+                          
  5711+                          	global	_EEIF
  5712+                          	global	_EEIF
  5713+ 0000                     	_EEIF	set	0x6C	;byte address: 0xD
  5714+                          
  5715+                          	global	_EEPGD
  5716+                          	global	_EEPGD
  5717+ 0000                     	_EEPGD	set	0xC67	;byte address: 0x18C
  5718+                          
  5719+                          	global	_FERR
  5720+                          	global	_FERR
  5721+ 0000                     	_FERR	set	0xC2	;byte address: 0x18
  5722+                          
  5723+                          	global	_GCEN
  5724+                          	global	_GCEN
  5725+ 0000                     	_GCEN	set	0x48F	;byte address: 0x91
  5726+                          
  5727+                          	global	_GIE
  5728+                          	global	_GIE
  5729+ 0000                     	_GIE	set	0x5F	;byte address: 0xB
  5730+                          
  5731+                          	global	_GODONE
  5732+                          	global	_GODONE
  5733+ 0000                     	_GODONE	set	0xFA	;byte address: 0x1F
  5734+                          
  5735+                          	global	_IBF
  5736+                          	global	_IBF
  5737+ 0000                     	_IBF	set	0x44F	;byte address: 0x89
  5738+                          
  5739+                          	global	_IBOV
  5740+                          	global	_IBOV
  5741+ 0000                     	_IBOV	set	0x44D	;byte address: 0x89
  5742+                          
  5743+                          	global	_INTE
  5744+                          	global	_INTE
  5745+ 0000                     	_INTE	set	0x5C	;byte address: 0xB
  5746+                          
  5747+                          	global	_INTEDG
  5748+                          	global	_INTEDG
  5749+ 0000                     	_INTEDG	set	0x40E	;byte address: 0x81
  5750+                          
  5751+                          	global	_INTF
  5752+                          	global	_INTF
  5753+ 0000                     	_INTF	set	0x59	;byte address: 0xB
  5754+                          
  5755+                          	global	_IRP
  5756+                          	global	_IRP
  5757+ 0000                     	_IRP	set	0x1F	;byte address: 0x3
  5758+                          
  5759+                          	global	_OBF
  5760+                          	global	_OBF
  5761+ 0000                     	_OBF	set	0x44E	;byte address: 0x89
  5762+                          
  5763+                          	global	_OERR
  5764+                          	global	_OERR
  5765+ 0000                     	_OERR	set	0xC1	;byte address: 0x18
  5766+                          
  5767+                          	global	_PCFG0
  5768+ 0000                     	_PCFG0	set	0x4F8	;byte address: 0x9F
  5769+                          
  5770+                          	global	_PCFG1
  5771+ 0000                     	_PCFG1	set	0x4F9	;byte address: 0x9F
  5772                           
  5773                           	global	_PCFG2
  5774  0000                     	_PCFG2	set	0x4FA	;byte address: 0x9F
  5775                           
  5776                           	global	_PCFG3
  5777  0000                     	_PCFG3	set	0x4FB	;byte address: 0x9F
  5778                           
  5779                           	global	_PD
  5780                           	global	_PD
  5781  0000                     	_PD	set	0x1B	;byte address: 0x3
  5782                           
  5783                           	global	_PEIE
  5784                           	global	_PEIE
  5785  0000                     	_PEIE	set	0x5E	;byte address: 0xB
  5786                           
  5787                           	global	_PEN
  5788                           	global	_PEN
  5789  0000                     	_PEN	set	0x48A	;byte address: 0x91
  5790                           
  5791                           	global	_POR
  5792                           	global	_POR
  5793  0000                     	_POR	set	0x471	;byte address: 0x8E
  5794                           
  5795                           	global	_PS0
  5796                           	global	_PS0
  5797  0000                     	_PS0	set	0x408	;byte address: 0x81
  5798                           
  5799                           	global	_PS1
  5800                           	global	_PS1
  5801  0000                     	_PS1	set	0x409	;byte address: 0x81
  5802                           
  5803                           	global	_PS2
  5804                           	global	_PS2
  5805  0000                     	_PS2	set	0x40A	;byte address: 0x81
  5806                           
  5807                           	global	_PSA
  5808                           	global	_PSA
  5809  0000                     	_PSA	set	0x40B	;byte address: 0x81
  5810                           
  5811                           	global	_PSPIE
  5812                           	global	_PSPIE
  5813  0000                     	_PSPIE	set	0x467	;byte address: 0x8C
  5814                           
  5815                           	global	_PSPIF
  5816                           	global	_PSPIF
  5817  0000                     	_PSPIF	set	0x67	;byte address: 0xC
  5818                           
  5819                           	global	_PSPMODE
  5820                           	global	_PSPMODE
  5821  0000                     	_PSPMODE	set	0x44C	;byte address: 0x89
  5822                           
  5823                           	global	_RA0
  5824                           	global	_RA0
  5825  0000                     	_RA0	set	0x28	;byte address: 0x5
  5826                           
  5827                           	global	_RA1
  5828                           	global	_RA1
  5829  0000                     	_RA1	set	0x29	;byte address: 0x5
  5830                           
  5831                           	global	_RA2
  5832                           	global	_RA2
  5833  0000                     	_RA2	set	0x2A	;byte address: 0x5
  5834                           
  5835                           	global	_RA3
  5836                           	global	_RA3
  5837  0000                     	_RA3	set	0x2B	;byte address: 0x5
  5838                           
  5839                           	global	_RA4
  5840                           	global	_RA4
  5841  0000                     	_RA4	set	0x2C	;byte address: 0x5
  5842                           
  5843                           	global	_RA5
  5844                           	global	_RA5
  5845  0000                     	_RA5	set	0x2D	;byte address: 0x5
  5846                           
  5847                           	global	_RB0
  5848                           	global	_RB0
  5849  0000                     	_RB0	set	0x30	;byte address: 0x6
  5850                           
  5851                           	global	_RB1
  5852                           	global	_RB1
  5853  0000                     	_RB1	set	0x31	;byte address: 0x6
  5854                           
  5855                           	global	_RB2
  5856                           	global	_RB2
  5857  0000                     	_RB2	set	0x32	;byte address: 0x6
  5858                           
  5859                           	global	_RB3
  5860                           	global	_RB3
  5861  0000                     	_RB3	set	0x33	;byte address: 0x6
  5862                           
  5863                           	global	_RB4
  5864                           	global	_RB4
  5865  0000                     	_RB4	set	0x34	;byte address: 0x6
  5866                           
  5867                           	global	_RB5
  5868                           	global	_RB5
  5869  0000                     	_RB5	set	0x35	;byte address: 0x6
  5870                           
  5871                           	global	_RB6
  5872                           	global	_RB6
  5873  0000                     	_RB6	set	0x36	;byte address: 0x6
  5874                           
  5875                           	global	_RB7
  5876                           	global	_RB7
  5877  0000                     	_RB7	set	0x37	;byte address: 0x6
  5878                           
  5879                           	global	_RBIE
  5880                           	global	_RBIE
  5881  0000                     	_RBIE	set	0x5B	;byte address: 0xB
  5882                           
  5883                           	global	_RBIF
  5884                           	global	_RBIF
  5885  0000                     	_RBIF	set	0x58	;byte address: 0xB
  5886                           
  5887                           	global	_RBPU
  5888                           	global	_RBPU
  5889  0000                     	_RBPU	set	0x40F	;byte address: 0x81
  5890                           
  5891                           	global	_RC0
  5892                           	global	_RC0
  5893  0000                     	_RC0	set	0x38	;byte address: 0x7
  5894                           
  5895                           	global	_RC1
  5896                           	global	_RC1
  5897  0000                     	_RC1	set	0x39	;byte address: 0x7
  5898                           
  5899                           	global	_RC2
  5900                           	global	_RC2
  5901  0000                     	_RC2	set	0x3A	;byte address: 0x7
  5902                           
  5903                           	global	_RC3
  5904                           	global	_RC3
  5905  0000                     	_RC3	set	0x3B	;byte address: 0x7
  5906                           
  5907                           	global	_RC4
  5908                           	global	_RC4
  5909  0000                     	_RC4	set	0x3C	;byte address: 0x7
  5910                           
  5911                           	global	_RC5
  5912                           	global	_RC5
  5913  0000                     	_RC5	set	0x3D	;byte address: 0x7
  5914                           
  5915                           	global	_RC6
  5916                           	global	_RC6
  5917  0000                     	_RC6	set	0x3E	;byte address: 0x7
  5918                           
  5919                           	global	_RC7
  5920                           	global	_RC7
  5921  0000                     	_RC7	set	0x3F	;byte address: 0x7
  5922                           
  5923                           	global	_RCEN
  5924                           	global	_RCEN
  5925  0000                     	_RCEN	set	0x48B	;byte address: 0x91
  5926                           
  5927                           	global	_RCIE
  5928                           	global	_RCIE
  5929  0000                     	_RCIE	set	0x465	;byte address: 0x8C
  5930                           
  5931                           	global	_RCIF
  5932                           	global	_RCIF
  5933  0000                     	_RCIF	set	0x65	;byte address: 0xC
  5934                           
  5935                           	global	_RD
  5936                           	global	_RD
  5937  0000                     	_RD	set	0xC60	;byte address: 0x18C
  5938                           
  5939                           	global	_RD0
  5940                           	global	_RD0
  5941  0000                     	_RD0	set	0x40	;byte address: 0x8
  5942                           
  5943                           	global	_RD1
  5944                           	global	_RD1
  5945  0000                     	_RD1	set	0x41	;byte address: 0x8
  5946                           
  5947                           	global	_RD2
  5948  0000                     	_RD2	set	0x42	;byte address: 0x8
  5949                           
  5950                           	global	_RD3
  5951  0000                     	_RD3	set	0x43	;byte address: 0x8
  5952                           
  5953                           	global	_RD4
  5954                           	global	_RD4
  5955  0000                     	_RD4	set	0x44	;byte address: 0x8
  5956                           
  5957                           	global	_RD5
  5958                           	global	_RD5
  5959  0000                     	_RD5	set	0x45	;byte address: 0x8
  5960                           
  5961                           	global	_RD6
  5962                           	global	_RD6
  5963  0000                     	_RD6	set	0x46	;byte address: 0x8
  5964                           
  5965                           	global	_RD7
  5966                           	global	_RD7
  5967  0000                     	_RD7	set	0x47	;byte address: 0x8
  5968                           
  5969                           	global	_RE0
  5970                           	global	_RE0
  5971  0000                     	_RE0	set	0x48	;byte address: 0x9
  5972                           
  5973                           	global	_RE1
  5974                           	global	_RE1
  5975  0000                     	_RE1	set	0x49	;byte address: 0x9
  5976                           
  5977                           	global	_RE2
  5978                           	global	_RE2
  5979  0000                     	_RE2	set	0x4A	;byte address: 0x9
  5980                           
  5981                           	global	_RP0
  5982                           	global	_RP0
  5983  0000                     	_RP0	set	0x1D	;byte address: 0x3
  5984                           
  5985                           	global	_RP1
  5986                           	global	_RP1
  5987  0000                     	_RP1	set	0x1E	;byte address: 0x3
  5988                           
  5989                           	global	_RSEN
  5990                           	global	_RSEN
  5991  0000                     	_RSEN	set	0x489	;byte address: 0x91
  5992                           
  5993                           	global	_RW
  5994                           	global	_RW
  5995  0000                     	_RW	set	0x4A2	;byte address: 0x94
  5996                           
  5997                           	global	_RX9
  5998                           	global	_RX9
  5999  0000                     	_RX9	set	0xC6	;byte address: 0x18
  6000                           
  6001                           	global	_RX9D
  6002                           	global	_RX9D
  6003  0000                     	_RX9D	set	0xC0	;byte address: 0x18
  6004                           
  6005                           	global	_SEN
  6006                           	global	_SEN
  6007  0000                     	_SEN	set	0x488	;byte address: 0x91
  6008                           
  6009                           	global	_SMP
  6010                           	global	_SMP
  6011  0000                     	_SMP	set	0x4A7	;byte address: 0x94
  6012                           
  6013                           	global	_SPEN
  6014                           	global	_SPEN
  6015  0000                     	_SPEN	set	0xC7	;byte address: 0x18
  6016                           
  6017                           	global	_SREN
  6018                           	global	_SREN
  6019  0000                     	_SREN	set	0xC5	;byte address: 0x18
  6020                           
  6021                           	global	_SSPEN
  6022                           	global	_SSPEN
  6023  0000                     	_SSPEN	set	0xA5	;byte address: 0x14
  6024                           
  6025                           	global	_SSPIE
  6026                           	global	_SSPIE
  6027  0000                     	_SSPIE	set	0x463	;byte address: 0x8C
  6028                           
  6029                           	global	_SSPIF
  6030                           	global	_SSPIF
  6031  0000                     	_SSPIF	set	0x63	;byte address: 0xC
  6032                           
  6033                           	global	_SSPM0
  6034                           	global	_SSPM0
  6035  0000                     	_SSPM0	set	0xA0	;byte address: 0x14
  6036                           
  6037                           	global	_SSPM1
  6038                           	global	_SSPM1
  6039  0000                     	_SSPM1	set	0xA1	;byte address: 0x14
  6040                           
  6041                           	global	_SSPM2
  6042                           	global	_SSPM2
  6043  0000                     	_SSPM2	set	0xA2	;byte address: 0x14
  6044                           
  6045                           	global	_SSPM3
  6046                           	global	_SSPM3
  6047  0000                     	_SSPM3	set	0xA3	;byte address: 0x14
  6048                           
  6049                           	global	_SSPOV
  6050                           	global	_SSPOV
  6051  0000                     	_SSPOV	set	0xA6	;byte address: 0x14
  6052                           
  6053                           	global	_START
  6054                           	global	_START
  6055  0000                     	_START	set	0x4A3	;byte address: 0x94
  6056                           
  6057                           	global	_STOP
  6058                           	global	_STOP
  6059  0000                     	_STOP	set	0x4A4	;byte address: 0x94
  6060                           
  6061                           	global	_SYNC
  6062                           	global	_SYNC
  6063  0000                     	_SYNC	set	0x4C4	;byte address: 0x98
  6064                           
  6065                           	global	_T0CS
  6066                           	global	_T0CS
  6067  0000                     	_T0CS	set	0x40D	;byte address: 0x81
  6068                           
  6069                           	global	_T0IE
  6070                           	global	_T0IE
  6071  0000                     	_T0IE	set	0x5D	;byte address: 0xB
  6072                           
  6073                           	global	_T0IF
  6074                           	global	_T0IF
  6075  0000                     	_T0IF	set	0x5A	;byte address: 0xB
  6076                           
  6077                           	global	_T0SE
  6078                           	global	_T0SE
  6079  0000                     	_T0SE	set	0x40C	;byte address: 0x81
  6080                           
  6081                           	global	_T1CKPS0
  6082                           	global	_T1CKPS0
  6083  0000                     	_T1CKPS0	set	0x84	;byte address: 0x10
  6084                           
  6085                           	global	_T1CKPS1
  6086                           	global	_T1CKPS1
  6087  0000                     	_T1CKPS1	set	0x85	;byte address: 0x10
  6088                           
  6089                           	global	_T1OSCEN
  6090                           	global	_T1OSCEN
  6091  0000                     	_T1OSCEN	set	0x83	;byte address: 0x10
  6092                           
  6093                           	global	_T1SYNC
  6094                           	global	_T1SYNC
  6095  0000                     	_T1SYNC	set	0x82	;byte address: 0x10
  6096                           
  6097                           	global	_T2CKPS0
  6098                           	global	_T2CKPS0
  6099  0000                     	_T2CKPS0	set	0x90	;byte address: 0x12
  6100                           
  6101                           	global	_T2CKPS1
  6102                           	global	_T2CKPS1
  6103  0000                     	_T2CKPS1	set	0x91	;byte address: 0x12
  6104                           
  6105                           	global	_TMR0IE
  6106                           	global	_TMR0IE
  6107  0000                     	_TMR0IE	set	0x5D	;byte address: 0xB
  6108                           
  6109                           	global	_TMR0IF
  6110                           	global	_TMR0IF
  6111  0000                     	_TMR0IF	set	0x5A	;byte address: 0xB
  6112                           
  6113                           	global	_TMR1CS
  6114                           	global	_TMR1CS
  6115  0000                     	_TMR1CS	set	0x81	;byte address: 0x10
  6116                           
  6117                           	global	_TMR1IE
  6118                           	global	_TMR1IE
  6119  0000                     	_TMR1IE	set	0x460	;byte address: 0x8C
  6120                           
  6121                           	global	_TMR1IF
  6122                           	global	_TMR1IF
  6123  0000                     	_TMR1IF	set	0x60	;byte address: 0xC
  6124                           
  6125                           	global	_TMR1ON
  6126                           	global	_TMR1ON
  6127  0000                     	_TMR1ON	set	0x80	;byte address: 0x10
  6128                           
  6129                           	global	_TMR2IE
  6130                           	global	_TMR2IE
  6131  0000                     	_TMR2IE	set	0x461	;byte address: 0x8C
  6132                           
  6133                           	global	_TMR2IF
  6134                           	global	_TMR2IF
  6135  0000                     	_TMR2IF	set	0x61	;byte address: 0xC
  6136                           
  6137                           	global	_TMR2ON
  6138                           	global	_TMR2ON
  6139  0000                     	_TMR2ON	set	0x92	;byte address: 0x12
  6140                           
  6141                           	global	_TO
  6142                           	global	_TO
  6143  0000                     	_TO	set	0x1C	;byte address: 0x3
  6144                           
  6145                           	global	_TOUTPS0
  6146                           	global	_TOUTPS0
  6147  0000                     	_TOUTPS0	set	0x93	;byte address: 0x12
  6148                           
  6149                           	global	_TOUTPS1
  6150                           	global	_TOUTPS1
  6151  0000                     	_TOUTPS1	set	0x94	;byte address: 0x12
  6152                           
  6153                           	global	_TOUTPS2
  6154                           	global	_TOUTPS2
  6155  0000                     	_TOUTPS2	set	0x95	;byte address: 0x12
  6156                           
  6157                           	global	_TOUTPS3
  6158                           	global	_TOUTPS3
  6159  0000                     	_TOUTPS3	set	0x96	;byte address: 0x12
  6160                           
  6161                           	global	_TRISA0
  6162                           	global	_TRISA0
  6163  0000                     	_TRISA0	set	0x428	;byte address: 0x85
  6164                           
  6165                           	global	_TRISA1
  6166                           	global	_TRISA1
  6167  0000                     	_TRISA1	set	0x429	;byte address: 0x85
  6168                           
  6169                           	global	_TRISA2
  6170                           	global	_TRISA2
  6171  0000                     	_TRISA2	set	0x42A	;byte address: 0x85
  6172                           
  6173                           	global	_TRISA3
  6174                           	global	_TRISA3
  6175  0000                     	_TRISA3	set	0x42B	;byte address: 0x85
  6176                           
  6177                           	global	_TRISA4
  6178                           	global	_TRISA4
  6179  0000                     	_TRISA4	set	0x42C	;byte address: 0x85
  6180                           
  6181                           	global	_TRISA5
  6182                           	global	_TRISA5
  6183  0000                     	_TRISA5	set	0x42D	;byte address: 0x85
  6184                           
  6185                           	global	_TRISB0
  6186                           	global	_TRISB0
  6187  0000                     	_TRISB0	set	0x430	;byte address: 0x86
  6188                           
  6189                           	global	_TRISB1
  6190                           	global	_TRISB1
  6191  0000                     	_TRISB1	set	0x431	;byte address: 0x86
  6192                           
  6193                           	global	_TRISB2
  6194                           	global	_TRISB2
  6195  0000                     	_TRISB2	set	0x432	;byte address: 0x86
  6196                           
  6197                           	global	_TRISB3
  6198                           	global	_TRISB3
  6199  0000                     	_TRISB3	set	0x433	;byte address: 0x86
  6200                           
  6201                           	global	_TRISB4
  6202                           	global	_TRISB4
  6203  0000                     	_TRISB4	set	0x434	;byte address: 0x86
  6204                           
  6205                           	global	_TRISB5
  6206                           	global	_TRISB5
  6207  0000                     	_TRISB5	set	0x435	;byte address: 0x86
  6208                           
  6209                           	global	_TRISB6
  6210                           	global	_TRISB6
  6211  0000                     	_TRISB6	set	0x436	;byte address: 0x86
  6212                           
  6213                           	global	_TRISB7
  6214                           	global	_TRISB7
  6215  0000                     	_TRISB7	set	0x437	;byte address: 0x86
  6216                           
  6217                           	global	_TRISC0
  6218                           	global	_TRISC0
  6219  0000                     	_TRISC0	set	0x438	;byte address: 0x87
  6220                           
  6221                           	global	_TRISC1
  6222                           	global	_TRISC1
  6223  0000                     	_TRISC1	set	0x439	;byte address: 0x87
  6224                           
  6225                           	global	_TRISC2
  6226                           	global	_TRISC2
  6227  0000                     	_TRISC2	set	0x43A	;byte address: 0x87
  6228                           
  6229                           	global	_TRISC3
  6230                           	global	_TRISC3
  6231  0000                     	_TRISC3	set	0x43B	;byte address: 0x87
  6232                           
  6233                           	global	_TRISC4
  6234                           	global	_TRISC4
  6235  0000                     	_TRISC4	set	0x43C	;byte address: 0x87
  6236                           
  6237                           	global	_TRISC5
  6238                           	global	_TRISC5
  6239  0000                     	_TRISC5	set	0x43D	;byte address: 0x87
  6240                           
  6241                           	global	_TRISC6
  6242                           	global	_TRISC6
  6243  0000                     	_TRISC6	set	0x43E	;byte address: 0x87
  6244                           
  6245                           	global	_TRISC7
  6246                           	global	_TRISC7
  6247  0000                     	_TRISC7	set	0x43F	;byte address: 0x87
  6248                           
  6249                           	global	_TRISD0
  6250                           	global	_TRISD0
  6251  0000                     	_TRISD0	set	0x440	;byte address: 0x88
  6252                           
  6253                           	global	_TRISD1
  6254                           	global	_TRISD1
  6255  0000                     	_TRISD1	set	0x441	;byte address: 0x88
  6256                           
  6257                           	global	_TRISD2
  6258                           	global	_TRISD2
  6259  0000                     	_TRISD2	set	0x442	;byte address: 0x88
  6260                           
  6261                           	global	_TRISD3
  6262                           	global	_TRISD3
  6263  0000                     	_TRISD3	set	0x443	;byte address: 0x88
  6264                           
  6265                           	global	_TRISD4
  6266                           	global	_TRISD4
  6267  0000                     	_TRISD4	set	0x444	;byte address: 0x88
  6268                           
  6269                           	global	_TRISD5
  6270                           	global	_TRISD5
  6271  0000                     	_TRISD5	set	0x445	;byte address: 0x88
  6272                           
  6273                           	global	_TRISD6
  6274                           	global	_TRISD6
  6275  0000                     	_TRISD6	set	0x446	;byte address: 0x88
  6276                           
  6277                           	global	_TRISD7
  6278                           	global	_TRISD7
  6279  0000                     	_TRISD7	set	0x447	;byte address: 0x88
  6280                           
  6281                           	global	_TRISE0
  6282                           	global	_TRISE0
  6283  0000                     	_TRISE0	set	0x448	;byte address: 0x89
  6284                           
  6285                           	global	_TRISE1
  6286                           	global	_TRISE1
  6287  0000                     	_TRISE1	set	0x449	;byte address: 0x89
  6288                           
  6289                           	global	_TRISE2
  6290                           	global	_TRISE2
  6291  0000                     	_TRISE2	set	0x44A	;byte address: 0x89
  6292                           
  6293                           	global	_TRMT
  6294                           	global	_TRMT
  6295  0000                     	_TRMT	set	0x4C1	;byte address: 0x98
  6296                           
  6297                           	global	_TX9
  6298                           	global	_TX9
  6299  0000                     	_TX9	set	0x4C6	;byte address: 0x98
  6300                           
  6301                           	global	_TX9D
  6302                           	global	_TX9D
  6303  0000                     	_TX9D	set	0x4C0	;byte address: 0x98
  6304                           
  6305                           	global	_TXEN
  6306                           	global	_TXEN
  6307  0000                     	_TXEN	set	0x4C5	;byte address: 0x98
  6308                           
  6309                           	global	_TXIE
  6310                           	global	_TXIE
  6311  0000                     	_TXIE	set	0x464	;byte address: 0x8C
  6312                           
  6313                           	global	_TXIF
  6314                           	global	_TXIF
  6315  0000                     	_TXIF	set	0x64	;byte address: 0xC
  6316                           
  6317                           	global	_UA
  6318                           	global	_UA
  6319  0000                     	_UA	set	0x4A1	;byte address: 0x94
  6320                           
  6321                           	global	_WCOL
  6322                           	global	_WCOL
  6323  0000                     	_WCOL	set	0xA7	;byte address: 0x14
  6324                           
  6325                           	global	_WR
  6326                           	global	_WR
  6327  0000                     	_WR	set	0xC61	;byte address: 0x18C
  6328                           
  6329                           	global	_WREN
  6330                           	global	_WREN
  6331  0000                     	_WREN	set	0xC62	;byte address: 0x18C
  6332                           
  6333                           	global	_WRERR
  6334                           	global	_WRERR
  6335  0000                     	_WRERR	set	0xC63	;byte address: 0x18C
  6336                           
  6337                           	global	_ZERO
  6338                           	global	_ZERO
  6339  0000                     	_ZERO	set	0x1A	;byte address: 0x3
  6340                           
  6341                           	
  6342  070F                     STR_1:	
  6343  070F  3449               	retlw	73	;'I'
  6344  0710  344E               	retlw	78	;'N'
  6345  0711  3449               	retlw	73	;'I'
  6346  0712  3454               	retlw	84	;'T'
  6347  0713  3449               	retlw	73	;'I'
  6348  0714  3441               	retlw	65	;'A'
  6349  0715  344C               	retlw	76	;'L'
  6350  0716  3449               	retlw	73	;'I'
  6351  0717  345A               	retlw	90	;'Z'
  6352  0718  3449               	retlw	73	;'I'
  6353  0719  344E               	retlw	78	;'N'
  6354  071A  3447               	retlw	71	;'G'
  6355  071B  342E               	retlw	46	;'.'
  6356  071C  342E               	retlw	46	;'.'
  6357  071D  342E               	retlw	46	;'.'
  6358  071E  342E               	retlw	46	;'.'
  6359  071F  3400               	retlw	0
  6360                           	
  6361  0720                     STR_2:	
  6362  0720  3420               	retlw	32	;' '
  6363  0721  3420               	retlw	32	;' '
  6364  0722  3400               	retlw	0
  6365  0000                     STR_3	equ	STR_2+1
  6366                           	PSECT	fnauto0,class=BANK0,space=1
  6367                           	FNCONF	fnauto0,??,?
  6368                           
  6369                           	DABS	1,126,2	;btemp
  6370                           	global	btemp
  6371  0000                     	btemp set 07Eh
  6372                           	global	wtemp0
  6373  0000                     	wtemp0 set btemp
  6374                           	global	wtemp1
  6375  0000                     	wtemp1 set btemp+2
  6376                           	global	ttemp0
  6377  0000                     	ttemp0 set btemp
  6378                           	global	ltemp0
  6379  0000                     	ltemp0 set btemp
  6380                           apbank macro
  6381                           	bcf	status,5
  6382                           	bcf	status,6
  6383  0020                     	endm


HI-TECH Software PICC Macro Assembler V9.65PL1 build 4898 
Symbol Table                                          Sat Jun 30 11:12:52 2012

                             l1 0E8C                               l2 0E86  
                             l3 0E75                               l4 0E8C  
                             l5 0E78                               l7 0E80  
                             l8 07FC                               l9 0E55  
                     __Lrdata_0 0078                               _i 0078  
                             _j 007A                               _k 007C  
                             pc 0002                       __Lramdata 0078  
             _LCDWriteInteger_c 0042               _LCDWriteInteger_i 0041  
                            l10 0E4A                              l11 0ECC  
                            l12 0EBF                              _DA 04A5  
                            l21 0F77                              l13 0EAE  
                            _BF 04A0                              l14 0ECC  
                            l30 05D7                              _DC 0019  
                            l15 0F4B                              l31 069A  
                            l16 0E73                              l40 02EB  
                            l32 0665                              l41 02F7  
                            l33 06A7                              l17 0FAF  
                            l42 032D                              l34 06B4  
                            l18 0F8C                              l50 004C  
                            l43 02F8                              l35 06AA  
                            l19 0FA9                              l44 033C  
                            l36 06BE                              l52 005B  
                            l45 0347                              l29 06FF  
                            l37 06D7                              l61 0F20  
                            l46 033D                              l38 06FF  
                            l54 0062                              l39 0351  
                            l47 0351                              l55 0100  
                            l63 0F19                              l64 0EFB  
                            l65 0F05                              l49 00F4  
                            l98 05A1                              l99 0485  
                            _PD 001B                              _RD 0C60  
                            _UA 04A1                              _TO 001C  
                            _RW 04A2                              _WR 0C61  
                            fsr 0004                             l100 049C  
                           l101 0590                             l110 04F1  
                           l102 04F2                             l111 0532  
                           l112 0532                             l120 0532  
                           l104 04F1                             l121 054A  
                           l201 0227                             l122 0562  
                           l114 0532                             l106 04DE  
                           l130 0EA9                             l202 0216  
                           l123 0590                             l107 04C8  
                           l203 0248                             l131 03E0  
                           l220 02D4                             l124 05A0  
                           l116 051F                             l108 04EB  
                           l204 0237                             l140 040F  
                           l132 036F                             l221 0272  
                           l117 0509                             l109 04DF  
                           l205 0243                             l133 0386  
                           l302 01ED                             l310 01E3  
                           l230 02B7                             l222 027F  
                           l118 052C                             l206 0238  
                           l142 043E                             l311 01C6  
                           l303 01A4                             l231 02CD  
                           l223 02C4                             l119 0520  
                           l207 0248                             l143 0416  
                           l135 03C5                             l400 07A9  
                           l312 01D6                             l304 01AD  
                           l224 0298                             l216 0FFF  
                           l208 0257                             l144 0428  
                           l136 0391                             l401 07BA  
                           l313 01EC                             l305 01E3  
                           l225 028D                             l241 0E60  
                           l217 0FBD                             l137 03B7  
                           l402 07AA                             l306 01C2  
                           l226 029C                             l242 0E5F  
                           l218 0FD7                             l146 0468  
                           l138 03D9                             l314 0EF6  
                           l403 07C8                             l307 01B7  
                           l219 0FF8                             l147 0440  
                           l139 0483                             l315 0EDA  
                           l404 07D6                             l308 01C6  
                           l228 02C4                             l148 0452  
                           l229 029C                             l149 047C  
                           l266 0138                             l267 0112  
                           l268 0123                             l197 0260  
                           _CM0 04E0                             l390 0192  
                           l198 0228                             _CM1 04E1  
                           l391 0165                             _CM2 04E2  
                           l392 0186                             l393 07EE  
                           l394 074C                             l395 075F  
                           l396 074D                             l397 0773  
                           l398 0795                             l399 0774  
                           _CKE 04A6                             _IBF 044F  
                           _CIS 04E3                        ___awtoft 0FB0  
                           _CKP 00A4                             _GIE 005F  
                           _BOR 0470                             _RA0 0028  
                      ___ftpack 0729                             _RA1 0029  
                           _RB0 0030                             _RA2 002A  
                           _RB1 0031                             _RA3 002B  
                           _RC0 0038                             _RB2 0032  
                           _RA4 002C                             _RC1 0039  
                           _RB3 0033                             _RA5 002D  
                           _RD0 0040                             _RC2 003A  
                           _RB4 0034                             _RD1 0041  
                           _RC3 003B                             _RB5 0035  
                           _RE0 0048                             _RD2 0042  
                           _RC4 003C                             _RB6 0036  
                           _RE1 0049                             _RD3 0043  
                           _RC5 003D                             _RB7 0037  
                           _RE2 004A                             _RD4 0044  
                           _RC6 003E                             _RD5 0045  
                           _RC7 003F                             _RD6 0046  
                           _OBF 044E                             _RD7 0047  
                           _FSR 0004                             _PCL 0002  
                           _PS0 0408                             _PR2 0092  
                           _PS1 0409                             _RP0 001D  
                           _PS2 040A                             _PEN 048A  
                           _IRP 001F                             _RP1 001E  
                           _SEN 0488                             _PSA 040B  
                           _POR 0471                             _RX9 00C6  
                           _SMP 04A7                             _TX9 04C6  
                     l600000815 0408                       l600000817 04DE  
                     l600000818 051F                       l600000819 0740  
                     ?___awtoft 003F                       ?___ftpack 0051  
                           fsr0 0004                             indf 0000  
                      ___lwtoft 0ECD                         ??_Delay 004E  
                     ?___lwtoft 0030                      ??___awtoft 0042  
                    ??___ftpack 0052                     _Delay_pause 004E  
                    ??___lwtoft 0033                            _ADIE 0466  
                          _ADIF 0066                            _ADFM 04FF  
                          _ADGO 00FA                        __tempreg 0020  
                          _ADON 00F8                            _CHS0 00FB  
                          _CHS1 00FC                            _CHS2 00FD  
                          _EEIE 046C                            _EEIF 006C  
                          STR_1 070F                            STR_2 0720  
                          STR_3 0721                            _GCEN 048F  
                          _CMIE 046E                            _CMIF 006E  
                          _BRGH 04C2                            _T0IE 005D  
                          _T0IF 005A                            _CREN 00C4  
                          _T0CS 040D                            _FERR 00C2  
                          _IBOV 044D                            _CVR0 04E8  
                          _CVR1 04E9                            _CVR2 04EA  
                          _CVR3 04EB                            u3010 0FB6  
                          _T0SE 040C                            _CSRC 04C7  
                          u3011 0FB5                            u3100 04D8  
                          u3020 0FCF                            u3101 04D7  
                          u3021 0FCE                            _INDF 0000  
                          u3110 04DE                            u3030 0FE5  
                          u3111 04DD                            u3031 0FE4  
                          u3007 0134                            u3200 0532  
                          u3040 0E5D                            u3008 0136  
                          u3201 0531                            u3041 0E5C  
                          u3009 0137                            u3210 0536  
                          u3130 04F1                            u3050 0495  
                          u3131 04F0                            u3051 0494  
                          u3220 054E                            u3140 04F8  
                          u3060 04AB                            u3141 04F7  
                          u3125 04E0                            u3310 02AD  
                          u3230 0579                            u3150 0502  
                          u3070 04B3                            u2510 0FA9  
                          u3311 02AC                            u3231 0578  
                          u3151 0501                            u3071 04B2  
                          u2511 0FA8                            u3400 01D0  
                          u3240 059E                            u3080 04BD  
                          u2600 02DE                            u2520 05BC  
                          u3401 01CF                            u3305 029D  
                          u3081 04BC                            u2601 02DD  
                          u2521 05BB                            u3330 02C4  
                          u3250 026A                            u3170 0519  
                          u2610 02F1                            u2530 06A7  
                          u3331 02C3                            u3315 02A9  
                          u3251 0269                            u3171 0518  
                          u2611 02F0                            u2531 06A6  
                          u3420 01E3                            u3340 02C8  
                          u3260 0276                            u3180 051F  
                          u2620 033C                            u2540 06BE  
                          u2700 0ED3                            u3421 01E2  
                          u3405 01CC                            u3325 02B8  
                          u3261 0275                            u3181 051E  
                          u3165 050A                            u2621 033B  
                          u2541 06BD                            u2701 0ED2  
                          u3510 07C8                            u3430 01E7  
                          u3350 019C                            u3270 0289  
                          u2630 0351                            u2710 0368  
                          u2550 06CB                            _PIE1 008C  
                          u3511 07C7                            u3415 01D7  
                          u3351 019B                            u3271 0288  
                          u3095 04C9                            u2631 0350  
                          u2711 0367                            u2551 06CA  
                          _PIE2 008D                            u2640 0E80  
                          u3520 07CC                            u3440 072E  
                          u3360 01A8                            u2800 041A  
                          u2720 037F                            u2560 06E6  
                          u2641 0E7F                            u3521 07CB  
                          u3505 07AF                            u3361 01A7  
                          u2801 0419                            u2721 037E  
                          u2561 06E5                            u2650 0E8C  
                          u3530 07E1                            u3450 0740  
                          u3370 01B3                            u3290 029C  
                          u2570 06F3                            u2490 0062  
                          u2651 0E8B                            u3451 073F  
                          u3371 01B2                            u3291 029B  
                          u3195 0521                            u2571 06F2  
                          u2491 0061                            u3540 014A  
                          u2900 020D                            u2740 03A7  
                          u2660 0EFF                            u3285 028E  
                          u2901 020C                            u2741 03A6  
                          u2661 0EFE                            _CVRR 04ED  
                          u3550 0159                            u3470 0773  
                          u3390 01C6                            u2590 0ECC  
                          u2830 043E                            u3551 0158  
                          u3535 07DD                            u3471 0772  
                          u3391 01C5                            u2591 0ECB  
                          u2831 043D                            u2815 0429  
                          u2735 0392                            u3560 0182  
                          u2920 0227                            u2840 0444  
                          u2760 03C5                            u2585 0F5E  
                          u3561 0181                            u3545 0146  
                          u3465 0755                            u3385 01B8  
                          u2921 0226                            u2841 0443  
                          u2825 0431                            u2761 03C4  
                          u2745 03A3                            u3490 07A9  
                          u2930 022E                            u2770 03D3  
                          u2690 0F19                            _PEIE 005E  
                          u3491 07A8                            u2931 022D  
                          u2915 0217                            u2755 03B8  
                          u2691 0F18                            u2675 0F06  
                          u2780 0403                            _INTE 005C  
                          u3485 078B                            u2685 0F0D  
                          _INTF 0059                            u2950 0248  
                          u2870 0468                            u2790 0408  
                          _RBIE 005B                            u2951 0247  
                          u2871 0467                            u2855 0453  
                          u2791 0407                            _RBIF 0058  
                          u2960 024C                            u2880 0476  
                          u2945 023A                            u2865 045B  
                          u2970 0105                            u2890 0206  
                          _RCIE 0465                            u2971 0104  
                          u2891 0205                            _RCIF 0065  
                          _RCEN 048B                            u2980 0116  
                          u2981 0115                            _PCON 008E  
                          _PIR1 000C                            _PIR2 000D  
                          u2995 0131                            _OERR 00C1  
                          _RBPU 040F                            _RX9D 00C0  
                          _TMR0 0001                            _TMR2 0011  
                          _WCOL 00A7                            _SPEN 00C7  
                          _RSEN 0489                       __databank FFFFFFFF  
                          _TX9D 04C0                            _SREN 00C5  
                          _TRMT 04C1                            _STOP 04A4  
                          _ZERO 001A                            _TXIE 0464  
                          _WREN 0C62                            _TXIF 0064  
                          _TXEN 04C5                            _SYNC 04C4  
                          _main 0018                            btemp 007E  
              __end_of_LCDReset 0E74                            start 0000  
                  ___awdiv_sign 004E                 _LCDWriteCommand 0E4B  
               _LCDWriteFloat_c 0038                 _LCDWriteFloat_i 0033  
               _LCDWriteFloat_n 0036                 ___awmod_divisor 004B  
                  ___ftadd_exp1 004F                    ___ftadd_exp2 004E  
               ___awmod_counter 004E                    ___ftadd_cntr 004C  
               _LCDWriteInteger 02D5                ?_LCDWriteCommand 003F  
                       ?___ftge 003F                        ??___ftge 0045  
                       ?___wmul 0030                    ___awmod_sign 004D  
               __end_of___awdiv 02D5                 __end_of___ftadd 05A2  
                      ??___wmul 0034                 __end_of___awmod 01EE  
              ?_LCDWriteInteger 003F                       stringcode 0708  
               __end_of___ftdiv 03E1                 __end_of___ftneg 0E61  
               __end_of___ftmul 0484                 __end_of___ftsub 0EAA  
               __end_of___fttol 0261                   __end_of_Delay 0E8D  
                       _CCP1CON 0017                         _CCP2CON 001D  
                    ___ftadd_f1 0045                      ___ftadd_f2 0048  
                 _LCDWriteFloat 05A2                         _ACKSTAT 048E  
                         _C1INV 04E4                      ___ftge_ff1 003F  
                    ___ftge_ff2 0042                           _C2INV 04E5  
                         _C1OUT 04E6                           _C2OUT 04E7  
                         _ADCS0 00FE                           _ADCS1 00FF  
                         _ADCS2 04FE                           _ADDEN 00C3  
                         ?_main 0020                           _ACKEN 048C  
                         _ACKDT 048D                           _BCLIE 046B  
                         _BCLIF 006B                           _CCP1X 00BD  
                         _CCP1Y 00BC                           _CCP2X 00ED  
                         _CCP2Y 00EC                      ___ftdiv_f1 0030  
                    ___ftdiv_f2 0033                      ___ftdiv_f3 003A  
                         _EEADR 010D               ??_LCDWriteCommand 003F  
                  ___ftdiv_exp1 0038                    ___ftdiv_exp2 0036  
                         _CARRY 0018                           _EEPGD 0C67  
                         _CMCON 009C                           _T1CON 0010  
                         _T2CON 0012                      ___ftneg_f1 0048  
                       _T1CKPS0 0084                         _T1CKPS1 0085  
                    ___awtoft_c 003F                           u25310 06A3  
                         u26210 0338                           u25315 06A1  
                         _PCFG0 04F8                           u25510 06C7  
                         _PCFG1 04F9                           u26215 0336  
                         _PCFG2 04FA                           _PCFG3 04FB  
                         u25610 06E2                           u25515 06C5  
                         u25710 06EF                           u25615 06E0  
                         u25715 06ED                         _T2CKPS0 0090  
                       _T2CKPS1 0091                           _CVREN 04EF  
                         _CVROE 04EE                  ?_LCDInitialize 0030  
     _LCDWriteString_lcd_string 003F                           _RCREG 001A  
                         _RCSTA 0018                           _TMR1H 000F  
                         _TMR1L 000E                           _SPBRG 0099  
                         _PORTA 0005                           _PORTB 0006  
                       _T1OSCEN 0083                           _PORTC 0007  
                         _PORTD 0008                           _PORTE 0009  
                         _PSPIE 0467                           _PSPIF 0067  
                         _START 04A3                           _SSPM0 00A0  
                         _SSPM1 00A1                           _SSPM2 00A2  
                         _SSPM3 00A3                           _TRISA 0085  
                         _TRISB 0086                           _TRISC 0087  
                    ___ftmul_f1 003F                           _TRISD 0088  
                    ___ftmul_f2 0042                           _SSPIE 0463  
                         _TRISE 0089                      ___ftmul_f3 0048  
                         _SSPIF 0063                           _SSPEN 00A5  
                         _SSPOV 00A6               ??_LCDWriteInteger 0041  
                         _WRERR 0C63                 ??_LCDInitialize 0030  
                         _TXREG 0019                           _TXSTA 0098  
                    ___ftsub_f1 003F                      ___ftsub_f2 0042  
                         _Delay 0E74                      ___fttol_f1 003F  
                  ___ftpack_arg 0052                    ___ftpack_exp 0051  
                    ___ftunpack 0139              __end_of___ftunpack 0193  
         __end_of_LCDWriteFloat 0700                         _PSPMODE 044C  
                       _SSPCON2 0091                       _LCDEnable 07EF  
                ??_LCDWriteData 0049               __end_of_LCDEnable 07FD  
                ??_LCDWriteByte 004A   _LCDWriteInteger_IntegerNumber 003F  
                       _SSPSTAT 0094                         _TOUTPS0 0093  
                       _TOUTPS1 0094                         _TOUTPS2 0095  
                       _TOUTPS3 0096                      ___lwtoft_c 0030  
                         pclath 000A                    ___ftmul_exp1 0046  
                   ?___ftunpack 0051                    ___ftmul_cntr 0047  
                         ltemp0 007E                      ?_LCDEnable 004C  
                         ttemp0 007E                           status 0003  
          _MainSystemInitialize 00FB                           wtemp0 007E  
                         wtemp1 0080               ___wmul_multiplier 0030  
                  ___fttol_exp1 0044                    ___fttol_lval 0045  
         ?_MainSystemInitialize 0030                ___awmod_dividend 0049  
          _LCDWriteData_LCDData 0049                     ??_LCDEnable 004C  
                 ___ftadd_sign1 004D                   ___ftadd_sign2 004B  
        ??_MainSystemInitialize 0030                ___awdiv_dividend 0049  
                   __stringbase 070E  __end_of_LCDDisplayInitializing 0FB0  
                       ___awdiv 0261                         ___ftadd 0484  
                       ___awmod 0193                         ___ftdiv 0352  
                       ___ftneg 0E56                         ___ftmul 03E1  
                       ___ftsub 0E8D                         ___fttol 01EE  
                      ?___awdiv 0049                        ?___ftadd 0045  
                      ?___awmod 0049                        ?___ftdiv 0030  
                      ?___ftneg 0048                        ?___ftmul 003F  
                      ?___ftsub 003F                        ?___fttol 003F  
       __end_of_LCDWriteCommand 0E56                    ??___ftunpack 0052  
                ___wmul_product 0034                       ??___awdiv 004D  
                     ??___ftadd 004B                       ??___awmod 004D  
                     ??___ftdiv 0036                       ??___ftneg 004B  
                     ??___ftmul 0045                       ??___ftsub 0045  
                     ??___fttol 0043                      _Delay_time 004C  
                        ??_main 0020         __end_of_LCDWriteInteger 0352  
              __end_of___awtoft 1000                __end_of___ftpack 07EF  
              __end_of___lwtoft 0EF7                          ?_Delay 004C  
     _LCDWriteFloat_FloatNumber 0030                  __end_of___ftge 0139  
                      stringdir 0709                        stringjmp 070D  
                      stringtab 0700                          _ADCON0 001F  
                        _ADCON1 009F                    _LCDWriteData 0E40  
                        _CCP1M0 00B8                          _CCP1M1 00B9  
                        _CCP1M2 00BA                          _CCP1M3 00BB  
                        _CCP2M0 00E8                          _CCP2M1 00E9  
                        _CCP2M2 00EA                          _CCP2M3 00EB  
                        _CCP1IE 0462                          _CCP1IF 0062  
                        _CCP2IE 0468                          _CCP2IF 0068  
                __end_of___wmul 0F21                    _LCDWriteByte 0F4C  
                _LCDWriteString 0EAA                          _ADRESH 001E  
                        _EEADRH 010F                          _ADRESL 009E  
                        _EEADRL 010D                          _EEDATA 010C  
                        _CCPR1H 0016                          _EEDATH 010E  
                        _CCPR2H 001C                          _CCPR1L 0015  
                        _CCPR2L 001B                          _EECON1 018C  
                        _EECON2 018D    __end_of_MainSystemInitialize 0101  
                  __end_of_main 00F8                ___awdiv_quotient 004F  
                 ___ftdiv_sign1 0037                   ___ftdiv_sign2 0039  
               ?_LCDWriteString 003F                     ___awtoft_f1 0042  
                        _GODONE 00FA                          _CVRCON 009D  
                        _T1SYNC 0082                          _INTEDG 040E  
                        _PCLATH 000A                          _INTCON 000B  
          __end_of_LCDWriteData 0E4B            __end_of_LCDWriteByte 0F78  
        _LCDDisplayInitializing 0F78                          _TMR0IE 005D  
                        _TMR0IF 005A                          _TMR1IE 0460  
                        _TMR1IF 0060                          _TMR1CS 0081  
                        _TMR2IE 0461                          _TMR2IF 0061  
                        _TMR1ON 0080                          _OPTION 0081  
       _LCDWriteCommand_LCDData 003F                          _TMR2ON 0092  
                        _SSPADD 0093                          _TRISA0 0428  
              ??_LCDWriteString 003F                          _TRISA1 0429  
                        _TRISB0 0430                          _TRISA2 042A  
                        _TRISB1 0431                          _TRISA3 042B  
                        _TRISC0 0438                          _TRISB2 0432  
                        _TRISA4 042C                          _TRISC1 0439  
                        _TRISB3 0433                          _TRISA5 042D  
                        _TRISD0 0440                          _TRISC2 043A  
                        _TRISB4 0434                          _TRISD1 0441  
                        _TRISC3 043B                          _TRISB5 0435  
                        _TRISE0 0448                          _TRISD2 0442  
                        _TRISC4 043C                          _TRISB6 0436  
                        _TRISE1 0449                          _TRISD3 0443  
                        _TRISC5 043D                          _TRISB7 0437  
                        _TRISE2 044A                          _TRISD4 0444  
                        _TRISC6 043E                          _TRISD5 0445  
                        _TRISC7 043F                          _TRISD6 0446  
                        _TRISD7 0447                          _STATUS 0003  
                        _SSPCON 0014                          _SSPBUF 0013  
                      _LCDReset 0E61                       ?_LCDReset 0031  
               ___awdiv_divisor 004B                      ??_LCDReset 0031  
                        ___ftge 0101                 ___awdiv_counter 004D  
       ?_LCDDisplayInitializing 0030                          ___wmul 0EF7  
      _LCDDisplayInitializing_i 0030                          _main_c 0026  
                        _main_f 0028                          _main_p 002B  
                        _main_x 0022                          _main_y 0024  
                        _main_z 0020                 ___ftunpack_sign 0053  
                ?_LCDWriteFloat 0030          __end_of_LCDWriteString 0ECD  
           ___wmul_multiplicand 0032                   _LCDInitialize 0F21  
               ??_LCDWriteFloat 0033            _LCDWriteByte_LCDData 004A  
                   ___lwtoft_f1 0033                   ___ftmul_sign1 0045  
                ___ftunpack_arg 0052                  ___ftunpack_exp 0051  
                 ?_LCDWriteData 0049              _LCDWriteFloat_Temp 0034  
                 ?_LCDWriteByte 004A           __end_of_LCDInitialize 0F4C  
                 ___fttol_sign1 0043        ??_LCDDisplayInitializing 0030  
                     __Hrdata_0 007E                       __Hramdata 007E  
