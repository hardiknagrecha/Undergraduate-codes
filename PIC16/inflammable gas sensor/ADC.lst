

HI-TECH Software PICC Macro Assembler V9.65PL1 build 4898 
                                                      Sat Oct 20 12:46:24 2012

HI-TECH Software Omniscient Code Generator build 4898
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code 
                                 Generator build 4898"
     2                           
     3                           	processor	16F877A
     4                           clrc	macro
     5                           	bcf	status,0
     6  0000                     	endm
     7                           clrz	macro
     8                           	bcf	status,2
     9  0000                     	endm
    10                           setc	macro
    11                           	bsf	status,0
    12  0000                     	endm
    13                           setz	macro
    14                           	bsf	status,2
    15  0000                     	endm
    16                           skipc	macro
    17                           	btfss	status,0
    18  0000                     	endm
    19                           skipz	macro
    20                           	btfss	status,2
    21  0000                     	endm
    22                           skipnc	macro
    23                           	btfsc	status,0
    24  0000                     	endm
    25                           skipnz	macro
    26                           	btfsc	status,2
    27  0000                     	endm
    28  0000                     indf	equ	0
    29  0000                     indf0	equ	0
    30  0000                     pc	equ	2
    31  0000                     pcl	equ	2
    32  0000                     status	equ	3
    33  0000                     fsr	equ	4
    34  0000                     fsr0	equ	4
    35  0000                     c	equ	1
    36  0000                     z	equ	0
    37  0000                     pclath	equ	10
    38                           # 14 "C:\Users\hardik\Desktop\new\main.h"
    39                           	psect config,class=CONFIG,delta=2 ;#
    40                           # 14 "C:\Users\hardik\Desktop\new\main.h"
    41  2007  2F0A               	dw 0x2F0A ;#
    42                           	FNCALL _LCDWriteString,stringtab
    43                           	FNCALL _LCDWriteString,stringtab
    44                           	FNCALL _LCDWriteString,stringtab
    45                           	FNCALL _LCDWriteString,stringtab
    46                           	FNCALL _LCDWriteString,stringtab
    47                           	FNCALL _LCDWriteString,stringtab
    48                           global __tempreg
    49  0000                     __tempreg	set	32
    50                           global __Lrdata_0, __Hrdata_0
    51  0000                     __Lrdata_0	equ	0x78
    52  0000                     __Hrdata_0	equ	0x7E
    53                           global __Lramdata, __Lrdata_0, __Hramdata, __Hr
                                 data_0
    54  0000                     __Lramdata	set	__Lrdata_0
    55  0000                     __Hramdata	set	__Hrdata_0
    56                           	GLOBAL	__databank
    57  0000                     __databank	EQU	-1
    58                           	FNCALL _LCDWriteString,stringtab
    59                           	FNCALL _LCDWriteString,stringtab
    60                           	FNCALL _LCDWriteString,stringtab
    61                           	FNCALL _LCDWriteString,stringtab
    62                           	FNCALL _LCDWriteString,stringtab
    63                           	FNCALL _LCDWriteString,stringtab
    64                           	FNCALL _LCDWriteString,stringtab
    65                           	FNCALL _LCDWriteString,stringtab
    66  0000                     _main_z	equ	??_main+0
    67                           	global	_main_z
    68  0000                     _main_x	equ	??_main+2
    69                           	global	_main_x
    70  0000                     _main_y	equ	??_main+4
    71                           	global	_main_y
    72  0000                     _main_c	equ	??_main+6
    73                           	global	_main_c
    74  0000                     _main_f	equ	??_main+8
    75                           	global	_main_f
    76  0000                     _main_p	equ	??_main+11
    77                           	global	_main_p
    78  0000                     _main_r	equ	??_main+14
    79                           	global	_main_r
    80  0000                     _main_volt	equ	??_main+17
    81                           	global	_main_volt
    82  0000                     _main_q	equ	??_main+20
    83                           	global	_main_q
    84  0000                     ___wmul_product	equ	??___wmul+0
    85                           	global	___wmul_product
    86  0000                     ___wmul_multiplier	equ	?___wmul+0
    87                           	global	___wmul_multiplier
    88  0000                     ___wmul_multiplicand	equ	?___wmul+2
    89                           	global	___wmul_multiplicand
    90  0000                     _LCDDisplayInitializing_i	equ	??_LCDDisplayInit
                                 ializing+0
    91                           	global	_LCDDisplayInitializing_i
    92  0000                     ___lwtoft_f1	equ	??___lwtoft+0
    93                           	global	___lwtoft_f1
    94  0000                     ___lwtoft_c	equ	?___lwtoft+0
    95                           	global	___lwtoft_c
    96  0000                     _LCDWriteFloat_i	equ	??_LCDWriteFloat+0
    97                           	global	_LCDWriteFloat_i
    98  0000                     _LCDWriteFloat_Temp	equ	??_LCDWriteFloat+1
    99                           	global	_LCDWriteFloat_Temp
   100  0000                     _LCDWriteFloat_n	equ	??_LCDWriteFloat+3
   101                           	global	_LCDWriteFloat_n
   102  0000                     _LCDWriteFloat_c	equ	??_LCDWriteFloat+5
   103                           	global	_LCDWriteFloat_c
   104  0000                     _LCDWriteFloat_FloatNumber	equ	?_LCDWriteFloat+
                                 0
   105                           	global	_LCDWriteFloat_FloatNumber
   106  0000                     ___ftdiv_exp2	equ	??___ftdiv+0
   107                           	global	___ftdiv_exp2
   108  0000                     ___ftdiv_sign1	equ	??___ftdiv+1
   109                           	global	___ftdiv_sign1
   110  0000                     ___ftdiv_exp1	equ	??___ftdiv+2
   111                           	global	___ftdiv_exp1
   112  0000                     ___ftdiv_sign2	equ	??___ftdiv+3
   113                           	global	___ftdiv_sign2
   114  0000                     ___ftdiv_f3	equ	??___ftdiv+4
   115                           	global	___ftdiv_f3
   116  0000                     ___ftdiv_f1	equ	?___ftdiv+0
   117                           	global	___ftdiv_f1
   118  0000                     ___ftdiv_f2	equ	?___ftdiv+3
   119                           	global	___ftdiv_f2
   120  0000                     _LCDWriteInteger_i	equ	??_LCDWriteInteger+0
   121                           	global	_LCDWriteInteger_i
   122  0000                     _LCDWriteInteger_c	equ	??_LCDWriteInteger+1
   123                           	global	_LCDWriteInteger_c
   124  0000                     _LCDWriteInteger_IntegerNumber	equ	?_LCDWriteIn
                                 teger+0
   125                           	global	_LCDWriteInteger_IntegerNumber
   126  0000                     ___fttol_sign1	equ	??___fttol+0
   127                           	global	___fttol_sign1
   128  0000                     ___fttol_exp1	equ	??___fttol+1
   129                           	global	___fttol_exp1
   130  0000                     ___fttol_lval	equ	??___fttol+2
   131                           	global	___fttol_lval
   132  0000                     ___fttol_f1	equ	?___fttol+0
   133                           	global	___fttol_f1
   134  0000                     ___ftmul_sign1	equ	??___ftmul+0
   135                           	global	___ftmul_sign1
   136  0000                     ___ftmul_exp1	equ	??___ftmul+1
   137                           	global	___ftmul_exp1
   138  0000                     ___ftmul_cntr	equ	??___ftmul+2
   139                           	global	___ftmul_cntr
   140  0000                     ___ftmul_f3	equ	??___ftmul+3
   141                           	global	___ftmul_f3
   142  0000                     ___ftmul_f1	equ	?___ftmul+0
   143                           	global	___ftmul_f1
   144  0000                     ___ftmul_f2	equ	?___ftmul+3
   145                           	global	___ftmul_f2
   146  0000                     ___ftge_ff1	equ	?___ftge+0
   147                           	global	___ftge_ff1
   148  0000                     ___ftge_ff2	equ	?___ftge+3
   149                           	global	___ftge_ff2
   150  0000                     ___awtoft_f1	equ	??___awtoft+0
   151                           	global	___awtoft_f1
   152  0000                     ___awtoft_c	equ	?___awtoft+0
   153                           	global	___awtoft_c
   154  0000                     _LCDWriteString_lcd_string	equ	??_LCDWriteStrin
                                 g+0
   155                           	global	_LCDWriteString_lcd_string
   156  0000                     ___ftsub_f1	equ	?___ftsub+0
   157                           	global	___ftsub_f1
   158  0000                     ___ftsub_f2	equ	?___ftsub+3
   159                           	global	___ftsub_f2
   160  0000                     ___ftadd_sign2	equ	??___ftadd+0
   161                           	global	___ftadd_sign2
   162  0000                     ___ftadd_cntr	equ	??___ftadd+1
   163                           	global	___ftadd_cntr
   164  0000                     ___ftadd_sign1	equ	??___ftadd+2
   165                           	global	___ftadd_sign1
   166  0000                     ___ftadd_exp2	equ	??___ftadd+3
   167                           	global	___ftadd_exp2
   168  0000                     ___ftadd_exp1	equ	??___ftadd+4
   169                           	global	___ftadd_exp1
   170  0000                     ___ftadd_f1	equ	?___ftadd+0
   171                           	global	___ftadd_f1
   172  0000                     ___ftadd_f2	equ	?___ftadd+3
   173                           	global	___ftadd_f2
   174  0000                     ___ftneg_f1	equ	?___ftneg+0
   175                           	global	___ftneg_f1
   176  0000                     _LCDWriteData_LCDData	equ	??_LCDWriteData+0
   177                           	global	_LCDWriteData_LCDData
   178  0000                     ___awdiv_counter	equ	??___awdiv+0
   179                           	global	___awdiv_counter
   180  0000                     ___awdiv_sign	equ	??___awdiv+1
   181                           	global	___awdiv_sign
   182  0000                     ___awdiv_quotient	equ	??___awdiv+2
   183                           	global	___awdiv_quotient
   184  0000                     ___awdiv_dividend	equ	?___awdiv+0
   185                           	global	___awdiv_dividend
   186  0000                     ___awdiv_divisor	equ	?___awdiv+2
   187                           	global	___awdiv_divisor
   188  0000                     ___awmod_sign	equ	??___awmod+0
   189                           	global	___awmod_sign
   190  0000                     ___awmod_counter	equ	??___awmod+1
   191                           	global	___awmod_counter
   192  0000                     ___awmod_dividend	equ	?___awmod+0
   193                           	global	___awmod_dividend
   194  0000                     ___awmod_divisor	equ	?___awmod+2
   195                           	global	___awmod_divisor
   196  0000                     _LCDWriteCommand_LCDData	equ	??_LCDWriteCommand
                                 +0
   197                           	global	_LCDWriteCommand_LCDData
   198  0000                     ___ftpack_arg	equ	??___ftpack+0
   199                           	global	___ftpack_arg
   200  0000                     ___ftpack_exp	equ	?___ftpack+0
   201                           	global	___ftpack_exp
   202  0000                     ___ftunpack_arg	equ	??___ftunpack+0
   203                           	global	___ftunpack_arg
   204  0000                     ___ftunpack_sign	equ	??___ftunpack+1
   205                           	global	___ftunpack_sign
   206  0000                     ___ftunpack_exp	equ	?___ftunpack+0
   207                           	global	___ftunpack_exp
   208  0000                     _LCDWriteByte_LCDData	equ	??_LCDWriteByte+0
   209                           	global	_LCDWriteByte_LCDData
   210  0000                     _Delay_pause	equ	??_Delay+0
   211                           	global	_Delay_pause
   212  0000                     _Delay_time	equ	?_Delay+0
   213                           	global	_Delay_time
   214                           ;Data sizes: Strings 72, constant 0, data 6, bs
                                 s 0, persistent 0 stack 65
   215                           	global	_main
   216                           	global	??_main
   217                           	global	?_main
   218                           
   219                           ; *************** function _main **************
                                 *
   220                           ; Defined at:
   221                           ;		line 6 in file "C:\Users\hardik\Desktop\new\
                                 main.c"
   222                           ; Parameters:
   223                           ;		None
   224                           ; Auto variables:
   225                           ;		Count       	       	type: unsigned char 
   226                           ;		temp        	       	type: unsigned int 
   227                           ;		y           	       	type: unsigned int 
   228                           ;		c           	       	type: unsigned int 
   229                           ;		z           	       	type: unsigned int 
   230                           ;		x           	       	type: unsigned int 
   231                           ;		check       	       	type: float 
   232                           ;		g           	       	type: float 
   233                           ;		f           	       	type: float 
   234                           ;		p           	       	type: float 
   235                           ;		volt        	       	type: float 
   236                           ;		r           	       	type: float 
   237                           ;		q           	       	type: float 
   238                           ; Return value:
   239                           ;		type: void 
   240                           ;		size: 0
   241                           ; Registers used:
   242                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
                                 th, cstack
   243                           ; Tracked objects:
   244                           ;		On entry : BFF/0
   245                           ;		On exit  : 0/0
   246                           ;		Unchanged: 0/0
   247                           ; Data sizes:
   248                           ;		Autos:   23
   249                           ;		Params:   0
   250                           ;		Temp:     2
   251                           ;		Total:   25
   252                           ; This function calls:
   253                           ;		_MainSystemInitialize
   254                           ;		_LCDDisplayInitializing
   255                           ;		_LCDWriteCommand
   256                           ;		_LCDWriteString
   257                           ;		___ftge
   258                           ;		_Delay
   259                           ;		___wmul
   260                           ;		___lwtoft
   261                           ;		___ftmul
   262                           ;		___ftdiv
   263                           ;		___ftadd
   264                           ;		_LCDWriteFloat
   265                           ; This function is called by:
   266                           ;		Startup code after reset
   267                           ; This function uses a non-reentrant model
   268                           ; 
   269                           	psect	maintext,class=CODE,delta=2
   270                           	file	"C:\Users\hardik\Desktop\new\main.c"
   271                           	line	6
   272                           	psect	maintext
   273                           ;main.c: 3: int i=48,j=48,k=48;
   274                           ;main.c: 5: void main(void)
   275                           ;main.c: 6: {
   276                           	
   277  0018                     _main:	
   278                           	opt stack 7
   279                           ; Regs used in _main: [wreg-fsr0h+status,2+stat
                                 us,0+pclath+cstack]
   280                           	line	8
   281                           ;main.c: 7: unsigned char Count;
   282                           ;main.c: 8: unsigned int z,temp,x,y,c=0xff;
   283  0018  30FF               	movlw	low(0FFh)
   284                           	
   285  0019  00A6               	movwf	(_main_c)
   286  001A  3000               	movlw	high(0FFh)
   287  001B  00A7               	movwf	((_main_c))+1
   288                           	line	9
   289                           ;main.c: 9: float g,q,r,p=0,f,volt,check;
   290                           	
   291  001C  3000               	movlw	0x0
   292  001D  00AB               	movwf	(_main_p)
   293  001E  3000               	movlw	0x0
   294  001F  00AC               	movwf	(_main_p+1)
   295  0020  3000               	movlw	0x0
   296  0021  00AD               	movwf	(_main_p+2)
   297                           	line	10
   298                           ;main.c: 10: MainSystemInitialize();
   299  0022  120A  118A  21E8   	fcall	_MainSystemInitialize
              120A  118A         
   300                           	line	11
   301                           ;main.c: 11: LCDDisplayInitializing();
   302  0027  120A  158A  2668   	fcall	_LCDDisplayInitializing
              120A  118A         
   303                           	line	15
   304                           ;main.c: 15: TRISC=0;
   305  002C  1003               	clrc
   306  002D  1683               	bsf	status, 5	;RP0=1, select bank1
   307  002E  1303               	bcf	status, 6	;RP1=0, select bank1
   308                           	
   309  002F  3000               	movlw	0
   310  0030  1803               	btfsc	status,0
   311  0031  3001               	movlw	1
   312  0032  0087               	movwf	(135)^080h	;volatile
   313                           	line	16
   314                           ;main.c: 16: TRISD=0;
   315  0033  1003               	clrc
   316                           	
   317  0034  3000               	movlw	0
   318  0035  1803               	btfsc	status,0
   319  0036  3001               	movlw	1
   320  0037  0088               	movwf	(136)^080h	;volatile
   321                           	line	18
   322                           ;main.c: 18: ADON = 1;
   323  0038  1283               	bcf	status, 5	;RP0=0, select bank0
   324  0039  1303               	bcf	status, 6	;RP1=0, select bank0
   325  003A  141F               	bsf	(248/8),(248)&7
   326                           	line	19
   327                           ;main.c: 19: ADFM = 1;
   328  003B  1683               	bsf	status, 5	;RP0=1, select bank1
   329  003C  1303               	bcf	status, 6	;RP1=0, select bank1
   330  003D  179F               	bsf	(1279/8)^080h,(1279)&7
   331                           	line	20
   332                           ;main.c: 20: ADCS2 = ADCS0 = 0;
   333  003E  1283               	bcf	status, 5	;RP0=0, select bank0
   334  003F  1303               	bcf	status, 6	;RP1=0, select bank0
   335  0040  131F               	bcf	(254/8),(254)&7
   336  0041  1683               	bsf	status, 5	;RP0=1, select bank1
   337  0042  1303               	bcf	status, 6	;RP1=0, select bank1
   338  0043  131F               	bcf	(1278/8)^080h,(1278)&7
   339                           	line	21
   340                           ;main.c: 21: ADCS1 =0;
   341  0044  1283               	bcf	status, 5	;RP0=0, select bank0
   342  0045  1303               	bcf	status, 6	;RP1=0, select bank0
   343  0046  139F               	bcf	(255/8),(255)&7
   344                           	line	22
   345                           ;main.c: 22: PCFG3 = PCFG2 = PCFG1 =0;
   346  0047  1683               	bsf	status, 5	;RP0=1, select bank1
   347  0048  1303               	bcf	status, 6	;RP1=0, select bank1
   348  0049  109F               	bcf	(1273/8)^080h,(1273)&7
   349  004A  111F               	bcf	(1274/8)^080h,(1274)&7
   350  004B  119F               	bcf	(1275/8)^080h,(1275)&7
   351                           	line	23
   352                           ;main.c: 23: PCFG0 = 0;
   353  004C  101F               	bcf	(1272/8)^080h,(1272)&7
   354                           	line	26
   355                           ;main.c: 26: ADON=1;
   356  004D  1283               	bcf	status, 5	;RP0=0, select bank0
   357  004E  1303               	bcf	status, 6	;RP1=0, select bank0
   358  004F  141F               	bsf	(248/8),(248)&7
   359                           	line	28
   360                           ;main.c: 28: LCDWriteCommand(0x01);
   361  0050  3001               	movlw	(01h)
   362  0051  120A  158A  252D   	fcall	_LCDWriteCommand
              120A  118A         
   363                           	line	29
   364                           ;main.c: 29: LCDWriteString("the voltage is:");
   365  0056  3012               	movlw	((STR_4-__stringbase))&0ffh
   366  0057  120A  158A  259A   	fcall	_LCDWriteString
              120A  118A         
   367                           	line	31
   368                           ;main.c: 31: while(1)
   369                           	
   370  005C                     l50:	
   371                           	line	33
   372                           ;main.c: 32: {
   373                           ;main.c: 33: r=0;
   374  005C  1283               	bcf	status, 5	;RP0=0, select bank0
   375  005D  1303               	bcf	status, 6	;RP1=0, select bank0
   376                           	
   377  005E  3000               	movlw	0x0
   378  005F  00AE               	movwf	(_main_r)
   379  0060  3000               	movlw	0x0
   380  0061  00AF               	movwf	(_main_r+1)
   381  0062  3000               	movlw	0x0
   382  0063  00B0               	movwf	(_main_r+2)
   383                           	line	34
   384                           ;main.c: 34: volt=0;
   385                           	
   386  0064  3000               	movlw	0x0
   387  0065  00B1               	movwf	(_main_volt)
   388  0066  3000               	movlw	0x0
   389  0067  00B2               	movwf	(_main_volt+1)
   390  0068  3000               	movlw	0x0
   391  0069  00B3               	movwf	(_main_volt+2)
   392                           	line	35
   393                           ;main.c: 35: for(q=0;q<100;q++)
   394                           	
   395  006A  3000               	movlw	0x0
   396  006B  00B4               	movwf	(_main_q)
   397  006C  3000               	movlw	0x0
   398  006D  00B5               	movwf	(_main_q+1)
   399  006E  3000               	movlw	0x0
   400  006F  00B6               	movwf	(_main_q+2)
   401                           	
   402  0070  3000               	movlw	0x0
   403  0071  00CB               	movwf	(0+(?___ftge)+03h)
   404  0072  30C8               	movlw	0xc8
   405  0073  00CC               	movwf	(1+(?___ftge)+03h)
   406  0074  3042               	movlw	0x42
   407  0075  00CD               	movwf	(2+(?___ftge)+03h)
   408                           	
   409                           	
   410  0076  0834               	movf	(_main_q),w
   411  0077  00C8               	movwf	(?___ftge)
   412  0078  0835               	movf	(_main_q+1),w
   413  0079  00C9               	movwf	(?___ftge+1)
   414  007A  0836               	movf	(_main_q+2),w
   415  007B  00CA               	movwf	(?___ftge+2)
   416  007C  120A  158A  26A0   	fcall	___ftge
              120A  118A         
   417  0081  1C03               	btfss	status,0
   418  0082  2884               	goto	u2551
   419  0083  2885               	goto	u2550
   420  0084                     u2551:
   421  0084  2886               	goto	l52
   422  0085                     u2550:
   423  0085  2957               	goto	l53
   424                           	line	36
   425                           	
   426  0086                     l52:	
   427                           	line	37
   428                           ;main.c: 36: {
   429                           ;main.c: 37: Delay(1);
   430  0086  3001               	movlw	low(01h)
   431  0087  1283               	bcf	status, 5	;RP0=0, select bank0
   432  0088  1303               	bcf	status, 6	;RP1=0, select bank0
   433                           	
   434  0089  00D5               	movwf	(?_Delay)
   435  008A  3000               	movlw	high(01h)
   436  008B  00D6               	movwf	((?_Delay))+1
   437  008C  120A  158A  2564   	fcall	_Delay
              120A  118A         
   438                           	line	38
   439                           ;main.c: 38: ADCON0|=0x04;
   440  0091  1283               	bcf	status, 5	;RP0=0, select bank0
   441  0092  1303               	bcf	status, 6	;RP1=0, select bank0
   442                           	
   443  0093  151F               	bsf	(31)+(2/8),(2)&7	;volatile
   444                           	line	39
   445                           ;main.c: 39: while((ADCON0&0x02)==1);
   446  0094  2895               	goto	l55
   447                           	
   448  0095                     l55:	
   449                           	
   450  0095  081F               	movf	(31),w	;volatile
   451  0096  3902               	andlw	02h
   452  0097  3A01               	xorlw	01h
   453  0098  1903               	skipnz
   454  0099  289B               	goto	u2561
   455  009A  289C               	goto	u2560
   456  009B                     u2561:
   457  009B  2895               	goto	l55
   458  009C                     u2560:
   459                           	
   460  009C                     l57:	
   461                           	line	40
   462                           ;main.c: 40: PORTB=ADRESL;
   463  009C  1683               	bsf	status, 5	;RP0=1, select bank1
   464  009D  1303               	bcf	status, 6	;RP1=0, select bank1
   465                           	
   466  009E  081E               	movf	(158)^080h,w	;volatile
   467  009F  1283               	bcf	status, 5	;RP0=0, select bank0
   468  00A0  1303               	bcf	status, 6	;RP1=0, select bank0
   469                           	
   470  00A1  0086               	movwf	(6)	;volatile
   471                           	line	41
   472                           ;main.c: 41: PORTD=ADRESH;
   473                           	
   474  00A2  081E               	movf	(30),w	;volatile
   475                           	
   476  00A3  0088               	movwf	(8)	;volatile
   477                           	line	42
   478                           ;main.c: 42: x=ADRESH;
   479                           	
   480  00A4  081E               	movf	(30),w	;volatile
   481  00A5  00B7               	movwf	(??_main+23+0)
   482  00A6  01B8               	clrf	(??_main+23+0+1)
   483                           	
   484  00A7  0837               	movf	0+(??_main+23+0),w
   485  00A8  00A2               	movwf	(_main_x)
   486  00A9  0838               	movf	1+(??_main+23+0),w
   487  00AA  00A3               	movwf	(_main_x+1)
   488                           	line	43
   489                           ;main.c: 43: y=ADRESL;
   490  00AB  1683               	bsf	status, 5	;RP0=1, select bank1
   491  00AC  1303               	bcf	status, 6	;RP1=0, select bank1
   492                           	
   493  00AD  081E               	movf	(158)^080h,w	;volatile
   494  00AE  1283               	bcf	status, 5	;RP0=0, select bank0
   495  00AF  1303               	bcf	status, 6	;RP1=0, select bank0
   496  00B0  00B7               	movwf	(??_main+23+0)
   497  00B1  01B8               	clrf	(??_main+23+0+1)
   498                           	
   499  00B2  0837               	movf	0+(??_main+23+0),w
   500  00B3  00A4               	movwf	(_main_y)
   501  00B4  0838               	movf	1+(??_main+23+0),w
   502  00B5  00A5               	movwf	(_main_y+1)
   503                           	line	44
   504                           ;main.c: 44: z=(x*c)+y;
   505                           	
   506                           	
   507                           	
   508  00B6  0827               	movf	(_main_c+1),w
   509  00B7  01BC               	clrf	(1+(?___wmul)+02h)
   510  00B8  07BC               	addwf	(1+(?___wmul)+02h)
   511  00B9  0826               	movf	(_main_c),w
   512  00BA  01BB               	clrf	(0+(?___wmul)+02h)
   513  00BB  07BB               	addwf	(0+(?___wmul)+02h)
   514                           
   515                           	
   516                           	
   517  00BC  0823               	movf	(_main_x+1),w
   518  00BD  01BA               	clrf	(?___wmul+1)
   519  00BE  07BA               	addwf	(?___wmul+1)
   520  00BF  0822               	movf	(_main_x),w
   521  00C0  01B9               	clrf	(?___wmul)
   522  00C1  07B9               	addwf	(?___wmul)
   523                           
   524  00C2  120A  158A  25BD   	fcall	___wmul
              120A  118A         
   525  00C7  1283               	bcf	status, 5	;RP0=0, select bank0
   526  00C8  1303               	bcf	status, 6	;RP1=0, select bank0
   527  00C9  0824               	movf	(_main_y),w
   528  00CA  0739               	addwf	(0+?___wmul),w
   529                           	
   530  00CB  00A0               	movwf	(_main_z)
   531  00CC  0825               	movf	(_main_y+1),w
   532  00CD  1803               	skipnc
   533  00CE  0A25               	incf	(_main_y+1),w
   534  00CF  073A               	addwf	(1+?___wmul),w
   535  00D0  00A1               	movwf	1+(_main_z)
   536                           	line	45
   537                           ;main.c: 45: f=z;
   538                           	
   539                           	
   540  00D1  0821               	movf	(_main_z+1),w
   541  00D2  01BA               	clrf	(?___lwtoft+1)
   542  00D3  07BA               	addwf	(?___lwtoft+1)
   543  00D4  0820               	movf	(_main_z),w
   544  00D5  01B9               	clrf	(?___lwtoft)
   545  00D6  07B9               	addwf	(?___lwtoft)
   546                           
   547  00D7  120A  158A  25E7   	fcall	___lwtoft
              120A  118A         
   548  00DC  1283               	bcf	status, 5	;RP0=0, select bank0
   549  00DD  1303               	bcf	status, 6	;RP1=0, select bank0
   550                           	
   551  00DE  0839               	movf	(0+?___lwtoft),w
   552  00DF  00A8               	movwf	(_main_f)
   553  00E0  083A               	movf	(1+?___lwtoft),w
   554  00E1  00A9               	movwf	(_main_f+1)
   555  00E2  083B               	movf	(2+?___lwtoft),w
   556  00E3  00AA               	movwf	(_main_f+2)
   557                           	line	46
   558                           ;main.c: 46: p =(f*5.79)/1023;
   559                           	
   560  00E4  3048               	movlw	0x48
   561  00E5  00CB               	movwf	(0+(?___ftmul)+03h)
   562  00E6  30B9               	movlw	0xb9
   563  00E7  00CC               	movwf	(1+(?___ftmul)+03h)
   564  00E8  3040               	movlw	0x40
   565  00E9  00CD               	movwf	(2+(?___ftmul)+03h)
   566                           	
   567                           	
   568  00EA  0828               	movf	(_main_f),w
   569  00EB  00C8               	movwf	(?___ftmul)
   570  00EC  0829               	movf	(_main_f+1),w
   571  00ED  00C9               	movwf	(?___ftmul+1)
   572  00EE  082A               	movf	(_main_f+2),w
   573  00EF  00CA               	movwf	(?___ftmul+2)
   574  00F0  120A  118A  275D   	fcall	___ftmul
              120A  118A         
   575  00F5  1283               	bcf	status, 5	;RP0=0, select bank0
   576  00F6  1303               	bcf	status, 6	;RP1=0, select bank0
   577                           	
   578  00F7  0848               	movf	(0+?___ftmul),w
   579  00F8  00B9               	movwf	(?___ftdiv)
   580  00F9  0849               	movf	(1+?___ftmul),w
   581  00FA  00BA               	movwf	(?___ftdiv+1)
   582  00FB  084A               	movf	(2+?___ftmul),w
   583  00FC  00BB               	movwf	(?___ftdiv+2)
   584                           	
   585  00FD  30C0               	movlw	0xc0
   586  00FE  00BC               	movwf	(0+(?___ftdiv)+03h)
   587  00FF  307F               	movlw	0x7f
   588  0100  00BD               	movwf	(1+(?___ftdiv)+03h)
   589  0101  3044               	movlw	0x44
   590  0102  00BE               	movwf	(2+(?___ftdiv)+03h)
   591  0103  120A  118A  232F   	fcall	___ftdiv
              120A  118A         
   592  0108  1283               	bcf	status, 5	;RP0=0, select bank0
   593  0109  1303               	bcf	status, 6	;RP1=0, select bank0
   594                           	
   595  010A  0839               	movf	(0+?___ftdiv),w
   596  010B  00AB               	movwf	(_main_p)
   597  010C  083A               	movf	(1+?___ftdiv),w
   598  010D  00AC               	movwf	(_main_p+1)
   599  010E  083B               	movf	(2+?___ftdiv),w
   600  010F  00AD               	movwf	(_main_p+2)
   601                           	line	47
   602                           ;main.c: 47: r=r+p;
   603                           	
   604                           	
   605  0110  082B               	movf	(_main_p),w
   606  0111  00D1               	movwf	(0+(?___ftadd)+03h)
   607  0112  082C               	movf	(_main_p+1),w
   608  0113  00D2               	movwf	(1+(?___ftadd)+03h)
   609  0114  082D               	movf	(_main_p+2),w
   610  0115  00D3               	movwf	(2+(?___ftadd)+03h)
   611                           	
   612                           	
   613  0116  082E               	movf	(_main_r),w
   614  0117  00CE               	movwf	(?___ftadd)
   615  0118  082F               	movf	(_main_r+1),w
   616  0119  00CF               	movwf	(?___ftadd+1)
   617  011A  0830               	movf	(_main_r+2),w
   618  011B  00D0               	movwf	(?___ftadd+2)
   619  011C  120A  118A  2484   	fcall	___ftadd
              120A  118A         
   620  0121  1283               	bcf	status, 5	;RP0=0, select bank0
   621  0122  1303               	bcf	status, 6	;RP1=0, select bank0
   622                           	
   623  0123  084E               	movf	(0+?___ftadd),w
   624  0124  00AE               	movwf	(_main_r)
   625  0125  084F               	movf	(1+?___ftadd),w
   626  0126  00AF               	movwf	(_main_r+1)
   627  0127  0850               	movf	(2+?___ftadd),w
   628  0128  00B0               	movwf	(_main_r+2)
   629                           	line	35
   630                           	
   631  0129  3000               	movlw	0x0
   632  012A  00D1               	movwf	(0+(?___ftadd)+03h)
   633  012B  3080               	movlw	0x80
   634  012C  00D2               	movwf	(1+(?___ftadd)+03h)
   635  012D  303F               	movlw	0x3f
   636  012E  00D3               	movwf	(2+(?___ftadd)+03h)
   637                           	
   638                           	
   639  012F  0834               	movf	(_main_q),w
   640  0130  00CE               	movwf	(?___ftadd)
   641  0131  0835               	movf	(_main_q+1),w
   642  0132  00CF               	movwf	(?___ftadd+1)
   643  0133  0836               	movf	(_main_q+2),w
   644  0134  00D0               	movwf	(?___ftadd+2)
   645  0135  120A  118A  2484   	fcall	___ftadd
              120A  118A         
   646  013A  1283               	bcf	status, 5	;RP0=0, select bank0
   647  013B  1303               	bcf	status, 6	;RP1=0, select bank0
   648                           	
   649  013C  084E               	movf	(0+?___ftadd),w
   650  013D  00B4               	movwf	(_main_q)
   651  013E  084F               	movf	(1+?___ftadd),w
   652  013F  00B5               	movwf	(_main_q+1)
   653  0140  0850               	movf	(2+?___ftadd),w
   654  0141  00B6               	movwf	(_main_q+2)
   655                           	
   656  0142  3000               	movlw	0x0
   657  0143  00CB               	movwf	(0+(?___ftge)+03h)
   658  0144  30C8               	movlw	0xc8
   659  0145  00CC               	movwf	(1+(?___ftge)+03h)
   660  0146  3042               	movlw	0x42
   661  0147  00CD               	movwf	(2+(?___ftge)+03h)
   662                           	
   663                           	
   664  0148  0834               	movf	(_main_q),w
   665  0149  00C8               	movwf	(?___ftge)
   666  014A  0835               	movf	(_main_q+1),w
   667  014B  00C9               	movwf	(?___ftge+1)
   668  014C  0836               	movf	(_main_q+2),w
   669  014D  00CA               	movwf	(?___ftge+2)
   670  014E  120A  158A  26A0   	fcall	___ftge
              120A  118A         
   671  0153  1C03               	btfss	status,0
   672  0154  2956               	goto	u2571
   673  0155  2957               	goto	u2570
   674  0156                     u2571:
   675  0156  2886               	goto	l52
   676  0157                     u2570:
   677                           	
   678  0157                     l53:	
   679                           	line	50
   680                           ;main.c: 48: }
   681                           ;main.c: 50: volt=r/100;
   682  0157  1283               	bcf	status, 5	;RP0=0, select bank0
   683  0158  1303               	bcf	status, 6	;RP1=0, select bank0
   684                           	
   685  0159  3000               	movlw	0x0
   686  015A  00BC               	movwf	(0+(?___ftdiv)+03h)
   687  015B  30C8               	movlw	0xc8
   688  015C  00BD               	movwf	(1+(?___ftdiv)+03h)
   689  015D  3042               	movlw	0x42
   690  015E  00BE               	movwf	(2+(?___ftdiv)+03h)
   691                           	
   692                           	
   693  015F  082E               	movf	(_main_r),w
   694  0160  00B9               	movwf	(?___ftdiv)
   695  0161  082F               	movf	(_main_r+1),w
   696  0162  00BA               	movwf	(?___ftdiv+1)
   697  0163  0830               	movf	(_main_r+2),w
   698  0164  00BB               	movwf	(?___ftdiv+2)
   699  0165  120A  118A  232F   	fcall	___ftdiv
              120A  118A         
   700  016A  1283               	bcf	status, 5	;RP0=0, select bank0
   701  016B  1303               	bcf	status, 6	;RP1=0, select bank0
   702                           	
   703  016C  0839               	movf	(0+?___ftdiv),w
   704  016D  00B1               	movwf	(_main_volt)
   705  016E  083A               	movf	(1+?___ftdiv),w
   706  016F  00B2               	movwf	(_main_volt+1)
   707  0170  083B               	movf	(2+?___ftdiv),w
   708  0171  00B3               	movwf	(_main_volt+2)
   709                           	line	52
   710                           ;main.c: 52: LCDWriteCommand(0x01);
   711  0172  3001               	movlw	(01h)
   712  0173  120A  158A  252D   	fcall	_LCDWriteCommand
              120A  118A         
   713                           	line	53
   714                           ;main.c: 53: LCDWriteCommand(0x80);
   715  0178  3080               	movlw	(080h)
   716  0179  120A  158A  252D   	fcall	_LCDWriteCommand
              120A  118A         
   717                           	line	54
   718                           ;main.c: 54: LCDWriteString("voltage is: ");
   719  017E  3022               	movlw	((STR_5-__stringbase))&0ffh
   720  017F  120A  158A  259A   	fcall	_LCDWriteString
              120A  118A         
   721                           	line	55
   722                           ;main.c: 55: LCDWriteFloat(volt);
   723  0184  1283               	bcf	status, 5	;RP0=0, select bank0
   724  0185  1303               	bcf	status, 6	;RP1=0, select bank0
   725                           	
   726                           	
   727  0186  0831               	movf	(_main_volt),w
   728  0187  00B9               	movwf	(?_LCDWriteFloat)
   729  0188  0832               	movf	(_main_volt+1),w
   730  0189  00BA               	movwf	(?_LCDWriteFloat+1)
   731  018A  0833               	movf	(_main_volt+2),w
   732  018B  00BB               	movwf	(?_LCDWriteFloat+2)
   733  018C  120A  118A  25A2   	fcall	_LCDWriteFloat
              120A  118A         
   734                           	line	56
   735                           ;main.c: 56: Delay(50);
   736  0191  3032               	movlw	low(032h)
   737  0192  1283               	bcf	status, 5	;RP0=0, select bank0
   738  0193  1303               	bcf	status, 6	;RP1=0, select bank0
   739                           	
   740  0194  00D5               	movwf	(?_Delay)
   741  0195  3000               	movlw	high(032h)
   742  0196  00D6               	movwf	((?_Delay))+1
   743  0197  120A  158A  2564   	fcall	_Delay
              120A  118A         
   744                           	line	57
   745                           ;main.c: 57: if(volt>=4.69)
   746  019C  1283               	bcf	status, 5	;RP0=0, select bank0
   747  019D  1303               	bcf	status, 6	;RP1=0, select bank0
   748                           	
   749  019E  3014               	movlw	0x14
   750  019F  00CB               	movwf	(0+(?___ftge)+03h)
   751  01A0  3096               	movlw	0x96
   752  01A1  00CC               	movwf	(1+(?___ftge)+03h)
   753  01A2  3040               	movlw	0x40
   754  01A3  00CD               	movwf	(2+(?___ftge)+03h)
   755                           	
   756                           	
   757  01A4  0831               	movf	(_main_volt),w
   758  01A5  00C8               	movwf	(?___ftge)
   759  01A6  0832               	movf	(_main_volt+1),w
   760  01A7  00C9               	movwf	(?___ftge+1)
   761  01A8  0833               	movf	(_main_volt+2),w
   762  01A9  00CA               	movwf	(?___ftge+2)
   763  01AA  120A  158A  26A0   	fcall	___ftge
              120A  118A         
   764  01AF  1C03               	btfss	status,0
   765  01B0  29B2               	goto	u2581
   766  01B1  29B3               	goto	u2580
   767  01B2                     u2581:
   768  01B2  29CB               	goto	l58
   769  01B3                     u2580:
   770                           	line	59
   771                           ;main.c: 58: {
   772                           ;main.c: 59: LCDWriteCommand(0xC0);
   773  01B3  30C0               	movlw	(0C0h)
   774  01B4  120A  158A  252D   	fcall	_LCDWriteCommand
              120A  118A         
   775                           	line	60
   776                           ;main.c: 60: LCDWriteString("gas present");
   777  01B9  302F               	movlw	((STR_6-__stringbase))&0ffh
   778  01BA  120A  158A  259A   	fcall	_LCDWriteString
              120A  118A         
   779                           	line	61
   780                           ;main.c: 61: Delay(1000);
   781  01BF  30E8               	movlw	low(03E8h)
   782  01C0  1283               	bcf	status, 5	;RP0=0, select bank0
   783  01C1  1303               	bcf	status, 6	;RP1=0, select bank0
   784                           	
   785  01C2  00D5               	movwf	(?_Delay)
   786  01C3  3003               	movlw	high(03E8h)
   787  01C4  00D6               	movwf	((?_Delay))+1
   788  01C5  120A  158A  2564   	fcall	_Delay
              120A  118A         
   789                           	line	62
   790                           ;main.c: 62: }
   791  01CA  29E2               	goto	l49
   792                           	line	63
   793                           	
   794  01CB                     l58:	
   795                           	line	65
   796                           ;main.c: 63: else
   797                           ;main.c: 64: {
   798                           ;main.c: 65: LCDWriteCommand(0xC0);
   799  01CB  30C0               	movlw	(0C0h)
   800  01CC  120A  158A  252D   	fcall	_LCDWriteCommand
              120A  118A         
   801                           	line	66
   802                           ;main.c: 66: LCDWriteString("gas absent");
   803  01D1  303B               	movlw	((STR_7-__stringbase))&0ffh
   804  01D2  120A  158A  259A   	fcall	_LCDWriteString
              120A  118A         
   805                           	line	67
   806                           ;main.c: 67: Delay(500);
   807  01D7  30F4               	movlw	low(01F4h)
   808  01D8  1283               	bcf	status, 5	;RP0=0, select bank0
   809  01D9  1303               	bcf	status, 6	;RP1=0, select bank0
   810                           	
   811  01DA  00D5               	movwf	(?_Delay)
   812  01DB  3001               	movlw	high(01F4h)
   813  01DC  00D6               	movwf	((?_Delay))+1
   814  01DD  120A  158A  2564   	fcall	_Delay
              120A  118A         
   815                           	line	69
   816                           	
   817  01E2                     l59:	
   818                           	line	70
   819                           	
   820  01E2                     l49:	
   821                           	line	31
   822  01E2  285C               	goto	l50
   823                           	global	start
   824  01E3  120A  118A  2800   	ljmp	start
   825                           ; =============== function _main ends =========
                                 ======
   826                           
   827                           GLOBAL __end_of_main
   828  01E6                     	__end_of_main:
   829                           	FNSIZE	_main,25,0
   830                           	psect	maintext
   831                           	line	72
   832                           	signat	_main,88
   833                           	global	___wmul
   834                           	global	??___wmul
   835                           	global	?___wmul
   836                           
   837                           ; *************** function ___wmul ************
                                 ***
   838                           ; Defined at:
   839                           ;		line 3 in file "C:\Program Files (x86)\HI-TE
                                 CH Software\PICC\PRO\9.65\sources\wmul.c"
   840                           ; Parameters:
   841                           ;		multiplier  	offs:   0	type: unsigned int 
   842                           ;		multiplicand	offs:   2	type: unsigned int 
   843                           ; Auto variables:
   844                           ;		product     	       	type: unsigned int 
   845                           ; Return value:
   846                           ;		type: unsigned int 
   847                           ;		size: 2
   848                           ; Registers used:
   849                           ;		wreg, status,2, status,0
   850                           ; Tracked objects:
   851                           ;		On entry : 300/0
   852                           ;		On exit  : 0/0
   853                           ;		Unchanged: 0/0
   854                           ; Data sizes:
   855                           ;		Autos:    2
   856                           ;		Params:   4
   857                           ;		Temp:     0
   858                           ;		Total:    6
   859                           ; This function calls:
   860                           ;		Nothing
   861                           ; This function is called by:
   862                           ;		_main
   863                           ; This function uses a non-reentrant model
   864                           ; 
   865                           	psect	text193,local,class=CODE,delta=2
   866                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\wmul.c"
   867                           	line	3
   868                           	
   869  0DBD                     ___wmul:	
   870                           	opt stack 6
   871                           ; Regs used in ___wmul: [wreg+status,2+status,0
                                 ]
   872                           	line	4
   873  0DBD  3000               	movlw	low(0)
   874                           	
   875  0DBE  00BD               	movwf	(___wmul_product)
   876  0DBF  3000               	movlw	high(0)
   877  0DC0  00BE               	movwf	((___wmul_product))+1
   878                           	line	6
   879                           	
   880  0DC1                     l69:	
   881                           	line	7
   882                           	
   883  0DC1  1C39               	btfss	(___wmul_multiplier),(0)&7
   884  0DC2  2DC4               	goto	u2751
   885  0DC3  2DC5               	goto	u2750
   886  0DC4                     u2751:
   887  0DC4  2DCB               	goto	l70
   888  0DC5                     u2750:
   889                           	line	8
   890                           	
   891                           	
   892  0DC5  083B               	movf	(___wmul_multiplicand),w
   893  0DC6  07BD               	addwf	(___wmul_product),f
   894  0DC7  1803               	skipnc
   895  0DC8  0ABE               	incf	(___wmul_product+1),f
   896  0DC9  083C               	movf	(___wmul_multiplicand+1),w
   897  0DCA  07BE               	addwf	(___wmul_product+1),f
   898                           	
   899  0DCB                     l70:	
   900                           	line	9
   901                           	
   902  0DCB  3001               	movlw	01h
   903  0DCC                     u2765:
   904  0DCC  1003               	clrc
   905  0DCD  0DBB               	rlf	(___wmul_multiplicand),f
   906  0DCE  0DBC               	rlf	(___wmul_multiplicand+1),f
   907  0DCF  3EFF               	addlw	-1
   908  0DD0  1D03               	skipz
   909  0DD1  2DCC               	goto	u2765
   910                           	line	10
   911                           	
   912  0DD2  3001               	movlw	01h
   913  0DD3                     u2775:
   914  0DD3  1003               	clrc
   915  0DD4  0CBA               	rrf	(___wmul_multiplier+1),f
   916  0DD5  0CB9               	rrf	(___wmul_multiplier),f
   917  0DD6  3EFF               	addlw	-1
   918  0DD7  1D03               	skipz
   919  0DD8  2DD3               	goto	u2775
   920                           	line	11
   921                           	
   922  0DD9  083A               	movf	((___wmul_multiplier+1)),w
   923  0DDA  0439               	iorwf	((___wmul_multiplier)),w
   924  0DDB  1D03               	skipz
   925  0DDC  2DDE               	goto	u2781
   926  0DDD  2DDF               	goto	u2780
   927  0DDE                     u2781:
   928  0DDE  2DC1               	goto	l69
   929  0DDF                     u2780:
   930                           	
   931  0DDF                     l68:	
   932                           	line	12
   933                           	
   934                           	
   935  0DDF  083E               	movf	(___wmul_product+1),w
   936  0DE0  01BA               	clrf	(?___wmul+1)
   937  0DE1  07BA               	addwf	(?___wmul+1)
   938  0DE2  083D               	movf	(___wmul_product),w
   939  0DE3  01B9               	clrf	(?___wmul)
   940  0DE4  07B9               	addwf	(?___wmul)
   941                           
   942  0DE5  2DE6               	goto	l66
   943                           	line	13
   944  0DE6                     l66:	
   945  0DE6  0008               	return
   946                           ; =============== function ___wmul ends =======
                                 ========
   947                           
   948                           GLOBAL __end_of___wmul
   949  0DE7                     	__end_of___wmul:
   950                           	FNSIZE	___wmul,2,4
   951                           	signat	___wmul,8314
   952                           	global	_LCDDisplayInitializing
   953                           	global	??_LCDDisplayInitializing
   954                           	global	?_LCDDisplayInitializing
   955                           
   956                           ; *************** function _LCDDisplayInitializ
                                 ing ***************
   957                           ; Defined at:
   958                           ;		line 53 in file "C:\Users\hardik\Desktop\new
                                 \LCD.c"
   959                           ; Parameters:
   960                           ;		None
   961                           ; Auto variables:
   962                           ;		i           	       	type: unsigned char 
   963                           ; Return value:
   964                           ;		type: void 
   965                           ;		size: 0
   966                           ; Registers used:
   967                           ;		wreg, status,2, status,0, pclath, cstack
   968                           ; Tracked objects:
   969                           ;		On entry : 0/0
   970                           ;		On exit  : 0/0
   971                           ;		Unchanged: 0/0
   972                           ; Data sizes:
   973                           ;		Autos:    1
   974                           ;		Params:   0
   975                           ;		Temp:     1
   976                           ;		Total:    2
   977                           ; This function calls:
   978                           ;		_LCDWriteString
   979                           ;		_LCDWriteCommand
   980                           ;		_LCDWriteData
   981                           ;		_Delay
   982                           ; This function is called by:
   983                           ;		_main
   984                           ; This function uses a non-reentrant model
   985                           ; 
   986                           	psect	text194,local,class=CODE,delta=2
   987                           	file	"C:\Users\hardik\Desktop\new\LCD.c"
   988                           	line	53
   989                           ;LCD.c: 52: void LCDDisplayInitializing(void)
   990                           ;LCD.c: 53: {
   991                           	
   992  0E68                     _LCDDisplayInitializing:	
   993                           	opt stack 6
   994                           ; Regs used in _LCDDisplayInitializing: [wreg+s
                                 tatus,2+status,0+pclath+cstack]
   995                           	line	56
   996                           ;LCD.c: 55: LCDubyte i;
   997                           ;LCD.c: 56: LCDWriteString("INITIALIZING....");
   998  0E68  3001               	movlw	((STR_1-__stringbase))&0ffh
   999  0E69  120A  158A  259A   	fcall	_LCDWriteString
              120A  158A         
  1000                           	line	57
  1001                           ;LCD.c: 57: LCDWriteCommand(0xC0);
  1002  0E6E  30C0               	movlw	(0C0h)
  1003  0E6F  120A  158A  252D   	fcall	_LCDWriteCommand
              120A  158A         
  1004                           	line	58
  1005                           ;LCD.c: 58: for(i = 0 ; i < 16; i++)
  1006  0E74  1003               	clrc
  1007  0E75  1283               	bcf	status, 5	;RP0=0, select bank0
  1008  0E76  1303               	bcf	status, 6	;RP1=0, select bank0
  1009                           	
  1010  0E77  3000               	movlw	0
  1011  0E78  1803               	btfsc	status,0
  1012  0E79  3001               	movlw	1
  1013  0E7A  00B9               	movwf	(_LCDDisplayInitializing_i)
  1014  0E7B  2E7C               	goto	l18
  1015                           	line	59
  1016                           	
  1017  0E7C                     l18:	
  1018                           	line	60
  1019                           ;LCD.c: 59: {
  1020                           ;LCD.c: 60: LCDWriteData(46);
  1021  0E7C  302E               	movlw	(02Eh)
  1022  0E7D  120A  158A  2538   	fcall	_LCDWriteData
              120A  158A         
  1023                           	line	61
  1024                           ;LCD.c: 61: Delay(100);
  1025  0E82  3064               	movlw	low(064h)
  1026  0E83  1283               	bcf	status, 5	;RP0=0, select bank0
  1027  0E84  1303               	bcf	status, 6	;RP1=0, select bank0
  1028                           	
  1029  0E85  00D5               	movwf	(?_Delay)
  1030  0E86  3000               	movlw	high(064h)
  1031  0E87  00D6               	movwf	((?_Delay))+1
  1032  0E88  120A  158A  2564   	fcall	_Delay
              120A  158A         
  1033                           	line	58
  1034  0E8D  3001               	movlw	(01h)
  1035  0E8E  1283               	bcf	status, 5	;RP0=0, select bank0
  1036  0E8F  1303               	bcf	status, 6	;RP1=0, select bank0
  1037  0E90  00BA               	movwf	(??_LCDDisplayInitializing+1+0)
  1038                           	
  1039  0E91  083A               	movf	(??_LCDDisplayInitializing+1+0),w
  1040  0E92  07B9               	addwf	(_LCDDisplayInitializing_i),f
  1041  0E93  3010               	movlw	(010h)
  1042                           	
  1043  0E94  0239               	subwf	(_LCDDisplayInitializing_i),w
  1044  0E95  1C03               	skipc
  1045  0E96  2E98               	goto	u2601
  1046  0E97  2E99               	goto	u2600
  1047  0E98                     u2601:
  1048  0E98  2E7C               	goto	l18
  1049  0E99                     u2600:
  1050                           	
  1051  0E99                     l19:	
  1052                           	line	63
  1053                           ;LCD.c: 62: }
  1054                           ;LCD.c: 63: LCDWriteCommand(0x01);
  1055  0E99  3001               	movlw	(01h)
  1056  0E9A  120A  158A  252D   	fcall	_LCDWriteCommand
              120A  158A         
  1057                           	line	64
  1058                           ;LCD.c: 64: }
  1059  0E9F                     l17:	
  1060  0E9F  0008               	return
  1061                           ; =============== function _LCDDisplayInitializ
                                 ing ends ===============
  1062                           
  1063                           GLOBAL __end_of_LCDDisplayInitializing
  1064  0EA0                     	__end_of_LCDDisplayInitializing:
  1065                           	FNSIZE	_LCDDisplayInitializing,2,0
  1066                           	signat	_LCDDisplayInitializing,88
  1067                           	global	___lwtoft
  1068                           	global	??___lwtoft
  1069                           	global	?___lwtoft
  1070                           
  1071                           ; *************** function ___lwtoft **********
                                 *****
  1072                           ; Defined at:
  1073                           ;		line 16 in file "C:\Program Files (x86)\HI-T
                                 ECH Software\PICC\PRO\9.65\sources\lwtoft.c"
  1074                           ; Parameters:
  1075                           ;		c           	offs:   0	type: unsigned int 
  1076                           ; Auto variables:
  1077                           ;		f1          	       	type: float 
  1078                           ; Return value:
  1079                           ;		type: float 
  1080                           ;		size: 3
  1081                           ; Registers used:
  1082                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
                                 th, cstack
  1083                           ; Tracked objects:
  1084                           ;		On entry : 300/0
  1085                           ;		On exit  : 0/0
  1086                           ;		Unchanged: 0/0
  1087                           ; Data sizes:
  1088                           ;		Autos:    3
  1089                           ;		Params:   3
  1090                           ;		Temp:     3
  1091                           ;		Total:    9
  1092                           ; This function calls:
  1093                           ;		___ftpack
  1094                           ; This function is called by:
  1095                           ;		_main
  1096                           ; This function uses a non-reentrant model
  1097                           ; 
  1098                           	psect	text195,local,class=CODE,delta=2
  1099                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\lwtoft.c"
  1100                           	line	16
  1101                           	
  1102  0DE7                     ___lwtoft:	
  1103                           	opt stack 6
  1104                           ; Regs used in ___lwtoft: [wreg-fsr0h+status,2+
                                 status,0+pclath+cstack]
  1105                           	line	19
  1106                           	
  1107  0DE7  083A               	movf	((___lwtoft_c+1)),w
  1108  0DE8  0439               	iorwf	((___lwtoft_c)),w
  1109  0DE9  1D03               	skipz
  1110  0DEA  2DEC               	goto	u2791
  1111  0DEB  2DED               	goto	u2790
  1112  0DEC                     u2791:
  1113  0DEC  2DF4               	goto	l320
  1114  0DED                     u2790:
  1115                           	line	20
  1116                           	
  1117  0DED  3000               	movlw	0x0
  1118  0DEE  00B9               	movwf	(?___lwtoft)
  1119  0DEF  3000               	movlw	0x0
  1120  0DF0  00BA               	movwf	(?___lwtoft+1)
  1121  0DF1  3000               	movlw	0x0
  1122  0DF2  00BB               	movwf	(?___lwtoft+2)
  1123  0DF3  2E10               	goto	l319
  1124                           	
  1125  0DF4                     l320:	
  1126                           	line	21
  1127                           	
  1128  0DF4  0839               	movf	(___lwtoft_c),w
  1129  0DF5  00BF               	movwf	(??___lwtoft+3+0)
  1130  0DF6  083A               	movf	(___lwtoft_c+1),w
  1131  0DF7  00C0               	movwf	(??___lwtoft+3+0+1)
  1132  0DF8  01C1               	clrf	(??___lwtoft+3+0+2)
  1133                           	
  1134  0DF9  083F               	movf	(??___lwtoft+3+0),w
  1135  0DFA  00BC               	movwf	(___lwtoft_f1)
  1136  0DFB  0840               	movf	(??___lwtoft+3+1),w
  1137  0DFC  00BD               	movwf	(___lwtoft_f1+1)
  1138  0DFD  0841               	movf	(??___lwtoft+3+2),w
  1139  0DFE  00BE               	movwf	(___lwtoft_f1+2)
  1140                           	line	22
  1141  0DFF  308E               	movlw	(08Eh)
  1142                           	
  1143  0E00  00DA               	movwf	(?___ftpack)
  1144                           	
  1145  0E01  303C               	movlw	((___lwtoft_f1))&0ffh
  1146  0E02  120A  118A  23BE   	fcall	___ftpack
              120A  158A         
  1147                           	line	23
  1148  0E07  1283               	bcf	status, 5	;RP0=0, select bank0
  1149  0E08  1303               	bcf	status, 6	;RP1=0, select bank0
  1150                           	
  1151                           	
  1152  0E09  083C               	movf	(___lwtoft_f1),w
  1153  0E0A  00B9               	movwf	(?___lwtoft)
  1154  0E0B  083D               	movf	(___lwtoft_f1+1),w
  1155  0E0C  00BA               	movwf	(?___lwtoft+1)
  1156  0E0D  083E               	movf	(___lwtoft_f1+2),w
  1157  0E0E  00BB               	movwf	(?___lwtoft+2)
  1158  0E0F  2E10               	goto	l319
  1159                           	line	24
  1160  0E10                     l319:	
  1161  0E10  0008               	return
  1162                           ; =============== function ___lwtoft ends =====
                                 ==========
  1163                           
  1164                           GLOBAL __end_of___lwtoft
  1165  0E11                     	__end_of___lwtoft:
  1166                           	FNSIZE	___lwtoft,6,3
  1167                           	signat	___lwtoft,4219
  1168                           	global	_LCDWriteFloat
  1169                           	global	??_LCDWriteFloat
  1170                           	global	?_LCDWriteFloat
  1171                           
  1172                           ; *************** function _LCDWriteFloat *****
                                 **********
  1173                           ; Defined at:
  1174                           ;		line 93 in file "C:\Users\hardik\Desktop\new
                                 \LCD.c"
  1175                           ; Parameters:
  1176                           ;		FloatNumber 	offs:   0	type: float 
  1177                           ; Auto variables:
  1178                           ;		i           	       	type: unsigned char 
  1179                           ;		Temp        	       	type: int 
  1180                           ;		n           	       	type: int 
  1181                           ;		c           	       	type: unsigned char [6]
  1182                           ; Return value:
  1183                           ;		type: void 
  1184                           ;		size: 0
  1185                           ; Registers used:
  1186                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
                                 th, cstack
  1187                           ; Tracked objects:
  1188                           ;		On entry : 300/0
  1189                           ;		On exit  : 0/0
  1190                           ;		Unchanged: 0/0
  1191                           ; Data sizes:
  1192                           ;		Autos:   11
  1193                           ;		Params:   3
  1194                           ;		Temp:     1
  1195                           ;		Total:   15
  1196                           ; This function calls:
  1197                           ;		___ftge
  1198                           ;		_LCDWriteData
  1199                           ;		___ftneg
  1200                           ;		___fttol
  1201                           ;		_LCDWriteInteger
  1202                           ;		___awtoft
  1203                           ;		___ftsub
  1204                           ;		___ftadd
  1205                           ;		___ftmul
  1206                           ;		___awmod
  1207                           ;		___awdiv
  1208                           ;		_LCDWriteCommand
  1209                           ;		_LCDWriteString
  1210                           ; This function is called by:
  1211                           ;		_main
  1212                           ; This function uses a non-reentrant model
  1213                           ; 
  1214                           	psect	text196,local,class=CODE,delta=2
  1215                           	file	"C:\Users\hardik\Desktop\new\LCD.c"
  1216                           	line	93
  1217                           ;LCD.c: 92: void LCDWriteFloat(float FloatNumbe
                                 r)
  1218                           ;LCD.c: 93: {
  1219                           	
  1220  05A2                     _LCDWriteFloat:	
  1221                           	opt stack 6
  1222                           ; Regs used in _LCDWriteFloat: [wreg-fsr0h+stat
                                 us,2+status,0+pclath+cstack]
  1223                           	line	95
  1224                           ;LCD.c: 94: unsigned char c[6];
  1225                           ;LCD.c: 95: unsigned char i = 0;
  1226  05A2  1003               	clrc
  1227                           	
  1228  05A3  3000               	movlw	0
  1229  05A4  1803               	btfsc	status,0
  1230  05A5  3001               	movlw	1
  1231  05A6  00BC               	movwf	(_LCDWriteFloat_i)
  1232                           	line	97
  1233                           ;LCD.c: 96: int n, Temp;
  1234                           ;LCD.c: 97: if(FloatNumber < 0)
  1235                           	
  1236  05A7  3000               	movlw	0x0
  1237  05A8  00CB               	movwf	(0+(?___ftge)+03h)
  1238  05A9  3000               	movlw	0x0
  1239  05AA  00CC               	movwf	(1+(?___ftge)+03h)
  1240  05AB  3000               	movlw	0x0
  1241  05AC  00CD               	movwf	(2+(?___ftge)+03h)
  1242                           	
  1243                           	
  1244  05AD  0839               	movf	(_LCDWriteFloat_FloatNumber),w
  1245  05AE  00C8               	movwf	(?___ftge)
  1246  05AF  083A               	movf	(_LCDWriteFloat_FloatNumber+1),w
  1247  05B0  00C9               	movwf	(?___ftge+1)
  1248  05B1  083B               	movf	(_LCDWriteFloat_FloatNumber+2),w
  1249  05B2  00CA               	movwf	(?___ftge+2)
  1250  05B3  120A  158A  26A0   	fcall	___ftge
              120A  118A         
  1251  05B8  1803               	btfsc	status,0
  1252  05B9  2DBB               	goto	u2611
  1253  05BA  2DBC               	goto	u2610
  1254  05BB                     u2611:
  1255  05BB  2DD7               	goto	l30
  1256  05BC                     u2610:
  1257                           	line	99
  1258                           ;LCD.c: 98: {
  1259                           ;LCD.c: 99: LCDWriteData('-');
  1260  05BC  302D               	movlw	(02Dh)
  1261  05BD  120A  158A  2538   	fcall	_LCDWriteData
              120A  118A         
  1262                           	line	100
  1263                           ;LCD.c: 100: FloatNumber = -(FloatNumber);
  1264  05C2  1283               	bcf	status, 5	;RP0=0, select bank0
  1265  05C3  1303               	bcf	status, 6	;RP1=0, select bank0
  1266                           	
  1267                           	
  1268  05C4  0839               	movf	(_LCDWriteFloat_FloatNumber),w
  1269  05C5  00D1               	movwf	(?___ftneg)
  1270  05C6  083A               	movf	(_LCDWriteFloat_FloatNumber+1),w
  1271  05C7  00D2               	movwf	(?___ftneg+1)
  1272  05C8  083B               	movf	(_LCDWriteFloat_FloatNumber+2),w
  1273  05C9  00D3               	movwf	(?___ftneg+2)
  1274  05CA  120A  158A  2522   	fcall	___ftneg
              120A  118A         
  1275  05CF  1283               	bcf	status, 5	;RP0=0, select bank0
  1276  05D0  1303               	bcf	status, 6	;RP1=0, select bank0
  1277                           	
  1278  05D1  0851               	movf	(0+?___ftneg),w
  1279  05D2  00B9               	movwf	(_LCDWriteFloat_FloatNumber)
  1280  05D3  0852               	movf	(1+?___ftneg),w
  1281  05D4  00BA               	movwf	(_LCDWriteFloat_FloatNumber+1)
  1282  05D5  0853               	movf	(2+?___ftneg),w
  1283  05D6  00BB               	movwf	(_LCDWriteFloat_FloatNumber+2)
  1284                           	line	101
  1285                           	
  1286  05D7                     l30:	
  1287                           	line	102
  1288                           ;LCD.c: 101: }
  1289                           ;LCD.c: 102: n = FloatNumber;
  1290  05D7  1283               	bcf	status, 5	;RP0=0, select bank0
  1291  05D8  1303               	bcf	status, 6	;RP1=0, select bank0
  1292                           	
  1293                           	
  1294  05D9  0839               	movf	(_LCDWriteFloat_FloatNumber),w
  1295  05DA  00C8               	movwf	(?___fttol)
  1296  05DB  083A               	movf	(_LCDWriteFloat_FloatNumber+1),w
  1297  05DC  00C9               	movwf	(?___fttol+1)
  1298  05DD  083B               	movf	(_LCDWriteFloat_FloatNumber+2),w
  1299  05DE  00CA               	movwf	(?___fttol+2)
  1300  05DF  120A  158A  278D   	fcall	___fttol
              120A  118A         
  1301  05E4  1283               	bcf	status, 5	;RP0=0, select bank0
  1302  05E5  1303               	bcf	status, 6	;RP1=0, select bank0
  1303                           	
  1304  05E6  0849               	movf	(1+?___fttol),w
  1305  05E7  01C0               	clrf	(_LCDWriteFloat_n+1)
  1306  05E8  07C0               	addwf	(_LCDWriteFloat_n+1)
  1307  05E9  0848               	movf	(0+?___fttol),w
  1308  05EA  01BF               	clrf	(_LCDWriteFloat_n)
  1309  05EB  07BF               	addwf	(_LCDWriteFloat_n)
  1310                           
  1311                           	line	103
  1312                           ;LCD.c: 103: Temp = n;
  1313                           	
  1314                           	
  1315  05EC  0840               	movf	(_LCDWriteFloat_n+1),w
  1316  05ED  01BE               	clrf	(_LCDWriteFloat_Temp+1)
  1317  05EE  07BE               	addwf	(_LCDWriteFloat_Temp+1)
  1318  05EF  083F               	movf	(_LCDWriteFloat_n),w
  1319  05F0  01BD               	clrf	(_LCDWriteFloat_Temp)
  1320  05F1  07BD               	addwf	(_LCDWriteFloat_Temp)
  1321                           
  1322                           	line	104
  1323                           ;LCD.c: 104: LCDWriteInteger(n);
  1324                           	
  1325                           	
  1326  05F2  0840               	movf	(_LCDWriteFloat_n+1),w
  1327  05F3  01C9               	clrf	(?_LCDWriteInteger+1)
  1328  05F4  07C9               	addwf	(?_LCDWriteInteger+1)
  1329  05F5  083F               	movf	(_LCDWriteFloat_n),w
  1330  05F6  01C8               	clrf	(?_LCDWriteInteger)
  1331  05F7  07C8               	addwf	(?_LCDWriteInteger)
  1332                           
  1333  05F8  120A  118A  22B2   	fcall	_LCDWriteInteger
              120A  118A         
  1334                           	line	105
  1335                           ;LCD.c: 105: LCDWriteData('.');
  1336  05FD  302E               	movlw	(02Eh)
  1337  05FE  120A  158A  2538   	fcall	_LCDWriteData
              120A  118A         
  1338                           	line	106
  1339                           ;LCD.c: 106: FloatNumber = ((FloatNumber - n) +
                                  1) * 1000;
  1340  0603  1283               	bcf	status, 5	;RP0=0, select bank0
  1341  0604  1303               	bcf	status, 6	;RP1=0, select bank0
  1342                           	
  1343                           	
  1344  0605  0840               	movf	(_LCDWriteFloat_n+1),w
  1345  0606  01C9               	clrf	(?___awtoft+1)
  1346  0607  07C9               	addwf	(?___awtoft+1)
  1347  0608  083F               	movf	(_LCDWriteFloat_n),w
  1348  0609  01C8               	clrf	(?___awtoft)
  1349  060A  07C8               	addwf	(?___awtoft)
  1350                           
  1351  060B  120A  118A  21EE   	fcall	___awtoft
              120A  118A         
  1352  0610  1283               	bcf	status, 5	;RP0=0, select bank0
  1353  0611  1303               	bcf	status, 6	;RP1=0, select bank0
  1354                           	
  1355  0612  0848               	movf	(0+?___awtoft),w
  1356  0613  00CB               	movwf	(0+(?___ftsub)+03h)
  1357  0614  0849               	movf	(1+?___awtoft),w
  1358  0615  00CC               	movwf	(1+(?___ftsub)+03h)
  1359  0616  084A               	movf	(2+?___awtoft),w
  1360  0617  00CD               	movwf	(2+(?___ftsub)+03h)
  1361                           	
  1362                           	
  1363  0618  0839               	movf	(_LCDWriteFloat_FloatNumber),w
  1364  0619  00C8               	movwf	(?___ftsub)
  1365  061A  083A               	movf	(_LCDWriteFloat_FloatNumber+1),w
  1366  061B  00C9               	movwf	(?___ftsub+1)
  1367  061C  083B               	movf	(_LCDWriteFloat_FloatNumber+2),w
  1368  061D  00CA               	movwf	(?___ftsub+2)
  1369  061E  120A  158A  257D   	fcall	___ftsub
              120A  118A         
  1370  0623  1283               	bcf	status, 5	;RP0=0, select bank0
  1371  0624  1303               	bcf	status, 6	;RP1=0, select bank0
  1372                           	
  1373  0625  0848               	movf	(0+?___ftsub),w
  1374  0626  00CE               	movwf	(?___ftadd)
  1375  0627  0849               	movf	(1+?___ftsub),w
  1376  0628  00CF               	movwf	(?___ftadd+1)
  1377  0629  084A               	movf	(2+?___ftsub),w
  1378  062A  00D0               	movwf	(?___ftadd+2)
  1379                           	
  1380  062B  3000               	movlw	0x0
  1381  062C  00D1               	movwf	(0+(?___ftadd)+03h)
  1382  062D  3080               	movlw	0x80
  1383  062E  00D2               	movwf	(1+(?___ftadd)+03h)
  1384  062F  303F               	movlw	0x3f
  1385  0630  00D3               	movwf	(2+(?___ftadd)+03h)
  1386  0631  120A  118A  2484   	fcall	___ftadd
              120A  118A         
  1387  0636  1283               	bcf	status, 5	;RP0=0, select bank0
  1388  0637  1303               	bcf	status, 6	;RP1=0, select bank0
  1389                           	
  1390  0638  084E               	movf	(0+?___ftadd),w
  1391  0639  00C8               	movwf	(?___ftmul)
  1392  063A  084F               	movf	(1+?___ftadd),w
  1393  063B  00C9               	movwf	(?___ftmul+1)
  1394  063C  0850               	movf	(2+?___ftadd),w
  1395  063D  00CA               	movwf	(?___ftmul+2)
  1396                           	
  1397  063E  3000               	movlw	0x0
  1398  063F  00CB               	movwf	(0+(?___ftmul)+03h)
  1399  0640  307A               	movlw	0x7a
  1400  0641  00CC               	movwf	(1+(?___ftmul)+03h)
  1401  0642  3044               	movlw	0x44
  1402  0643  00CD               	movwf	(2+(?___ftmul)+03h)
  1403  0644  120A  118A  275D   	fcall	___ftmul
              120A  118A         
  1404  0649  1283               	bcf	status, 5	;RP0=0, select bank0
  1405  064A  1303               	bcf	status, 6	;RP1=0, select bank0
  1406                           	
  1407  064B  0848               	movf	(0+?___ftmul),w
  1408  064C  00B9               	movwf	(_LCDWriteFloat_FloatNumber)
  1409  064D  0849               	movf	(1+?___ftmul),w
  1410  064E  00BA               	movwf	(_LCDWriteFloat_FloatNumber+1)
  1411  064F  084A               	movf	(2+?___ftmul),w
  1412  0650  00BB               	movwf	(_LCDWriteFloat_FloatNumber+2)
  1413                           	line	107
  1414                           ;LCD.c: 107: n = FloatNumber;
  1415                           	
  1416                           	
  1417  0651  0839               	movf	(_LCDWriteFloat_FloatNumber),w
  1418  0652  00C8               	movwf	(?___fttol)
  1419  0653  083A               	movf	(_LCDWriteFloat_FloatNumber+1),w
  1420  0654  00C9               	movwf	(?___fttol+1)
  1421  0655  083B               	movf	(_LCDWriteFloat_FloatNumber+2),w
  1422  0656  00CA               	movwf	(?___fttol+2)
  1423  0657  120A  158A  278D   	fcall	___fttol
              120A  118A         
  1424  065C  1283               	bcf	status, 5	;RP0=0, select bank0
  1425  065D  1303               	bcf	status, 6	;RP1=0, select bank0
  1426                           	
  1427  065E  0849               	movf	(1+?___fttol),w
  1428  065F  01C0               	clrf	(_LCDWriteFloat_n+1)
  1429  0660  07C0               	addwf	(_LCDWriteFloat_n+1)
  1430  0661  0848               	movf	(0+?___fttol),w
  1431  0662  01BF               	clrf	(_LCDWriteFloat_n)
  1432  0663  07BF               	addwf	(_LCDWriteFloat_n)
  1433                           
  1434                           	line	109
  1435                           ;LCD.c: 109: while(n > 0)
  1436  0664  2E9A               	goto	l31
  1437                           	
  1438  0665                     l32:	
  1439                           	line	111
  1440                           ;LCD.c: 110: {
  1441                           ;LCD.c: 111: c[i++] = (n % 10) + 48;
  1442  0665  300A               	movlw	low(0Ah)
  1443                           	
  1444  0666  00D4               	movwf	(0+(?___awmod)+02h)
  1445  0667  3000               	movlw	high(0Ah)
  1446  0668  00D5               	movwf	((0+(?___awmod)+02h))+1
  1447                           	
  1448                           	
  1449  0669  0840               	movf	(_LCDWriteFloat_n+1),w
  1450  066A  01D3               	clrf	(?___awmod+1)
  1451  066B  07D3               	addwf	(?___awmod+1)
  1452  066C  083F               	movf	(_LCDWriteFloat_n),w
  1453  066D  01D2               	clrf	(?___awmod)
  1454  066E  07D2               	addwf	(?___awmod)
  1455                           
  1456  066F  120A  158A  2732   	fcall	___awmod
              120A  118A         
  1457  0674  1283               	bcf	status, 5	;RP0=0, select bank0
  1458  0675  1303               	bcf	status, 6	;RP1=0, select bank0
  1459  0676  0852               	movf	(0+?___awmod),w
  1460  0677  3E30               	addlw	030h
  1461  0678  00C7               	movwf	(??_LCDWriteFloat+11+0)
  1462                           	
  1463  0679  083C               	movf	(_LCDWriteFloat_i),w
  1464  067A  3E41               	addlw	(_LCDWriteFloat_c)&0ffh
  1465  067B  1383               	bcf	status, 7	;select IRP bank0
  1466                           	
  1467  067C  0084               	movwf	fsr0
  1468  067D  0847               	movf	(??_LCDWriteFloat+11+0),w
  1469  067E  0080               	movwf	indf
  1470  067F  3001               	movlw	(01h)
  1471  0680  00C7               	movwf	(??_LCDWriteFloat+11+0)
  1472                           	
  1473  0681  0847               	movf	(??_LCDWriteFloat+11+0),w
  1474  0682  07BC               	addwf	(_LCDWriteFloat_i),f
  1475                           	line	112
  1476                           ;LCD.c: 112: n /= 10;
  1477  0683  300A               	movlw	low(0Ah)
  1478                           	
  1479  0684  00D4               	movwf	(0+(?___awdiv)+02h)
  1480  0685  3000               	movlw	high(0Ah)
  1481  0686  00D5               	movwf	((0+(?___awdiv)+02h))+1
  1482                           	
  1483                           	
  1484  0687  0840               	movf	(_LCDWriteFloat_n+1),w
  1485  0688  01D3               	clrf	(?___awdiv+1)
  1486  0689  07D3               	addwf	(?___awdiv+1)
  1487  068A  083F               	movf	(_LCDWriteFloat_n),w
  1488  068B  01D2               	clrf	(?___awdiv)
  1489  068C  07D2               	addwf	(?___awdiv)
  1490                           
  1491  068D  120A  118A  223E   	fcall	___awdiv
              120A  118A         
  1492  0692  1283               	bcf	status, 5	;RP0=0, select bank0
  1493  0693  1303               	bcf	status, 6	;RP1=0, select bank0
  1494                           	
  1495  0694  0853               	movf	(1+?___awdiv),w
  1496  0695  01C0               	clrf	(_LCDWriteFloat_n+1)
  1497  0696  07C0               	addwf	(_LCDWriteFloat_n+1)
  1498  0697  0852               	movf	(0+?___awdiv),w
  1499  0698  01BF               	clrf	(_LCDWriteFloat_n)
  1500  0699  07BF               	addwf	(_LCDWriteFloat_n)
  1501                           
  1502                           	line	113
  1503                           	
  1504  069A                     l31:	
  1505                           	line	109
  1506                           	
  1507  069A  0840               	movf	(_LCDWriteFloat_n+1),w
  1508  069B  3A80               	xorlw	80h
  1509  069C  00C7               	movwf	(??_LCDWriteFloat+11+0)
  1510  069D  3080               	movlw	(high(01h))^80h
  1511  069E  0247               	subwf	(??_LCDWriteFloat+11+0),w
  1512  069F  1D03               	skipz
  1513  06A0  2EA3               	goto	u26210
  1514  06A1                     u26215:
  1515  06A1  3001               	movlw	low(01h)
  1516  06A2  023F               	subwf	(_LCDWriteFloat_n),w
  1517  06A3                     u26210:
  1518                           
  1519  06A3  1803               	skipnc
  1520  06A4  2EA6               	goto	u2621
  1521  06A5  2EA7               	goto	u2620
  1522  06A6                     u2621:
  1523  06A6  2E65               	goto	l32
  1524  06A7                     u2620:
  1525                           	
  1526  06A7                     l33:	
  1527                           	line	114
  1528                           ;LCD.c: 113: }
  1529                           ;LCD.c: 114: i -= 1;
  1530                           	
  1531                           	
  1532  06A7  3001               	movlw	low(01h)
  1533  06A8  02BC               	subwf	(_LCDWriteFloat_i),f
  1534                           	line	115
  1535                           ;LCD.c: 115: while(i-- > 1)
  1536  06A9  2EB4               	goto	l34
  1537                           	
  1538  06AA                     l35:	
  1539                           	line	116
  1540                           ;LCD.c: 116: LCDWriteData(c[i]);
  1541                           	
  1542  06AA  083C               	movf	(_LCDWriteFloat_i),w
  1543  06AB  3E41               	addlw	(_LCDWriteFloat_c)&0ffh
  1544  06AC  1383               	bcf	status, 7	;select IRP bank0
  1545                           	
  1546  06AD  0084               	movwf	fsr0
  1547  06AE  0800               	movf	indf,w
  1548  06AF  120A  158A  2538   	fcall	_LCDWriteData
              120A  118A         
  1549                           	
  1550  06B4                     l34:	
  1551                           	line	115
  1552                           	
  1553  06B4  1283               	bcf	status, 5	;RP0=0, select bank0
  1554  06B5  1303               	bcf	status, 6	;RP1=0, select bank0
  1555                           	
  1556  06B6  3001               	movlw	low(01h)
  1557  06B7  02BC               	subwf	(_LCDWriteFloat_i),f
  1558  06B8  3001               	movlw	(01h)
  1559  06B9  023C               	subwf	((_LCDWriteFloat_i))&07fh,w
  1560  06BA  1803               	skipnc
  1561  06BB  2EBD               	goto	u2631
  1562  06BC  2EBE               	goto	u2630
  1563  06BD                     u2631:
  1564  06BD  2EAA               	goto	l35
  1565  06BE                     u2630:
  1566                           	
  1567  06BE                     l36:	
  1568                           	line	118
  1569                           ;LCD.c: 118: if(Temp < 10)
  1570                           	
  1571  06BE  083E               	movf	(_LCDWriteFloat_Temp+1),w
  1572  06BF  3A80               	xorlw	80h
  1573  06C0  00C7               	movwf	(??_LCDWriteFloat+11+0)
  1574  06C1  3080               	movlw	(high(0Ah))^80h
  1575  06C2  0247               	subwf	(??_LCDWriteFloat+11+0),w
  1576  06C3  1D03               	skipz
  1577  06C4  2EC7               	goto	u26410
  1578  06C5                     u26415:
  1579  06C5  300A               	movlw	low(0Ah)
  1580  06C6  023D               	subwf	(_LCDWriteFloat_Temp),w
  1581  06C7                     u26410:
  1582                           
  1583  06C7  1803               	skipnc
  1584  06C8  2ECA               	goto	u2641
  1585  06C9  2ECB               	goto	u2640
  1586  06CA                     u2641:
  1587  06CA  2ED7               	goto	l37
  1588  06CB                     u2640:
  1589                           	line	120
  1590                           ;LCD.c: 119: {
  1591                           ;LCD.c: 120: LCDWriteCommand(0xcc);
  1592  06CB  30CC               	movlw	(0CCh)
  1593  06CC  120A  158A  252D   	fcall	_LCDWriteCommand
              120A  118A         
  1594                           	line	121
  1595                           ;LCD.c: 121: LCDWriteString("  ");
  1596  06D1  3046               	movlw	((STR_2-__stringbase))&0ffh
  1597  06D2  120A  158A  259A   	fcall	_LCDWriteString
              120A  118A         
  1598                           	line	123
  1599                           	
  1600  06D7                     l37:	
  1601                           	line	124
  1602                           ;LCD.c: 123: }
  1603                           ;LCD.c: 124: if(Temp >= 10 && Temp < 100)
  1604  06D7  1283               	bcf	status, 5	;RP0=0, select bank0
  1605  06D8  1303               	bcf	status, 6	;RP1=0, select bank0
  1606                           	
  1607  06D9  083E               	movf	(_LCDWriteFloat_Temp+1),w
  1608  06DA  3A80               	xorlw	80h
  1609  06DB  00C7               	movwf	(??_LCDWriteFloat+11+0)
  1610  06DC  3080               	movlw	(high(0Ah))^80h
  1611  06DD  0247               	subwf	(??_LCDWriteFloat+11+0),w
  1612  06DE  1D03               	skipz
  1613  06DF  2EE2               	goto	u26510
  1614  06E0                     u26515:
  1615  06E0  300A               	movlw	low(0Ah)
  1616  06E1  023D               	subwf	(_LCDWriteFloat_Temp),w
  1617  06E2                     u26510:
  1618                           
  1619  06E2  1C03               	skipc
  1620  06E3  2EE5               	goto	u2651
  1621  06E4  2EE6               	goto	u2650
  1622  06E5                     u2651:
  1623  06E5  2EFF               	goto	l38
  1624  06E6                     u2650:
  1625                           	
  1626  06E6  083E               	movf	(_LCDWriteFloat_Temp+1),w
  1627  06E7  3A80               	xorlw	80h
  1628  06E8  00C7               	movwf	(??_LCDWriteFloat+11+0)
  1629  06E9  3080               	movlw	(high(064h))^80h
  1630  06EA  0247               	subwf	(??_LCDWriteFloat+11+0),w
  1631  06EB  1D03               	skipz
  1632  06EC  2EEF               	goto	u26610
  1633  06ED                     u26615:
  1634  06ED  3064               	movlw	low(064h)
  1635  06EE  023D               	subwf	(_LCDWriteFloat_Temp),w
  1636  06EF                     u26610:
  1637                           
  1638  06EF  1803               	skipnc
  1639  06F0  2EF2               	goto	u2661
  1640  06F1  2EF3               	goto	u2660
  1641  06F2                     u2661:
  1642  06F2  2EFF               	goto	l38
  1643  06F3                     u2660:
  1644                           	line	126
  1645                           ;LCD.c: 125: {
  1646                           ;LCD.c: 126: LCDWriteCommand(0xcd);
  1647  06F3  30CD               	movlw	(0CDh)
  1648  06F4  120A  158A  252D   	fcall	_LCDWriteCommand
              120A  118A         
  1649                           	line	127
  1650                           ;LCD.c: 127: LCDWriteString(" ");
  1651  06F9  3047               	movlw	((STR_3-__stringbase))&0ffh
  1652  06FA  120A  158A  259A   	fcall	_LCDWriteString
              120A  118A         
  1653                           	line	129
  1654                           	
  1655  06FF                     l38:	
  1656                           	line	130
  1657                           ;LCD.c: 129: }
  1658                           ;LCD.c: 130: }
  1659  06FF                     l29:	
  1660  06FF  0008               	return
  1661                           ; =============== function _LCDWriteFloat ends 
                                 ===============
  1662                           
  1663                           GLOBAL __end_of_LCDWriteFloat
  1664  0700                     	__end_of_LCDWriteFloat:
  1665                           	FNSIZE	_LCDWriteFloat,12,3
  1666                           	signat	_LCDWriteFloat,4216
  1667                           	global	___ftdiv
  1668                           	global	??___ftdiv
  1669                           	global	?___ftdiv
  1670                           
  1671                           ; *************** function ___ftdiv ***********
                                 ****
  1672                           ; Defined at:
  1673                           ;		line 19 in file "C:\Program Files (x86)\HI-T
                                 ECH Software\PICC\PRO\9.65\sources\ftdiv.c"
  1674                           ; Parameters:
  1675                           ;		f1          	offs:   0	type: float 
  1676                           ;		f2          	offs:   3	type: float 
  1677                           ; Auto variables:
  1678                           ;		exp2        	       	type: unsigned char 
  1679                           ;		sign1       	       	type: unsigned char 
  1680                           ;		sign2       	       	type: unsigned char 
  1681                           ;		exp1        	       	type: unsigned char 
  1682                           ;		f3          	       	type: float 
  1683                           ; Return value:
  1684                           ;		type: float 
  1685                           ;		size: 3
  1686                           ; Registers used:
  1687                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
                                 th, cstack
  1688                           ; Tracked objects:
  1689                           ;		On entry : 300/0
  1690                           ;		On exit  : 0/0
  1691                           ;		Unchanged: 0/0
  1692                           ; Data sizes:
  1693                           ;		Autos:    7
  1694                           ;		Params:   6
  1695                           ;		Temp:     1
  1696                           ;		Total:   14
  1697                           ; This function calls:
  1698                           ;		___ftunpack
  1699                           ;		___ftpack
  1700                           ; This function is called by:
  1701                           ;		_main
  1702                           ; This function uses a non-reentrant model
  1703                           ; 
  1704                           	psect	text197,local,class=CODE,delta=2
  1705                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\ftdiv.c"
  1706                           	line	19
  1707                           	
  1708  032F                     ___ftdiv:	
  1709                           	opt stack 6
  1710                           ; Regs used in ___ftdiv: [wreg-fsr0h+status,2+s
                                 tatus,0+pclath+cstack]
  1711                           	line	23
  1712                           	
  1713  032F  3000               	movlw	0
  1714  0330  00C3               	movwf	(___ftdiv_f3)
  1715  0331  3000               	movlw	0
  1716  0332  00C4               	movwf	(___ftdiv_f3+1)
  1717  0333  3000               	movlw	0
  1718  0334  00C5               	movwf	(___ftdiv_f3+2)
  1719                           	line	24
  1720                           	
  1721  0335  3041               	movlw	((___ftdiv_exp1))&0ffh
  1722                           	
  1723  0336  00DA               	movwf	(?___ftunpack)
  1724                           	
  1725  0337  3039               	movlw	((___ftdiv_f1))&0ffh
  1726  0338  120A  158A  26D8   	fcall	___ftunpack
              120A  118A         
  1727  033D  1283               	bcf	status, 5	;RP0=0, select bank0
  1728  033E  1303               	bcf	status, 6	;RP1=0, select bank0
  1729                           	
  1730  033F  00C0               	movwf	(___ftdiv_sign1)
  1731                           	line	25
  1732                           	
  1733  0340  08C1               	movf	(___ftdiv_exp1),f
  1734  0341  1D03               	skipz
  1735  0342  2B44               	goto	u2801
  1736  0343  2B45               	goto	u2800
  1737  0344                     u2801:
  1738  0344  2B4C               	goto	l137
  1739  0345                     u2800:
  1740                           	line	26
  1741                           	
  1742                           	
  1743  0345  0843               	movf	(___ftdiv_f3),w
  1744  0346  00B9               	movwf	(?___ftdiv)
  1745  0347  0844               	movf	(___ftdiv_f3+1),w
  1746  0348  00BA               	movwf	(?___ftdiv+1)
  1747  0349  0845               	movf	(___ftdiv_f3+2),w
  1748  034A  00BB               	movwf	(?___ftdiv+2)
  1749  034B  2BBD               	goto	l136
  1750                           	
  1751  034C                     l137:	
  1752                           	line	27
  1753                           	
  1754  034C  303F               	movlw	((___ftdiv_exp2))&0ffh
  1755                           	
  1756  034D  00DA               	movwf	(?___ftunpack)
  1757                           	
  1758  034E  303C               	movlw	((___ftdiv_f2))&0ffh
  1759  034F  120A  158A  26D8   	fcall	___ftunpack
              120A  118A         
  1760  0354  1283               	bcf	status, 5	;RP0=0, select bank0
  1761  0355  1303               	bcf	status, 6	;RP1=0, select bank0
  1762                           	
  1763  0356  00C2               	movwf	(___ftdiv_sign2)
  1764                           	line	28
  1765                           	
  1766  0357  08BF               	movf	(___ftdiv_exp2),f
  1767  0358  1D03               	skipz
  1768  0359  2B5B               	goto	u2811
  1769  035A  2B5C               	goto	u2810
  1770  035B                     u2811:
  1771  035B  2B63               	goto	l138
  1772  035C                     u2810:
  1773                           	line	29
  1774                           	
  1775                           	
  1776  035C  0843               	movf	(___ftdiv_f3),w
  1777  035D  00B9               	movwf	(?___ftdiv)
  1778  035E  0844               	movf	(___ftdiv_f3+1),w
  1779  035F  00BA               	movwf	(?___ftdiv+1)
  1780  0360  0845               	movf	(___ftdiv_f3+2),w
  1781  0361  00BB               	movwf	(?___ftdiv+2)
  1782  0362  2BBD               	goto	l136
  1783                           	
  1784  0363                     l138:	
  1785                           	line	30
  1786                           	
  1787  0363  083F               	movf	(___ftdiv_exp2),w
  1788  0364  3E89               	addlw	089h
  1789  0365  00C6               	movwf	(??___ftdiv+7+0)
  1790                           	
  1791  0366  0846               	movf	(??___ftdiv+7+0),w
  1792  0367  02C1               	subwf	(___ftdiv_exp1),f
  1793                           	line	31
  1794                           	
  1795  0368  0842               	movf	(___ftdiv_sign2),w
  1796  0369  00C6               	movwf	(??___ftdiv+7+0)
  1797                           	
  1798  036A  0846               	movf	(??___ftdiv+7+0),w
  1799  036B  06C0               	xorwf	(___ftdiv_sign1),f
  1800                           	line	32
  1801  036C  3018               	movlw	(018h)
  1802                           	
  1803  036D  00C2               	movwf	(___ftdiv_sign2)
  1804                           	line	33
  1805                           	
  1806  036E                     l141:	
  1807                           	line	34
  1808                           	
  1809  036E  3001               	movlw	01h
  1810  036F                     u2825:
  1811  036F  1003               	clrc
  1812  0370  0DC3               	rlf	(___ftdiv_f3),f
  1813  0371  0DC4               	rlf	(___ftdiv_f3+1),f
  1814  0372  0DC5               	rlf	(___ftdiv_f3+2),f
  1815  0373  3EFF               	addlw	-1
  1816  0374  1D03               	skipz
  1817  0375  2B6F               	goto	u2825
  1818                           	line	35
  1819                           	
  1820                           	
  1821  0376  083E               	movf	(___ftdiv_f2+2),w
  1822  0377  023B               	subwf	(___ftdiv_f1+2),w
  1823  0378  1D03               	skipz
  1824  0379  2B80               	goto	u2835
  1825  037A  083D               	movf	(___ftdiv_f2+1),w
  1826  037B  023A               	subwf	(___ftdiv_f1+1),w
  1827  037C  1D03               	skipz
  1828  037D  2B80               	goto	u2835
  1829  037E  083C               	movf	(___ftdiv_f2),w
  1830  037F  0239               	subwf	(___ftdiv_f1),w
  1831  0380                     u2835:
  1832  0380  1C03               	skipc
  1833  0381  2B83               	goto	u2831
  1834  0382  2B84               	goto	u2830
  1835  0383                     u2831:
  1836  0383  2B94               	goto	l142
  1837  0384                     u2830:
  1838                           	line	36
  1839                           	
  1840                           	
  1841  0384  083C               	movf	(___ftdiv_f2),w
  1842  0385  02B9               	subwf	(___ftdiv_f1),f
  1843  0386  083D               	movf	(___ftdiv_f2+1),w
  1844  0387  1C03               	skipc
  1845  0388  0F3D               	incfsz	(___ftdiv_f2+1),w
  1846  0389  02BA               	subwf	(___ftdiv_f1+1),f
  1847  038A  083E               	movf	(___ftdiv_f2+2),w
  1848  038B  1C03               	skipc
  1849  038C  0A3E               	incf	(___ftdiv_f2+2),w
  1850  038D  02BB               	subwf	(___ftdiv_f1+2),f
  1851                           	line	37
  1852                           	
  1853  038E  3001               	movlw	01h
  1854  038F  04C3               	iorwf	(___ftdiv_f3),f
  1855  0390  3000               	movlw	0
  1856  0391  04C4               	iorwf	(___ftdiv_f3+1),f
  1857  0392  3000               	movlw	0
  1858  0393  04C5               	iorwf	(___ftdiv_f3+2),f
  1859                           	line	38
  1860                           	
  1861  0394                     l142:	
  1862                           	line	39
  1863                           	
  1864  0394  3001               	movlw	01h
  1865  0395                     u2845:
  1866  0395  1003               	clrc
  1867  0396  0DB9               	rlf	(___ftdiv_f1),f
  1868  0397  0DBA               	rlf	(___ftdiv_f1+1),f
  1869  0398  0DBB               	rlf	(___ftdiv_f1+2),f
  1870  0399  3EFF               	addlw	-1
  1871  039A  1D03               	skipz
  1872  039B  2B95               	goto	u2845
  1873                           	line	40
  1874                           	
  1875                           	
  1876  039C  3001               	movlw	low(01h)
  1877  039D  02C2               	subwf	(___ftdiv_sign2),f
  1878  039E  1D03               	btfss	status,2
  1879  039F  2BA1               	goto	u2851
  1880  03A0  2BA2               	goto	u2850
  1881  03A1                     u2851:
  1882  03A1  2B6E               	goto	l141
  1883  03A2                     u2850:
  1884                           	
  1885  03A2                     l140:	
  1886                           	line	41
  1887                           	
  1888  03A2  0841               	movf	(___ftdiv_exp1),w
  1889                           	
  1890  03A3  00DA               	movwf	(?___ftpack)
  1891                           	
  1892  03A4  3043               	movlw	((___ftdiv_f3))&0ffh
  1893  03A5  120A  118A  23BE   	fcall	___ftpack
              120A  118A         
  1894                           	line	42
  1895  03AA  1283               	bcf	status, 5	;RP0=0, select bank0
  1896  03AB  1303               	bcf	status, 6	;RP1=0, select bank0
  1897                           	
  1898  03AC  08C0               	movf	(___ftdiv_sign1),f
  1899  03AD  1D03               	skipz
  1900  03AE  2BB0               	goto	u2860
  1901  03AF  2BB6               	goto	l143
  1902  03B0                     u2860:
  1903                           	line	43
  1904                           	
  1905  03B0  3000               	movlw	0
  1906  03B1  04C3               	iorwf	(___ftdiv_f3),f
  1907  03B2  3000               	movlw	0
  1908  03B3  04C4               	iorwf	(___ftdiv_f3+1),f
  1909  03B4  3080               	movlw	080h
  1910  03B5  04C5               	iorwf	(___ftdiv_f3+2),f
  1911                           	
  1912  03B6                     l143:	
  1913                           	line	44
  1914                           	
  1915                           	
  1916  03B6  0843               	movf	(___ftdiv_f3),w
  1917  03B7  00B9               	movwf	(?___ftdiv)
  1918  03B8  0844               	movf	(___ftdiv_f3+1),w
  1919  03B9  00BA               	movwf	(?___ftdiv+1)
  1920  03BA  0845               	movf	(___ftdiv_f3+2),w
  1921  03BB  00BB               	movwf	(?___ftdiv+2)
  1922  03BC  2BBD               	goto	l136
  1923                           	line	45
  1924  03BD                     l136:	
  1925  03BD  0008               	return
  1926                           ; =============== function ___ftdiv ends ======
                                 =========
  1927                           
  1928                           GLOBAL __end_of___ftdiv
  1929  03BE                     	__end_of___ftdiv:
  1930                           	FNSIZE	___ftdiv,8,6
  1931                           	signat	___ftdiv,8315
  1932                           	global	_MainSystemInitialize
  1933                           	global	??_MainSystemInitialize
  1934                           	global	?_MainSystemInitialize
  1935                           
  1936                           ; *************** function _MainSystemInitializ
                                 e ***************
  1937                           ; Defined at:
  1938                           ;		line 75 in file "C:\Users\hardik\Desktop\new
                                 \main.c"
  1939                           ; Parameters:
  1940                           ;		None
  1941                           ; Auto variables:
  1942                           ;		None
  1943                           ; Return value:
  1944                           ;		type: void 
  1945                           ;		size: 0
  1946                           ; Registers used:
  1947                           ;		wreg, status,2, status,0, pclath, cstack
  1948                           ; Tracked objects:
  1949                           ;		On entry : BFF/0
  1950                           ;		On exit  : 0/0
  1951                           ;		Unchanged: 0/0
  1952                           ; Data sizes:
  1953                           ;		Autos:    0
  1954                           ;		Params:   0
  1955                           ;		Temp:     0
  1956                           ;		Total:    0
  1957                           ; This function calls:
  1958                           ;		_LCDInitialize
  1959                           ; This function is called by:
  1960                           ;		_main
  1961                           ; This function uses a non-reentrant model
  1962                           ; 
  1963                           	psect	text198,local,class=CODE,delta=2
  1964                           	file	"C:\Users\hardik\Desktop\new\main.c"
  1965                           	line	75
  1966                           ;main.c: 74: static void MainSystemInitialize(v
                                 oid)
  1967                           ;main.c: 75: {
  1968                           	
  1969  01E8                     _MainSystemInitialize:	
  1970                           	opt stack 6
  1971                           ; Regs used in _MainSystemInitialize: [wreg+sta
                                 tus,2+status,0+pclath+cstack]
  1972                           	line	76
  1973                           ;main.c: 76: LCDInitialize();
  1974  01E8  120A  158A  2611   	fcall	_LCDInitialize
              120A  118A         
  1975                           	line	77
  1976                           ;main.c: 77: }
  1977  01ED                     l60:	
  1978  01ED  0008               	return
  1979                           ; =============== function _MainSystemInitializ
                                 e ends ===============
  1980                           
  1981                           GLOBAL __end_of_MainSystemInitialize
  1982  01EE                     	__end_of_MainSystemInitialize:
  1983                           	FNSIZE	_MainSystemInitialize,0,0
  1984                           	signat	_MainSystemInitialize,88
  1985                           	global	_LCDInitialize
  1986                           	global	??_LCDInitialize
  1987                           	global	?_LCDInitialize
  1988                           
  1989                           ; *************** function _LCDInitialize *****
                                 **********
  1990                           ; Defined at:
  1991                           ;		line 34 in file "C:\Users\hardik\Desktop\new
                                 \LCD.c"
  1992                           ; Parameters:
  1993                           ;		None
  1994                           ; Auto variables:
  1995                           ;		None
  1996                           ; Return value:
  1997                           ;		type: void 
  1998                           ;		size: 0
  1999                           ; Registers used:
  2000                           ;		wreg, status,2, status,0, pclath, cstack
  2001                           ; Tracked objects:
  2002                           ;		On entry : BFF/0
  2003                           ;		On exit  : 0/0
  2004                           ;		Unchanged: 0/0
  2005                           ; Data sizes:
  2006                           ;		Autos:    0
  2007                           ;		Params:   0
  2008                           ;		Temp:     1
  2009                           ;		Total:    1
  2010                           ; This function calls:
  2011                           ;		_LCDReset
  2012                           ;		_LCDWriteCommand
  2013                           ; This function is called by:
  2014                           ;		_MainSystemInitialize
  2015                           ; This function uses a non-reentrant model
  2016                           ; 
  2017                           	psect	text199,local,class=CODE,delta=2
  2018                           	file	"C:\Users\hardik\Desktop\new\LCD.c"
  2019                           	line	34
  2020                           ;LCD.c: 33: void LCDInitialize(void)
  2021                           ;LCD.c: 34: {
  2022                           	
  2023  0E11                     _LCDInitialize:	
  2024                           	opt stack 5
  2025                           ; Regs used in _LCDInitialize: [wreg+status,2+s
                                 tatus,0+pclath+cstack]
  2026                           	line	35
  2027                           ;LCD.c: 35: TRISD = TRISD & 0x03;
  2028  0E11  1683               	bsf	status, 5	;RP0=1, select bank1
  2029  0E12  1303               	bcf	status, 6	;RP1=0, select bank1
  2030                           	
  2031  0E13  0808               	movf	(136)^080h,w	;volatile
  2032  0E14  3903               	andlw	03h
  2033                           	
  2034  0E15  0088               	movwf	(136)^080h	;volatile
  2035                           	line	36
  2036                           ;LCD.c: 36: RD3 = 0;
  2037  0E16  1283               	bcf	status, 5	;RP0=0, select bank0
  2038  0E17  1303               	bcf	status, 6	;RP1=0, select bank0
  2039  0E18  1188               	bcf	(67/8),(67)&7
  2040                           	line	37
  2041                           ;LCD.c: 37: RD2 = 0;
  2042  0E19  1108               	bcf	(66/8),(66)&7
  2043                           	line	38
  2044                           ;LCD.c: 38: PORTD &= 0x0f;
  2045  0E1A  300F               	movlw	(0Fh)
  2046  0E1B  00B9               	movwf	(??_LCDInitialize+0+0)
  2047                           	
  2048  0E1C  0839               	movf	(??_LCDInitialize+0+0),w
  2049  0E1D  0588               	andwf	(8),f	;volatile
  2050                           	line	39
  2051                           ;LCD.c: 39: LCDReset();
  2052  0E1E  120A  158A  2551   	fcall	_LCDReset
              120A  158A         
  2053                           	line	40
  2054                           ;LCD.c: 40: LCDWriteCommand(0x28);
  2055  0E23  3028               	movlw	(028h)
  2056  0E24  120A  158A  252D   	fcall	_LCDWriteCommand
              120A  158A         
  2057                           	line	41
  2058                           ;LCD.c: 41: LCDWriteCommand(0x0C);
  2059  0E29  300C               	movlw	(0Ch)
  2060  0E2A  120A  158A  252D   	fcall	_LCDWriteCommand
              120A  158A         
  2061                           	line	42
  2062                           ;LCD.c: 42: LCDWriteCommand(0x06);
  2063  0E2F  3006               	movlw	(06h)
  2064  0E30  120A  158A  252D   	fcall	_LCDWriteCommand
              120A  158A         
  2065                           	line	43
  2066                           ;LCD.c: 43: LCDWriteCommand(0x01);
  2067  0E35  3001               	movlw	(01h)
  2068  0E36  120A  158A  252D   	fcall	_LCDWriteCommand
              120A  158A         
  2069                           	line	45
  2070                           ;LCD.c: 45: }
  2071  0E3B                     l15:	
  2072  0E3B  0008               	return
  2073                           ; =============== function _LCDInitialize ends 
                                 ===============
  2074                           
  2075                           GLOBAL __end_of_LCDInitialize
  2076  0E3C                     	__end_of_LCDInitialize:
  2077                           	FNSIZE	_LCDInitialize,1,0
  2078                           	signat	_LCDInitialize,88
  2079                           	global	_LCDWriteInteger
  2080                           	global	??_LCDWriteInteger
  2081                           	global	?_LCDWriteInteger
  2082                           
  2083                           ; *************** function _LCDWriteInteger ***
                                 ************
  2084                           ; Defined at:
  2085                           ;		line 132 in file "C:\Users\hardik\Desktop\ne
                                 w\LCD.c"
  2086                           ; Parameters:
  2087                           ;		IntegerNumbe	offs:   0	type: int 
  2088                           ; Auto variables:
  2089                           ;		i           	       	type: unsigned char 
  2090                           ;		c           	       	type: unsigned char [6]
  2091                           ; Return value:
  2092                           ;		type: void 
  2093                           ;		size: 0
  2094                           ; Registers used:
  2095                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
                                 th, cstack
  2096                           ; Tracked objects:
  2097                           ;		On entry : 300/0
  2098                           ;		On exit  : 0/0
  2099                           ;		Unchanged: 0/0
  2100                           ; Data sizes:
  2101                           ;		Autos:    7
  2102                           ;		Params:   2
  2103                           ;		Temp:     1
  2104                           ;		Total:   10
  2105                           ; This function calls:
  2106                           ;		_LCDWriteData
  2107                           ;		___awmod
  2108                           ;		___awdiv
  2109                           ; This function is called by:
  2110                           ;		_LCDWriteFloat
  2111                           ; This function uses a non-reentrant model
  2112                           ; 
  2113                           	psect	text200,local,class=CODE,delta=2
  2114                           	file	"C:\Users\hardik\Desktop\new\LCD.c"
  2115                           	line	132
  2116                           ;LCD.c: 131: void LCDWriteInteger(int IntegerNu
                                 mber)
  2117                           ;LCD.c: 132: {
  2118                           	
  2119  02B2                     _LCDWriteInteger:	
  2120                           	opt stack 5
  2121                           ; Regs used in _LCDWriteInteger: [wreg-fsr0h+st
                                 atus,2+status,0+pclath+cstack]
  2122                           	line	134
  2123                           ;LCD.c: 133: unsigned char c[6];
  2124                           ;LCD.c: 134: unsigned char i = 0;
  2125  02B2  1003               	clrc
  2126                           	
  2127  02B3  3000               	movlw	0
  2128  02B4  1803               	btfsc	status,0
  2129  02B5  3001               	movlw	1
  2130  02B6  00CA               	movwf	(_LCDWriteInteger_i)
  2131                           	line	136
  2132                           ;LCD.c: 136: if(IntegerNumber < 0)
  2133                           	
  2134  02B7  1FC9               	btfss	(_LCDWriteInteger_IntegerNumber+1),7
  2135  02B8  2ABA               	goto	u2691
  2136  02B9  2ABB               	goto	u2690
  2137  02BA                     u2691:
  2138  02BA  2AC8               	goto	l40
  2139  02BB                     u2690:
  2140                           	line	138
  2141                           ;LCD.c: 137: {
  2142                           ;LCD.c: 138: LCDWriteData('-');
  2143  02BB  302D               	movlw	(02Dh)
  2144  02BC  120A  158A  2538   	fcall	_LCDWriteData
              120A  118A         
  2145                           	line	139
  2146                           ;LCD.c: 139: IntegerNumber = - (IntegerNumber);
  2147  02C1  1283               	bcf	status, 5	;RP0=0, select bank0
  2148  02C2  1303               	bcf	status, 6	;RP1=0, select bank0
  2149                           	
  2150  02C3  09C8               	comf	(_LCDWriteInteger_IntegerNumber),f
  2151  02C4  09C9               	comf	(_LCDWriteInteger_IntegerNumber+1),f
  2152  02C5  0AC8               	incf	(_LCDWriteInteger_IntegerNumber),f
  2153  02C6  1903               	skipnz
  2154  02C7  0AC9               	incf	(_LCDWriteInteger_IntegerNumber+1),f
  2155                           	
  2156                           	line	140
  2157                           	
  2158  02C8                     l40:	
  2159                           	line	142
  2160                           ;LCD.c: 140: }
  2161                           ;LCD.c: 142: if(IntegerNumber == 0)
  2162                           	
  2163  02C8  0849               	movf	((_LCDWriteInteger_IntegerNumber+1)),w
  2164  02C9  0448               	iorwf	((_LCDWriteInteger_IntegerNumber)),w
  2165  02CA  1D03               	skipz
  2166  02CB  2ACD               	goto	u2701
  2167  02CC  2ACE               	goto	u2700
  2168  02CD                     u2701:
  2169  02CD  2AD4               	goto	l41
  2170  02CE                     u2700:
  2171                           	line	143
  2172                           ;LCD.c: 143: LCDWriteData(0x30);
  2173  02CE  3030               	movlw	(030h)
  2174  02CF  120A  158A  2538   	fcall	_LCDWriteData
              120A  118A         
  2175                           	
  2176  02D4                     l41:	
  2177                           	line	145
  2178                           ;LCD.c: 145: while( IntegerNumber > 0)
  2179  02D4  2B0A               	goto	l42
  2180                           	
  2181  02D5                     l43:	
  2182                           	line	147
  2183                           ;LCD.c: 146: {
  2184                           ;LCD.c: 147: c[i++] = ((IntegerNumber % 10) | 0
                                 x30);
  2185  02D5  300A               	movlw	low(0Ah)
  2186                           	
  2187  02D6  00D4               	movwf	(0+(?___awmod)+02h)
  2188  02D7  3000               	movlw	high(0Ah)
  2189  02D8  00D5               	movwf	((0+(?___awmod)+02h))+1
  2190                           	
  2191                           	
  2192  02D9  0849               	movf	(_LCDWriteInteger_IntegerNumber+1),w
  2193  02DA  01D3               	clrf	(?___awmod+1)
  2194  02DB  07D3               	addwf	(?___awmod+1)
  2195  02DC  0848               	movf	(_LCDWriteInteger_IntegerNumber),w
  2196  02DD  01D2               	clrf	(?___awmod)
  2197  02DE  07D2               	addwf	(?___awmod)
  2198                           
  2199  02DF  120A  158A  2732   	fcall	___awmod
              120A  118A         
  2200  02E4  1283               	bcf	status, 5	;RP0=0, select bank0
  2201  02E5  1303               	bcf	status, 6	;RP1=0, select bank0
  2202  02E6  0852               	movf	(0+?___awmod),w
  2203  02E7  3830               	iorlw	030h
  2204  02E8  00D1               	movwf	(??_LCDWriteInteger+7+0)
  2205                           	
  2206  02E9  084A               	movf	(_LCDWriteInteger_i),w
  2207  02EA  3E4B               	addlw	(_LCDWriteInteger_c)&0ffh
  2208  02EB  1383               	bcf	status, 7	;select IRP bank0
  2209                           	
  2210  02EC  0084               	movwf	fsr0
  2211  02ED  0851               	movf	(??_LCDWriteInteger+7+0),w
  2212  02EE  0080               	movwf	indf
  2213  02EF  3001               	movlw	(01h)
  2214  02F0  00D1               	movwf	(??_LCDWriteInteger+7+0)
  2215                           	
  2216  02F1  0851               	movf	(??_LCDWriteInteger+7+0),w
  2217  02F2  07CA               	addwf	(_LCDWriteInteger_i),f
  2218                           	line	148
  2219                           ;LCD.c: 148: IntegerNumber /= 10;
  2220  02F3  300A               	movlw	low(0Ah)
  2221                           	
  2222  02F4  00D4               	movwf	(0+(?___awdiv)+02h)
  2223  02F5  3000               	movlw	high(0Ah)
  2224  02F6  00D5               	movwf	((0+(?___awdiv)+02h))+1
  2225                           	
  2226                           	
  2227  02F7  0849               	movf	(_LCDWriteInteger_IntegerNumber+1),w
  2228  02F8  01D3               	clrf	(?___awdiv+1)
  2229  02F9  07D3               	addwf	(?___awdiv+1)
  2230  02FA  0848               	movf	(_LCDWriteInteger_IntegerNumber),w
  2231  02FB  01D2               	clrf	(?___awdiv)
  2232  02FC  07D2               	addwf	(?___awdiv)
  2233                           
  2234  02FD  120A  118A  223E   	fcall	___awdiv
              120A  118A         
  2235  0302  1283               	bcf	status, 5	;RP0=0, select bank0
  2236  0303  1303               	bcf	status, 6	;RP1=0, select bank0
  2237                           	
  2238  0304  0853               	movf	(1+?___awdiv),w
  2239  0305  01C9               	clrf	(_LCDWriteInteger_IntegerNumber+1)
  2240  0306  07C9               	addwf	(_LCDWriteInteger_IntegerNumber+1)
  2241  0307  0852               	movf	(0+?___awdiv),w
  2242  0308  01C8               	clrf	(_LCDWriteInteger_IntegerNumber)
  2243  0309  07C8               	addwf	(_LCDWriteInteger_IntegerNumber)
  2244                           
  2245                           	line	149
  2246                           	
  2247  030A                     l42:	
  2248                           	line	145
  2249  030A  1283               	bcf	status, 5	;RP0=0, select bank0
  2250  030B  1303               	bcf	status, 6	;RP1=0, select bank0
  2251                           	
  2252  030C  0849               	movf	(_LCDWriteInteger_IntegerNumber+1),w
  2253  030D  3A80               	xorlw	80h
  2254  030E  00D1               	movwf	(??_LCDWriteInteger+7+0)
  2255  030F  3080               	movlw	(high(01h))^80h
  2256  0310  0251               	subwf	(??_LCDWriteInteger+7+0),w
  2257  0311  1D03               	skipz
  2258  0312  2B15               	goto	u27110
  2259  0313                     u27115:
  2260  0313  3001               	movlw	low(01h)
  2261  0314  0248               	subwf	(_LCDWriteInteger_IntegerNumber),w
  2262  0315                     u27110:
  2263                           
  2264  0315  1803               	skipnc
  2265  0316  2B18               	goto	u2711
  2266  0317  2B19               	goto	u2710
  2267  0318                     u2711:
  2268  0318  2AD5               	goto	l43
  2269  0319                     u2710:
  2270                           	
  2271  0319                     l44:	
  2272                           	line	151
  2273                           ;LCD.c: 149: }
  2274                           ;LCD.c: 151: while(i-- > 0)
  2275  0319  2B24               	goto	l45
  2276                           	
  2277  031A                     l46:	
  2278                           	line	152
  2279                           ;LCD.c: 152: LCDWriteData(c[i]);
  2280                           	
  2281  031A  084A               	movf	(_LCDWriteInteger_i),w
  2282  031B  3E4B               	addlw	(_LCDWriteInteger_c)&0ffh
  2283  031C  1383               	bcf	status, 7	;select IRP bank0
  2284                           	
  2285  031D  0084               	movwf	fsr0
  2286  031E  0800               	movf	indf,w
  2287  031F  120A  158A  2538   	fcall	_LCDWriteData
              120A  118A         
  2288                           	
  2289  0324                     l45:	
  2290                           	line	151
  2291                           	
  2292  0324  1283               	bcf	status, 5	;RP0=0, select bank0
  2293  0325  1303               	bcf	status, 6	;RP1=0, select bank0
  2294                           	
  2295  0326  3001               	movlw	low(01h)
  2296  0327  02CA               	subwf	(_LCDWriteInteger_i),f
  2297  0328  084A               	movf	((_LCDWriteInteger_i))&07fh,w
  2298  0329  3AFF               	xorlw	0FFh
  2299  032A  1D03               	skipz
  2300  032B  2B2D               	goto	u2721
  2301  032C  2B2E               	goto	u2720
  2302  032D                     u2721:
  2303  032D  2B1A               	goto	l46
  2304  032E                     u2720:
  2305                           	
  2306  032E                     l47:	
  2307                           	line	155
  2308                           ;LCD.c: 155: }
  2309  032E                     l39:	
  2310  032E  0008               	return
  2311                           ; =============== function _LCDWriteInteger end
                                 s ===============
  2312                           
  2313                           GLOBAL __end_of_LCDWriteInteger
  2314  032F                     	__end_of_LCDWriteInteger:
  2315                           	FNSIZE	_LCDWriteInteger,8,2
  2316                           	signat	_LCDWriteInteger,4216
  2317                           	global	___fttol
  2318                           	global	??___fttol
  2319                           	global	?___fttol
  2320                           
  2321                           ; *************** function ___fttol ***********
                                 ****
  2322                           ; Defined at:
  2323                           ;		line 16 in file "C:\Program Files (x86)\HI-T
                                 ECH Software\PICC\PRO\9.65\sources\fttol.c"
  2324                           ; Parameters:
  2325                           ;		f1          	offs:   0	type: float 
  2326                           ; Auto variables:
  2327                           ;		sign1       	       	type: unsigned char 
  2328                           ;		exp1        	       	type: unsigned char 
  2329                           ;		lval        	       	type: unsigned long 
  2330                           ; Return value:
  2331                           ;		type: long 
  2332                           ;		size: 4
  2333                           ; Registers used:
  2334                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
                                 th, cstack
  2335                           ; Tracked objects:
  2336                           ;		On entry : 300/0
  2337                           ;		On exit  : 0/0
  2338                           ;		Unchanged: 0/0
  2339                           ; Data sizes:
  2340                           ;		Autos:    6
  2341                           ;		Params:   4
  2342                           ;		Temp:     1
  2343                           ;		Total:   11
  2344                           ; This function calls:
  2345                           ;		___ftunpack
  2346                           ; This function is called by:
  2347                           ;		_LCDWriteFloat
  2348                           ; This function uses a non-reentrant model
  2349                           ; 
  2350                           	psect	text201,local,class=CODE,delta=2
  2351                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\fttol.c"
  2352                           	line	16
  2353                           	
  2354  0F8D                     ___fttol:	
  2355                           	opt stack 5
  2356                           ; Regs used in ___fttol: [wreg-fsr0h+status,2+s
                                 tatus,0+pclath+cstack]
  2357                           	line	20
  2358                           	
  2359  0F8D  304D               	movlw	((___fttol_exp1))&0ffh
  2360                           	
  2361  0F8E  00DA               	movwf	(?___ftunpack)
  2362                           	
  2363  0F8F  3048               	movlw	((___fttol_f1))&0ffh
  2364  0F90  120A  158A  26D8   	fcall	___ftunpack
              120A  158A         
  2365  0F95  1283               	bcf	status, 5	;RP0=0, select bank0
  2366  0F96  1303               	bcf	status, 6	;RP1=0, select bank0
  2367                           	
  2368  0F97  00CC               	movwf	(___fttol_sign1)
  2369                           	line	21
  2370                           	
  2371  0F98  0848               	movf	(___fttol_f1),w
  2372                           	
  2373  0F99  00CE               	movwf	(___fttol_lval)
  2374  0F9A  0849               	movf	(___fttol_f1+1),w
  2375  0F9B  00CF               	movwf	((___fttol_lval))+1
  2376                           	
  2377  0F9C  084A               	movf	(___fttol_f1+2),w
  2378  0F9D  00D0               	movwf	((___fttol_lval))+2
  2379                           	
  2380  0F9E  01D1               	clrf	3+(___fttol_lval)
  2381                           	line	22
  2382                           	
  2383                           	
  2384  0F9F  308E               	movlw	low(08Eh)
  2385  0FA0  02CD               	subwf	(___fttol_exp1),f
  2386                           	line	23
  2387                           	
  2388  0FA1  1FCD               	btfss	(___fttol_exp1),7
  2389  0FA2  2FA4               	goto	u2871
  2390  0FA3  2FA5               	goto	u2870
  2391  0FA4                     u2871:
  2392  0FA4  2FC7               	goto	l203
  2393  0FA5                     u2870:
  2394                           	line	24
  2395                           	
  2396  0FA5  084D               	movf	(___fttol_exp1),w
  2397  0FA6  3A80               	xorlw	80h
  2398  0FA7  3E8F               	addlw	-((-15)^80h)
  2399  0FA8  1803               	skipnc
  2400  0FA9  2FAB               	goto	u2881
  2401  0FAA  2FAC               	goto	u2880
  2402  0FAB                     u2881:
  2403  0FAB  2FB5               	goto	l207
  2404  0FAC                     u2880:
  2405                           	line	25
  2406                           	
  2407  0FAC  3000               	movlw	0
  2408  0FAD  00CB               	movwf	(?___fttol+3)
  2409  0FAE  3000               	movlw	0
  2410  0FAF  00CA               	movwf	(?___fttol+2)
  2411  0FB0  3000               	movlw	0
  2412  0FB1  00C9               	movwf	(?___fttol+1)
  2413  0FB2  3000               	movlw	0
  2414  0FB3  00C8               	movwf	(?___fttol)
  2415                           
  2416  0FB4  2FFF               	goto	l202
  2417                           	line	26
  2418                           	
  2419  0FB5                     l207:	
  2420                           	line	27
  2421                           	
  2422  0FB5  3001               	movlw	01h
  2423  0FB6                     u2895:
  2424  0FB6  1003               	clrc
  2425  0FB7  0CD1               	rrf	(___fttol_lval+3),f
  2426  0FB8  0CD0               	rrf	(___fttol_lval+2),f
  2427  0FB9  0CCF               	rrf	(___fttol_lval+1),f
  2428  0FBA  0CCE               	rrf	(___fttol_lval),f
  2429  0FBB  3EFF               	addlw	-1
  2430  0FBC  1D03               	skipz
  2431  0FBD  2FB6               	goto	u2895
  2432                           
  2433                           	line	28
  2434  0FBE  3001               	movlw	(01h)
  2435  0FBF  00D2               	movwf	(??___fttol+6+0)
  2436                           	
  2437  0FC0  0852               	movf	(??___fttol+6+0),w
  2438  0FC1  07CD               	addwf	(___fttol_exp1),f
  2439  0FC2  1D03               	btfss	status,2
  2440  0FC3  2FC5               	goto	u2901
  2441  0FC4  2FC6               	goto	u2900
  2442  0FC5                     u2901:
  2443  0FC5  2FB5               	goto	l207
  2444  0FC6                     u2900:
  2445                           	
  2446  0FC6                     l206:	
  2447                           	line	29
  2448  0FC6  2FE7               	goto	l208
  2449                           	
  2450  0FC7                     l203:	
  2451                           	line	30
  2452  0FC7  3020               	movlw	(020h)
  2453                           	
  2454  0FC8  024D               	subwf	(___fttol_exp1),w
  2455  0FC9  1C03               	skipc
  2456  0FCA  2FCC               	goto	u2911
  2457  0FCB  2FCD               	goto	u2910
  2458  0FCC                     u2911:
  2459  0FCC  2FD6               	goto	l209
  2460  0FCD                     u2910:
  2461                           	line	31
  2462                           	
  2463  0FCD  3000               	movlw	0
  2464  0FCE  00CB               	movwf	(?___fttol+3)
  2465  0FCF  3000               	movlw	0
  2466  0FD0  00CA               	movwf	(?___fttol+2)
  2467  0FD1  3000               	movlw	0
  2468  0FD2  00C9               	movwf	(?___fttol+1)
  2469  0FD3  3000               	movlw	0
  2470  0FD4  00C8               	movwf	(?___fttol)
  2471                           
  2472  0FD5  2FFF               	goto	l202
  2473                           	
  2474  0FD6                     l209:	
  2475                           	line	32
  2476  0FD6  2FE2               	goto	l210
  2477                           	
  2478  0FD7                     l211:	
  2479                           	line	33
  2480                           	
  2481  0FD7  3001               	movlw	01h
  2482  0FD8  00D2               	movwf	(??___fttol+6+0)
  2483  0FD9                     u2925:
  2484  0FD9  1003               	clrc
  2485  0FDA  0DCE               	rlf	(___fttol_lval),f
  2486  0FDB  0DCF               	rlf	(___fttol_lval+1),f
  2487  0FDC  0DD0               	rlf	(___fttol_lval+2),f
  2488  0FDD  0DD1               	rlf	(___fttol_lval+3),f
  2489  0FDE  0BD2               	decfsz	(??___fttol+6+0)
  2490  0FDF  2FD9               	goto	u2925
  2491                           	line	34
  2492                           	
  2493                           	
  2494  0FE0  3001               	movlw	low(01h)
  2495  0FE1  02CD               	subwf	(___fttol_exp1),f
  2496                           	line	35
  2497                           	
  2498  0FE2                     l210:	
  2499                           	line	32
  2500                           	
  2501  0FE2  08CD               	movf	(___fttol_exp1),f
  2502  0FE3  1D03               	skipz
  2503  0FE4  2FE6               	goto	u2931
  2504  0FE5  2FE7               	goto	u2930
  2505  0FE6                     u2931:
  2506  0FE6  2FD7               	goto	l211
  2507  0FE7                     u2930:
  2508                           	
  2509  0FE7                     l212:	
  2510                           	line	36
  2511                           	
  2512  0FE7                     l208:	
  2513                           	line	37
  2514                           	
  2515  0FE7  08CC               	movf	(___fttol_sign1),f
  2516  0FE8  1D03               	skipz
  2517  0FE9  2FEB               	goto	u2940
  2518  0FEA  2FF6               	goto	l213
  2519  0FEB                     u2940:
  2520                           	line	38
  2521                           	
  2522  0FEB  09CE               	comf	(___fttol_lval),f
  2523  0FEC  09CF               	comf	(___fttol_lval+1),f
  2524  0FED  09D0               	comf	(___fttol_lval+2),f
  2525  0FEE  09D1               	comf	(___fttol_lval+3),f
  2526  0FEF  0ACE               	incf	(___fttol_lval),f
  2527  0FF0  1903               	skipnz
  2528  0FF1  0ACF               	incf	(___fttol_lval+1),f
  2529  0FF2  1903               	skipnz
  2530  0FF3  0AD0               	incf	(___fttol_lval+2),f
  2531  0FF4  1903               	skipnz
  2532  0FF5  0AD1               	incf	(___fttol_lval+3),f
  2533                           	
  2534                           	
  2535  0FF6                     l213:	
  2536                           	line	39
  2537                           	
  2538                           	
  2539  0FF6  0851               	movf	(___fttol_lval+3),w
  2540  0FF7  00CB               	movwf	(?___fttol+3)
  2541  0FF8  0850               	movf	(___fttol_lval+2),w
  2542  0FF9  00CA               	movwf	(?___fttol+2)
  2543  0FFA  084F               	movf	(___fttol_lval+1),w
  2544  0FFB  00C9               	movwf	(?___fttol+1)
  2545  0FFC  084E               	movf	(___fttol_lval),w
  2546  0FFD  00C8               	movwf	(?___fttol)
  2547                           
  2548  0FFE  2FFF               	goto	l202
  2549                           	line	40
  2550  0FFF                     l202:	
  2551  0FFF  0008               	return
  2552                           ; =============== function ___fttol ends ======
                                 =========
  2553                           
  2554                           GLOBAL __end_of___fttol
  2555  1000                     	__end_of___fttol:
  2556                           	FNSIZE	___fttol,7,4
  2557                           	signat	___fttol,4220
  2558                           	global	___ftmul
  2559                           	global	??___ftmul
  2560                           	global	?___ftmul
  2561                           
  2562                           ; *************** function ___ftmul ***********
                                 ****
  2563                           ; Defined at:
  2564                           ;		line 18 in file "C:\Program Files (x86)\HI-T
                                 ECH Software\PICC\PRO\9.65\sources\ftmul.c"
  2565                           ; Parameters:
  2566                           ;		f1          	offs:   0	type: float 
  2567                           ;		f2          	offs:   3	type: float 
  2568                           ; Auto variables:
  2569                           ;		sign1       	       	type: unsigned char 
  2570                           ;		exp1        	       	type: unsigned char 
  2571                           ;		cntr        	       	type: unsigned char 
  2572                           ;		f3          	       	type: float 
  2573                           ; Return value:
  2574                           ;		type: float 
  2575                           ;		size: 3
  2576                           ; Registers used:
  2577                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
                                 th, cstack
  2578                           ; Tracked objects:
  2579                           ;		On entry : 300/0
  2580                           ;		On exit  : 0/0
  2581                           ;		Unchanged: 0/0
  2582                           ; Data sizes:
  2583                           ;		Autos:    6
  2584                           ;		Params:   6
  2585                           ;		Temp:     1
  2586                           ;		Total:   13
  2587                           ; This function calls:
  2588                           ;		___ftunpack
  2589                           ;		___ftpack
  2590                           ; This function is called by:
  2591                           ;		_LCDWriteFloat
  2592                           ;		_main
  2593                           ; This function uses a non-reentrant model
  2594                           ; 
  2595                           	psect	text202,local,class=CODE,delta=2
  2596                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\ftmul.c"
  2597                           	line	18
  2598                           	
  2599  075D                     ___ftmul:	
  2600                           	opt stack 5
  2601                           ; Regs used in ___ftmul: [wreg-fsr0h+status,2+s
                                 tatus,0+pclath+cstack]
  2602                           	line	22
  2603                           	
  2604  075D  3000               	movlw	0
  2605  075E  00D1               	movwf	(___ftmul_f3)
  2606  075F  3000               	movlw	0
  2607  0760  00D2               	movwf	(___ftmul_f3+1)
  2608  0761  3000               	movlw	0
  2609  0762  00D3               	movwf	(___ftmul_f3+2)
  2610                           	line	23
  2611                           	
  2612  0763  304F               	movlw	((___ftmul_exp1))&0ffh
  2613                           	
  2614  0764  00DA               	movwf	(?___ftunpack)
  2615                           	
  2616  0765  3048               	movlw	((___ftmul_f1))&0ffh
  2617  0766  120A  158A  26D8   	fcall	___ftunpack
              120A  118A         
  2618  076B  1283               	bcf	status, 5	;RP0=0, select bank0
  2619  076C  1303               	bcf	status, 6	;RP1=0, select bank0
  2620                           	
  2621  076D  00CE               	movwf	(___ftmul_sign1)
  2622                           	line	24
  2623                           	
  2624  076E  3050               	movlw	((___ftmul_cntr))&0ffh
  2625                           	
  2626  076F  00DA               	movwf	(?___ftunpack)
  2627                           	
  2628  0770  304B               	movlw	((___ftmul_f2))&0ffh
  2629  0771  120A  158A  26D8   	fcall	___ftunpack
              120A  118A         
  2630  0776  1283               	bcf	status, 5	;RP0=0, select bank0
  2631  0777  1303               	bcf	status, 6	;RP1=0, select bank0
  2632  0778  00D4               	movwf	(??___ftmul+6+0)
  2633                           	
  2634  0779  0854               	movf	(??___ftmul+6+0),w
  2635  077A  06CE               	xorwf	(___ftmul_sign1),f
  2636                           	line	25
  2637                           	
  2638  077B  08D0               	movf	(___ftmul_cntr),f
  2639  077C  1D03               	skipz
  2640  077D  2F7F               	goto	u2950
  2641  077E  2F84               	goto	l600000846
  2642  077F                     u2950:
  2643                           	
  2644  077F  08CF               	movf	(___ftmul_exp1),f
  2645  0780  1D03               	skipz
  2646  0781  2F83               	goto	u2961
  2647  0782  2F84               	goto	u2960
  2648  0783                     u2961:
  2649  0783  2F8B               	goto	l145
  2650  0784                     u2960:
  2651                           	
  2652  0784                     l600000846:	
  2653                           	line	26
  2654                           	
  2655                           	
  2656  0784  0851               	movf	(___ftmul_f3),w
  2657  0785  00C8               	movwf	(?___ftmul)
  2658  0786  0852               	movf	(___ftmul_f3+1),w
  2659  0787  00C9               	movwf	(?___ftmul+1)
  2660  0788  0853               	movf	(___ftmul_f3+2),w
  2661  0789  00CA               	movwf	(?___ftmul+2)
  2662  078A  2FFF               	goto	l144
  2663                           	
  2664  078B                     l145:	
  2665                           	line	27
  2666                           	
  2667  078B  0850               	movf	(___ftmul_cntr),w
  2668  078C  3E7B               	addlw	07Bh
  2669  078D  00D4               	movwf	(??___ftmul+6+0)
  2670                           	
  2671  078E  0854               	movf	(??___ftmul+6+0),w
  2672  078F  07CF               	addwf	(___ftmul_exp1),f
  2673                           	line	28
  2674  0790  3007               	movlw	(07h)
  2675                           	
  2676  0791  00D0               	movwf	(___ftmul_cntr)
  2677                           	line	29
  2678                           	
  2679  0792                     l148:	
  2680                           	line	30
  2681                           	
  2682  0792  1C48               	btfss	(___ftmul_f1),(0)&7
  2683  0793  2F95               	goto	u2971
  2684  0794  2F96               	goto	u2970
  2685  0795                     u2971:
  2686  0795  2FA4               	goto	l149
  2687  0796                     u2970:
  2688                           	line	31
  2689                           	
  2690                           	
  2691  0796  084B               	movf	(___ftmul_f2),w
  2692  0797  07D1               	addwf	(___ftmul_f3),f
  2693  0798  084C               	movf	(___ftmul_f2+1),w
  2694  0799  1103               	clrz
  2695  079A  1803               	skipnc
  2696  079B  0A4C               	incf	(___ftmul_f2+1),w
  2697  079C  1D03               	skipz
  2698  079D  07D2               	addwf	(___ftmul_f3+1),f
  2699  079E  084D               	movf	(___ftmul_f2+2),w
  2700  079F  1103               	clrz
  2701  07A0  1803               	skipnc
  2702  07A1  0A4D               	incf	(___ftmul_f2+2),w
  2703  07A2  1D03               	skipz
  2704  07A3  07D3               	addwf	(___ftmul_f3+2),f
  2705                           	
  2706  07A4                     l149:	
  2707                           	line	32
  2708                           	
  2709  07A4  3001               	movlw	01h
  2710  07A5                     u2985:
  2711  07A5  1003               	clrc
  2712  07A6  0CCA               	rrf	(___ftmul_f1+2),f
  2713  07A7  0CC9               	rrf	(___ftmul_f1+1),f
  2714  07A8  0CC8               	rrf	(___ftmul_f1),f
  2715  07A9  3EFF               	addlw	-1
  2716  07AA  1D03               	skipz
  2717  07AB  2FA5               	goto	u2985
  2718                           
  2719                           	line	33
  2720                           	
  2721  07AC  3001               	movlw	01h
  2722  07AD                     u2995:
  2723  07AD  1003               	clrc
  2724  07AE  0DCB               	rlf	(___ftmul_f2),f
  2725  07AF  0DCC               	rlf	(___ftmul_f2+1),f
  2726  07B0  0DCD               	rlf	(___ftmul_f2+2),f
  2727  07B1  3EFF               	addlw	-1
  2728  07B2  1D03               	skipz
  2729  07B3  2FAD               	goto	u2995
  2730                           	line	34
  2731                           	
  2732                           	
  2733  07B4  3001               	movlw	low(01h)
  2734  07B5  02D0               	subwf	(___ftmul_cntr),f
  2735  07B6  1D03               	btfss	status,2
  2736  07B7  2FB9               	goto	u3001
  2737  07B8  2FBA               	goto	u3000
  2738  07B9                     u3001:
  2739  07B9  2F92               	goto	l148
  2740  07BA                     u3000:
  2741                           	
  2742  07BA                     l147:	
  2743                           	line	35
  2744  07BA  3009               	movlw	(09h)
  2745                           	
  2746  07BB  00D0               	movwf	(___ftmul_cntr)
  2747                           	line	36
  2748                           	
  2749  07BC                     l152:	
  2750                           	line	37
  2751                           	
  2752  07BC  1C48               	btfss	(___ftmul_f1),(0)&7
  2753  07BD  2FBF               	goto	u3011
  2754  07BE  2FC0               	goto	u3010
  2755  07BF                     u3011:
  2756  07BF  2FCE               	goto	l153
  2757  07C0                     u3010:
  2758                           	line	38
  2759                           	
  2760                           	
  2761  07C0  084B               	movf	(___ftmul_f2),w
  2762  07C1  07D1               	addwf	(___ftmul_f3),f
  2763  07C2  084C               	movf	(___ftmul_f2+1),w
  2764  07C3  1103               	clrz
  2765  07C4  1803               	skipnc
  2766  07C5  0A4C               	incf	(___ftmul_f2+1),w
  2767  07C6  1D03               	skipz
  2768  07C7  07D2               	addwf	(___ftmul_f3+1),f
  2769  07C8  084D               	movf	(___ftmul_f2+2),w
  2770  07C9  1103               	clrz
  2771  07CA  1803               	skipnc
  2772  07CB  0A4D               	incf	(___ftmul_f2+2),w
  2773  07CC  1D03               	skipz
  2774  07CD  07D3               	addwf	(___ftmul_f3+2),f
  2775                           	
  2776  07CE                     l153:	
  2777                           	line	39
  2778                           	
  2779  07CE  3001               	movlw	01h
  2780  07CF                     u3025:
  2781  07CF  1003               	clrc
  2782  07D0  0CCA               	rrf	(___ftmul_f1+2),f
  2783  07D1  0CC9               	rrf	(___ftmul_f1+1),f
  2784  07D2  0CC8               	rrf	(___ftmul_f1),f
  2785  07D3  3EFF               	addlw	-1
  2786  07D4  1D03               	skipz
  2787  07D5  2FCF               	goto	u3025
  2788                           
  2789                           	line	40
  2790                           	
  2791  07D6  3001               	movlw	01h
  2792  07D7                     u3035:
  2793  07D7  1003               	clrc
  2794  07D8  0CD3               	rrf	(___ftmul_f3+2),f
  2795  07D9  0CD2               	rrf	(___ftmul_f3+1),f
  2796  07DA  0CD1               	rrf	(___ftmul_f3),f
  2797  07DB  3EFF               	addlw	-1
  2798  07DC  1D03               	skipz
  2799  07DD  2FD7               	goto	u3035
  2800                           
  2801                           	line	41
  2802                           	
  2803                           	
  2804  07DE  3001               	movlw	low(01h)
  2805  07DF  02D0               	subwf	(___ftmul_cntr),f
  2806  07E0  1D03               	btfss	status,2
  2807  07E1  2FE3               	goto	u3041
  2808  07E2  2FE4               	goto	u3040
  2809  07E3                     u3041:
  2810  07E3  2FBC               	goto	l152
  2811  07E4                     u3040:
  2812                           	
  2813  07E4                     l151:	
  2814                           	line	42
  2815                           	
  2816  07E4  084F               	movf	(___ftmul_exp1),w
  2817                           	
  2818  07E5  00DA               	movwf	(?___ftpack)
  2819                           	
  2820  07E6  3051               	movlw	((___ftmul_f3))&0ffh
  2821  07E7  120A  118A  23BE   	fcall	___ftpack
              120A  118A         
  2822                           	line	43
  2823  07EC  1283               	bcf	status, 5	;RP0=0, select bank0
  2824  07ED  1303               	bcf	status, 6	;RP1=0, select bank0
  2825                           	
  2826  07EE  08CE               	movf	(___ftmul_sign1),f
  2827  07EF  1D03               	skipz
  2828  07F0  2FF2               	goto	u3050
  2829  07F1  2FF8               	goto	l154
  2830  07F2                     u3050:
  2831                           	line	44
  2832                           	
  2833  07F2  3000               	movlw	0
  2834  07F3  04D1               	iorwf	(___ftmul_f3),f
  2835  07F4  3000               	movlw	0
  2836  07F5  04D2               	iorwf	(___ftmul_f3+1),f
  2837  07F6  3080               	movlw	080h
  2838  07F7  04D3               	iorwf	(___ftmul_f3+2),f
  2839                           	
  2840  07F8                     l154:	
  2841                           	line	45
  2842                           	
  2843                           	
  2844  07F8  0851               	movf	(___ftmul_f3),w
  2845  07F9  00C8               	movwf	(?___ftmul)
  2846  07FA  0852               	movf	(___ftmul_f3+1),w
  2847  07FB  00C9               	movwf	(?___ftmul+1)
  2848  07FC  0853               	movf	(___ftmul_f3+2),w
  2849  07FD  00CA               	movwf	(?___ftmul+2)
  2850  07FE  2FFF               	goto	l144
  2851                           	line	46
  2852  07FF                     l144:	
  2853  07FF  0008               	return
  2854                           ; =============== function ___ftmul ends ======
                                 =========
  2855                           
  2856                           GLOBAL __end_of___ftmul
  2857  0800                     	__end_of___ftmul:
  2858                           	FNSIZE	___ftmul,7,6
  2859                           	signat	___ftmul,8315
  2860                           	global	___ftge
  2861                           	global	??___ftge
  2862                           	global	?___ftge
  2863                           
  2864                           ; *************** function ___ftge ************
                                 ***
  2865                           ; Defined at:
  2866                           ;		line 5 in file "C:\Program Files (x86)\HI-TE
                                 CH Software\PICC\PRO\9.65\sources\ftge.c"
  2867                           ; Parameters:
  2868                           ;		ff1         	offs:   0	type: float 
  2869                           ;		ff2         	offs:   3	type: float 
  2870                           ; Auto variables:
  2871                           ;		None
  2872                           ; Return value:
  2873                           ;		type: bit 
  2874                           ;		size: 0
  2875                           ; Registers used:
  2876                           ;		wreg, status,2, status,0
  2877                           ; Tracked objects:
  2878                           ;		On entry : 300/0
  2879                           ;		On exit  : 0/0
  2880                           ;		Unchanged: 0/0
  2881                           ; Data sizes:
  2882                           ;		Autos:    0
  2883                           ;		Params:   6
  2884                           ;		Temp:     0
  2885                           ;		Total:    6
  2886                           ; This function calls:
  2887                           ;		Nothing
  2888                           ; This function is called by:
  2889                           ;		_LCDWriteFloat
  2890                           ;		_main
  2891                           ; This function uses a non-reentrant model
  2892                           ; 
  2893                           	psect	text203,local,class=CODE,delta=2
  2894                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\ftge.c"
  2895                           	line	5
  2896                           	
  2897  0EA0                     ___ftge:	
  2898                           	opt stack 5
  2899                           ; Regs used in ___ftge: [wreg+status,2+status,0
                                 ]
  2900                           	line	6
  2901                           	
  2902  0EA0  1FCA               	btfss	(___ftge_ff1+2),(23)&7
  2903  0EA1  2EA3               	goto	u3061
  2904  0EA2  2EA4               	goto	u3060
  2905  0EA3                     u3061:
  2906  0EA3  2EB1               	goto	l272
  2907  0EA4                     u3060:
  2908                           	line	7
  2909                           	
  2910  0EA4  0848               	movf	(___ftge_ff1),w
  2911  0EA5  3C00               	sublw	low(0800000h)
  2912                           	
  2913  0EA6  00C8               	movwf	(___ftge_ff1)
  2914  0EA7  0849               	movf	(___ftge_ff1+1),w
  2915  0EA8  1C03               	skipc
  2916  0EA9  0A49               	incf	(___ftge_ff1+1),w
  2917  0EAA  3C00               	sublw	high(0800000h)
  2918  0EAB  00C9               	movwf	1+(___ftge_ff1)
  2919  0EAC  084A               	movf	(___ftge_ff1+2),w
  2920  0EAD  1C03               	skipc
  2921  0EAE  0A4A               	incf	(___ftge_ff1+2),w
  2922  0EAF  3C80               	sublw	low highword(0800000h)
  2923  0EB0  00CA               	movwf	2+(___ftge_ff1)
  2924                           	
  2925  0EB1                     l272:	
  2926                           	line	8
  2927                           	
  2928  0EB1  1FCD               	btfss	(___ftge_ff2+2),(23)&7
  2929  0EB2  2EB4               	goto	u3071
  2930  0EB3  2EB5               	goto	u3070
  2931  0EB4                     u3071:
  2932  0EB4  2EC2               	goto	l273
  2933  0EB5                     u3070:
  2934                           	line	9
  2935                           	
  2936  0EB5  084B               	movf	(___ftge_ff2),w
  2937  0EB6  3C00               	sublw	low(0800000h)
  2938                           	
  2939  0EB7  00CB               	movwf	(___ftge_ff2)
  2940  0EB8  084C               	movf	(___ftge_ff2+1),w
  2941  0EB9  1C03               	skipc
  2942  0EBA  0A4C               	incf	(___ftge_ff2+1),w
  2943  0EBB  3C00               	sublw	high(0800000h)
  2944  0EBC  00CC               	movwf	1+(___ftge_ff2)
  2945  0EBD  084D               	movf	(___ftge_ff2+2),w
  2946  0EBE  1C03               	skipc
  2947  0EBF  0A4D               	incf	(___ftge_ff2+2),w
  2948  0EC0  3C80               	sublw	low highword(0800000h)
  2949  0EC1  00CD               	movwf	2+(___ftge_ff2)
  2950                           	
  2951  0EC2                     l273:	
  2952                           	line	10
  2953                           	
  2954  0EC2  3080               	movlw	080h
  2955  0EC3  06CA               	xorwf	(___ftge_ff1+2),f
  2956                           	line	11
  2957                           	
  2958  0EC4  3080               	movlw	080h
  2959  0EC5  06CD               	xorwf	(___ftge_ff2+2),f
  2960                           	line	12
  2961                           	
  2962                           	
  2963  0EC6  084D               	movf	(___ftge_ff2+2),w
  2964  0EC7  024A               	subwf	(___ftge_ff1+2),w
  2965  0EC8  1D03               	skipz
  2966  0EC9  2ED0               	goto	u3085
  2967  0ECA  084C               	movf	(___ftge_ff2+1),w
  2968  0ECB  0249               	subwf	(___ftge_ff1+1),w
  2969  0ECC  1D03               	skipz
  2970  0ECD  2ED0               	goto	u3085
  2971  0ECE  084B               	movf	(___ftge_ff2),w
  2972  0ECF  0248               	subwf	(___ftge_ff1),w
  2973  0ED0                     u3085:
  2974  0ED0  1803               	skipnc
  2975  0ED1  2ED3               	goto	u3097
  2976  0ED2  2ED5               	goto	u3098
  2977  0ED3                     u3097:
  2978  0ED3  1403               	bsf	status,0
  2979  0ED4  2ED6               	goto	u3099
  2980  0ED5                     u3098:
  2981  0ED5  1003               	bcf	status,0
  2982  0ED6                     u3099:
  2983  0ED6  2ED7               	goto	l271
  2984                           	line	13
  2985  0ED7                     l271:	
  2986  0ED7  0008               	return
  2987                           ; =============== function ___ftge ends =======
                                 ========
  2988                           
  2989                           GLOBAL __end_of___ftge
  2990  0ED8                     	__end_of___ftge:
  2991                           	FNSIZE	___ftge,0,6
  2992                           	signat	___ftge,8312
  2993                           	global	___awtoft
  2994                           	global	??___awtoft
  2995                           	global	?___awtoft
  2996                           
  2997                           ; *************** function ___awtoft **********
                                 *****
  2998                           ; Defined at:
  2999                           ;		line 16 in file "C:\Program Files (x86)\HI-T
                                 ECH Software\PICC\PRO\9.65\sources\awtoft.c"
  3000                           ; Parameters:
  3001                           ;		c           	offs:   0	type: int 
  3002                           ; Auto variables:
  3003                           ;		f1          	       	type: float 
  3004                           ; Return value:
  3005                           ;		type: float 
  3006                           ;		size: 3
  3007                           ; Registers used:
  3008                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
                                 th, cstack
  3009                           ; Tracked objects:
  3010                           ;		On entry : 300/0
  3011                           ;		On exit  : 0/0
  3012                           ;		Unchanged: 0/0
  3013                           ; Data sizes:
  3014                           ;		Autos:    3
  3015                           ;		Params:   3
  3016                           ;		Temp:     3
  3017                           ;		Total:    9
  3018                           ; This function calls:
  3019                           ;		___ftpack
  3020                           ;		___ftneg
  3021                           ; This function is called by:
  3022                           ;		_LCDWriteFloat
  3023                           ; This function uses a non-reentrant model
  3024                           ; 
  3025                           	psect	text204,local,class=CODE,delta=2
  3026                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\awtoft.c"
  3027                           	line	16
  3028                           	
  3029  01EE                     ___awtoft:	
  3030                           	opt stack 5
  3031                           ; Regs used in ___awtoft: [wreg-fsr0h+status,2+
                                 status,0+pclath+cstack]
  3032                           	line	19
  3033                           	
  3034  01EE  0849               	movf	((___awtoft_c+1)),w
  3035  01EF  0448               	iorwf	((___awtoft_c)),w
  3036  01F0  1D03               	skipz
  3037  01F1  29F3               	goto	u3101
  3038  01F2  29F4               	goto	u3100
  3039  01F3                     u3101:
  3040  01F3  29FB               	goto	l222
  3041  01F4                     u3100:
  3042                           	line	20
  3043                           	
  3044  01F4  3000               	movlw	0x0
  3045  01F5  00C8               	movwf	(?___awtoft)
  3046  01F6  3000               	movlw	0x0
  3047  01F7  00C9               	movwf	(?___awtoft+1)
  3048  01F8  3000               	movlw	0x0
  3049  01F9  00CA               	movwf	(?___awtoft+2)
  3050  01FA  2A3D               	goto	l221
  3051                           	
  3052  01FB                     l222:	
  3053                           	line	21
  3054                           	
  3055  01FB  0848               	movf	(___awtoft_c),w
  3056  01FC  00CE               	movwf	(??___awtoft+3+0)
  3057  01FD  0849               	movf	(___awtoft_c+1),w
  3058  01FE  00CF               	movwf	(??___awtoft+3+0+1)
  3059  01FF  3000               	movlw	0
  3060  0200  1BCF               	btfsc	(??___awtoft+3+0+1),7
  3061  0201  30FF               	movlw	255
  3062  0202  00D0               	movwf	(??___awtoft+3+0+2)
  3063                           	
  3064  0203  084E               	movf	(??___awtoft+3+0),w
  3065  0204  00CB               	movwf	(___awtoft_f1)
  3066  0205  084F               	movf	(??___awtoft+3+1),w
  3067  0206  00CC               	movwf	(___awtoft_f1+1)
  3068  0207  0850               	movf	(??___awtoft+3+2),w
  3069  0208  00CD               	movwf	(___awtoft_f1+2)
  3070                           	line	22
  3071                           	
  3072  0209  1FC9               	btfss	(___awtoft_c+1),7
  3073  020A  2A0C               	goto	u3111
  3074  020B  2A0D               	goto	u3110
  3075  020C                     u3111:
  3076  020C  2A15               	goto	l223
  3077  020D                     u3110:
  3078                           	line	23
  3079                           	
  3080  020D  09CB               	comf	(___awtoft_f1),f
  3081  020E  09CC               	comf	(___awtoft_f1+1),f
  3082  020F  09CD               	comf	(___awtoft_f1+2),f
  3083  0210  0ACB               	incf	(___awtoft_f1),f
  3084  0211  1903               	skipnz
  3085  0212  0ACC               	incf	(___awtoft_f1+1),f
  3086  0213  1903               	skipnz
  3087  0214  0ACD               	incf	(___awtoft_f1+2),f
  3088                           	
  3089                           	
  3090  0215                     l223:	
  3091                           	line	24
  3092  0215  308E               	movlw	(08Eh)
  3093                           	
  3094  0216  00DA               	movwf	(?___ftpack)
  3095                           	
  3096  0217  304B               	movlw	((___awtoft_f1))&0ffh
  3097  0218  120A  118A  23BE   	fcall	___ftpack
              120A  118A         
  3098                           	line	25
  3099  021D  1283               	bcf	status, 5	;RP0=0, select bank0
  3100  021E  1303               	bcf	status, 6	;RP1=0, select bank0
  3101                           	
  3102  021F  1FC9               	btfss	(___awtoft_c+1),7
  3103  0220  2A22               	goto	u3121
  3104  0221  2A23               	goto	u3120
  3105  0222                     u3121:
  3106  0222  2A36               	goto	l224
  3107  0223                     u3120:
  3108                           	line	26
  3109                           	
  3110                           	
  3111  0223  084B               	movf	(___awtoft_f1),w
  3112  0224  00D1               	movwf	(?___ftneg)
  3113  0225  084C               	movf	(___awtoft_f1+1),w
  3114  0226  00D2               	movwf	(?___ftneg+1)
  3115  0227  084D               	movf	(___awtoft_f1+2),w
  3116  0228  00D3               	movwf	(?___ftneg+2)
  3117  0229  120A  158A  2522   	fcall	___ftneg
              120A  118A         
  3118  022E  1283               	bcf	status, 5	;RP0=0, select bank0
  3119  022F  1303               	bcf	status, 6	;RP1=0, select bank0
  3120                           	
  3121  0230  0851               	movf	(0+?___ftneg),w
  3122  0231  00CB               	movwf	(___awtoft_f1)
  3123  0232  0852               	movf	(1+?___ftneg),w
  3124  0233  00CC               	movwf	(___awtoft_f1+1)
  3125  0234  0853               	movf	(2+?___ftneg),w
  3126  0235  00CD               	movwf	(___awtoft_f1+2)
  3127                           	
  3128  0236                     l224:	
  3129                           	line	27
  3130                           	
  3131                           	
  3132  0236  084B               	movf	(___awtoft_f1),w
  3133  0237  00C8               	movwf	(?___awtoft)
  3134  0238  084C               	movf	(___awtoft_f1+1),w
  3135  0239  00C9               	movwf	(?___awtoft+1)
  3136  023A  084D               	movf	(___awtoft_f1+2),w
  3137  023B  00CA               	movwf	(?___awtoft+2)
  3138  023C  2A3D               	goto	l221
  3139                           	line	28
  3140  023D                     l221:	
  3141  023D  0008               	return
  3142                           ; =============== function ___awtoft ends =====
                                 ==========
  3143                           
  3144                           GLOBAL __end_of___awtoft
  3145  023E                     	__end_of___awtoft:
  3146                           	FNSIZE	___awtoft,6,3
  3147                           	signat	___awtoft,4219
  3148                           	global	_LCDWriteString
  3149                           	global	??_LCDWriteString
  3150                           	global	?_LCDWriteString
  3151                           
  3152                           ; *************** function _LCDWriteString ****
                                 ***********
  3153                           ; Defined at:
  3154                           ;		line 25 in file "C:\Users\hardik\Desktop\new
                                 \LCD.c"
  3155                           ; Parameters:
  3156                           ;		lcd_string  	reg:   wr	type: PTR const unsig
                                 ned char ; Largest target is 17
  3157                           ;		 -> STR_7(11), STR_6(12), STR_5(13), STR_4(1
                                 6), 
  3158                           ;		 -> STR_3(2), STR_2(3), STR_1(17), 
  3159                           ; Auto variables:
  3160                           ;		lcd_string  	       	type: PTR const unsigne
                                 d char ; Largest target is 17
  3161                           ;		 -> STR_7(11), STR_6(12), STR_5(13), STR_4(1
                                 6), 
  3162                           ;		 -> STR_3(2), STR_2(3), STR_1(17), 
  3163                           ; Return value:
  3164                           ;		type: void 
  3165                           ;		size: 0
  3166                           ; Registers used:
  3167                           ;		wreg, status,2, status,0, pclath, cstack
  3168                           ; Tracked objects:
  3169                           ;		On entry : 0/0
  3170                           ;		On exit  : 0/0
  3171                           ;		Unchanged: 0/0
  3172                           ; Data sizes:
  3173                           ;		Autos:    1
  3174                           ;		Params:   0
  3175                           ;		Temp:     1
  3176                           ;		Total:    2
  3177                           ; This function calls:
  3178                           ;		_LCDWriteData
  3179                           ; This function is called by:
  3180                           ;		_LCDDisplayInitializing
  3181                           ;		_LCDWriteFloat
  3182                           ;		_main
  3183                           ; This function uses a non-reentrant model
  3184                           ; 
  3185                           	psect	text205,local,class=CODE,delta=2
  3186                           	file	"C:\Users\hardik\Desktop\new\LCD.c"
  3187                           	line	25
  3188                           ;LCD.c: 24: void LCDWriteString(const char *lcd
                                 _string)
  3189                           ;LCD.c: 25: {
  3190                           	
  3191  0D9A                     _LCDWriteString:	
  3192                           	opt stack 5
  3193                           ; Regs used in _LCDWriteString: [wreg+status,2+
                                 status,0+pclath+cstack]
  3194                           ;_LCDWriteString_lcd_string stored from wreg
  3195  0D9A  1283               	bcf	status, 5	;RP0=0, select bank0
  3196  0D9B  1303               	bcf	status, 6	;RP1=0, select bank0
  3197                           	
  3198  0D9C  00C8               	movwf	(_LCDWriteString_lcd_string)
  3199                           	line	26
  3200                           ;LCD.c: 26: while(*lcd_string)
  3201  0D9D  2DAF               	goto	l12
  3202                           	
  3203  0D9E                     l13:	
  3204                           	line	28
  3205                           ;LCD.c: 27: {
  3206                           ;LCD.c: 28: LCDWriteData(*lcd_string++);
  3207                           	
  3208  0D9E  0848               	movf	(_LCDWriteString_lcd_string),w
  3209                           	FNCALL _LCDWriteString,stringtab
  3210  0D9F  120A  118A  2709   	fcall	stringdir
              120A  158A         
  3211  0DA4  120A  158A  2538   	fcall	_LCDWriteData
              120A  158A         
  3212  0DA9  3001               	movlw	(01h)
  3213  0DAA  1283               	bcf	status, 5	;RP0=0, select bank0
  3214  0DAB  1303               	bcf	status, 6	;RP1=0, select bank0
  3215  0DAC  00C9               	movwf	(??_LCDWriteString+1+0)
  3216                           	
  3217  0DAD  0849               	movf	(??_LCDWriteString+1+0),w
  3218  0DAE  07C8               	addwf	(_LCDWriteString_lcd_string),f
  3219                           	line	29
  3220                           	
  3221  0DAF                     l12:	
  3222                           	line	26
  3223  0DAF  1283               	bcf	status, 5	;RP0=0, select bank0
  3224  0DB0  1303               	bcf	status, 6	;RP1=0, select bank0
  3225                           	
  3226  0DB1  0848               	movf	(_LCDWriteString_lcd_string),w
  3227                           	FNCALL _LCDWriteString,stringtab
  3228  0DB2  120A  118A  2709   	fcall	stringdir
              120A  158A         
  3229  0DB7  3800               	iorlw	0
  3230  0DB8  1D03               	skipz
  3231  0DB9  2DBB               	goto	u2681
  3232  0DBA  2DBC               	goto	u2680
  3233  0DBB                     u2681:
  3234  0DBB  2D9E               	goto	l13
  3235  0DBC                     u2680:
  3236                           	
  3237  0DBC                     l14:	
  3238                           	line	30
  3239                           ;LCD.c: 29: }
  3240                           ;LCD.c: 30: }
  3241  0DBC                     l11:	
  3242  0DBC  0008               	return
  3243                           ; =============== function _LCDWriteString ends
                                  ===============
  3244                           
  3245                           GLOBAL __end_of_LCDWriteString
  3246  0DBD                     	__end_of_LCDWriteString:
  3247                           	FNSIZE	_LCDWriteString,2,0
  3248                           	signat	_LCDWriteString,4216
  3249                           	global	___ftsub
  3250                           	global	??___ftsub
  3251                           	global	?___ftsub
  3252                           
  3253                           ; *************** function ___ftsub ***********
                                 ****
  3254                           ; Defined at:
  3255                           ;		line 17 in file "C:\Program Files (x86)\HI-T
                                 ECH Software\PICC\PRO\9.65\sources\ftsub.c"
  3256                           ; Parameters:
  3257                           ;		f1          	offs:   0	type: float 
  3258                           ;		f2          	offs:   3	type: float 
  3259                           ; Auto variables:
  3260                           ;		None
  3261                           ; Return value:
  3262                           ;		type: float 
  3263                           ;		size: 3
  3264                           ; Registers used:
  3265                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
                                 th, cstack
  3266                           ; Tracked objects:
  3267                           ;		On entry : 300/0
  3268                           ;		On exit  : 0/0
  3269                           ;		Unchanged: 0/0
  3270                           ; Data sizes:
  3271                           ;		Autos:    0
  3272                           ;		Params:   6
  3273                           ;		Temp:     0
  3274                           ;		Total:    6
  3275                           ; This function calls:
  3276                           ;		___ftadd
  3277                           ; This function is called by:
  3278                           ;		_LCDWriteFloat
  3279                           ; This function uses a non-reentrant model
  3280                           ; 
  3281                           	psect	text206,local,class=CODE,delta=2
  3282                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\ftsub.c"
  3283                           	line	17
  3284                           	
  3285  0D7D                     ___ftsub:	
  3286                           	opt stack 5
  3287                           ; Regs used in ___ftsub: [wreg-fsr0h+status,2+s
                                 tatus,0+pclath+cstack]
  3288                           	line	18
  3289                           	
  3290  0D7D  3080               	movlw	080h
  3291  0D7E  06CD               	xorwf	(___ftsub_f2+2),f
  3292                           	line	19
  3293                           	
  3294                           	
  3295  0D7F  084B               	movf	(___ftsub_f2),w
  3296  0D80  00D1               	movwf	(0+(?___ftadd)+03h)
  3297  0D81  084C               	movf	(___ftsub_f2+1),w
  3298  0D82  00D2               	movwf	(1+(?___ftadd)+03h)
  3299  0D83  084D               	movf	(___ftsub_f2+2),w
  3300  0D84  00D3               	movwf	(2+(?___ftadd)+03h)
  3301                           	
  3302                           	
  3303  0D85  0848               	movf	(___ftsub_f1),w
  3304  0D86  00CE               	movwf	(?___ftadd)
  3305  0D87  0849               	movf	(___ftsub_f1+1),w
  3306  0D88  00CF               	movwf	(?___ftadd+1)
  3307  0D89  084A               	movf	(___ftsub_f1+2),w
  3308  0D8A  00D0               	movwf	(?___ftadd+2)
  3309  0D8B  120A  118A  2484   	fcall	___ftadd
              120A  158A         
  3310  0D90  1283               	bcf	status, 5	;RP0=0, select bank0
  3311  0D91  1303               	bcf	status, 6	;RP1=0, select bank0
  3312                           	
  3313  0D92  084E               	movf	(0+?___ftadd),w
  3314  0D93  00C8               	movwf	(?___ftsub)
  3315  0D94  084F               	movf	(1+?___ftadd),w
  3316  0D95  00C9               	movwf	(?___ftsub+1)
  3317  0D96  0850               	movf	(2+?___ftadd),w
  3318  0D97  00CA               	movwf	(?___ftsub+2)
  3319  0D98  2D99               	goto	l135
  3320                           	line	20
  3321  0D99                     l135:	
  3322  0D99  0008               	return
  3323                           ; =============== function ___ftsub ends ======
                                 =========
  3324                           
  3325                           GLOBAL __end_of___ftsub
  3326  0D9A                     	__end_of___ftsub:
  3327                           	FNSIZE	___ftsub,0,6
  3328                           	signat	___ftsub,8315
  3329                           	global	___ftadd
  3330                           	global	??___ftadd
  3331                           	global	?___ftadd
  3332                           
  3333                           ; *************** function ___ftadd ***********
                                 ****
  3334                           ; Defined at:
  3335                           ;		line 17 in file "C:\Program Files (x86)\HI-T
                                 ECH Software\PICC\PRO\9.65\sources\ftadd.c"
  3336                           ; Parameters:
  3337                           ;		f1          	offs:   0	type: float 
  3338                           ;		f2          	offs:   3	type: float 
  3339                           ; Auto variables:
  3340                           ;		sign2       	       	type: unsigned char 
  3341                           ;		cntr        	       	type: unsigned char 
  3342                           ;		sign1       	       	type: unsigned char 
  3343                           ;		exp2        	       	type: unsigned char 
  3344                           ;		exp1        	       	type: unsigned char 
  3345                           ; Return value:
  3346                           ;		type: float 
  3347                           ;		size: 3
  3348                           ; Registers used:
  3349                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
                                 th, cstack
  3350                           ; Tracked objects:
  3351                           ;		On entry : 300/0
  3352                           ;		On exit  : 0/0
  3353                           ;		Unchanged: 0/0
  3354                           ; Data sizes:
  3355                           ;		Autos:    5
  3356                           ;		Params:   6
  3357                           ;		Temp:     1
  3358                           ;		Total:   12
  3359                           ; This function calls:
  3360                           ;		___ftunpack
  3361                           ;		___ftpack
  3362                           ; This function is called by:
  3363                           ;		_LCDWriteFloat
  3364                           ;		_main
  3365                           ;		___ftsub
  3366                           ; This function uses a non-reentrant model
  3367                           ; 
  3368                           	psect	text207,local,class=CODE,delta=2
  3369                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\ftadd.c"
  3370                           	line	17
  3371                           	
  3372  0484                     ___ftadd:	
  3373                           	opt stack 4
  3374                           ; Regs used in ___ftadd: [wreg-fsr0h+status,2+s
                                 tatus,0+pclath+cstack]
  3375                           	line	20
  3376  0484  2C85               	goto	l104
  3377                           	line	21
  3378                           	
  3379  0485                     l104:	
  3380                           	line	22
  3381                           	
  3382  0485  3058               	movlw	((___ftadd_exp1))&0ffh
  3383                           	
  3384  0486  00DA               	movwf	(?___ftunpack)
  3385                           	
  3386  0487  304E               	movlw	((___ftadd_f1))&0ffh
  3387  0488  120A  158A  26D8   	fcall	___ftunpack
              120A  118A         
  3388  048D  1283               	bcf	status, 5	;RP0=0, select bank0
  3389  048E  1303               	bcf	status, 6	;RP1=0, select bank0
  3390                           	
  3391  048F  00D6               	movwf	(___ftadd_sign1)
  3392                           	line	23
  3393                           	
  3394  0490  08D8               	movf	(___ftadd_exp1),f
  3395  0491  1D03               	skipz
  3396  0492  2C94               	goto	u3131
  3397  0493  2C95               	goto	u3130
  3398  0494                     u3131:
  3399  0494  2C9C               	goto	l105
  3400  0495                     u3130:
  3401                           	line	24
  3402                           	
  3403                           	
  3404  0495  0851               	movf	(___ftadd_f2),w
  3405  0496  00CE               	movwf	(?___ftadd)
  3406  0497  0852               	movf	(___ftadd_f2+1),w
  3407  0498  00CF               	movwf	(?___ftadd+1)
  3408  0499  0853               	movf	(___ftadd_f2+2),w
  3409  049A  00D0               	movwf	(?___ftadd+2)
  3410  049B  2DA1               	goto	l103
  3411                           	
  3412  049C                     l105:	
  3413                           	line	25
  3414                           	
  3415  049C  3057               	movlw	((___ftadd_exp2))&0ffh
  3416                           	
  3417  049D  00DA               	movwf	(?___ftunpack)
  3418                           	
  3419  049E  3051               	movlw	((___ftadd_f2))&0ffh
  3420  049F  120A  158A  26D8   	fcall	___ftunpack
              120A  118A         
  3421  04A4  1283               	bcf	status, 5	;RP0=0, select bank0
  3422  04A5  1303               	bcf	status, 6	;RP1=0, select bank0
  3423                           	
  3424  04A6  00D4               	movwf	(___ftadd_sign2)
  3425                           	line	26
  3426                           	
  3427  04A7  08D7               	movf	(___ftadd_exp2),f
  3428  04A8  1D03               	skipz
  3429  04A9  2CAB               	goto	u3140
  3430  04AA  2D90               	goto	l106
  3431  04AB                     u3140:
  3432                           	line	27
  3433  04AB  3006               	movlw	(06h)
  3434                           	
  3435  04AC  00D5               	movwf	(___ftadd_cntr)
  3436+                          	line	29
  3437+                          	
  3438+ 04AD  0857               	movf	(___ftadd_exp2),w
  3439+                          	
  3440+ 04AE  0258               	subwf	(___ftadd_exp1),w
  3441+ 04AF  1803               	skipnc
  3442+ 04B0  2CB2               	goto	u3151
  3443+ 04B1  2CB3               	goto	u3150
  3444+ 04B2                     u3151:
  3445+ 04B2  2CF2               	goto	l107
  3446+ 04B3                     u3150:
  3447+                          	line	30
  3448+                          	
  3449+                          	
  3450+ 04B3  0857               	movf	(___ftadd_exp2),w
  3451+ 04B4  00D9               	movwf	(??___ftadd+5+0)
  3452+ 04B5  0858               	movf	(___ftadd_exp1),w
  3453+ 04B6  02D9               	subwf	(??___ftadd+5+0),f
  3454+ 04B7  3019               	movlw	(019h)
  3455+ 04B8  0259               	subwf	0+(??___ftadd+5+0),w
  3456+ 04B9  1C03               	skipc
  3457+ 04BA  2CBC               	goto	u3161
  3458+ 04BB  2CBD               	goto	u3160
  3459+ 04BC                     u3161:
  3460+ 04BC  2CC8               	goto	l112
  3461+ 04BD                     u3160:
  3462+                          	line	32
  3463+                          	
  3464+ 04BD  3000               	movlw	0
  3465+ 04BE  00CE               	movwf	(___ftadd_f1)
  3466+ 04BF  3000               	movlw	0
  3467+ 04C0  00CF               	movwf	(___ftadd_f1+1)
  3468+ 04C1  3000               	movlw	0
  3469+ 04C2  00D0               	movwf	(___ftadd_f1+2)
  3470+                          	line	33
  3471+                          	
  3472+ 04C3  0857               	movf	(___ftadd_exp2),w
  3473+                          	
  3474+ 04C4  00D8               	movwf	(___ftadd_exp1)
  3475+                          	line	34
  3476+                          	
  3477+ 04C5  0854               	movf	(___ftadd_sign2),w
  3478+                          	
  3479+ 04C6  00D6               	movwf	(___ftadd_sign1)
  3480+                          	line	35
  3481+ 04C7  2CF1               	goto	l109
  3482+                          	line	38
  3483+                          	
  3484+ 04C8                     l112:	
  3485+                          	line	39
  3486+                          	
  3487+ 04C8  3001               	movlw	01h
  3488+ 04C9                     u3175:
  3489+ 04C9  1003               	clrc
  3490+ 04CA  0DD1               	rlf	(___ftadd_f2),f
  3491+ 04CB  0DD2               	rlf	(___ftadd_f2+1),f
  3492+ 04CC  0DD3               	rlf	(___ftadd_f2+2),f
  3493+ 04CD  3EFF               	addlw	-1
  3494+ 04CE  1D03               	skipz
  3495+ 04CF  2CC9               	goto	u3175
  3496+                          	line	40
  3497+                          	
  3498+                          	
  3499+ 04D0  3001               	movlw	low(01h)
  3500+ 04D1  02D7               	subwf	(___ftadd_exp2),f
  3501+                          	line	41
  3502+                          	
  3503+                          	
  3504+ 04D2  0857               	movf	(___ftadd_exp2),w
  3505+ 04D3  0658               	xorwf	(___ftadd_exp1),w
  3506+ 04D4  1903               	skipnz
  3507+ 04D5  2CD7               	goto	u3181
  3508+ 04D6  2CD8               	goto	u3180
  3509+ 04D7                     u3181:
  3510+ 04D7  2CDE               	goto	l111
  3511+ 04D8                     u3180:
  3512+                          	
  3513+                          	
  3514+ 04D8  3001               	movlw	low(01h)
  3515+ 04D9  02D5               	subwf	(___ftadd_cntr),f
  3516+ 04DA  1D03               	btfss	status,2
  3517+ 04DB  2CDD               	goto	u3191
  3518+ 04DC  2CDE               	goto	u3190
  3519+ 04DD                     u3191:
  3520+ 04DD  2CC8               	goto	l112
  3521+ 04DE                     u3190:
  3522+                          	
  3523+ 04DE                     l600000848:	
  3524+                          	
  3525+ 04DE                     l111:	
  3526+                          	line	42
  3527+ 04DE  2CEB               	goto	l113
  3528+                          	
  3529+ 04DF                     l114:	
  3530+                          	line	43
  3531+                          	
  3532+ 04DF  3001               	movlw	01h
  3533+ 04E0                     u3205:
  3534+ 04E0  1003               	clrc
  3535+ 04E1  0CD0               	rrf	(___ftadd_f1+2),f
  3536+ 04E2  0CCF               	rrf	(___ftadd_f1+1),f
  3537+ 04E3  0CCE               	rrf	(___ftadd_f1),f
  3538+ 04E4  3EFF               	addlw	-1
  3539+ 04E5  1D03               	skipz
  3540+ 04E6  2CE0               	goto	u3205
  3541+                          
  3542+                          	line	44
  3543+ 04E7  3001               	movlw	(01h)
  3544+ 04E8  00D9               	movwf	(??___ftadd+5+0)
  3545+                          	
  3546+ 04E9  0859               	movf	(??___ftadd+5+0),w
  3547+ 04EA  07D8               	addwf	(___ftadd_exp1),f
  3548+                          	line	45
  3549+                          	
  3550+ 04EB                     l113:	
  3551+                          	line	42
  3552+                          	
  3553+                          	
  3554+ 04EB  0858               	movf	(___ftadd_exp1),w
  3555+ 04EC  0657               	xorwf	(___ftadd_exp2),w
  3556+ 04ED  1D03               	skipz
  3557+ 04EE  2CF0               	goto	u3211
  3558+ 04EF  2CF1               	goto	u3210
  3559+ 04F0                     u3211:
  3560+ 04F0  2CDF               	goto	l114
  3561+ 04F1                     u3210:
  3562+                          	
  3563+ 04F1                     l115:	
  3564+                          	line	46
  3565+                          	
  3566+ 04F1                     l109:	
  3567+                          	line	47
  3568+ 04F1  2D32               	goto	l116
  3569+                          	
  3570+ 04F2                     l107:	
  3571+                          	
  3572+                          	
  3573+ 04F2  0858               	movf	(___ftadd_exp1),w
  3574+ 04F3  0657               	xorwf	(___ftadd_exp2),w
  3575+ 04F4  1903               	skipnz
  3576+ 04F5  2CF7               	goto	u3221
  3577+ 04F6  2CF8               	goto	u3220
  3578+ 04F7                     u3221:
  3579+ 04F7  2D32               	goto	l116
  3580+ 04F8                     u3220:
  3581+                          	line	48
  3582+                          	
  3583+                          	
  3584+ 04F8  0858               	movf	(___ftadd_exp1),w
  3585+ 04F9  00D9               	movwf	(??___ftadd+5+0)
  3586+ 04FA  0857               	movf	(___ftadd_exp2),w
  3587  04FB  02D9               	subwf	(??___ftadd+5+0),f
  3588  04FC  3019               	movlw	(019h)
  3589  04FD  0259               	subwf	0+(??___ftadd+5+0),w
  3590  04FE  1C03               	skipc
  3591  04FF  2D01               	goto	u3231
  3592  0500  2D02               	goto	u3230
  3593  0501                     u3231:
  3594  0501  2D09               	goto	l122
  3595  0502                     u3230:
  3596                           	line	49
  3597                           	
  3598  0502  3000               	movlw	0
  3599  0503  00D1               	movwf	(___ftadd_f2)
  3600  0504  3000               	movlw	0
  3601  0505  00D2               	movwf	(___ftadd_f2+1)
  3602  0506  3000               	movlw	0
  3603  0507  00D3               	movwf	(___ftadd_f2+2)
  3604  0508  2D32               	goto	l116
  3605                           	line	53
  3606                           	
  3607  0509                     l122:	
  3608                           	line	54
  3609                           	
  3610  0509  3001               	movlw	01h
  3611  050A                     u3245:
  3612  050A  1003               	clrc
  3613  050B  0DCE               	rlf	(___ftadd_f1),f
  3614  050C  0DCF               	rlf	(___ftadd_f1+1),f
  3615  050D  0DD0               	rlf	(___ftadd_f1+2),f
  3616  050E  3EFF               	addlw	-1
  3617  050F  1D03               	skipz
  3618  0510  2D0A               	goto	u3245
  3619                           	line	55
  3620                           	
  3621                           	
  3622  0511  3001               	movlw	low(01h)
  3623  0512  02D8               	subwf	(___ftadd_exp1),f
  3624                           	line	56
  3625                           	
  3626                           	
  3627  0513  0857               	movf	(___ftadd_exp2),w
  3628  0514  0658               	xorwf	(___ftadd_exp1),w
  3629  0515  1903               	skipnz
  3630  0516  2D18               	goto	u3251
  3631  0517  2D19               	goto	u3250
  3632  0518                     u3251:
  3633  0518  2D1F               	goto	l121
  3634  0519                     u3250:
  3635                           	
  3636                           	
  3637  0519  3001               	movlw	low(01h)
  3638  051A  02D5               	subwf	(___ftadd_cntr),f
  3639  051B  1D03               	btfss	status,2
  3640  051C  2D1E               	goto	u3261
  3641  051D  2D1F               	goto	u3260
  3642  051E                     u3261:
  3643  051E  2D09               	goto	l122
  3644  051F                     u3260:
  3645                           	
  3646  051F                     l600000849:	
  3647                           	
  3648  051F                     l121:	
  3649                           	line	57
  3650  051F  2D2C               	goto	l123
  3651                           	
  3652  0520                     l124:	
  3653                           	line	58
  3654                           	
  3655  0520  3001               	movlw	01h
  3656  0521                     u3275:
  3657  0521  1003               	clrc
  3658  0522  0CD3               	rrf	(___ftadd_f2+2),f
  3659  0523  0CD2               	rrf	(___ftadd_f2+1),f
  3660  0524  0CD1               	rrf	(___ftadd_f2),f
  3661  0525  3EFF               	addlw	-1
  3662  0526  1D03               	skipz
  3663  0527  2D21               	goto	u3275
  3664                           
  3665                           	line	59
  3666  0528  3001               	movlw	(01h)
  3667  0529  00D9               	movwf	(??___ftadd+5+0)
  3668                           	
  3669  052A  0859               	movf	(??___ftadd+5+0),w
  3670  052B  07D7               	addwf	(___ftadd_exp2),f
  3671                           	line	60
  3672                           	
  3673  052C                     l123:	
  3674                           	line	57
  3675                           	
  3676                           	
  3677  052C  0858               	movf	(___ftadd_exp1),w
  3678  052D  0657               	xorwf	(___ftadd_exp2),w
  3679  052E  1D03               	skipz
  3680  052F  2D31               	goto	u3281
  3681  0530  2D32               	goto	u3280
  3682  0531                     u3281:
  3683  0531  2D20               	goto	l124
  3684  0532                     u3280:
  3685                           	
  3686  0532                     l125:	
  3687                           	line	61
  3688                           	
  3689  0532                     l119:	
  3690                           	line	62
  3691                           	
  3692  0532                     l117:	
  3693                           	line	63
  3694                           	
  3695  0532                     l116:	
  3696                           	
  3697  0532  08D6               	movf	(___ftadd_sign1),f
  3698  0533  1D03               	skipz
  3699  0534  2D36               	goto	u3290
  3700  0535  2D4A               	goto	l126
  3701  0536                     u3290:
  3702                           	line	64
  3703                           	
  3704  0536  30FF               	movlw	0FFh
  3705  0537  06CE               	xorwf	(___ftadd_f1),f
  3706  0538  30FF               	movlw	0FFh
  3707  0539  06CF               	xorwf	(___ftadd_f1+1),f
  3708  053A  30FF               	movlw	0FFh
  3709  053B  06D0               	xorwf	(___ftadd_f1+2),f
  3710                           	line	65
  3711                           	
  3712  053C  3001               	movlw	01h
  3713  053D  07CE               	addwf	(___ftadd_f1),f
  3714  053E  3000               	movlw	0
  3715  053F  1103               	clrz
  3716  0540  1803               	skipnc
  3717  0541  3E01               	addlw	1
  3718  0542  1D03               	skipz
  3719  0543  07CF               	addwf	(___ftadd_f1+1),f
  3720  0544  3000               	movlw	0
  3721  0545  1103               	clrz
  3722  0546  1803               	skipnc
  3723  0547  3E01               	addlw	1
  3724  0548  1D03               	skipz
  3725  0549  07D0               	addwf	(___ftadd_f1+2),f
  3726                           	line	66
  3727                           	
  3728  054A                     l126:	
  3729                           	line	67
  3730                           	
  3731  054A  08D4               	movf	(___ftadd_sign2),f
  3732  054B  1D03               	skipz
  3733  054C  2D4E               	goto	u3300
  3734  054D  2D62               	goto	l127
  3735  054E                     u3300:
  3736                           	line	68
  3737                           	
  3738  054E  30FF               	movlw	0FFh
  3739  054F  06D1               	xorwf	(___ftadd_f2),f
  3740  0550  30FF               	movlw	0FFh
  3741  0551  06D2               	xorwf	(___ftadd_f2+1),f
  3742  0552  30FF               	movlw	0FFh
  3743  0553  06D3               	xorwf	(___ftadd_f2+2),f
  3744                           	line	69
  3745                           	
  3746  0554  3001               	movlw	01h
  3747  0555  07D1               	addwf	(___ftadd_f2),f
  3748  0556  3000               	movlw	0
  3749  0557  1103               	clrz
  3750  0558  1803               	skipnc
  3751  0559  3E01               	addlw	1
  3752  055A  1D03               	skipz
  3753  055B  07D2               	addwf	(___ftadd_f2+1),f
  3754  055C  3000               	movlw	0
  3755  055D  1103               	clrz
  3756  055E  1803               	skipnc
  3757  055F  3E01               	addlw	1
  3758  0560  1D03               	skipz
  3759  0561  07D3               	addwf	(___ftadd_f2+2),f
  3760                           	line	70
  3761                           	
  3762  0562                     l127:	
  3763                           	line	71
  3764  0562  1003               	clrc
  3765                           	
  3766  0563  3000               	movlw	0
  3767  0564  1803               	btfsc	status,0
  3768  0565  3001               	movlw	1
  3769  0566  00D6               	movwf	(___ftadd_sign1)
  3770                           	line	72
  3771                           	
  3772                           	
  3773  0567  0851               	movf	(___ftadd_f2),w
  3774  0568  07CE               	addwf	(___ftadd_f1),f
  3775  0569  0852               	movf	(___ftadd_f2+1),w
  3776  056A  1103               	clrz
  3777  056B  1803               	skipnc
  3778  056C  0A52               	incf	(___ftadd_f2+1),w
  3779  056D  1D03               	skipz
  3780  056E  07CF               	addwf	(___ftadd_f1+1),f
  3781  056F  0853               	movf	(___ftadd_f2+2),w
  3782  0570  1103               	clrz
  3783  0571  1803               	skipnc
  3784  0572  0A53               	incf	(___ftadd_f2+2),w
  3785  0573  1D03               	skipz
  3786  0574  07D0               	addwf	(___ftadd_f1+2),f
  3787                           	line	73
  3788                           	
  3789  0575  1FD0               	btfss	(___ftadd_f1+2),(23)&7
  3790  0576  2D78               	goto	u3311
  3791  0577  2D79               	goto	u3310
  3792  0578                     u3311:
  3793  0578  2D90               	goto	l106
  3794  0579                     u3310:
  3795                           	line	74
  3796                           	
  3797  0579  30FF               	movlw	0FFh
  3798  057A  06CE               	xorwf	(___ftadd_f1),f
  3799  057B  30FF               	movlw	0FFh
  3800  057C  06CF               	xorwf	(___ftadd_f1+1),f
  3801  057D  30FF               	movlw	0FFh
  3802  057E  06D0               	xorwf	(___ftadd_f1+2),f
  3803                           	line	75
  3804                           	
  3805  057F  3001               	movlw	01h
  3806  0580  07CE               	addwf	(___ftadd_f1),f
  3807  0581  3000               	movlw	0
  3808  0582  1103               	clrz
  3809  0583  1803               	skipnc
  3810  0584  3E01               	addlw	1
  3811  0585  1D03               	skipz
  3812  0586  07CF               	addwf	(___ftadd_f1+1),f
  3813  0587  3000               	movlw	0
  3814  0588  1103               	clrz
  3815  0589  1803               	skipnc
  3816  058A  3E01               	addlw	1
  3817  058B  1D03               	skipz
  3818  058C  07D0               	addwf	(___ftadd_f1+2),f
  3819                           	line	76
  3820                           	
  3821  058D  01D6               	clrf	(___ftadd_sign1)
  3822  058E  1403               	bsf	status,0
  3823  058F  0DD6               	rlf	(___ftadd_sign1),f
  3824                           	line	77
  3825                           	
  3826  0590                     l128:	
  3827                           	line	78
  3828                           	
  3829  0590                     l106:	
  3830                           	line	79
  3831                           	
  3832  0590  0858               	movf	(___ftadd_exp1),w
  3833                           	
  3834  0591  00DA               	movwf	(?___ftpack)
  3835                           	
  3836  0592  304E               	movlw	((___ftadd_f1))&0ffh
  3837  0593  120A  118A  23BE   	fcall	___ftpack
              120A  118A         
  3838                           	line	80
  3839  0598  1283               	bcf	status, 5	;RP0=0, select bank0
  3840  0599  1303               	bcf	status, 6	;RP1=0, select bank0
  3841                           	
  3842  059A  08D6               	movf	(___ftadd_sign1),f
  3843  059B  1D03               	skipz
  3844  059C  2D9E               	goto	u3320
  3845  059D  2DA0               	goto	l129
  3846  059E                     u3320:
  3847                           	line	81
  3848                           	
  3849  059E  3080               	movlw	080h
  3850  059F  06D0               	xorwf	(___ftadd_f1+2),f
  3851                           	
  3852  05A0                     l129:	
  3853                           	line	82
  3854  05A0  2DA1               	goto	l103
  3855                           	line	83
  3856  05A1                     l103:	
  3857  05A1  0008               	return
  3858                           ; =============== function ___ftadd ends ======
                                 =========
  3859                           
  3860                           GLOBAL __end_of___ftadd
  3861  05A2                     	__end_of___ftadd:
  3862                           	FNSIZE	___ftadd,6,6
  3863                           	signat	___ftadd,8315
  3864                           	global	___ftneg
  3865                           	global	??___ftneg
  3866                           	global	?___ftneg
  3867                           
  3868                           ; *************** function ___ftneg ***********
                                 ****
  3869                           ; Defined at:
  3870                           ;		line 16 in file "C:\Program Files (x86)\HI-T
                                 ECH Software\PICC\PRO\9.65\sources\ftneg.c"
  3871                           ; Parameters:
  3872                           ;		f1          	offs:   0	type: float 
  3873                           ; Auto variables:
  3874                           ;		None
  3875                           ; Return value:
  3876                           ;		type: float 
  3877                           ;		size: 3
  3878                           ; Registers used:
  3879                           ;		wreg
  3880                           ; Tracked objects:
  3881                           ;		On entry : 300/0
  3882                           ;		On exit  : 0/0
  3883                           ;		Unchanged: 0/0
  3884                           ; Data sizes:
  3885                           ;		Autos:    0
  3886                           ;		Params:   3
  3887                           ;		Temp:     0
  3888                           ;		Total:    3
  3889                           ; This function calls:
  3890                           ;		Nothing
  3891                           ; This function is called by:
  3892                           ;		_LCDWriteFloat
  3893                           ;		___awtoft
  3894                           ; This function uses a non-reentrant model
  3895                           ; 
  3896                           	psect	text208,local,class=CODE,delta=2
  3897                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\ftneg.c"
  3898                           	line	16
  3899                           	
  3900  0D22                     ___ftneg:	
  3901                           	opt stack 4
  3902                           ; Regs used in ___ftneg: [wreg]
  3903                           	line	17
  3904                           	
  3905  0D22  0853               	movf	(___ftneg_f1+2),w
  3906  0D23  0452               	iorwf	(___ftneg_f1+1),w
  3907  0D24  0451               	iorwf	(___ftneg_f1),w
  3908  0D25  1903               	skipnz
  3909  0D26  2D28               	goto	u3331
  3910  0D27  2D29               	goto	u3330
  3911  0D28                     u3331:
  3912  0D28  2D2B               	goto	l247
  3913  0D29                     u3330:
  3914                           	line	18
  3915                           	
  3916  0D29  3080               	movlw	080h
  3917  0D2A  06D3               	xorwf	(___ftneg_f1+2),f
  3918                           	
  3919  0D2B                     l247:	
  3920                           	line	19
  3921  0D2B  2D2C               	goto	l246
  3922                           	line	20
  3923  0D2C                     l246:	
  3924  0D2C  0008               	return
  3925                           ; =============== function ___ftneg ends ======
                                 =========
  3926                           
  3927                           GLOBAL __end_of___ftneg
  3928  0D2D                     	__end_of___ftneg:
  3929                           	FNSIZE	___ftneg,0,3
  3930                           	signat	___ftneg,4219
  3931                           	global	_LCDWriteData
  3932                           	global	??_LCDWriteData
  3933                           	global	?_LCDWriteData
  3934                           
  3935                           ; *************** function _LCDWriteData ******
                                 *********
  3936                           ; Defined at:
  3937                           ;		line 18 in file "C:\Users\hardik\Desktop\new
                                 \LCD.c"
  3938                           ; Parameters:
  3939                           ;		LCDData     	reg:   wr	type: unsigned char 
  3940                           ; Auto variables:
  3941                           ;		LCDData     	       	type: unsigned char 
  3942                           ; Return value:
  3943                           ;		type: void 
  3944                           ;		size: 0
  3945                           ; Registers used:
  3946                           ;		wreg, status,2, status,0, pclath, cstack
  3947                           ; Tracked objects:
  3948                           ;		On entry : 0/0
  3949                           ;		On exit  : 0/0
  3950                           ;		Unchanged: 0/0
  3951                           ; Data sizes:
  3952                           ;		Autos:    1
  3953                           ;		Params:   0
  3954                           ;		Temp:     0
  3955                           ;		Total:    1
  3956                           ; This function calls:
  3957                           ;		_LCDWriteByte
  3958                           ; This function is called by:
  3959                           ;		_LCDWriteString
  3960                           ;		_LCDDisplayInitializing
  3961                           ;		_LCDWriteFloat
  3962                           ;		_LCDWriteInteger
  3963                           ; This function uses a non-reentrant model
  3964                           ; 
  3965                           	psect	text209,local,class=CODE,delta=2
  3966                           	file	"C:\Users\hardik\Desktop\new\LCD.c"
  3967                           	line	18
  3968                           ;LCD.c: 17: void LCDWriteData(LCDubyte LCDData)
  3969                           ;LCD.c: 18: {
  3970                           	
  3971  0D38                     _LCDWriteData:	
  3972                           	opt stack 4
  3973                           ; Regs used in _LCDWriteData: [wreg+status,2+st
                                 atus,0+pclath+cstack]
  3974                           ;_LCDWriteData_LCDData stored from wreg
  3975  0D38  1283               	bcf	status, 5	;RP0=0, select bank0
  3976  0D39  1303               	bcf	status, 6	;RP1=0, select bank0
  3977                           	
  3978  0D3A  00D2               	movwf	(_LCDWriteData_LCDData)
  3979                           	line	19
  3980                           ;LCD.c: 19: RD2 = 1;
  3981  0D3B  1508               	bsf	(66/8),(66)&7
  3982                           	line	20
  3983                           ;LCD.c: 20: LCDWriteByte(LCDData);
  3984                           	
  3985  0D3C  0852               	movf	(_LCDWriteData_LCDData),w
  3986  0D3D  120A  158A  263C   	fcall	_LCDWriteByte
              120A  158A         
  3987                           	line	21
  3988                           ;LCD.c: 21: }
  3989  0D42                     l10:	
  3990  0D42  0008               	return
  3991                           ; =============== function _LCDWriteData ends =
                                 ==============
  3992                           
  3993                           GLOBAL __end_of_LCDWriteData
  3994  0D43                     	__end_of_LCDWriteData:
  3995                           	FNSIZE	_LCDWriteData,1,0
  3996                           	signat	_LCDWriteData,4216
  3997                           	global	___awdiv
  3998                           	global	??___awdiv
  3999                           	global	?___awdiv
  4000                           
  4001                           ; *************** function ___awdiv ***********
                                 ****
  4002                           ; Defined at:
  4003                           ;		line 5 in file "C:\Program Files (x86)\HI-TE
                                 CH Software\PICC\PRO\9.65\sources\awdiv.c"
  4004                           ; Parameters:
  4005                           ;		dividend    	offs:   0	type: int 
  4006                           ;		divisor     	offs:   2	type: int 
  4007                           ; Auto variables:
  4008                           ;		sign        	       	type: unsigned char 
  4009                           ;		counter     	       	type: unsigned char 
  4010                           ;		quotient    	       	type: int 
  4011                           ; Return value:
  4012                           ;		type: int 
  4013                           ;		size: 2
  4014                           ; Registers used:
  4015                           ;		wreg, status,2, status,0
  4016                           ; Tracked objects:
  4017                           ;		On entry : B00/0
  4018                           ;		On exit  : 0/0
  4019                           ;		Unchanged: 0/0
  4020                           ; Data sizes:
  4021                           ;		Autos:    4
  4022                           ;		Params:   4
  4023                           ;		Temp:     1
  4024                           ;		Total:    9
  4025                           ; This function calls:
  4026                           ;		Nothing
  4027                           ; This function is called by:
  4028                           ;		_LCDWriteFloat
  4029                           ;		_LCDWriteInteger
  4030                           ; This function uses a non-reentrant model
  4031                           ; 
  4032                           	psect	text210,local,class=CODE,delta=2
  4033                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\awdiv.c"
  4034                           	line	5
  4035                           	
  4036  023E                     ___awdiv:	
  4037                           	opt stack 4
  4038                           ; Regs used in ___awdiv: [wreg+status,2+status,
                                 0]
  4039                           	line	9
  4040  023E  1003               	clrc
  4041                           	
  4042  023F  3000               	movlw	0
  4043  0240  1803               	btfsc	status,0
  4044  0241  3001               	movlw	1
  4045  0242  00D7               	movwf	(___awdiv_sign)
  4046                           	line	10
  4047                           	
  4048  0243  1FD5               	btfss	(___awdiv_divisor+1),7
  4049  0244  2A46               	goto	u3341
  4050  0245  2A47               	goto	u3340
  4051  0246                     u3341:
  4052  0246  2A4F               	goto	l226
  4053  0247                     u3340:
  4054                           	line	11
  4055                           	
  4056  0247  09D4               	comf	(___awdiv_divisor),f
  4057  0248  09D5               	comf	(___awdiv_divisor+1),f
  4058  0249  0AD4               	incf	(___awdiv_divisor),f
  4059  024A  1903               	skipnz
  4060  024B  0AD5               	incf	(___awdiv_divisor+1),f
  4061                           	
  4062                           	line	12
  4063                           	
  4064  024C  01D7               	clrf	(___awdiv_sign)
  4065  024D  1403               	bsf	status,0
  4066  024E  0DD7               	rlf	(___awdiv_sign),f
  4067                           	line	13
  4068                           	
  4069  024F                     l226:	
  4070                           	line	14
  4071                           	
  4072  024F  1FD3               	btfss	(___awdiv_dividend+1),7
  4073  0250  2A52               	goto	u3351
  4074  0251  2A53               	goto	u3350
  4075  0252                     u3351:
  4076  0252  2A5C               	goto	l227
  4077  0253                     u3350:
  4078                           	line	15
  4079                           	
  4080  0253  09D2               	comf	(___awdiv_dividend),f
  4081  0254  09D3               	comf	(___awdiv_dividend+1),f
  4082  0255  0AD2               	incf	(___awdiv_dividend),f
  4083  0256  1903               	skipnz
  4084  0257  0AD3               	incf	(___awdiv_dividend+1),f
  4085                           	
  4086                           	line	16
  4087  0258  3001               	movlw	(01h)
  4088  0259  00DA               	movwf	(??___awdiv+4+0)
  4089                           	
  4090  025A  085A               	movf	(??___awdiv+4+0),w
  4091  025B  06D7               	xorwf	(___awdiv_sign),f
  4092                           	line	17
  4093                           	
  4094  025C                     l227:	
  4095                           	line	18
  4096  025C  3000               	movlw	low(0)
  4097                           	
  4098  025D  00D8               	movwf	(___awdiv_quotient)
  4099  025E  3000               	movlw	high(0)
  4100  025F  00D9               	movwf	((___awdiv_quotient))+1
  4101                           	line	19
  4102                           	
  4103  0260  0855               	movf	(___awdiv_divisor+1),w
  4104  0261  0454               	iorwf	(___awdiv_divisor),w
  4105  0262  1903               	skipnz
  4106  0263  2A65               	goto	u3361
  4107  0264  2A66               	goto	u3360
  4108  0265                     u3361:
  4109  0265  2AA1               	goto	l228
  4110  0266                     u3360:
  4111                           	line	20
  4112                           	
  4113  0266  01D6               	clrf	(___awdiv_counter)
  4114  0267  1403               	bsf	status,0
  4115  0268  0DD6               	rlf	(___awdiv_counter),f
  4116                           	line	21
  4117  0269  2A75               	goto	l229
  4118                           	
  4119  026A                     l230:	
  4120                           	line	22
  4121                           	
  4122  026A  3001               	movlw	01h
  4123  026B                     u3375:
  4124  026B  1003               	clrc
  4125  026C  0DD4               	rlf	(___awdiv_divisor),f
  4126  026D  0DD5               	rlf	(___awdiv_divisor+1),f
  4127  026E  3EFF               	addlw	-1
  4128  026F  1D03               	skipz
  4129  0270  2A6B               	goto	u3375
  4130                           	line	23
  4131  0271  3001               	movlw	(01h)
  4132  0272  00DA               	movwf	(??___awdiv+4+0)
  4133                           	
  4134  0273  085A               	movf	(??___awdiv+4+0),w
  4135  0274  07D6               	addwf	(___awdiv_counter),f
  4136                           	line	24
  4137                           	
  4138  0275                     l229:	
  4139                           	line	21
  4140                           	
  4141  0275  1FD5               	btfss	(___awdiv_divisor+1),(15)&7
  4142  0276  2A78               	goto	u3381
  4143  0277  2A79               	goto	u3380
  4144  0278                     u3381:
  4145  0278  2A6A               	goto	l230
  4146  0279                     u3380:
  4147                           	
  4148  0279                     l231:	
  4149                           	line	25
  4150                           	
  4151  0279                     l234:	
  4152                           	line	26
  4153                           	
  4154  0279  3001               	movlw	01h
  4155  027A                     u3395:
  4156  027A  1003               	clrc
  4157  027B  0DD8               	rlf	(___awdiv_quotient),f
  4158  027C  0DD9               	rlf	(___awdiv_quotient+1),f
  4159  027D  3EFF               	addlw	-1
  4160  027E  1D03               	skipz
  4161  027F  2A7A               	goto	u3395
  4162                           	line	27
  4163                           	
  4164                           	
  4165  0280  0855               	movf	(___awdiv_divisor+1),w
  4166  0281  0253               	subwf	(___awdiv_dividend+1),w
  4167  0282  1D03               	skipz
  4168  0283  2A86               	goto	u3405
  4169  0284  0854               	movf	(___awdiv_divisor),w
  4170  0285  0252               	subwf	(___awdiv_dividend),w
  4171  0286                     u3405:
  4172  0286  1C03               	skipc
  4173  0287  2A89               	goto	u3401
  4174  0288  2A8A               	goto	u3400
  4175  0289                     u3401:
  4176  0289  2A94               	goto	l235
  4177  028A                     u3400:
  4178                           	line	28
  4179                           	
  4180                           	
  4181  028A  0854               	movf	(___awdiv_divisor),w
  4182  028B  02D2               	subwf	(___awdiv_dividend),f
  4183  028C  0855               	movf	(___awdiv_divisor+1),w
  4184  028D  1C03               	skipc
  4185  028E  03D3               	decf	(___awdiv_dividend+1),f
  4186  028F  02D3               	subwf	(___awdiv_dividend+1),f
  4187                           	line	29
  4188                           	
  4189  0290  3001               	movlw	low(01h)
  4190  0291  04D8               	iorwf	(___awdiv_quotient),f
  4191  0292  3000               	movlw	high(01h)
  4192  0293  04D9               	iorwf	(___awdiv_quotient+1),f
  4193                           	line	30
  4194                           	
  4195  0294                     l235:	
  4196                           	line	31
  4197                           	
  4198  0294  3001               	movlw	01h
  4199  0295                     u3415:
  4200  0295  1003               	clrc
  4201  0296  0CD5               	rrf	(___awdiv_divisor+1),f
  4202  0297  0CD4               	rrf	(___awdiv_divisor),f
  4203  0298  3EFF               	addlw	-1
  4204  0299  1D03               	skipz
  4205  029A  2A95               	goto	u3415
  4206                           	line	32
  4207                           	
  4208                           	
  4209  029B  3001               	movlw	low(01h)
  4210  029C  02D6               	subwf	(___awdiv_counter),f
  4211  029D  1D03               	btfss	status,2
  4212  029E  2AA0               	goto	u3421
  4213  029F  2AA1               	goto	u3420
  4214  02A0                     u3421:
  4215  02A0  2A79               	goto	l234
  4216  02A1                     u3420:
  4217                           	
  4218  02A1                     l233:	
  4219                           	line	33
  4220                           	
  4221  02A1                     l228:	
  4222                           	line	34
  4223                           	
  4224  02A1  08D7               	movf	(___awdiv_sign),f
  4225  02A2  1D03               	skipz
  4226  02A3  2AA5               	goto	u3430
  4227  02A4  2AAA               	goto	l236
  4228  02A5                     u3430:
  4229                           	line	35
  4230                           	
  4231  02A5  09D8               	comf	(___awdiv_quotient),f
  4232  02A6  09D9               	comf	(___awdiv_quotient+1),f
  4233  02A7  0AD8               	incf	(___awdiv_quotient),f
  4234  02A8  1903               	skipnz
  4235  02A9  0AD9               	incf	(___awdiv_quotient+1),f
  4236                           	
  4237                           	
  4238  02AA                     l236:	
  4239                           	line	36
  4240                           	
  4241                           	
  4242  02AA  0859               	movf	(___awdiv_quotient+1),w
  4243  02AB  01D3               	clrf	(?___awdiv+1)
  4244  02AC  07D3               	addwf	(?___awdiv+1)
  4245  02AD  0858               	movf	(___awdiv_quotient),w
  4246  02AE  01D2               	clrf	(?___awdiv)
  4247  02AF  07D2               	addwf	(?___awdiv)
  4248                           
  4249  02B0  2AB1               	goto	l225
  4250                           	line	37
  4251  02B1                     l225:	
  4252  02B1  0008               	return
  4253                           ; =============== function ___awdiv ends ======
                                 =========
  4254                           
  4255                           GLOBAL __end_of___awdiv
  4256  02B2                     	__end_of___awdiv:
  4257                           	FNSIZE	___awdiv,5,4
  4258                           	signat	___awdiv,8314
  4259                           	global	_LCDReset
  4260                           	global	??_LCDReset
  4261                           	global	?_LCDReset
  4262                           
  4263                           ; *************** function _LCDReset **********
                                 *****
  4264                           ; Defined at:
  4265                           ;		line 47 in file "C:\Users\hardik\Desktop\new
                                 \LCD.c"
  4266                           ; Parameters:
  4267                           ;		None
  4268                           ; Auto variables:
  4269                           ;		None
  4270                           ; Return value:
  4271                           ;		type: void 
  4272                           ;		size: 0
  4273                           ; Registers used:
  4274                           ;		wreg, status,2, status,0, pclath, cstack
  4275                           ; Tracked objects:
  4276                           ;		On entry : BFF/0
  4277                           ;		On exit  : 0/0
  4278                           ;		Unchanged: 0/0
  4279                           ; Data sizes:
  4280                           ;		Autos:    0
  4281                           ;		Params:   0
  4282                           ;		Temp:     0
  4283                           ;		Total:    0
  4284                           ; This function calls:
  4285                           ;		_LCDWriteCommand
  4286                           ; This function is called by:
  4287                           ;		_LCDInitialize
  4288                           ; This function uses a non-reentrant model
  4289                           ; 
  4290                           	psect	text211,local,class=CODE,delta=2
  4291                           	file	"C:\Users\hardik\Desktop\new\LCD.c"
  4292                           	line	47
  4293                           ;LCD.c: 46: static void LCDReset(void)
  4294                           ;LCD.c: 47: {
  4295                           	
  4296  0D51                     _LCDReset:	
  4297                           	opt stack 4
  4298                           ; Regs used in _LCDReset: [wreg+status,2+status
                                 ,0+pclath+cstack]
  4299                           	line	48
  4300                           ;LCD.c: 48: LCDWriteCommand(0x33);
  4301  0D51  3033               	movlw	(033h)
  4302  0D52  120A  158A  252D   	fcall	_LCDWriteCommand
              120A  158A         
  4303                           	line	49
  4304                           ;LCD.c: 49: LCDWriteCommand(0x33);
  4305  0D57  3033               	movlw	(033h)
  4306  0D58  120A  158A  252D   	fcall	_LCDWriteCommand
              120A  158A         
  4307                           	line	50
  4308                           ;LCD.c: 50: LCDWriteCommand(0x32);
  4309  0D5D  3032               	movlw	(032h)
  4310  0D5E  120A  158A  252D   	fcall	_LCDWriteCommand
              120A  158A         
  4311                           	line	51
  4312                           ;LCD.c: 51: }
  4313  0D63                     l16:	
  4314  0D63  0008               	return
  4315                           ; =============== function _LCDReset ends =====
                                 ==========
  4316                           
  4317                           GLOBAL __end_of_LCDReset
  4318  0D64                     	__end_of_LCDReset:
  4319                           	FNSIZE	_LCDReset,0,0
  4320                           	signat	_LCDReset,88
  4321                           	global	___awmod
  4322                           	global	??___awmod
  4323                           	global	?___awmod
  4324                           
  4325                           ; *************** function ___awmod ***********
                                 ****
  4326                           ; Defined at:
  4327                           ;		line 5 in file "C:\Program Files (x86)\HI-TE
                                 CH Software\PICC\PRO\9.65\sources\awmod.c"
  4328                           ; Parameters:
  4329                           ;		dividend    	offs:   0	type: int 
  4330                           ;		divisor     	offs:   2	type: int 
  4331                           ; Auto variables:
  4332                           ;		sign        	       	type: unsigned char 
  4333                           ;		counter     	       	type: unsigned char 
  4334                           ; Return value:
  4335                           ;		type: int 
  4336                           ;		size: 2
  4337                           ; Registers used:
  4338                           ;		wreg, status,2, status,0
  4339                           ; Tracked objects:
  4340                           ;		On entry : 300/0
  4341                           ;		On exit  : 0/0
  4342                           ;		Unchanged: 0/0
  4343                           ; Data sizes:
  4344                           ;		Autos:    2
  4345                           ;		Params:   4
  4346                           ;		Temp:     1
  4347                           ;		Total:    7
  4348                           ; This function calls:
  4349                           ;		Nothing
  4350                           ; This function is called by:
  4351                           ;		_LCDWriteFloat
  4352                           ;		_LCDWriteInteger
  4353                           ; This function uses a non-reentrant model
  4354                           ; 
  4355                           	psect	text212,local,class=CODE,delta=2
  4356                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\awmod.c"
  4357                           	line	5
  4358                           	
  4359  0F32                     ___awmod:	
  4360                           	opt stack 4
  4361                           ; Regs used in ___awmod: [wreg+status,2+status,
                                 0]
  4362                           	line	8
  4363  0F32  1003               	clrc
  4364                           	
  4365  0F33  3000               	movlw	0
  4366  0F34  1803               	btfsc	status,0
  4367  0F35  3001               	movlw	1
  4368  0F36  00D6               	movwf	(___awmod_sign)
  4369                           	line	9
  4370                           	
  4371  0F37  1FD3               	btfss	(___awmod_dividend+1),7
  4372  0F38  2F3A               	goto	u3441
  4373  0F39  2F3B               	goto	u3440
  4374  0F3A                     u3441:
  4375  0F3A  2F43               	goto	l308
  4376  0F3B                     u3440:
  4377                           	line	10
  4378                           	
  4379  0F3B  09D2               	comf	(___awmod_dividend),f
  4380  0F3C  09D3               	comf	(___awmod_dividend+1),f
  4381  0F3D  0AD2               	incf	(___awmod_dividend),f
  4382  0F3E  1903               	skipnz
  4383  0F3F  0AD3               	incf	(___awmod_dividend+1),f
  4384                           	
  4385                           	line	11
  4386                           	
  4387  0F40  01D6               	clrf	(___awmod_sign)
  4388  0F41  1403               	bsf	status,0
  4389  0F42  0DD6               	rlf	(___awmod_sign),f
  4390                           	line	12
  4391                           	
  4392  0F43                     l308:	
  4393                           	line	13
  4394                           	
  4395  0F43  1FD5               	btfss	(___awmod_divisor+1),7
  4396  0F44  2F46               	goto	u3451
  4397+ 0F45  2F47               	goto	u3450
  4398+ 0F46                     u3451:
  4399+ 0F46  2F4C               	goto	l309
  4400+ 0F47                     u3450:
  4401+                          	line	14
  4402+                          	
  4403+ 0F47  09D4               	comf	(___awmod_divisor),f
  4404+ 0F48  09D5               	comf	(___awmod_divisor+1),f
  4405+ 0F49  0AD4               	incf	(___awmod_divisor),f
  4406+ 0F4A  1903               	skipnz
  4407+ 0F4B  0AD5               	incf	(___awmod_divisor+1),f
  4408+                          	
  4409+                          	
  4410+ 0F4C                     l309:	
  4411+                          	line	15
  4412+                          	
  4413+ 0F4C  0855               	movf	(___awmod_divisor+1),w
  4414+ 0F4D  0454               	iorwf	(___awmod_divisor),w
  4415+ 0F4E  1903               	skipnz
  4416+ 0F4F  2F51               	goto	u3461
  4417+ 0F50  2F52               	goto	u3460
  4418+ 0F51                     u3461:
  4419+ 0F51  2F82               	goto	l310
  4420+ 0F52                     u3460:
  4421+                          	line	16
  4422+                          	
  4423+ 0F52  01D7               	clrf	(___awmod_counter)
  4424+ 0F53  1403               	bsf	status,0
  4425+ 0F54  0DD7               	rlf	(___awmod_counter),f
  4426+                          	line	17
  4427+ 0F55  2F61               	goto	l311
  4428+                          	
  4429+ 0F56                     l312:	
  4430+                          	line	18
  4431+                          	
  4432+ 0F56  3001               	movlw	01h
  4433+ 0F57                     u3475:
  4434+ 0F57  1003               	clrc
  4435+ 0F58  0DD4               	rlf	(___awmod_divisor),f
  4436+ 0F59  0DD5               	rlf	(___awmod_divisor+1),f
  4437+ 0F5A  3EFF               	addlw	-1
  4438+ 0F5B  1D03               	skipz
  4439+ 0F5C  2F57               	goto	u3475
  4440+                          	line	19
  4441+ 0F5D  3001               	movlw	(01h)
  4442+ 0F5E  00D8               	movwf	(??___awmod+2+0)
  4443+                          	
  4444+ 0F5F  0858               	movf	(??___awmod+2+0),w
  4445+ 0F60  07D7               	addwf	(___awmod_counter),f
  4446+                          	line	20
  4447+                          	
  4448+ 0F61                     l311:	
  4449+                          	line	17
  4450+                          	
  4451+ 0F61  1FD5               	btfss	(___awmod_divisor+1),(15)&7
  4452+ 0F62  2F64               	goto	u3481
  4453+ 0F63  2F65               	goto	u3480
  4454+ 0F64                     u3481:
  4455+ 0F64  2F56               	goto	l312
  4456+ 0F65                     u3480:
  4457+                          	
  4458+ 0F65                     l313:	
  4459+                          	line	21
  4460+                          	
  4461+ 0F65                     l316:	
  4462+                          	line	22
  4463+                          	
  4464+                          	
  4465+ 0F65  0855               	movf	(___awmod_divisor+1),w
  4466+ 0F66  0253               	subwf	(___awmod_dividend+1),w
  4467+ 0F67  1D03               	skipz
  4468+ 0F68  2F6B               	goto	u3495
  4469+ 0F69  0854               	movf	(___awmod_divisor),w
  4470+ 0F6A  0252               	subwf	(___awmod_dividend),w
  4471+ 0F6B                     u3495:
  4472+ 0F6B  1C03               	skipc
  4473+ 0F6C  2F6E               	goto	u3491
  4474+ 0F6D  2F6F               	goto	u3490
  4475+ 0F6E                     u3491:
  4476+ 0F6E  2F75               	goto	l317
  4477+ 0F6F                     u3490:
  4478+                          	line	23
  4479+                          	
  4480+                          	
  4481+ 0F6F  0854               	movf	(___awmod_divisor),w
  4482+ 0F70  02D2               	subwf	(___awmod_dividend),f
  4483+ 0F71  0855               	movf	(___awmod_divisor+1),w
  4484+ 0F72  1C03               	skipc
  4485+ 0F73  03D3               	decf	(___awmod_dividend+1),f
  4486+ 0F74  02D3               	subwf	(___awmod_dividend+1),f
  4487+                          	
  4488+ 0F75                     l317:	
  4489+                          	line	24
  4490+                          	
  4491+ 0F75  3001               	movlw	01h
  4492+ 0F76                     u3505:
  4493+ 0F76  1003               	clrc
  4494+ 0F77  0CD5               	rrf	(___awmod_divisor+1),f
  4495+ 0F78  0CD4               	rrf	(___awmod_divisor),f
  4496+ 0F79  3EFF               	addlw	-1
  4497+ 0F7A  1D03               	skipz
  4498+ 0F7B  2F76               	goto	u3505
  4499+                          	line	25
  4500+                          	
  4501+                          	
  4502+ 0F7C  3001               	movlw	low(01h)
  4503+ 0F7D  02D7               	subwf	(___awmod_counter),f
  4504+ 0F7E  1D03               	btfss	status,2
  4505+ 0F7F  2F81               	goto	u3511
  4506+ 0F80  2F82               	goto	u3510
  4507+ 0F81                     u3511:
  4508+ 0F81  2F65               	goto	l316
  4509+ 0F82                     u3510:
  4510+                          	
  4511+ 0F82                     l315:	
  4512+                          	line	26
  4513+                          	
  4514+ 0F82                     l310:	
  4515+                          	line	27
  4516+                          	
  4517+ 0F82  08D6               	movf	(___awmod_sign),f
  4518+ 0F83  1D03               	skipz
  4519+ 0F84  2F86               	goto	u3520
  4520+ 0F85  2F8B               	goto	l318
  4521+ 0F86                     u3520:
  4522+                          	line	28
  4523+                          	
  4524+ 0F86  09D2               	comf	(___awmod_dividend),f
  4525+ 0F87  09D3               	comf	(___awmod_dividend+1),f
  4526+ 0F88  0AD2               	incf	(___awmod_dividend),f
  4527+ 0F89  1903               	skipnz
  4528+ 0F8A  0AD3               	incf	(___awmod_dividend+1),f
  4529+                          	
  4530+                          	
  4531+ 0F8B                     l318:	
  4532+                          	line	29
  4533+ 0F8B  2F8C               	goto	l307
  4534+                          	line	30
  4535+ 0F8C                     l307:	
  4536+ 0F8C  0008               	return
  4537+                          ; =============== function ___awmod ends ======
      +                          =========
  4538+                          
  4539+                          GLOBAL __end_of___awmod
  4540+ 0F8D                     	__end_of___awmod:
  4541+                          	FNSIZE	___awmod,3,4
  4542+                          	signat	___awmod,8314
  4543+                          	global	_LCDWriteCommand
  4544+                          	global	??_LCDWriteCommand
  4545+                          	global	?_LCDWriteCommand
  4546+                          
  4547+                          ; *************** function _LCDWriteCommand ***
      +                          ************
  4548+                          ; Defined at:
  4549+                          ;		line 12 in file "C:\Users\hardik\Desktop\new
      +                          \LCD.c"
  4550+                          ; Parameters:
  4551+                          ;		LCDData     	reg:   wr	type: unsigned char 
  4552+                          ; Auto variables:
  4553+                          ;		LCDData     	       	type: unsigned char 
  4554+                          ; Return value:
  4555+                          ;		type: void 
  4556+                          ;		size: 0
  4557+                          ; Registers used:
  4558+                          ;		wreg, status,2, status,0, pclath, cstack
  4559+                          ; Tracked objects:
  4560+                          ;		On entry : 0/0
  4561+                          ;		On exit  : 0/0
  4562+                          ;		Unchanged: 0/0
  4563+                          ; Data sizes:
  4564+                          ;		Autos:    1
  4565+                          ;		Params:   0
  4566+                          ;		Temp:     0
  4567+                          ;		Total:    1
  4568+                          ; This function calls:
  4569+                          ;		_LCDWriteByte
  4570+                          ; This function is called by:
  4571+                          ;		_LCDInitialize
  4572+                          ;		_LCDReset
  4573+                          ;		_LCDDisplayInitializing
  4574+                          ;		_LCDWriteFloat
  4575+                          ;		_main
  4576+                          ; This function uses a non-reentrant model
  4577+                          ; 
  4578+                          	psect	text213,local,class=CODE,delta=2
  4579+                          	file	"C:\Users\hardik\Desktop\new\LCD.c"
  4580+                          	line	12
  4581+                          ;LCD.c: 11: void LCDWriteCommand(LCDubyte LCDDa
      +                          ta)
  4582+                          ;LCD.c: 12: {
  4583+                          	
  4584+ 0D2D                     _LCDWriteCommand:	
  4585+                          	opt stack 3
  4586+                          ; Regs used in _LCDWriteCommand: [wreg+status,2
      +                          +status,0+pclath+cstack]
  4587+                          ;_LCDWriteCommand_LCDData stored from wreg
  4588+ 0D2D  1283               	bcf	status, 5	;RP0=0, select bank0
  4589+ 0D2E  1303               	bcf	status, 6	;RP1=0, select bank0
  4590+                          	
  4591+ 0D2F  00C8               	movwf	(_LCDWriteCommand_LCDData)
  4592+                          	line	13
  4593+                          ;LCD.c: 13: RD2 = 0;
  4594+ 0D30  1108               	bcf	(66/8),(66)&7
  4595+                          	line	14
  4596+                          ;LCD.c: 14: LCDWriteByte(LCDData);
  4597+                          	
  4598+ 0D31  0848               	movf	(_LCDWriteCommand_LCDData),w
  4599+ 0D32  120A  158A  263C   	fcall	_LCDWriteByte
      +       120A  158A         
  4600+                          	line	15
  4601+                          ;LCD.c: 15: }
  4602+ 0D37                     l9:	
  4603+ 0D37  0008               	return
  4604+                          ; =============== function _LCDWriteCommand end
      +                          s ===============
  4605+                          
  4606+                          GLOBAL __end_of_LCDWriteCommand
  4607+ 0D38                     	__end_of_LCDWriteCommand:
  4608+                          	FNSIZE	_LCDWriteCommand,1,0
  4609+                          	signat	_LCDWriteCommand,4216
  4610+                          	global	___ftpack
  4611+                          	global	??___ftpack
  4612+                          	global	?___ftpack
  4613+                          
  4614+                          ; *************** function ___ftpack **********
      +                          *****
  4615+                          ; Defined at:
  4616+                          ;		line 33 in file "C:\Program Files (x86)\HI-T
      +                          ECH Software\PICC\PRO\9.65\sources\float.c"
  4617+                          ; Parameters:
  4618+                          ;		arg         	reg:   wr	type: PTR unsigned um
      +                          ; Largest target is 3
  4619+                          ;		 -> __lttoft_f1(3), __attoft_f1(3), __lltoft
      +                          _f1(3), __altoft_f1(3), 
  4620+                          ;		 -> __lwtoft_f1(3), __awtoft_f1(3), __abtoft
      +                          _f1(3), __lbtoft_f1(3), 
  4621+                          ;		 -> __ftmul_f3(3), __ftdiv_f3(3), __ftadd_f1
      +                          (3), 
  4622+                          ;		exp         	offs:   0	type: unsigned char 
  4623+                          ; Auto variables:
  4624+                          ;		arg         	       	type: PTR unsigned um; 
      +                          Largest target is 3
  4625+                          ;		 -> __lttoft_f1(3), __attoft_f1(3), __lltoft
      +                          _f1(3), __altoft_f1(3), 
  4626+                          ;		 -> __lwtoft_f1(3), __awtoft_f1(3), __abtoft
      +                          _f1(3), __lbtoft_f1(3), 
  4627+                          ;		 -> __ftmul_f3(3), __ftdiv_f3(3), __ftadd_f1
      +                          (3), 
  4628+                          ; Return value:
  4629+                          ;		type: void 
  4630+                          ;		size: 0
  4631+                          ; Registers used:
  4632+                          ;		wreg, fsr0l, fsr0h, status,2, status,0
  4633+                          ; Tracked objects:
  4634+                          ;		On entry : 300/0
  4635+                          ;		On exit  : 0/0
  4636+                          ;		Unchanged: 0/0
  4637+                          ; Data sizes:
  4638+                          ;		Autos:    1
  4639+                          ;		Params:   1
  4640+                          ;		Temp:     3
  4641+                          ;		Total:    5
  4642+                          ; This function calls:
  4643+                          ;		Nothing
  4644+                          ; This function is called by:
  4645+                          ;		___ftadd
  4646+                          ;		___ftdiv
  4647+                          ;		___ftmul
  4648+                          ;		___awtoft
  4649+                          ;		___lwtoft
  4650+                          ; This function uses a non-reentrant model
  4651+                          ; 
  4652+                          	psect	text214,local,class=CODE,delta=2
  4653+                          	file	"C:\Program Files (x86)\HI-TECH Software\
      +                          PICC\PRO\9.65\sources\float.c"
  4654+                          	line	33
  4655+                          	
  4656+ 03BE                     ___ftpack:	
  4657+                          	opt stack 3
  4658+                          ; Regs used in ___ftpack: [wreg-fsr0h+status,2+
      +                          status,0]
  4659+                          ;___ftpack_arg stored from wreg
  4660+                          	
  4661+ 03BE  00DB               	movwf	(___ftpack_arg)
  4662+                          	line	34
  4663+                          	
  4664+ 03BF  08DA               	movf	(___ftpack_exp),f
  4665+ 03C0  1D03               	skipz
  4666+ 03C1  2BC3               	goto	u3530
  4667+ 03C2  2BD5               	goto	l600000850
  4668+ 03C3                     u3530:
  4669+                          	
  4670+ 03C3  085B               	movf	(___ftpack_arg),w
  4671+ 03C4  0084               	movwf	fsr0
  4672+ 03C5  1383               	bcf	status, 7	;select IRP bank0
  4673+ 03C6  0800               	movf	indf,w
  4674+ 03C7  00DC               	movwf	(??___ftpack+1+0)
  4675+ 03C8  0A84               	incf	fsr0,f
  4676+ 03C9  0800               	movf	indf,w
  4677+ 03CA  00DD               	movwf	(??___ftpack+1+0+1)
  4678+ 03CB  0A84               	incf	fsr0,f
  4679+ 03CC  0800               	movf	indf,w
  4680+ 03CD  00DE               	movwf	(??___ftpack+1+0+2)
  4681+ 03CE  085E               	movf	2+(??___ftpack+1+0),w
  4682+ 03CF  045D               	iorwf	1+(??___ftpack+1+0),w
  4683+ 03D0  045C               	iorwf	0+(??___ftpack+1+0),w
  4684+ 03D1  1D03               	skipz
  4685+ 03D2  2BD4               	goto	u3541
  4686+ 03D3  2BD5               	goto	u3540
  4687+ 03D4                     u3541:
  4688+ 03D4  2BE1               	goto	l399
  4689+ 03D5                     u3540:
  4690+                          	
  4691+ 03D5                     l600000850:	
  4692+                          	line	35
  4693+                          	
  4694+ 03D5  085B               	movf	(___ftpack_arg),w
  4695+ 03D6  0084               	movwf	fsr0
  4696+ 03D7  3000               	movlw	0
  4697+ 03D8  1383               	bcf	status, 7	;select IRP bank0
  4698+ 03D9  0080               	movwf	indf
  4699+ 03DA  0A84               	incf	fsr0,f
  4700+ 03DB  3000               	movlw	0
  4701+ 03DC  0080               	movwf	indf
  4702+ 03DD  0A84               	incf	fsr0,f
  4703+ 03DE  3000               	movlw	0
  4704+ 03DF  0080               	movwf	indf
  4705+                          	line	36
  4706+ 03E0  2C83               	goto	l398
  4707+                          	line	37
  4708+                          	
  4709+ 03E1                     l399:	
  4710+                          	line	38
  4711+ 03E1  2BF4               	goto	l400
  4712+                          	
  4713+ 03E2                     l401:	
  4714+                          	line	39
  4715+ 03E2  3001               	movlw	(01h)
  4716+ 03E3  00DC               	movwf	(??___ftpack+1+0)
  4717+                          	
  4718+ 03E4  085C               	movf	(??___ftpack+1+0),w
  4719+ 03E5  07DA               	addwf	(___ftpack_exp),f
  4720+                          	line	40
  4721+                          	
  4722+ 03E6  085B               	movf	(___ftpack_arg),w
  4723+ 03E7  0084               	movwf	fsr0
  4724+ 03E8  3001               	movlw	01h
  4725+ 03E9  00DC               	movwf	(??___ftpack+1+0)
  4726+ 03EA                     u3555:
  4727+ 03EA  0A84               	incf	fsr0,f
  4728+ 03EB  0A84               	incf	fsr0,f
  4729+ 03EC  1003               	clrc
  4730+ 03ED  0C80               	rrf	indf,f
  4731+ 03EE  0384               	decf	fsr0,f
  4732+ 03EF  0C80               	rrf	indf,f
  4733+ 03F0  0384               	decf	fsr0,f
  4734+ 03F1  0C80               	rrf	indf,f
  4735+ 03F2  0BDC               	decfsz	(??___ftpack+1+0)
  4736+ 03F3  2BEA               	goto	u3555
  4737+                          	line	41
  4738+                          	
  4739+ 03F4                     l400:	
  4740+                          	line	38
  4741+                          	
  4742+ 03F4  085B               	movf	(___ftpack_arg),w
  4743+ 03F5  0084               	movwf	fsr0
  4744+ 03F6  3000               	movlw	0
  4745+ 03F7  0500               	andwf	indf,w
  4746+ 03F8  00DC               	movwf	??___ftpack+1+0
  4747+ 03F9  0A84               	incf	fsr0,f
  4748+ 03FA  3000               	movlw	0
  4749+ 03FB  0500               	andwf	indf,w
  4750+ 03FC  00DD               	movwf	??___ftpack+1+0+1
  4751+ 03FD  0A84               	incf	fsr0,f
  4752+ 03FE  30FE               	movlw	0FEh
  4753+ 03FF  0500               	andwf	indf,w
  4754+ 0400  00DE               	movwf	??___ftpack+1+0+2
  4755+ 0401  085E               	movf	??___ftpack+1+2,w
  4756+ 0402  045D               	iorwf	??___ftpack+1+1,w
  4757+ 0403  045C               	iorwf	??___ftpack+1+0,w
  4758+ 0404  1D03               	skipz
  4759+ 0405  2C07               	goto	u3561
  4760+ 0406  2C08               	goto	u3560
  4761+ 0407                     u3561:
  4762+ 0407  2BE2               	goto	l401
  4763+ 0408                     u3560:
  4764+                          	
  4765+ 0408                     l402:	
  4766+                          	line	42
  4767+ 0408  2C2A               	goto	l403
  4768+                          	
  4769+ 0409                     l404:	
  4770+                          	line	43
  4771+ 0409  3001               	movlw	(01h)
  4772+ 040A  00DC               	movwf	(??___ftpack+1+0)
  4773+                          	
  4774+ 040B  085C               	movf	(??___ftpack+1+0),w
  4775+ 040C  07DA               	addwf	(___ftpack_exp),f
  4776+                          	line	44
  4777+                          	
  4778+ 040D  085B               	movf	(___ftpack_arg),w
  4779+ 040E  0084               	movwf	fsr0
  4780+ 040F  3001               	movlw	01h
  4781+ 0410  0780               	addwf	indf,f
  4782+ 0411  0A84               	incf	fsr0,f
  4783+ 0412  3000               	movlw	0
  4784+ 0413  1803               	skipnc
  4785+ 0414  3E01               	addlw	1
  4786+ 0415  1D03               	skipz
  4787+ 0416  0780               	addwf	indf,f
  4788+ 0417  0A84               	incf	fsr0,f
  4789+ 0418  3000               	movlw	0
  4790+ 0419  1803               	skipnc
  4791+ 041A  3E01               	addlw	1
  4792+ 041B  0780               	addwf	indf,f
  4793+                          	line	45
  4794+                          	
  4795+ 041C  085B               	movf	(___ftpack_arg),w
  4796+ 041D  0084               	movwf	fsr0
  4797+ 041E  3001               	movlw	01h
  4798+ 041F  00DC               	movwf	(??___ftpack+1+0)
  4799+ 0420                     u3575:
  4800+ 0420  0A84               	incf	fsr0,f
  4801+ 0421  0A84               	incf	fsr0,f
  4802+ 0422  1003               	clrc
  4803+ 0423  0C80               	rrf	indf,f
  4804+ 0424  0384               	decf	fsr0,f
  4805+ 0425  0C80               	rrf	indf,f
  4806+ 0426  0384               	decf	fsr0,f
  4807+ 0427  0C80               	rrf	indf,f
  4808+ 0428  0BDC               	decfsz	(??___ftpack+1+0)
  4809+ 0429  2C20               	goto	u3575
  4810+                          	line	46
  4811+                          	
  4812+ 042A                     l403:	
  4813+                          	line	42
  4814+                          	
  4815+ 042A  085B               	movf	(___ftpack_arg),w
  4816+ 042B  0084               	movwf	fsr0
  4817+ 042C  3000               	movlw	0
  4818+ 042D  0500               	andwf	indf,w
  4819+ 042E  00DC               	movwf	??___ftpack+1+0
  4820+ 042F  0A84               	incf	fsr0,f
  4821+ 0430  3000               	movlw	0
  4822+ 0431  0500               	andwf	indf,w
  4823+ 0432  00DD               	movwf	??___ftpack+1+0+1
  4824+ 0433  0A84               	incf	fsr0,f
  4825+ 0434  30FF               	movlw	0FFh
  4826+ 0435  0500               	andwf	indf,w
  4827+ 0436  00DE               	movwf	??___ftpack+1+0+2
  4828+ 0437  085E               	movf	??___ftpack+1+2,w
  4829+ 0438  045D               	iorwf	??___ftpack+1+1,w
  4830+ 0439  045C               	iorwf	??___ftpack+1+0,w
  4831+ 043A  1D03               	skipz
  4832+ 043B  2C3D               	goto	u3581
  4833+ 043C  2C3E               	goto	u3580
  4834+ 043D                     u3581:
  4835+ 043D  2C09               	goto	l404
  4836+ 043E                     u3580:
  4837+                          	
  4838+ 043E                     l405:	
  4839+                          	line	47
  4840+ 043E  2C4F               	goto	l406
  4841+                          	
  4842+ 043F                     l407:	
  4843+                          	line	48
  4844+                          	
  4845+                          	
  4846+ 043F  3001               	movlw	low(01h)
  4847+ 0440  02DA               	subwf	(___ftpack_exp),f
  4848+                          	line	49
  4849+                          	
  4850+ 0441  085B               	movf	(___ftpack_arg),w
  4851+ 0442  0084               	movwf	fsr0
  4852+ 0443  3001               	movlw	01h
  4853+ 0444                     u3595:
  4854+ 0444  1003               	clrc
  4855+ 0445  0D80               	rlf	indf,f
  4856+ 0446  0A84               	incf	fsr0,f
  4857+ 0447  0D80               	rlf	indf,f
  4858+ 0448  0A84               	incf	fsr0,f
  4859+ 0449  0D80               	rlf	indf,f
  4860+ 044A  0384               	decf	fsr0,f
  4861+ 044B  0384               	decf	fsr0,f
  4862+ 044C  3EFF               	addlw	-1
  4863+ 044D  1D03               	skipz
  4864+ 044E  2C44               	goto	u3595
  4865+                          	line	50
  4866+                          	
  4867+ 044F                     l406:	
  4868+                          	line	47
  4869+                          	
  4870+ 044F  085B               	movf	(___ftpack_arg),w
  4871+ 0450  0084               	movwf	fsr0
  4872+ 0451  0800               	movf	indf,w
  4873+ 0452  00DC               	movwf	(??___ftpack+1+0)
  4874+ 0453  0A84               	incf	fsr0,f
  4875+ 0454  0800               	movf	indf,w
  4876+ 0455  00DD               	movwf	(??___ftpack+1+0+1)
  4877+ 0456  0A84               	incf	fsr0,f
  4878+ 0457  0800               	movf	indf,w
  4879+ 0458  00DE               	movwf	(??___ftpack+1+0+2)
  4880+ 0459  1FDD               	btfss	1+(??___ftpack+1+0),(15)&7
  4881+ 045A  2C5C               	goto	u3601
  4882+ 045B  2C5D               	goto	u3600
  4883+ 045C                     u3601:
  4884+ 045C  2C3F               	goto	l407
  4885+ 045D                     u3600:
  4886+                          	
  4887+ 045D                     l408:	
  4888+                          	line	51
  4889+                          	
  4890+ 045D  185A               	btfsc	(___ftpack_exp),(0)&7
  4891+ 045E  2C60               	goto	u3611
  4892+ 045F  2C61               	goto	u3610
  4893+ 0460                     u3611:
  4894+ 0460  2C6B               	goto	l409
  4895+ 0461                     u3610:
  4896+                          	line	52
  4897+                          	
  4898+ 0461  085B               	movf	(___ftpack_arg),w
  4899+ 0462  0084               	movwf	fsr0
  4900+ 0463  30FF               	movlw	0FFh
  4901+ 0464  0580               	andwf	indf,f
  4902+ 0465  0A84               	incf	fsr0,f
  4903+ 0466  307F               	movlw	07Fh
  4904+ 0467  0580               	andwf	indf,f
  4905+ 0468  0A84               	incf	fsr0,f
  4906+ 0469  30FF               	movlw	0FFh
  4907+ 046A  0580               	andwf	indf,f
  4908+                          	
  4909+ 046B                     l409:	
  4910+                          	line	53
  4911+                          	
  4912+ 046B  1003               	clrc
  4913+ 046C  0CDA               	rrf	(___ftpack_exp),f
  4914+                          
  4915+                          	line	54
  4916+                          	
  4917+ 046D  085A               	movf	(___ftpack_exp),w
  4918+ 046E  00DC               	movwf	(??___ftpack+1+0)
  4919+ 046F  01DD               	clrf	(??___ftpack+1+0+1)
  4920+ 0470  01DE               	clrf	(??___ftpack+1+0+2)
  4921+ 0471  3010               	movlw	010h
  4922+ 0472                     u3625:
  4923+ 0472  1003               	clrc
  4924+ 0473  0DDC               	rlf	(??___ftpack+1+0),f
  4925+ 0474  0DDD               	rlf	(??___ftpack+1+1),f
  4926+ 0475  0DDE               	rlf	(??___ftpack+1+2),f
  4927+ 0476                     u3620:
  4928+ 0476  3EFF               	addlw	-1
  4929+ 0477  1D03               	skipz
  4930+ 0478  2C72               	goto	u3625
  4931+                          	
  4932+ 0479  085B               	movf	(___ftpack_arg),w
  4933+ 047A  0084               	movwf	fsr0
  4934+ 047B  085C               	movf	(??___ftpack+1+0),w
  4935+ 047C  0480               	iorwf	indf,f
  4936+ 047D  0A84               	incf	fsr0,f
  4937+ 047E  085D               	movf	(??___ftpack+1+1),w
  4938+ 047F  0480               	iorwf	indf,f
  4939+ 0480  0A84               	incf	fsr0,f
  4940+ 0481  085E               	movf	(??___ftpack+1+2),w
  4941+ 0482  0480               	iorwf	indf,f
  4942+                          	line	55
  4943+ 0483                     l398:	
  4944+ 0483  0008               	return
  4945+                          ; =============== function ___ftpack ends =====
      +                          ==========
  4946+                          
  4947+                          GLOBAL __end_of___ftpack
  4948+ 0484                     	__end_of___ftpack:
  4949+                          	FNSIZE	___ftpack,4,1
  4950+                          	signat	___ftpack,8312
  4951+                          	global	___ftunpack
  4952+                          	global	??___ftunpack
  4953+                          	global	?___ftunpack
  4954+                          
  4955+                          ; *************** function ___ftunpack ********
      +                          *******
  4956+                          ; Defined at:
  4957+                          ;		line 13 in file "C:\Program Files (x86)\HI-T
      +                          ECH Software\PICC\PRO\9.65\sources\float.c"
  4958+                          ; Parameters:
  4959+                          ;		arg         	reg:   wr	type: PTR unsigned um
      +                          ; Largest target is 3
  4960+                          ;		 -> __fttol_f1(3), __ftmul_f2(3), __ftmul_f1
      +                          (3), __ftdiv_f2(3), 
  4961+                          ;		 -> __ftdiv_f1(3), __ftadd_f2(3), __ftadd_f1
      +                          (3), 
  4962+                          ;		exp         	offs:   0	type: PTR unsigned ch
      +                          ar ; Largest target is 1
  4963+                          ;		 -> __fttol_exp1(1), __ftmul_cntr(1), __ftmu
      +                          l_exp1(1), __ftdiv_exp2(1), 
  4964+                          ;		 -> __ftdiv_exp1(1), __ftadd_exp2(1), __ftad
      +                          d_exp1(1), 
  4965+                          ; Auto variables:
  4966+                          ;		arg         	       	type: PTR unsigned um; 
      +                          Largest target is 3
  4967+                          ;		 -> __fttol_f1(3), __ftmul_f2(3), __ftmul_f1
      +                          (3), __ftdiv_f2(3), 
  4968+                          ;		 -> __ftdiv_f1(3), __ftadd_f2(3), __ftadd_f1
      +                          (3), 
  4969+                          ;		sign        	       	type: unsigned char 
  4970+                          ; Return value:
  4971+                          ;		type: unsigned char 
  4972+                          ;		size: 1
  4973+                          ; Registers used:
  4974+                          ;		wreg, fsr0l, fsr0h, status,2, status,0
  4975+                          ; Tracked objects:
  4976+                          ;		On entry : 300/0
  4977+                          ;		On exit  : 0/0
  4978+                          ;		Unchanged: 0/0
  4979+                          ; Data sizes:
  4980+                          ;		Autos:    2
  4981+                          ;		Params:   1
  4982+                          ;		Temp:     4
  4983+                          ;		Total:    7
  4984+                          ; This function calls:
  4985+                          ;		Nothing
  4986+                          ; This function is called by:
  4987+                          ;		___ftadd
  4988+                          ;		___ftdiv
  4989+                          ;		___ftmul
  4990+                          ;		___fttol
  4991+                          ; This function uses a non-reentrant model
  4992+                          ; 
  4993+                          	psect	text215,local,class=CODE,delta=2
  4994+                          	file	"C:\Program Files (x86)\HI-TECH Software\
      +                          PICC\PRO\9.65\sources\float.c"
  4995+                          	line	13
  4996+                          	
  4997+ 0ED8                     ___ftunpack:	
  4998+                          	opt stack 3
  4999+                          ; Regs used in ___ftunpack: [wreg-fsr0h+status,
      +                          2+status,0]
  5000+                          ;___ftunpack_arg stored from wreg
  5001+                          	line	16
  5002+                          	
  5003+ 0ED8  00DB               	movwf	(___ftunpack_arg)
  5004+                          	
  5005+ 0ED9  085B               	movf	(___ftunpack_arg),w
  5006+ 0EDA  0084               	movwf	fsr0
  5007+ 0EDB  1383               	bcf	status, 7	;select IRP bank0
  5008+ 0EDC  0800               	movf	indf,w
  5009+ 0EDD  00DD               	movwf	(??___ftunpack+2+0)
  5010+ 0EDE  0A84               	incf	fsr0,f
  5011+ 0EDF  0800               	movf	indf,w
  5012+ 0EE0  00DE               	movwf	(??___ftunpack+2+0+1)
  5013+ 0EE1  0A84               	incf	fsr0,f
  5014+ 0EE2  0800               	movf	indf,w
  5015+ 0EE3  00DF               	movwf	(??___ftunpack+2+0+2)
  5016+ 0EE4  300F               	movlw	0Fh
  5017+ 0EE5                     u3635:
  5018+ 0EE5  1003               	clrc
  5019+ 0EE6  0CDF               	rrf	(??___ftunpack+2+2),f
  5020+ 0EE7  0CDE               	rrf	(??___ftunpack+2+1),f
  5021+ 0EE8  0CDD               	rrf	(??___ftunpack+2+0),f
  5022+ 0EE9                     u3630:
  5023+ 0EE9  3EFF               	addlw	-1
  5024+ 0EEA  1D03               	skipz
  5025+ 0EEB  2EE5               	goto	u3635
  5026+ 0EEC  085D               	movf	(??___ftunpack+2+0),w
  5027+                          	
  5028+ 0EED  00DC               	movwf	(___ftunpack_sign)
  5029+ 0EEE  00E0               	movwf	(??___ftunpack+5+0)
  5030+                          	
  5031+ 0EEF  085A               	movf	(___ftunpack_exp),w
  5032+ 0EF0  0084               	movwf	fsr0
  5033+ 0EF1  0860               	movf	(??___ftunpack+5+0),w
  5034+ 0EF2  0080               	movwf	indf
  5035+                          	line	17
  5036+                          	
  5037+ 0EF3  08DC               	movf	(___ftunpack_sign),f
  5038+ 0EF4  1D03               	skipz
  5039+ 0EF5  2EF7               	goto	u3641
  5040+ 0EF6  2EF8               	goto	u3640
  5041+ 0EF7                     u3641:
  5042+ 0EF7  2F04               	goto	l396
  5043+ 0EF8                     u3640:
  5044+                          	line	18
  5045+                          	
  5046+ 0EF8  085B               	movf	(___ftunpack_arg),w
  5047+ 0EF9  0084               	movwf	fsr0
  5048+ 0EFA  3000               	movlw	0
  5049+ 0EFB  0080               	movwf	indf
  5050+ 0EFC  0A84               	incf	fsr0,f
  5051+ 0EFD  3000               	movlw	0
  5052+ 0EFE  0080               	movwf	indf
  5053+ 0EFF  0A84               	incf	fsr0,f
  5054+ 0F00  3000               	movlw	0
  5055+ 0F01  0080               	movwf	indf
  5056+                          	line	19
  5057+ 0F02  3000               	movlw	(0)
  5058+ 0F03  2F31               	goto	l395
  5059+                          	line	20
  5060+                          	
  5061+ 0F04                     l396:	
  5062+                          	line	21
  5063+ 0F04  1003               	clrc
  5064+                          	
  5065+ 0F05  3000               	movlw	0
  5066+ 0F06  1803               	btfsc	status,0
  5067+ 0F07  3001               	movlw	1
  5068+ 0F08  00DC               	movwf	(___ftunpack_sign)
  5069+                          	line	22
  5070+                          	
  5071+ 0F09  085B               	movf	(___ftunpack_arg),w
  5072+ 0F0A  0084               	movwf	fsr0
  5073+ 0F0B  3000               	movlw	0
  5074+ 0F0C  0480               	iorwf	indf,f
  5075+ 0F0D  0A84               	incf	fsr0,f
  5076+ 0F0E  3080               	movlw	080h
  5077+ 0F0F  0480               	iorwf	indf,f
  5078+ 0F10  0A84               	incf	fsr0,f
  5079+ 0F11  3000               	movlw	0
  5080+ 0F12  0480               	iorwf	indf,f
  5081+                          	line	23
  5082+                          	
  5083+ 0F13  085B               	movf	(___ftunpack_arg),w
  5084+ 0F14  0084               	movwf	fsr0
  5085+ 0F15  0800               	movf	indf,w
  5086+ 0F16  00DD               	movwf	(??___ftunpack+2+0)
  5087+ 0F17  0A84               	incf	fsr0,f
  5088+ 0F18  0800               	movf	indf,w
  5089+ 0F19  00DE               	movwf	(??___ftunpack+2+0+1)
  5090+ 0F1A  0A84               	incf	fsr0,f
  5091+ 0F1B  0800               	movf	indf,w
  5092+ 0F1C  00DF               	movwf	(??___ftunpack+2+0+2)
  5093+ 0F1D  1FDF               	btfss	2+(??___ftunpack+2+0),(23)&7
  5094+ 0F1E  2F20               	goto	u3651
  5095+ 0F1F  2F21               	goto	u3650
  5096+ 0F20                     u3651:
  5097+ 0F20  2F25               	goto	l397
  5098+ 0F21                     u3650:
  5099+                          	line	24
  5100+ 0F21  3001               	movlw	(01h)
  5101+ 0F22  00DD               	movwf	(??___ftunpack+2+0)
  5102+                          	
  5103+ 0F23  085D               	movf	(??___ftunpack+2+0),w
  5104+ 0F24  07DC               	addwf	(___ftunpack_sign),f
  5105+                          	
  5106+ 0F25                     l397:	
  5107+                          	line	25
  5108+                          	
  5109+ 0F25  085B               	movf	(___ftunpack_arg),w
  5110+ 0F26  0084               	movwf	fsr0
  5111+ 0F27  30FF               	movlw	0FFh
  5112+ 0F28  0580               	andwf	indf,f
  5113+ 0F29  0A84               	incf	fsr0,f
  5114+ 0F2A  30FF               	movlw	0FFh
  5115+ 0F2B  0580               	andwf	indf,f
  5116+ 0F2C  0A84               	incf	fsr0,f
  5117+ 0F2D  3000               	movlw	0
  5118+ 0F2E  0580               	andwf	indf,f
  5119+                          	line	26
  5120+                          	
  5121+ 0F2F  085C               	movf	(___ftunpack_sign),w
  5122+ 0F30  2F31               	goto	l395
  5123+                          	line	27
  5124+ 0F31                     l395:	
  5125+ 0F31  0008               	return
  5126+                          ; =============== function ___ftunpack ends ===
      +                          ============
  5127+                          
  5128+                          GLOBAL __end_of___ftunpack
  5129+ 0F32                     	__end_of___ftunpack:
  5130+                          	FNSIZE	___ftunpack,6,1
  5131+                          	signat	___ftunpack,8313
  5132+                          	global	_LCDWriteByte
  5133+                          	global	??_LCDWriteByte
  5134+                          	global	?_LCDWriteByte
  5135+                          
  5136+                          ; *************** function _LCDWriteByte ******
      +                          *********
  5137+                          ; Defined at:
  5138+                          ;		line 66 in file "C:\Users\hardik\Desktop\new
      +                          \LCD.c"
  5139+                          ; Parameters:
  5140+                          ;		LCDData     	reg:   wr	type: unsigned char 
  5141+                          ; Auto variables:
  5142+                          ;		LCDData     	       	type: unsigned char 
  5143+                          ; Return value:
  5144+                          ;		type: void 
  5145+                          ;		size: 0
  5146+                          ; Registers used:
  5147+                          ;		wreg, status,2, status,0, pclath, cstack
  5148+                          ; Tracked objects:
  5149+                          ;		On entry : 300/0
  5150+                          ;		On exit  : 0/0
  5151+                          ;		Unchanged: 0/0
  5152+                          ; Data sizes:
  5153+                          ;		Autos:    1
  5154+                          ;		Params:   0
  5155+                          ;		Temp:     1
  5156+                          ;		Total:    2
  5157+                          ; This function calls:
  5158+                          ;		_LCDEnable
  5159+                          ;		_Delay
  5160+                          ; This function is called by:
  5161+                          ;		_LCDWriteCommand
  5162+                          ;		_LCDWriteData
  5163+                          ; This function uses a non-reentrant model
  5164+                          ; 
  5165+                          	psect	text216,local,class=CODE,delta=2
  5166+                          	file	"C:\Users\hardik\Desktop\new\LCD.c"
  5167+                          	line	66
  5168+                          ;LCD.c: 65: static void LCDWriteByte(LCDubyte L
      +                          CDData)
  5169+                          ;LCD.c: 66: {
  5170+                          	
  5171+ 0E3C                     _LCDWriteByte:	
  5172+                          	opt stack 2
  5173+                          ; Regs used in _LCDWriteByte: [wreg+status,2+st
      +                          atus,0+pclath+cstack]
  5174+                          ;_LCDWriteByte_LCDData stored from wreg
  5175+                          	
  5176+ 0E3C  00D3               	movwf	(_LCDWriteByte_LCDData)
  5177+                          	line	67
  5178+                          ;LCD.c: 67: PORTD = (PORTD & 0x0F)|(LCDData & 0
      +                          xF0);
  5179+                          	
  5180+ 0E3D  0853               	movf	(_LCDWriteByte_LCDData),w
  5181+ 0E3E  39F0               	andlw	0F0h
  5182+ 0E3F  00D4               	movwf	(??_LCDWriteByte+1+0)
  5183+                          	
  5184+ 0E40  0808               	movf	(8),w	;volatile
  5185+ 0E41  390F               	andlw	0Fh
  5186+ 0E42  0454               	iorwf	(??_LCDWriteByte+1+0),w
  5187+                          	
  5188+ 0E43  0088               	movwf	(8)	;volatile
  5189+                          	line	68
  5190+                          ;LCD.c: 68: LCDEnable();
  5191+ 0E44  120A  158A  2543   	fcall	_LCDEnable
      +       120A  158A         
  5192+                          	line	69
  5193+                          ;LCD.c: 69: PORTD = (PORTD & 0x0F)|(LCDData << 
      +                          4);
  5194+ 0E49  1283               	bcf	status, 5	;RP0=0, select bank0
  5195+ 0E4A  1303               	bcf	status, 6	;RP1=0, select bank0
  5196+                          	
  5197+ 0E4B  0853               	movf	(_LCDWriteByte_LCDData),w
  5198+ 0E4C  00D4               	movwf	(??_LCDWriteByte+1+0)
  5199+ 0E4D  3004               	movlw	04h
  5200+ 0E4E                     u2675:
  5201+ 0E4E  1003               	clrc
  5202+ 0E4F  0DD4               	rlf	(??_LCDWriteByte+1+0),f
  5203+ 0E50  3EFF               	addlw	-1
  5204+ 0E51  1D03               	skipz
  5205+ 0E52  2E4E               	goto	u2675
  5206+                          	
  5207+ 0E53  0808               	movf	(8),w	;volatile
  5208+ 0E54  390F               	andlw	0Fh
  5209+ 0E55  0454               	iorwf	0+(??_LCDWriteByte+1+0),w
  5210+                          	
  5211+ 0E56  0088               	movwf	(8)	;volatile
  5212+                          	line	70
  5213+                          ;LCD.c: 70: LCDEnable();
  5214+ 0E57  120A  158A  2543   	fcall	_LCDEnable
      +       120A  158A         
  5215+                          	line	71
  5216+                          ;LCD.c: 71: Delay(2);
  5217+ 0E5C  3002               	movlw	low(02h)
  5218+ 0E5D  1283               	bcf	status, 5	;RP0=0, select bank0
  5219+ 0E5E  1303               	bcf	status, 6	;RP1=0, select bank0
  5220+                          	
  5221+ 0E5F  00D5               	movwf	(?_Delay)
  5222+ 0E60  3000               	movlw	high(02h)
  5223+ 0E61  00D6               	movwf	((?_Delay))+1
  5224+ 0E62  120A  158A  2564   	fcall	_Delay
      +       120A  158A         
  5225+                          	line	72
  5226+                          ;LCD.c: 72: }
  5227+ 0E67                     l21:	
  5228+ 0E67  0008               	return
  5229+                          ; =============== function _LCDWriteByte ends =
      +                          ==============
  5230+                          
  5231+                          GLOBAL __end_of_LCDWriteByte
  5232+ 0E68                     	__end_of_LCDWriteByte:
  5233+                          	FNSIZE	_LCDWriteByte,2,0
  5234+                          	signat	_LCDWriteByte,4216
  5235+                          	global	_LCDEnable
  5236+                          	global	??_LCDEnable
  5237+                          	global	?_LCDEnable
  5238+                          
  5239+                          ; *************** function _LCDEnable *********
      +                          ******
  5240+                          ; Defined at:
  5241+                          ;		line 5 in file "C:\Users\hardik\Desktop\new\
      +                          LCD.c"
  5242+                          ; Parameters:
  5243+                          ;		None
  5244+                          ; Auto variables:
  5245+                          ;		None
  5246+                          ; Return value:
  5247+                          ;		type: void 
  5248+                          ;		size: 0
  5249+                          ; Registers used:
  5250+                          ;		wreg, status,2, status,0, pclath, cstack
  5251+                          ; Tracked objects:
  5252+                          ;		On entry : 300/0
  5253+                          ;		On exit  : 0/0
  5254+                          ;		Unchanged: 0/0
  5255+                          ; Data sizes:
  5256+                          ;		Autos:    0
  5257+                          ;		Params:   0
  5258+                          ;		Temp:     0
  5259+                          ;		Total:    0
  5260+                          ; This function calls:
  5261+                          ;		_Delay
  5262+                          ; This function is called by:
  5263+                          ;		_LCDWriteByte
  5264+                          ; This function uses a non-reentrant model
  5265+                          ; 
  5266+                          	psect	text217,local,class=CODE,delta=2
  5267+                          	file	"C:\Users\hardik\Desktop\new\LCD.c"
  5268+                          	line	5
  5269+                          ;LCD.c: 4: static void LCDEnable(void)
  5270+                          ;LCD.c: 5: {
  5271+                          	
  5272+ 0D43                     _LCDEnable:	
  5273+                          	opt stack 1
  5274+                          ; Regs used in _LCDEnable: [wreg+status,2+statu
      +                          s,0+pclath+cstack]
  5275+                          	line	6
  5276+                          ;LCD.c: 6: RD3 = 1;
  5277+ 0D43  1588               	bsf	(67/8),(67)&7
  5278+                          	line	7
  5279+                          ;LCD.c: 7: Delay(10);
  5280+ 0D44  300A               	movlw	low(0Ah)
  5281+                          	
  5282+ 0D45  00D5               	movwf	(?_Delay)
  5283+ 0D46  3000               	movlw	high(0Ah)
  5284+ 0D47  00D6               	movwf	((?_Delay))+1
  5285+ 0D48  120A  158A  2564   	fcall	_Delay
      +       120A  158A         
  5286+                          	line	8
  5287+                          ;LCD.c: 8: RD3 = 0;
  5288+ 0D4D  1283               	bcf	status, 5	;RP0=0, select bank0
  5289+ 0D4E  1303               	bcf	status, 6	;RP1=0, select bank0
  5290+ 0D4F  1188               	bcf	(67/8),(67)&7
  5291+                          	line	9
  5292+                          ;LCD.c: 9: }
  5293+ 0D50                     l8:	
  5294+ 0D50  0008               	return
  5295+                          ; =============== function _LCDEnable ends ====
      +                          ===========
  5296+                          
  5297+                          GLOBAL __end_of_LCDEnable
  5298+ 0D51                     	__end_of_LCDEnable:
  5299+                          	FNSIZE	_LCDEnable,0,0
  5300+                          	signat	_LCDEnable,88
  5301+                          	global	_Delay
  5302+                          	global	??_Delay
  5303+                          	global	?_Delay
  5304+                          
  5305+                          ; *************** function _Delay *************
      +                          **
  5306+                          ; Defined at:
  5307+                          ;		line 4 in file "C:\Users\hardik\Desktop\new\
      +                          delay.c"
  5308+                          ; Parameters:
  5309+                          ;		time        	offs:   0	type: unsigned int 
  5310+                          ; Auto variables:
  5311+                          ;		pause       	       	type: unsigned char 
  5312+                          ; Return value:
  5313+                          ;		type: void 
  5314+                          ;		size: 0
  5315+                          ; Registers used:
  5316+                          ;		wreg, status,2, status,0
  5317+                          ; Tracked objects:
  5318+                          ;		On entry : 300/0
  5319+                          ;		On exit  : 0/0
  5320+                          ;		Unchanged: 0/0
  5321+                          ; Data sizes:
  5322+                          ;		Autos:    1
  5323+                          ;		Params:   2
  5324+                          ;		Temp:     0
  5325+                          ;		Total:    3
  5326+                          ; This function calls:
  5327+                          ;		Nothing
  5328+                          ; This function is called by:
  5329+                          ;		_LCDEnable
  5330+                          ;		_LCDDisplayInitializing
  5331+                          ;		_LCDWriteByte
  5332+                          ;		_main
  5333+                          ; This function uses a non-reentrant model
  5334+                          ; 
  5335+                          	psect	text218,local,class=CODE,delta=2
  5336+                          	file	"C:\Users\hardik\Desktop\new\delay.c"
  5337+                          	line	4
  5338+                          ;delay.c: 3: void Delay(unsigned int time)
  5339+                          ;delay.c: 4: {
  5340+                          	
  5341+ 0D64                     _Delay:	
  5342+                          	opt stack 0
  5343+                          ; Regs used in _Delay: [wreg+status,2+status,0]
  5344+                          	line	6
  5345+                          ;delay.c: 5: unsigned char pause;
  5346+                          ;delay.c: 6: while( time > 0)
  5347+ 0D64  2D76               	goto	l2
  5348+                          	
  5349+ 0D65                     l3:	
  5350+                          	line	8
  5351+                          ;delay.c: 7: {
  5352+                          ;delay.c: 8: pause = 255;
  5353+                          	
  5354+ 0D65  01D7               	clrf	(_Delay_pause)
  5355+ 0D66  03D7               	decf	(_Delay_pause),f
  5356+                          	line	9
  5357+                          ;delay.c: 9: while(pause--);
  5358+ 0D67  2D68               	goto	l5
  5359+                          	
  5360+ 0D68                     l5:	
  5361+                          	
  5362+                          	
  5363+ 0D68  3001               	movlw	low(01h)
  5364+ 0D69  02D7               	subwf	(_Delay_pause),f
  5365+ 0D6A  0857               	movf	((_Delay_pause))&07fh,w
  5366+ 0D6B  3AFF               	xorlw	0FFh
  5367+ 0D6C  1D03               	skipz
  5368+ 0D6D  2D6F               	goto	u2731
  5369+ 0D6E  2D70               	goto	u2730
  5370+ 0D6F                     u2731:
  5371+ 0D6F  2D68               	goto	l5
  5372+ 0D70                     u2730:
  5373+                          	
  5374+ 0D70                     l7:	
  5375+                          	line	10
  5376+                          ;delay.c: 10: time--;
  5377+                          	
  5378+ 0D70  3001               	movlw	low(01h)
  5379+ 0D71  02D5               	subwf	(_Delay_time),f
  5380+ 0D72  3000               	movlw	high(01h)
  5381+ 0D73  1C03               	skipc
  5382+ 0D74  03D6               	decf	(_Delay_time+1),f
  5383+ 0D75  02D6               	subwf	(_Delay_time+1),f
  5384+                          	line	11
  5385+                          	
  5386+ 0D76                     l2:	
  5387+                          	line	6
  5388+                          	
  5389+ 0D76  0856               	movf	((_Delay_time+1)),w
  5390+ 0D77  0455               	iorwf	((_Delay_time)),w
  5391+ 0D78  1D03               	skipz
  5392+ 0D79  2D7B               	goto	u2741
  5393+ 0D7A  2D7C               	goto	u2740
  5394+ 0D7B                     u2741:
  5395+ 0D7B  2D65               	goto	l3
  5396+ 0D7C                     u2740:
  5397+                          	
  5398+ 0D7C                     l4:	
  5399+                          	line	12
  5400+                          ;delay.c: 11: }
  5401+                          ;delay.c: 12: }
  5402+ 0D7C                     l1:	
  5403+ 0D7C  0008               	return
  5404+                          ; =============== function _Delay ends ========
      +                          =======
  5405+                          
  5406+                          GLOBAL __end_of_Delay
  5407+ 0D7D                     	__end_of_Delay:
  5408+                          	FNSIZE	_Delay,1,2
  5409+                          	signat	_Delay,4216
  5410+                          	FNCALL	_main,_MainSystemInitialize
  5411+                          	FNCALL	_main,_LCDDisplayInitializing
  5412+                          	FNCALL	_main,_LCDWriteCommand
  5413+                          	FNCALL	_main,_LCDWriteString
  5414+                          	FNCALL	_main,___ftge
  5415+                          	FNCALL	_main,_Delay
  5416+                          	FNCALL	_main,___wmul
  5417+                          	FNCALL	_main,___lwtoft
  5418+                          	FNCALL	_main,___ftmul
  5419+                          	FNCALL	_main,___ftdiv
  5420+                          	FNCALL	_main,___ftadd
  5421+                          	FNCALL	_main,_LCDWriteFloat
  5422+                          	FNCALL	_LCDDisplayInitializing,_LCDWriteString
  5423+                          	FNCALL	_LCDDisplayInitializing,_LCDWriteComman
      +                          d
  5424+                          	FNCALL	_LCDDisplayInitializing,_LCDWriteData
  5425+                          	FNCALL	_LCDDisplayInitializing,_Delay
  5426+                          	FNCALL	___lwtoft,___ftpack
  5427+                          	FNCALL	_LCDWriteFloat,___ftge
  5428+                          	FNCALL	_LCDWriteFloat,_LCDWriteData
  5429+                          	FNCALL	_LCDWriteFloat,___ftneg
  5430+                          	FNCALL	_LCDWriteFloat,___fttol
  5431+                          	FNCALL	_LCDWriteFloat,_LCDWriteInteger
  5432+                          	FNCALL	_LCDWriteFloat,___awtoft
  5433+                          	FNCALL	_LCDWriteFloat,___ftsub
  5434+                          	FNCALL	_LCDWriteFloat,___ftadd
  5435+                          	FNCALL	_LCDWriteFloat,___ftmul
  5436+                          	FNCALL	_LCDWriteFloat,___awmod
  5437+                          	FNCALL	_LCDWriteFloat,___awdiv
  5438+                          	FNCALL	_LCDWriteFloat,_LCDWriteCommand
  5439+                          	FNCALL	_LCDWriteFloat,_LCDWriteString
  5440+                          	FNCALL	___ftdiv,___ftunpack
  5441+                          	FNCALL	___ftdiv,___ftpack
  5442+                          	FNCALL	_MainSystemInitialize,_LCDInitialize
  5443+                          	FNCALL	_LCDInitialize,_LCDReset
  5444+                          	FNCALL	_LCDInitialize,_LCDWriteCommand
  5445+                          	FNCALL	_LCDWriteInteger,_LCDWriteData
  5446+                          	FNCALL	_LCDWriteInteger,___awmod
  5447+                          	FNCALL	_LCDWriteInteger,___awdiv
  5448+                          	FNCALL	___fttol,___ftunpack
  5449+                          	FNCALL	___ftmul,___ftunpack
  5450+                          	FNCALL	___ftmul,___ftpack
  5451+                          	FNCALL	___awtoft,___ftpack
  5452+                          	FNCALL	___awtoft,___ftneg
  5453+                          	FNCALL	_LCDWriteString,_LCDWriteData
  5454+                          	FNCALL	___ftsub,___ftadd
  5455+                          	FNCALL	___ftadd,___ftunpack
  5456+                          	FNCALL	___ftadd,___ftpack
  5457+                          	FNCALL	_LCDWriteData,_LCDWriteByte
  5458+                          	FNCALL	_LCDReset,_LCDWriteCommand
  5459+                          	FNCALL	_LCDWriteCommand,_LCDWriteByte
  5460+                          	FNCALL	_LCDWriteByte,_LCDEnable
  5461+                          	FNCALL	_LCDWriteByte,_Delay
  5462+                          	FNCALL	_LCDEnable,_Delay
  5463+                          	FNROOT	_main
  5464+                          ;	FNARG	___ftdiv,___ftmul
  5465+                          ;	FNARG	___ftsub,___awtoft
  5466+                          ;	FNARG	___ftsub,___ftneg
  5467+                          ;	FNARG	___ftadd,___awtoft
  5468+                          ;	FNARG	___ftadd,___ftneg
  5469+                          ;	FNARG	___ftmul,___ftadd
  5470+                          ;	FNARG	___ftmul,___ftsub
  5471+                          ;	FNARG	___ftmul,___awtoft
  5472+                          ;	FNARG	___ftmul,___ftneg
  5473+                          	global	_i
  5474+                          	global	_i
  5475+                          	psect	common,class=COMMON,space=1
  5476+                          
  5477+                          	DABS	1,120,2	;_i
  5478+ 0000                     	_i	set	0x78
  5479+                          
  5480+                          	global	_j
  5481+                          	global	_j
  5482+                          
  5483+                          	DABS	1,122,2	;_j
  5484+ 0000                     	_j	set	0x7A
  5485+                          
  5486+                          	global	_k
  5487+                          	global	_k
  5488+                          
  5489+                          	DABS	1,124,2	;_k
  5490+ 0000                     	_k	set	0x7C
  5491+                          
  5492+                          	psect	idata,class=CODE,delta=2,space=0
  5493+                          	file	"C:\Users\hardik\Desktop\new\main.c"
  5494+                          	line	3
  5495+                          
  5496+                          ;initializer for _i
  5497+ 0757  3430               	retlw	030h
  5498+ 0758  3400               	retlw	0
  5499+                          
  5500+                          ;initializer for _j
  5501+ 0759  3430               	retlw	030h
  5502+ 075A  3400               	retlw	0
  5503+                          
  5504+                          ;initializer for _k
  5505+ 075B  3430               	retlw	030h
  5506+ 075C  3400               	retlw	0
  5507+                          	psect	strings,class=CODE,delta=2,reloc=256
  5508+                          	global	stringdir,stringtab,__stringbase,string
      +                          jmp
  5509+ 0700                     stringtab:
  5510+ 0700  00FE               	movwf	(btemp)&07Fh
  5511+ 0701  1FFE               	btfss	(btemp)&07Fh,7
  5512+ 0702  2F08               	goto	stringcode
  5513+ 0703  1383               	bcf	status,7
  5514+ 0704  187E               	btfsc	btemp&7Fh,0
  5515+ 0705  1783               	bsf	status,7
  5516+ 0706  0800               	movf	indf,w
  5517+ 0707  0008               	return
  5518+ 0708                     stringcode:
  5519+ 0708  0804               	movf	fsr,w
  5520+ 0709                     stringdir:
  5521+ 0709  00FE               movwf btemp&07Fh
  5522+ 070A  3007               movlw high(stringdir)
  5523+ 070B  008A               movwf pclath
  5524+ 070C  087E               movf btemp&07Fh,w
  5525+ 070D                     stringjmp:
  5526+ 070D  0782               	addwf pc
  5527+ 070E                     __stringbase:
  5528+ 070E  3400               	retlw	0
  5529+                          	global	_ADCON0
  5530+ 0000                     	_ADCON0	set	0x1F
  5531+                          
  5532+                          	global	_ADCON1
  5533+                          	global	_ADCON1
  5534+ 0000                     	_ADCON1	set	0x9F
  5535+                          
  5536+                          	global	_ADRESH
  5537+ 0000                     	_ADRESH	set	0x1E
  5538+                          
  5539+                          	global	_ADRESL
  5540+ 0000                     	_ADRESL	set	0x9E
  5541+                          
  5542+                          	global	_CCP1CON
  5543+                          	global	_CCP1CON
  5544+ 0000                     	_CCP1CON	set	0x17
  5545+                          
  5546+                          	global	_CCP2CON
  5547+                          	global	_CCP2CON
  5548+ 0000                     	_CCP2CON	set	0x1D
  5549+                          
  5550+                          	global	_CCPR1H
  5551+                          	global	_CCPR1H
  5552+ 0000                     	_CCPR1H	set	0x16
  5553+                          
  5554+                          	global	_CCPR1L
  5555+                          	global	_CCPR1L
  5556+ 0000                     	_CCPR1L	set	0x15
  5557+                          
  5558+                          	global	_CCPR2H
  5559+                          	global	_CCPR2H
  5560+ 0000                     	_CCPR2H	set	0x1C
  5561+                          
  5562+                          	global	_CCPR2L
  5563+                          	global	_CCPR2L
  5564+ 0000                     	_CCPR2L	set	0x1B
  5565+                          
  5566+                          	global	_CMCON
  5567+                          	global	_CMCON
  5568+ 0000                     	_CMCON	set	0x9C
  5569+                          
  5570+                          	global	_CVRCON
  5571+                          	global	_CVRCON
  5572+ 0000                     	_CVRCON	set	0x9D
  5573+                          
  5574+                          	global	_EEADR
  5575+                          	global	_EEADR
  5576+ 0000                     	_EEADR	set	0x10D
  5577+                          
  5578+                          	global	_EEADRH
  5579+                          	global	_EEADRH
  5580+ 0000                     	_EEADRH	set	0x10F
  5581+                          
  5582+                          	global	_EEADRL
  5583+                          	global	_EEADRL
  5584+ 0000                     	_EEADRL	set	0x10D
  5585+                          
  5586+                          	global	_EECON1
  5587+                          	global	_EECON1
  5588+ 0000                     	_EECON1	set	0x18C
  5589+                          
  5590+                          	global	_EECON2
  5591+                          	global	_EECON2
  5592+ 0000                     	_EECON2	set	0x18D
  5593+                          
  5594+                          	global	_EEDATA
  5595+                          	global	_EEDATA
  5596+ 0000                     	_EEDATA	set	0x10C
  5597+                          
  5598+                          	global	_EEDATH
  5599+                          	global	_EEDATH
  5600+ 0000                     	_EEDATH	set	0x10E
  5601+                          
  5602+                          	global	_FSR
  5603+                          	global	_FSR
  5604+ 0000                     	_FSR	set	0x4
  5605+                          
  5606+                          	global	_INDF
  5607+                          	global	_INDF
  5608+ 0000                     	_INDF	set	0x0
  5609+                          
  5610+                          	global	_INTCON
  5611+                          	global	_INTCON
  5612+ 0000                     	_INTCON	set	0xB
  5613+                          
  5614+                          	global	_OPTION
  5615+                          	global	_OPTION
  5616+ 0000                     	_OPTION	set	0x81
  5617+                          
  5618+                          	global	_PCL
  5619+                          	global	_PCL
  5620+ 0000                     	_PCL	set	0x2
  5621+                          
  5622+                          	global	_PCLATH
  5623+                          	global	_PCLATH
  5624+ 0000                     	_PCLATH	set	0xA
  5625+                          
  5626+                          	global	_PCON
  5627+                          	global	_PCON
  5628+ 0000                     	_PCON	set	0x8E
  5629+                          
  5630+                          	global	_PIE1
  5631+                          	global	_PIE1
  5632+ 0000                     	_PIE1	set	0x8C
  5633+                          
  5634+                          	global	_PIE2
  5635+                          	global	_PIE2
  5636+ 0000                     	_PIE2	set	0x8D
  5637+                          
  5638+                          	global	_PIR1
  5639+                          	global	_PIR1
  5640+ 0000                     	_PIR1	set	0xC
  5641+                          
  5642+                          	global	_PIR2
  5643+                          	global	_PIR2
  5644+ 0000                     	_PIR2	set	0xD
  5645+                          
  5646+                          	global	_PORTA
  5647+                          	global	_PORTA
  5648+ 0000                     	_PORTA	set	0x5
  5649+                          
  5650+                          	global	_PORTB
  5651+ 0000                     	_PORTB	set	0x6
  5652+                          
  5653+                          	global	_PORTC
  5654+                          	global	_PORTC
  5655+ 0000                     	_PORTC	set	0x7
  5656+                          
  5657+                          	global	_PORTD
  5658+ 0000                     	_PORTD	set	0x8
  5659+                          
  5660+                          	global	_PORTE
  5661+                          	global	_PORTE
  5662+ 0000                     	_PORTE	set	0x9
  5663+                          
  5664+                          	global	_PR2
  5665+                          	global	_PR2
  5666+ 0000                     	_PR2	set	0x92
  5667+                          
  5668+                          	global	_RCREG
  5669+                          	global	_RCREG
  5670+ 0000                     	_RCREG	set	0x1A
  5671+                          
  5672+                          	global	_RCSTA
  5673+                          	global	_RCSTA
  5674+ 0000                     	_RCSTA	set	0x18
  5675+                          
  5676+                          	global	_SPBRG
  5677+                          	global	_SPBRG
  5678+ 0000                     	_SPBRG	set	0x99
  5679+                          
  5680+                          	global	_SSPADD
  5681+                          	global	_SSPADD
  5682+ 0000                     	_SSPADD	set	0x93
  5683+                          
  5684+                          	global	_SSPBUF
  5685+                          	global	_SSPBUF
  5686+ 0000                     	_SSPBUF	set	0x13
  5687+                          
  5688+                          	global	_SSPCON
  5689+                          	global	_SSPCON
  5690+ 0000                     	_SSPCON	set	0x14
  5691+                          
  5692+                          	global	_SSPCON2
  5693+                          	global	_SSPCON2
  5694+ 0000                     	_SSPCON2	set	0x91
  5695+                          
  5696+                          	global	_SSPSTAT
  5697+                          	global	_SSPSTAT
  5698+ 0000                     	_SSPSTAT	set	0x94
  5699+                          
  5700+                          	global	_STATUS
  5701+                          	global	_STATUS
  5702+ 0000                     	_STATUS	set	0x3
  5703+                          
  5704+                          	global	_T1CON
  5705+                          	global	_T1CON
  5706+ 0000                     	_T1CON	set	0x10
  5707+                          
  5708+                          	global	_T2CON
  5709+                          	global	_T2CON
  5710+ 0000                     	_T2CON	set	0x12
  5711+                          
  5712+                          	global	_TMR0
  5713+                          	global	_TMR0
  5714+ 0000                     	_TMR0	set	0x1
  5715+                          
  5716+                          	global	_TMR1H
  5717+                          	global	_TMR1H
  5718+ 0000                     	_TMR1H	set	0xF
  5719+                          
  5720+                          	global	_TMR1L
  5721+                          	global	_TMR1L
  5722+ 0000                     	_TMR1L	set	0xE
  5723+                          
  5724+                          	global	_TMR2
  5725+                          	global	_TMR2
  5726+ 0000                     	_TMR2	set	0x11
  5727+                          
  5728+                          	global	_TRISA
  5729+                          	global	_TRISA
  5730+ 0000                     	_TRISA	set	0x85
  5731+                          
  5732+                          	global	_TRISB
  5733+                          	global	_TRISB
  5734+ 0000                     	_TRISB	set	0x86
  5735+                          
  5736+                          	global	_TRISC
  5737+ 0000                     	_TRISC	set	0x87
  5738+                          
  5739+                          	global	_TRISD
  5740+ 0000                     	_TRISD	set	0x88
  5741+                          
  5742+                          	global	_TRISE
  5743+                          	global	_TRISE
  5744+ 0000                     	_TRISE	set	0x89
  5745+                          
  5746+                          	global	_TXREG
  5747+                          	global	_TXREG
  5748+ 0000                     	_TXREG	set	0x19
  5749+                          
  5750+                          	global	_TXSTA
  5751+                          	global	_TXSTA
  5752+ 0000                     	_TXSTA	set	0x98
  5753+                          
  5754+                          	global	_ACKDT
  5755+                          	global	_ACKDT
  5756+ 0000                     	_ACKDT	set	0x48D	;byte address: 0x91
  5757+                          
  5758+                          	global	_ACKEN
  5759+                          	global	_ACKEN
  5760+ 0000                     	_ACKEN	set	0x48C	;byte address: 0x91
  5761+                          
  5762+                          	global	_ACKSTAT
  5763+                          	global	_ACKSTAT
  5764+ 0000                     	_ACKSTAT	set	0x48E	;byte address: 0x91
  5765+                          
  5766+                          	global	_ADCS0
  5767+ 0000                     	_ADCS0	set	0xFE	;byte address: 0x1F
  5768+                          
  5769+                          	global	_ADCS1
  5770+ 0000                     	_ADCS1	set	0xFF	;byte address: 0x1F
  5771+                          
  5772+                          	global	_ADCS2
  5773+ 0000                     	_ADCS2	set	0x4FE	;byte address: 0x9F
  5774+                          
  5775+                          	global	_ADDEN
  5776+                          	global	_ADDEN
  5777+ 0000                     	_ADDEN	set	0xC3	;byte address: 0x18
  5778+                          
  5779+                          	global	_ADFM
  5780+ 0000                     	_ADFM	set	0x4FF	;byte address: 0x9F
  5781+                          
  5782+                          	global	_ADGO
  5783+                          	global	_ADGO
  5784+ 0000                     	_ADGO	set	0xFA	;byte address: 0x1F
  5785+                          
  5786+                          	global	_ADIE
  5787+                          	global	_ADIE
  5788+ 0000                     	_ADIE	set	0x466	;byte address: 0x8C
  5789+                          
  5790+                          	global	_ADIF
  5791+                          	global	_ADIF
  5792+ 0000                     	_ADIF	set	0x66	;byte address: 0xC
  5793+                          
  5794+                          	global	_ADON
  5795+ 0000                     	_ADON	set	0xF8	;byte address: 0x1F
  5796+                          
  5797+                          	global	_BCLIE
  5798+                          	global	_BCLIE
  5799+ 0000                     	_BCLIE	set	0x46B	;byte address: 0x8D
  5800+                          
  5801+                          	global	_BCLIF
  5802+                          	global	_BCLIF
  5803+ 0000                     	_BCLIF	set	0x6B	;byte address: 0xD
  5804+                          
  5805+                          	global	_BF
  5806+                          	global	_BF
  5807+ 0000                     	_BF	set	0x4A0	;byte address: 0x94
  5808+                          
  5809+                          	global	_BOR
  5810+                          	global	_BOR
  5811+ 0000                     	_BOR	set	0x470	;byte address: 0x8E
  5812+                          
  5813+                          	global	_BRGH
  5814+                          	global	_BRGH
  5815+ 0000                     	_BRGH	set	0x4C2	;byte address: 0x98
  5816+                          
  5817+                          	global	_C1INV
  5818+                          	global	_C1INV
  5819+ 0000                     	_C1INV	set	0x4E4	;byte address: 0x9C
  5820+                          
  5821+                          	global	_C1OUT
  5822+                          	global	_C1OUT
  5823+ 0000                     	_C1OUT	set	0x4E6	;byte address: 0x9C
  5824+                          
  5825+                          	global	_C2INV
  5826+                          	global	_C2INV
  5827+ 0000                     	_C2INV	set	0x4E5	;byte address: 0x9C
  5828+                          
  5829+                          	global	_C2OUT
  5830+                          	global	_C2OUT
  5831+ 0000                     	_C2OUT	set	0x4E7	;byte address: 0x9C
  5832+                          
  5833+                          	global	_CARRY
  5834+                          	global	_CARRY
  5835+ 0000                     	_CARRY	set	0x18	;byte address: 0x3
  5836+                          
  5837+                          	global	_CCP1IE
  5838+                          	global	_CCP1IE
  5839+ 0000                     	_CCP1IE	set	0x462	;byte address: 0x8C
  5840+                          
  5841+                          	global	_CCP1IF
  5842+                          	global	_CCP1IF
  5843+ 0000                     	_CCP1IF	set	0x62	;byte address: 0xC
  5844+                          
  5845+                          	global	_CCP1M0
  5846+                          	global	_CCP1M0
  5847+ 0000                     	_CCP1M0	set	0xB8	;byte address: 0x17
  5848+                          
  5849+                          	global	_CCP1M1
  5850+                          	global	_CCP1M1
  5851+ 0000                     	_CCP1M1	set	0xB9	;byte address: 0x17
  5852+                          
  5853+                          	global	_CCP1M2
  5854+                          	global	_CCP1M2
  5855+ 0000                     	_CCP1M2	set	0xBA	;byte address: 0x17
  5856+                          
  5857+                          	global	_CCP1M3
  5858+                          	global	_CCP1M3
  5859+ 0000                     	_CCP1M3	set	0xBB	;byte address: 0x17
  5860+                          
  5861+                          	global	_CCP1X
  5862+                          	global	_CCP1X
  5863+ 0000                     	_CCP1X	set	0xBD	;byte address: 0x17
  5864+                          
  5865+                          	global	_CCP1Y
  5866+                          	global	_CCP1Y
  5867+ 0000                     	_CCP1Y	set	0xBC	;byte address: 0x17
  5868+                          
  5869+                          	global	_CCP2IE
  5870+                          	global	_CCP2IE
  5871+ 0000                     	_CCP2IE	set	0x468	;byte address: 0x8D
  5872+                          
  5873+                          	global	_CCP2IF
  5874+                          	global	_CCP2IF
  5875+ 0000                     	_CCP2IF	set	0x68	;byte address: 0xD
  5876+                          
  5877+                          	global	_CCP2M0
  5878+                          	global	_CCP2M0
  5879+ 0000                     	_CCP2M0	set	0xE8	;byte address: 0x1D
  5880+                          
  5881+                          	global	_CCP2M1
  5882+                          	global	_CCP2M1
  5883+ 0000                     	_CCP2M1	set	0xE9	;byte address: 0x1D
  5884+                          
  5885+                          	global	_CCP2M2
  5886+                          	global	_CCP2M2
  5887+ 0000                     	_CCP2M2	set	0xEA	;byte address: 0x1D
  5888+                          
  5889+                          	global	_CCP2M3
  5890+                          	global	_CCP2M3
  5891+ 0000                     	_CCP2M3	set	0xEB	;byte address: 0x1D
  5892+                          
  5893+                          	global	_CCP2X
  5894+                          	global	_CCP2X
  5895+ 0000                     	_CCP2X	set	0xED	;byte address: 0x1D
  5896+                          
  5897+                          	global	_CCP2Y
  5898+                          	global	_CCP2Y
  5899+ 0000                     	_CCP2Y	set	0xEC	;byte address: 0x1D
  5900+                          
  5901+                          	global	_CHS0
  5902+                          	global	_CHS0
  5903+ 0000                     	_CHS0	set	0xFB	;byte address: 0x1F
  5904+                          
  5905+                          	global	_CHS1
  5906+                          	global	_CHS1
  5907+ 0000                     	_CHS1	set	0xFC	;byte address: 0x1F
  5908+                          
  5909+                          	global	_CHS2
  5910+                          	global	_CHS2
  5911+ 0000                     	_CHS2	set	0xFD	;byte address: 0x1F
  5912+                          
  5913+                          	global	_CIS
  5914+                          	global	_CIS
  5915+ 0000                     	_CIS	set	0x4E3	;byte address: 0x9C
  5916+                          
  5917+                          	global	_CKE
  5918+                          	global	_CKE
  5919+ 0000                     	_CKE	set	0x4A6	;byte address: 0x94
  5920+                          
  5921+                          	global	_CKP
  5922+                          	global	_CKP
  5923+ 0000                     	_CKP	set	0xA4	;byte address: 0x14
  5924+                          
  5925+                          	global	_CM0
  5926+                          	global	_CM0
  5927+ 0000                     	_CM0	set	0x4E0	;byte address: 0x9C
  5928+                          
  5929+                          	global	_CM1
  5930+                          	global	_CM1
  5931+ 0000                     	_CM1	set	0x4E1	;byte address: 0x9C
  5932+                          
  5933+                          	global	_CM2
  5934+                          	global	_CM2
  5935+ 0000                     	_CM2	set	0x4E2	;byte address: 0x9C
  5936+                          
  5937+                          	global	_CMIE
  5938+                          	global	_CMIE
  5939+ 0000                     	_CMIE	set	0x46E	;byte address: 0x8D
  5940+                          
  5941+                          	global	_CMIF
  5942+                          	global	_CMIF
  5943+ 0000                     	_CMIF	set	0x6E	;byte address: 0xD
  5944+                          
  5945+                          	global	_CREN
  5946+                          	global	_CREN
  5947+ 0000                     	_CREN	set	0xC4	;byte address: 0x18
  5948+                          
  5949+                          	global	_CSRC
  5950+                          	global	_CSRC
  5951+ 0000                     	_CSRC	set	0x4C7	;byte address: 0x98
  5952+                          
  5953+                          	global	_CVR0
  5954+                          	global	_CVR0
  5955+ 0000                     	_CVR0	set	0x4E8	;byte address: 0x9D
  5956+                          
  5957+                          	global	_CVR1
  5958+                          	global	_CVR1
  5959+ 0000                     	_CVR1	set	0x4E9	;byte address: 0x9D
  5960+                          
  5961+                          	global	_CVR2
  5962+                          	global	_CVR2
  5963+ 0000                     	_CVR2	set	0x4EA	;byte address: 0x9D
  5964+                          
  5965+                          	global	_CVR3
  5966+                          	global	_CVR3
  5967+ 0000                     	_CVR3	set	0x4EB	;byte address: 0x9D
  5968+                          
  5969+                          	global	_CVREN
  5970+                          	global	_CVREN
  5971+ 0000                     	_CVREN	set	0x4EF	;byte address: 0x9D
  5972+                          
  5973+                          	global	_CVROE
  5974+                          	global	_CVROE
  5975+ 0000                     	_CVROE	set	0x4EE	;byte address: 0x9D
  5976+                          
  5977+                          	global	_CVRR
  5978+                          	global	_CVRR
  5979+ 0000                     	_CVRR	set	0x4ED	;byte address: 0x9D
  5980+                          
  5981+                          	global	_DA
  5982+                          	global	_DA
  5983+ 0000                     	_DA	set	0x4A5	;byte address: 0x94
  5984+                          
  5985+                          	global	_DC
  5986+                          	global	_DC
  5987+ 0000                     	_DC	set	0x19	;byte address: 0x3
  5988+                          
  5989+                          	global	_EEIE
  5990+                          	global	_EEIE
  5991+ 0000                     	_EEIE	set	0x46C	;byte address: 0x8D
  5992+                          
  5993+                          	global	_EEIF
  5994+                          	global	_EEIF
  5995+ 0000                     	_EEIF	set	0x6C	;byte address: 0xD
  5996+                          
  5997+                          	global	_EEPGD
  5998+                          	global	_EEPGD
  5999+ 0000                     	_EEPGD	set	0xC67	;byte address: 0x18C
  6000+                          
  6001+                          	global	_FERR
  6002+                          	global	_FERR
  6003+ 0000                     	_FERR	set	0xC2	;byte address: 0x18
  6004+                          
  6005+                          	global	_GCEN
  6006+                          	global	_GCEN
  6007+ 0000                     	_GCEN	set	0x48F	;byte address: 0x91
  6008+                          
  6009+                          	global	_GIE
  6010+                          	global	_GIE
  6011+ 0000                     	_GIE	set	0x5F	;byte address: 0xB
  6012+                          
  6013+                          	global	_GODONE
  6014+                          	global	_GODONE
  6015+ 0000                     	_GODONE	set	0xFA	;byte address: 0x1F
  6016+                          
  6017+                          	global	_IBF
  6018+                          	global	_IBF
  6019+ 0000                     	_IBF	set	0x44F	;byte address: 0x89
  6020+                          
  6021+                          	global	_IBOV
  6022+                          	global	_IBOV
  6023+ 0000                     	_IBOV	set	0x44D	;byte address: 0x89
  6024+                          
  6025+                          	global	_INTE
  6026+                          	global	_INTE
  6027+ 0000                     	_INTE	set	0x5C	;byte address: 0xB
  6028+                          
  6029+                          	global	_INTEDG
  6030+                          	global	_INTEDG
  6031+ 0000                     	_INTEDG	set	0x40E	;byte address: 0x81
  6032+                          
  6033+                          	global	_INTF
  6034+                          	global	_INTF
  6035+ 0000                     	_INTF	set	0x59	;byte address: 0xB
  6036+                          
  6037+                          	global	_IRP
  6038+                          	global	_IRP
  6039+ 0000                     	_IRP	set	0x1F	;byte address: 0x3
  6040+                          
  6041+                          	global	_OBF
  6042+                          	global	_OBF
  6043+ 0000                     	_OBF	set	0x44E	;byte address: 0x89
  6044+                          
  6045+                          	global	_OERR
  6046+                          	global	_OERR
  6047+ 0000                     	_OERR	set	0xC1	;byte address: 0x18
  6048+                          
  6049+                          	global	_PCFG0
  6050+ 0000                     	_PCFG0	set	0x4F8	;byte address: 0x9F
  6051+                          
  6052+                          	global	_PCFG1
  6053+ 0000                     	_PCFG1	set	0x4F9	;byte address: 0x9F
  6054+                          
  6055+                          	global	_PCFG2
  6056+ 0000                     	_PCFG2	set	0x4FA	;byte address: 0x9F
  6057+                          
  6058+                          	global	_PCFG3
  6059+ 0000                     	_PCFG3	set	0x4FB	;byte address: 0x9F
  6060+                          
  6061+                          	global	_PD
  6062+                          	global	_PD
  6063+ 0000                     	_PD	set	0x1B	;byte address: 0x3
  6064+                          
  6065+                          	global	_PEIE
  6066+                          	global	_PEIE
  6067+ 0000                     	_PEIE	set	0x5E	;byte address: 0xB
  6068+                          
  6069+                          	global	_PEN
  6070+                          	global	_PEN
  6071+ 0000                     	_PEN	set	0x48A	;byte address: 0x91
  6072+                          
  6073+                          	global	_POR
  6074+                          	global	_POR
  6075+ 0000                     	_POR	set	0x471	;byte address: 0x8E
  6076+                          
  6077+                          	global	_PS0
  6078+                          	global	_PS0
  6079+ 0000                     	_PS0	set	0x408	;byte address: 0x81
  6080+                          
  6081+                          	global	_PS1
  6082+                          	global	_PS1
  6083+ 0000                     	_PS1	set	0x409	;byte address: 0x81
  6084+                          
  6085+                          	global	_PS2
  6086+                          	global	_PS2
  6087+ 0000                     	_PS2	set	0x40A	;byte address: 0x81
  6088+                          
  6089+                          	global	_PSA
  6090+                          	global	_PSA
  6091+ 0000                     	_PSA	set	0x40B	;byte address: 0x81
  6092+                          
  6093+                          	global	_PSPIE
  6094+                          	global	_PSPIE
  6095+ 0000                     	_PSPIE	set	0x467	;byte address: 0x8C
  6096+                          
  6097+                          	global	_PSPIF
  6098+                          	global	_PSPIF
  6099+ 0000                     	_PSPIF	set	0x67	;byte address: 0xC
  6100+                          
  6101+                          	global	_PSPMODE
  6102+                          	global	_PSPMODE
  6103+ 0000                     	_PSPMODE	set	0x44C	;byte address: 0x89
  6104                           
  6105                           	global	_RA0
  6106                           	global	_RA0
  6107  0000                     	_RA0	set	0x28	;byte address: 0x5
  6108                           
  6109                           	global	_RA1
  6110                           	global	_RA1
  6111  0000                     	_RA1	set	0x29	;byte address: 0x5
  6112                           
  6113                           	global	_RA2
  6114                           	global	_RA2
  6115  0000                     	_RA2	set	0x2A	;byte address: 0x5
  6116                           
  6117                           	global	_RA3
  6118                           	global	_RA3
  6119  0000                     	_RA3	set	0x2B	;byte address: 0x5
  6120                           
  6121                           	global	_RA4
  6122                           	global	_RA4
  6123  0000                     	_RA4	set	0x2C	;byte address: 0x5
  6124                           
  6125                           	global	_RA5
  6126                           	global	_RA5
  6127  0000                     	_RA5	set	0x2D	;byte address: 0x5
  6128                           
  6129                           	global	_RB0
  6130                           	global	_RB0
  6131  0000                     	_RB0	set	0x30	;byte address: 0x6
  6132                           
  6133                           	global	_RB1
  6134                           	global	_RB1
  6135  0000                     	_RB1	set	0x31	;byte address: 0x6
  6136                           
  6137                           	global	_RB2
  6138                           	global	_RB2
  6139  0000                     	_RB2	set	0x32	;byte address: 0x6
  6140                           
  6141                           	global	_RB3
  6142                           	global	_RB3
  6143  0000                     	_RB3	set	0x33	;byte address: 0x6
  6144                           
  6145                           	global	_RB4
  6146                           	global	_RB4
  6147  0000                     	_RB4	set	0x34	;byte address: 0x6
  6148                           
  6149                           	global	_RB5
  6150                           	global	_RB5
  6151  0000                     	_RB5	set	0x35	;byte address: 0x6
  6152                           
  6153                           	global	_RB6
  6154                           	global	_RB6
  6155  0000                     	_RB6	set	0x36	;byte address: 0x6
  6156                           
  6157                           	global	_RB7
  6158                           	global	_RB7
  6159  0000                     	_RB7	set	0x37	;byte address: 0x6
  6160                           
  6161                           	global	_RBIE
  6162                           	global	_RBIE
  6163  0000                     	_RBIE	set	0x5B	;byte address: 0xB
  6164                           
  6165                           	global	_RBIF
  6166                           	global	_RBIF
  6167  0000                     	_RBIF	set	0x58	;byte address: 0xB
  6168                           
  6169                           	global	_RBPU
  6170                           	global	_RBPU
  6171  0000                     	_RBPU	set	0x40F	;byte address: 0x81
  6172                           
  6173                           	global	_RC0
  6174                           	global	_RC0
  6175  0000                     	_RC0	set	0x38	;byte address: 0x7
  6176                           
  6177                           	global	_RC1
  6178                           	global	_RC1
  6179  0000                     	_RC1	set	0x39	;byte address: 0x7
  6180                           
  6181                           	global	_RC2
  6182                           	global	_RC2
  6183  0000                     	_RC2	set	0x3A	;byte address: 0x7
  6184                           
  6185                           	global	_RC3
  6186                           	global	_RC3
  6187  0000                     	_RC3	set	0x3B	;byte address: 0x7
  6188                           
  6189                           	global	_RC4
  6190                           	global	_RC4
  6191  0000                     	_RC4	set	0x3C	;byte address: 0x7
  6192                           
  6193                           	global	_RC5
  6194                           	global	_RC5
  6195  0000                     	_RC5	set	0x3D	;byte address: 0x7
  6196                           
  6197                           	global	_RC6
  6198                           	global	_RC6
  6199  0000                     	_RC6	set	0x3E	;byte address: 0x7
  6200                           
  6201                           	global	_RC7
  6202                           	global	_RC7
  6203  0000                     	_RC7	set	0x3F	;byte address: 0x7
  6204                           
  6205                           	global	_RCEN
  6206                           	global	_RCEN
  6207  0000                     	_RCEN	set	0x48B	;byte address: 0x91
  6208                           
  6209                           	global	_RCIE
  6210                           	global	_RCIE
  6211  0000                     	_RCIE	set	0x465	;byte address: 0x8C
  6212                           
  6213                           	global	_RCIF
  6214                           	global	_RCIF
  6215  0000                     	_RCIF	set	0x65	;byte address: 0xC
  6216                           
  6217                           	global	_RD
  6218                           	global	_RD
  6219  0000                     	_RD	set	0xC60	;byte address: 0x18C
  6220                           
  6221                           	global	_RD0
  6222                           	global	_RD0
  6223  0000                     	_RD0	set	0x40	;byte address: 0x8
  6224                           
  6225                           	global	_RD1
  6226                           	global	_RD1
  6227  0000                     	_RD1	set	0x41	;byte address: 0x8
  6228                           
  6229                           	global	_RD2
  6230  0000                     	_RD2	set	0x42	;byte address: 0x8
  6231                           
  6232                           	global	_RD3
  6233  0000                     	_RD3	set	0x43	;byte address: 0x8
  6234                           
  6235                           	global	_RD4
  6236                           	global	_RD4
  6237  0000                     	_RD4	set	0x44	;byte address: 0x8
  6238                           
  6239                           	global	_RD5
  6240                           	global	_RD5
  6241  0000                     	_RD5	set	0x45	;byte address: 0x8
  6242                           
  6243                           	global	_RD6
  6244                           	global	_RD6
  6245  0000                     	_RD6	set	0x46	;byte address: 0x8
  6246                           
  6247                           	global	_RD7
  6248                           	global	_RD7
  6249  0000                     	_RD7	set	0x47	;byte address: 0x8
  6250                           
  6251                           	global	_RE0
  6252                           	global	_RE0
  6253  0000                     	_RE0	set	0x48	;byte address: 0x9
  6254                           
  6255                           	global	_RE1
  6256                           	global	_RE1
  6257  0000                     	_RE1	set	0x49	;byte address: 0x9
  6258                           
  6259                           	global	_RE2
  6260                           	global	_RE2
  6261  0000                     	_RE2	set	0x4A	;byte address: 0x9
  6262                           
  6263                           	global	_RP0
  6264                           	global	_RP0
  6265  0000                     	_RP0	set	0x1D	;byte address: 0x3
  6266                           
  6267                           	global	_RP1
  6268                           	global	_RP1
  6269  0000                     	_RP1	set	0x1E	;byte address: 0x3
  6270                           
  6271                           	global	_RSEN
  6272                           	global	_RSEN
  6273  0000                     	_RSEN	set	0x489	;byte address: 0x91
  6274                           
  6275                           	global	_RW
  6276                           	global	_RW
  6277  0000                     	_RW	set	0x4A2	;byte address: 0x94
  6278                           
  6279                           	global	_RX9
  6280                           	global	_RX9
  6281  0000                     	_RX9	set	0xC6	;byte address: 0x18
  6282                           
  6283                           	global	_RX9D
  6284                           	global	_RX9D
  6285  0000                     	_RX9D	set	0xC0	;byte address: 0x18
  6286                           
  6287                           	global	_SEN
  6288                           	global	_SEN
  6289  0000                     	_SEN	set	0x488	;byte address: 0x91
  6290                           
  6291                           	global	_SMP
  6292                           	global	_SMP
  6293  0000                     	_SMP	set	0x4A7	;byte address: 0x94
  6294                           
  6295                           	global	_SPEN
  6296                           	global	_SPEN
  6297  0000                     	_SPEN	set	0xC7	;byte address: 0x18
  6298                           
  6299                           	global	_SREN
  6300                           	global	_SREN
  6301  0000                     	_SREN	set	0xC5	;byte address: 0x18
  6302                           
  6303                           	global	_SSPEN
  6304                           	global	_SSPEN
  6305  0000                     	_SSPEN	set	0xA5	;byte address: 0x14
  6306                           
  6307                           	global	_SSPIE
  6308                           	global	_SSPIE
  6309  0000                     	_SSPIE	set	0x463	;byte address: 0x8C
  6310                           
  6311                           	global	_SSPIF
  6312                           	global	_SSPIF
  6313  0000                     	_SSPIF	set	0x63	;byte address: 0xC
  6314                           
  6315                           	global	_SSPM0
  6316                           	global	_SSPM0
  6317  0000                     	_SSPM0	set	0xA0	;byte address: 0x14
  6318                           
  6319                           	global	_SSPM1
  6320                           	global	_SSPM1
  6321  0000                     	_SSPM1	set	0xA1	;byte address: 0x14
  6322                           
  6323                           	global	_SSPM2
  6324                           	global	_SSPM2
  6325  0000                     	_SSPM2	set	0xA2	;byte address: 0x14
  6326                           
  6327                           	global	_SSPM3
  6328                           	global	_SSPM3
  6329  0000                     	_SSPM3	set	0xA3	;byte address: 0x14
  6330                           
  6331                           	global	_SSPOV
  6332                           	global	_SSPOV
  6333  0000                     	_SSPOV	set	0xA6	;byte address: 0x14
  6334                           
  6335                           	global	_START
  6336                           	global	_START
  6337  0000                     	_START	set	0x4A3	;byte address: 0x94
  6338                           
  6339                           	global	_STOP
  6340                           	global	_STOP
  6341  0000                     	_STOP	set	0x4A4	;byte address: 0x94
  6342                           
  6343                           	global	_SYNC
  6344                           	global	_SYNC
  6345  0000                     	_SYNC	set	0x4C4	;byte address: 0x98
  6346                           
  6347                           	global	_T0CS
  6348                           	global	_T0CS
  6349  0000                     	_T0CS	set	0x40D	;byte address: 0x81
  6350                           
  6351                           	global	_T0IE
  6352                           	global	_T0IE
  6353  0000                     	_T0IE	set	0x5D	;byte address: 0xB
  6354                           
  6355                           	global	_T0IF
  6356                           	global	_T0IF
  6357  0000                     	_T0IF	set	0x5A	;byte address: 0xB
  6358                           
  6359                           	global	_T0SE
  6360                           	global	_T0SE
  6361  0000                     	_T0SE	set	0x40C	;byte address: 0x81
  6362                           
  6363                           	global	_T1CKPS0
  6364                           	global	_T1CKPS0
  6365  0000                     	_T1CKPS0	set	0x84	;byte address: 0x10
  6366                           
  6367                           	global	_T1CKPS1
  6368                           	global	_T1CKPS1
  6369  0000                     	_T1CKPS1	set	0x85	;byte address: 0x10
  6370                           
  6371                           	global	_T1OSCEN
  6372                           	global	_T1OSCEN
  6373  0000                     	_T1OSCEN	set	0x83	;byte address: 0x10
  6374                           
  6375                           	global	_T1SYNC
  6376                           	global	_T1SYNC
  6377  0000                     	_T1SYNC	set	0x82	;byte address: 0x10
  6378                           
  6379                           	global	_T2CKPS0
  6380                           	global	_T2CKPS0
  6381  0000                     	_T2CKPS0	set	0x90	;byte address: 0x12
  6382                           
  6383                           	global	_T2CKPS1
  6384                           	global	_T2CKPS1
  6385  0000                     	_T2CKPS1	set	0x91	;byte address: 0x12
  6386                           
  6387                           	global	_TMR0IE
  6388                           	global	_TMR0IE
  6389  0000                     	_TMR0IE	set	0x5D	;byte address: 0xB
  6390                           
  6391                           	global	_TMR0IF
  6392                           	global	_TMR0IF
  6393  0000                     	_TMR0IF	set	0x5A	;byte address: 0xB
  6394                           
  6395                           	global	_TMR1CS
  6396                           	global	_TMR1CS
  6397  0000                     	_TMR1CS	set	0x81	;byte address: 0x10
  6398                           
  6399                           	global	_TMR1IE
  6400                           	global	_TMR1IE
  6401  0000                     	_TMR1IE	set	0x460	;byte address: 0x8C
  6402                           
  6403                           	global	_TMR1IF
  6404                           	global	_TMR1IF
  6405  0000                     	_TMR1IF	set	0x60	;byte address: 0xC
  6406                           
  6407                           	global	_TMR1ON
  6408                           	global	_TMR1ON
  6409  0000                     	_TMR1ON	set	0x80	;byte address: 0x10
  6410                           
  6411                           	global	_TMR2IE
  6412                           	global	_TMR2IE
  6413  0000                     	_TMR2IE	set	0x461	;byte address: 0x8C
  6414                           
  6415                           	global	_TMR2IF
  6416                           	global	_TMR2IF
  6417  0000                     	_TMR2IF	set	0x61	;byte address: 0xC
  6418                           
  6419                           	global	_TMR2ON
  6420                           	global	_TMR2ON
  6421  0000                     	_TMR2ON	set	0x92	;byte address: 0x12
  6422                           
  6423                           	global	_TO
  6424                           	global	_TO
  6425  0000                     	_TO	set	0x1C	;byte address: 0x3
  6426                           
  6427                           	global	_TOUTPS0
  6428                           	global	_TOUTPS0
  6429  0000                     	_TOUTPS0	set	0x93	;byte address: 0x12
  6430                           
  6431                           	global	_TOUTPS1
  6432                           	global	_TOUTPS1
  6433  0000                     	_TOUTPS1	set	0x94	;byte address: 0x12
  6434                           
  6435                           	global	_TOUTPS2
  6436                           	global	_TOUTPS2
  6437  0000                     	_TOUTPS2	set	0x95	;byte address: 0x12
  6438                           
  6439                           	global	_TOUTPS3
  6440                           	global	_TOUTPS3
  6441  0000                     	_TOUTPS3	set	0x96	;byte address: 0x12
  6442                           
  6443                           	global	_TRISA0
  6444                           	global	_TRISA0
  6445  0000                     	_TRISA0	set	0x428	;byte address: 0x85
  6446                           
  6447                           	global	_TRISA1
  6448                           	global	_TRISA1
  6449  0000                     	_TRISA1	set	0x429	;byte address: 0x85
  6450                           
  6451                           	global	_TRISA2
  6452                           	global	_TRISA2
  6453  0000                     	_TRISA2	set	0x42A	;byte address: 0x85
  6454                           
  6455                           	global	_TRISA3
  6456                           	global	_TRISA3
  6457  0000                     	_TRISA3	set	0x42B	;byte address: 0x85
  6458                           
  6459                           	global	_TRISA4
  6460                           	global	_TRISA4
  6461  0000                     	_TRISA4	set	0x42C	;byte address: 0x85
  6462                           
  6463                           	global	_TRISA5
  6464                           	global	_TRISA5
  6465  0000                     	_TRISA5	set	0x42D	;byte address: 0x85
  6466                           
  6467                           	global	_TRISB0
  6468                           	global	_TRISB0
  6469  0000                     	_TRISB0	set	0x430	;byte address: 0x86
  6470                           
  6471                           	global	_TRISB1
  6472                           	global	_TRISB1
  6473  0000                     	_TRISB1	set	0x431	;byte address: 0x86
  6474                           
  6475                           	global	_TRISB2
  6476                           	global	_TRISB2
  6477  0000                     	_TRISB2	set	0x432	;byte address: 0x86
  6478                           
  6479                           	global	_TRISB3
  6480                           	global	_TRISB3
  6481  0000                     	_TRISB3	set	0x433	;byte address: 0x86
  6482                           
  6483                           	global	_TRISB4
  6484                           	global	_TRISB4
  6485  0000                     	_TRISB4	set	0x434	;byte address: 0x86
  6486                           
  6487                           	global	_TRISB5
  6488                           	global	_TRISB5
  6489  0000                     	_TRISB5	set	0x435	;byte address: 0x86
  6490                           
  6491                           	global	_TRISB6
  6492                           	global	_TRISB6
  6493  0000                     	_TRISB6	set	0x436	;byte address: 0x86
  6494                           
  6495                           	global	_TRISB7
  6496                           	global	_TRISB7
  6497  0000                     	_TRISB7	set	0x437	;byte address: 0x86
  6498                           
  6499                           	global	_TRISC0
  6500                           	global	_TRISC0
  6501  0000                     	_TRISC0	set	0x438	;byte address: 0x87
  6502                           
  6503                           	global	_TRISC1
  6504                           	global	_TRISC1
  6505  0000                     	_TRISC1	set	0x439	;byte address: 0x87
  6506                           
  6507                           	global	_TRISC2
  6508                           	global	_TRISC2
  6509  0000                     	_TRISC2	set	0x43A	;byte address: 0x87
  6510                           
  6511                           	global	_TRISC3
  6512                           	global	_TRISC3
  6513  0000                     	_TRISC3	set	0x43B	;byte address: 0x87
  6514                           
  6515                           	global	_TRISC4
  6516                           	global	_TRISC4
  6517  0000                     	_TRISC4	set	0x43C	;byte address: 0x87
  6518                           
  6519                           	global	_TRISC5
  6520                           	global	_TRISC5
  6521  0000                     	_TRISC5	set	0x43D	;byte address: 0x87
  6522                           
  6523                           	global	_TRISC6
  6524                           	global	_TRISC6
  6525  0000                     	_TRISC6	set	0x43E	;byte address: 0x87
  6526                           
  6527                           	global	_TRISC7
  6528                           	global	_TRISC7
  6529  0000                     	_TRISC7	set	0x43F	;byte address: 0x87
  6530                           
  6531                           	global	_TRISD0
  6532                           	global	_TRISD0
  6533  0000                     	_TRISD0	set	0x440	;byte address: 0x88
  6534                           
  6535                           	global	_TRISD1
  6536                           	global	_TRISD1
  6537  0000                     	_TRISD1	set	0x441	;byte address: 0x88
  6538                           
  6539                           	global	_TRISD2
  6540                           	global	_TRISD2
  6541  0000                     	_TRISD2	set	0x442	;byte address: 0x88
  6542                           
  6543                           	global	_TRISD3
  6544                           	global	_TRISD3
  6545  0000                     	_TRISD3	set	0x443	;byte address: 0x88
  6546                           
  6547                           	global	_TRISD4
  6548                           	global	_TRISD4
  6549  0000                     	_TRISD4	set	0x444	;byte address: 0x88
  6550                           
  6551                           	global	_TRISD5
  6552                           	global	_TRISD5
  6553  0000                     	_TRISD5	set	0x445	;byte address: 0x88
  6554                           
  6555                           	global	_TRISD6
  6556                           	global	_TRISD6
  6557  0000                     	_TRISD6	set	0x446	;byte address: 0x88
  6558                           
  6559                           	global	_TRISD7
  6560                           	global	_TRISD7
  6561  0000                     	_TRISD7	set	0x447	;byte address: 0x88
  6562                           
  6563                           	global	_TRISE0
  6564                           	global	_TRISE0
  6565  0000                     	_TRISE0	set	0x448	;byte address: 0x89
  6566                           
  6567                           	global	_TRISE1
  6568                           	global	_TRISE1
  6569  0000                     	_TRISE1	set	0x449	;byte address: 0x89
  6570                           
  6571                           	global	_TRISE2
  6572                           	global	_TRISE2
  6573  0000                     	_TRISE2	set	0x44A	;byte address: 0x89
  6574                           
  6575                           	global	_TRMT
  6576                           	global	_TRMT
  6577  0000                     	_TRMT	set	0x4C1	;byte address: 0x98
  6578                           
  6579                           	global	_TX9
  6580                           	global	_TX9
  6581  0000                     	_TX9	set	0x4C6	;byte address: 0x98
  6582                           
  6583                           	global	_TX9D
  6584                           	global	_TX9D
  6585  0000                     	_TX9D	set	0x4C0	;byte address: 0x98
  6586                           
  6587                           	global	_TXEN
  6588                           	global	_TXEN
  6589  0000                     	_TXEN	set	0x4C5	;byte address: 0x98
  6590                           
  6591                           	global	_TXIE
  6592                           	global	_TXIE
  6593  0000                     	_TXIE	set	0x464	;byte address: 0x8C
  6594                           
  6595                           	global	_TXIF
  6596                           	global	_TXIF
  6597  0000                     	_TXIF	set	0x64	;byte address: 0xC
  6598                           
  6599                           	global	_UA
  6600                           	global	_UA
  6601  0000                     	_UA	set	0x4A1	;byte address: 0x94
  6602                           
  6603                           	global	_WCOL
  6604                           	global	_WCOL
  6605  0000                     	_WCOL	set	0xA7	;byte address: 0x14
  6606                           
  6607                           	global	_WR
  6608                           	global	_WR
  6609  0000                     	_WR	set	0xC61	;byte address: 0x18C
  6610                           
  6611                           	global	_WREN
  6612                           	global	_WREN
  6613  0000                     	_WREN	set	0xC62	;byte address: 0x18C
  6614                           
  6615                           	global	_WRERR
  6616                           	global	_WRERR
  6617  0000                     	_WRERR	set	0xC63	;byte address: 0x18C
  6618                           
  6619                           	global	_ZERO
  6620                           	global	_ZERO
  6621  0000                     	_ZERO	set	0x1A	;byte address: 0x3
  6622                           
  6623                           	
  6624  070F                     STR_1:	
  6625  070F  3449               	retlw	73	;'I'
  6626  0710  344E               	retlw	78	;'N'
  6627  0711  3449               	retlw	73	;'I'
  6628  0712  3454               	retlw	84	;'T'
  6629  0713  3449               	retlw	73	;'I'
  6630  0714  3441               	retlw	65	;'A'
  6631  0715  344C               	retlw	76	;'L'
  6632  0716  3449               	retlw	73	;'I'
  6633  0717  345A               	retlw	90	;'Z'
  6634  0718  3449               	retlw	73	;'I'
  6635  0719  344E               	retlw	78	;'N'
  6636  071A  3447               	retlw	71	;'G'
  6637  071B  342E               	retlw	46	;'.'
  6638  071C  342E               	retlw	46	;'.'
  6639  071D  342E               	retlw	46	;'.'
  6640  071E  342E               	retlw	46	;'.'
  6641  071F  3400               	retlw	0
  6642                           	
  6643  0720                     STR_4:	
  6644  0720  3474               	retlw	116	;'t'
  6645  0721  3468               	retlw	104	;'h'
  6646  0722  3465               	retlw	101	;'e'
  6647  0723  3420               	retlw	32	;' '
  6648  0724  3476               	retlw	118	;'v'
  6649  0725  346F               	retlw	111	;'o'
  6650  0726  346C               	retlw	108	;'l'
  6651  0727  3474               	retlw	116	;'t'
  6652  0728  3461               	retlw	97	;'a'
  6653  0729  3467               	retlw	103	;'g'
  6654  072A  3465               	retlw	101	;'e'
  6655  072B  3420               	retlw	32	;' '
  6656  072C  3469               	retlw	105	;'i'
  6657  072D  3473               	retlw	115	;'s'
  6658  072E  343A               	retlw	58	;':'
  6659  072F  3400               	retlw	0
  6660                           	
  6661  0730                     STR_5:	
  6662  0730  3476               	retlw	118	;'v'
  6663  0731  346F               	retlw	111	;'o'
  6664  0732  346C               	retlw	108	;'l'
  6665  0733  3474               	retlw	116	;'t'
  6666  0734  3461               	retlw	97	;'a'
  6667  0735  3467               	retlw	103	;'g'
  6668  0736  3465               	retlw	101	;'e'
  6669  0737  3420               	retlw	32	;' '
  6670  0738  3469               	retlw	105	;'i'
  6671  0739  3473               	retlw	115	;'s'
  6672  073A  343A               	retlw	58	;':'
  6673  073B  3420               	retlw	32	;' '
  6674  073C  3400               	retlw	0
  6675                           	
  6676  073D                     STR_6:	
  6677  073D  3467               	retlw	103	;'g'
  6678  073E  3461               	retlw	97	;'a'
  6679  073F  3473               	retlw	115	;'s'
  6680  0740  3420               	retlw	32	;' '
  6681  0741  3470               	retlw	112	;'p'
  6682  0742  3472               	retlw	114	;'r'
  6683  0743  3465               	retlw	101	;'e'
  6684  0744  3473               	retlw	115	;'s'
  6685  0745  3465               	retlw	101	;'e'
  6686  0746  346E               	retlw	110	;'n'
  6687  0747  3474               	retlw	116	;'t'
  6688  0748  3400               	retlw	0
  6689                           	
  6690  0749                     STR_7:	
  6691  0749  3467               	retlw	103	;'g'
  6692  074A  3461               	retlw	97	;'a'
  6693  074B  3473               	retlw	115	;'s'
  6694  074C  3420               	retlw	32	;' '
  6695  074D  3461               	retlw	97	;'a'
  6696  074E  3462               	retlw	98	;'b'
  6697  074F  3473               	retlw	115	;'s'
  6698  0750  3465               	retlw	101	;'e'
  6699  0751  346E               	retlw	110	;'n'
  6700  0752  3474               	retlw	116	;'t'
  6701  0753  3400               	retlw	0
  6702                           	
  6703  0754                     STR_2:	
  6704  0754  3420               	retlw	32	;' '
  6705  0755  3420               	retlw	32	;' '
  6706  0756  3400               	retlw	0
  6707  0000                     STR_3	equ	STR_2+1
  6708                           	PSECT	fnauto0,class=BANK0,space=1
  6709                           	FNCONF	fnauto0,??,?
  6710                           
  6711                           	DABS	1,126,2	;btemp
  6712                           	global	btemp
  6713  0000                     	btemp set 07Eh
  6714                           	global	wtemp0
  6715  0000                     	wtemp0 set btemp
  6716                           	global	wtemp1
  6717  0000                     	wtemp1 set btemp+2
  6718                           	global	ttemp0
  6719  0000                     	ttemp0 set btemp
  6720                           	global	ltemp0
  6721  0000                     	ltemp0 set btemp
  6722                           apbank macro
  6723                           	bcf	status,5
  6724                           	bcf	status,6
  6725  0020                     	endm


HI-TECH Software PICC Macro Assembler V9.65PL1 build 4898 
Symbol Table                                          Sat Oct 20 12:46:24 2012

                             l1 0D7C                               l2 0D76  
                             l3 0D65                               l4 0D7C  
                             l5 0D68                               l7 0D70  
                             l8 0D50                               l9 0D37  
                     __Lrdata_0 0078                               _i 0078  
                             _j 007A                               _k 007C  
                             pc 0002                       __Lramdata 0078  
             _LCDWriteInteger_c 004B               _LCDWriteInteger_i 004A  
                            l10 0D42                              l11 0DBC  
                            l12 0DAF                              _DA 04A5  
                            l21 0E67                              l13 0D9E  
                            _BF 04A0                              l14 0DBC  
                            l30 05D7                              _DC 0019  
                            l15 0E3B                              l31 069A  
                            l16 0D63                              l40 02C8  
                            l32 0665                              l41 02D4  
                            l33 06A7                              l17 0E9F  
                            l42 030A                              l34 06B4  
                            l18 0E7C                              l50 005C  
                            l43 02D5                              l35 06AA  
                            l19 0E99                              l44 0319  
                            l60 01ED                              l36 06BE  
                            l52 0086                              l45 0324  
                            l29 06FF                              l37 06D7  
                            l53 0157                              l46 031A  
                            l38 06FF                              l70 0DCB  
                            l39 032E                              l47 032E  
                            l55 0095                              l49 01E2  
                            l57 009C                              l66 0DE6  
                            l58 01CB                              l59 01E2  
                            l68 0DDF                              l69 0DC1  
                            _PD 001B                              _RD 0C60  
                            _UA 04A1                              _TO 001C  
                            _RW 04A2                              _WR 0C61  
                            fsr 0004                             l111 04DE  
                           l103 05A1                             l112 04C8  
                           l104 0485                             l121 051F  
                           l113 04EB                             l105 049C  
                           l122 0509                             l114 04DF  
                           l106 0590                             l210 0FE2  
                           l202 0FFF                             l123 052C  
                           l115 04F1                             l107 04F2  
                           l211 0FD7                             l203 0FC7  
                           l124 0520                             l116 0532  
                           l212 0FE7                             l140 03A2  
                           l117 0532                             l125 0532  
                           l109 04F1                             l221 023D  
                           l213 0FF6                             l141 036E  
                           l310 0F82                             l230 026A  
                           l126 054A                             l222 01FB  
                           l206 0FC6                             l142 0394  
                           l311 0F61                             l231 0279  
                           l127 0562                             l119 0532  
                           l135 0D99                             l223 0215  
                           l151 07E4                             l207 0FB5  
                           l143 03B6                             l400 03F4  
                           l312 0F56                             l128 0590  
                           l224 0236                             l152 07BC  
                           l144 07FF                             l208 0FE7  
                           l136 03BD                             l320 0DF4  
                           l401 03E2                             l313 0F65  
                           l225 02B1                             l233 02A1  
                           l129 05A0                             l153 07CE  
                           l145 078B                             l209 0FD6  
                           l137 034C                             l402 0408  
                           l234 0279                             l226 024F  
                           l154 07F8                             l138 0363  
                           l403 042A                             l307 0F8C  
                           l315 0F82                             l235 0294  
                           l227 025C                             l147 07BA  
                           l404 0409                             l316 0F65  
                           l308 0F43                             l236 02AA  
                           l228 02A1                             l148 0792  
                           l405 043E                             l317 0F75  
                           l309 0F4C                             l229 0275  
                           l149 07A4                             l406 044F  
                           l318 0F8B                             l246 0D2C  
                           l407 043F                             l247 0D2B  
                           l271 0ED7                             l319 0E10  
                           l408 045D                             l272 0EB1  
                           l409 046B                             l273 0EC2  
                           _CM0 04E0                             _CM1 04E1  
                           _CM2 04E2                             l395 0F31  
                           l396 0F04                             l397 0F25  
                           l398 0483                             l399 03E1  
                           _CKE 04A6                             _IBF 044F  
                           _CIS 04E3                        ___awtoft 01EE  
                           _CKP 00A4                             _GIE 005F  
                           _BOR 0470                             _RA0 0028  
                      ___ftpack 03BE                             _RA1 0029  
                           _RB0 0030                             _RA2 002A  
                           _RB1 0031                             _RA3 002B  
                           _RC0 0038                             _RB2 0032  
                           _RA4 002C                             _RC1 0039  
                           _RB3 0033                             _RA5 002D  
                           _RD0 0040                             _RC2 003A  
                           _RB4 0034                             _RD1 0041  
                           _RC3 003B                             _RB5 0035  
                           _RE0 0048                             _RD2 0042  
                           _RC4 003C                             _RB6 0036  
                           _RE1 0049                             _RD3 0043  
                           _RC5 003D                             _RB7 0037  
                           _RE2 004A                             _RD4 0044  
                           _RC6 003E                             _RD5 0045  
                           _RC7 003F                             _RD6 0046  
                           _OBF 044E                             _RD7 0047  
                           _FSR 0004                             _PCL 0002  
                           _PS0 0408                             _PR2 0092  
                           _PS1 0409                             _RP0 001D  
                           _PS2 040A                             _PEN 048A  
                           _IRP 001F                             _RP1 001E  
                           _SEN 0488                             _PSA 040B  
                           _POR 0471                             _RX9 00C6  
                           _SMP 04A7                             _TX9 04C6  
                     l600000850 03D5                       l600000846 0784  
                     l600000848 04DE                       l600000849 051F  
                     ?___awtoft 0048                       ?___ftpack 005A  
                           fsr0 0004                             indf 0000  
                      ___lwtoft 0DE7                         ??_Delay 0057  
                     ?___lwtoft 0039                      ??___awtoft 004B  
                    ??___ftpack 005B                     _Delay_pause 0057  
                    ??___lwtoft 003C                            _ADIE 0466  
                          _ADIF 0066                            _ADFM 04FF  
                          _ADGO 00FA                        __tempreg 0020  
                          _ADON 00F8                            _CHS0 00FB  
                          _CHS1 00FC                            _CHS2 00FD  
                          _EEIE 046C                            _EEIF 006C  
                          STR_1 070F                            STR_2 0754  
                          STR_3 0755                            STR_4 0720  
                          STR_5 0730                            _GCEN 048F  
                          STR_6 073D                            STR_7 0749  
                          _CMIE 046E                            _CMIF 006E  
                          _BRGH 04C2                            _T0IE 005D  
                          _T0IF 005A                            _CREN 00C4  
                          _T0CS 040D                            _FERR 00C2  
                          _IBOV 044D                            _CVR0 04E8  
                          _CVR1 04E9                            _CVR2 04EA  
                          _CVR3 04EB                            u3000 07BA  
                          u3001 07B9                            u3010 07C0  
                          _T0SE 040C                            _CSRC 04C7  
                          u3011 07BF                            u3100 01F4  
                          u3101 01F3                            _INDF 0000  
                          u3110 020D                            u3111 020C  
                          u3120 0223                            u3040 07E4  
                          u3121 0222                            u3041 07E3  
                          u3025 07CF                            u3210 04F1  
                          u3130 0495                            u3050 07F2  
                          u3211 04F0                            u3131 0494  
                          u3035 07D7                            u3300 054E  
                          u3220 04F8                            u3140 04AB  
                          u3060 0EA4                            u3221 04F7  
                          u3205 04E0                            u3061 0EA3  
                          u3310 0579                            u3230 0502  
                          u3150 04B3                            u3070 0EB5  
                          u3311 0578                            u3231 0501  
                          u3151 04B2                            u3071 0EB4  
                          u3400 028A                            u3320 059E  
                          u3160 04BD                            u2600 0E99  
                          u3401 0289                            u3161 04BC  
                          u2601 0E98                            u3330 0D29  
                          u3250 0519                            u2610 05BC  
                          u3331 0D28                            u3251 0518  
                          u2611 05BB                            u3420 02A1  
                          u3340 0247                            u3260 051F  
                          u3180 04D8                            u2700 02CE  
                          u2620 06A7                            u3421 02A0  
                          u3405 0286                            u3341 0246  
                          u3261 051E                            u3245 050A  
                          u3181 04D7                            u3085 0ED0  
                          u2701 02CD                            u2621 06A6  
                          u3510 0F82                            u3430 02A5  
                          u3350 0253                            u3190 04DE  
                          u2710 0319                            u2630 06BE  
                          u2550 0085                            _PIE1 008C  
                          u3511 0F81                            u3415 0295  
                          u3351 0252                            u3191 04DD  
                          u3175 04C9                            u2711 0318  
                          u2631 06BD                            u2551 0084  
                          _PIE2 008D                            u3600 045D  
                          u3520 0F86                            u3440 0F3B  
                          u3360 0266                            u3280 0532  
                          u2720 032E                            u2800 0345  
                          u2640 06CB                            u2560 009C  
                          u3601 045C                            u3505 0F76  
                          u3441 0F3A                            u3361 0265  
                          u3281 0531                            u3097 0ED3  
                          u2721 032D                            u2801 0344  
                          u2641 06CA                            u2561 009B  
                          u2730 0D70                            u3610 0461  
                          u3530 03C3                            u3450 0F47  
                          u3290 0536                            u3098 0ED5  
                          u2810 035C                            u2650 06E6  
                          u2570 0157                            u2731 0D6F  
                          u3611 0460                            u3451 0F46  
                          u3275 0521                            u3099 0ED6  
                          u2811 035B                            u2651 06E5  
                          u2571 0156                            u2740 0D7C  
                          u3620 0476                            u3540 03D5  
                          u3460 0F52                            u3380 0279  
                          u2900 0FC6                            u2660 06F3  
                          u2580 01B3                            u2741 0D7B  
                          u3541 03D4                            u3461 0F51  
                          u3381 0278                            u2901 0FC5  
                          u2661 06F2                            u2581 01B2  
                          _CVRR 04ED                            u3630 0EE9  
                          u2910 0FCD                            u2830 0384  
                          u2750 0DC5                            u3375 026B  
                          u2911 0FCC                            u2831 0383  
                          u2751 0DC4                            u3640 0EF8  
                          u3560 0408                            u3480 0F65  
                          u2680 0DBC                            u3641 0EF7  
                          u3625 0472                            u3561 0407  
                          u3481 0F64                            u2681 0DBB  
                          u2825 036F                            u3650 0F21  
                          u3490 0F6F                            u2930 0FE7  
                          u2690 02BB                            u2850 03A2  
                          _PEIE 005E                            u2675 0E4E  
                          u3651 0F20                            u3635 0EE5  
                          u3555 03EA                            u3491 0F6E  
                          u3475 0F57                            u3395 027A  
                          u2931 0FE6                            u2691 02BA  
                          u2851 03A1                            u2835 0380  
                          u3580 043E                            u2940 0FEB  
                          u2860 03B0                            u2780 0DDF  
                          _INTE 005C                            u3581 043D  
                          u2925 0FD9                            u2845 0395  
                          u2781 0DDE                            u2765 0DCC  
                          _INTF 0059                            u2950 077F  
                          u2870 0FA5                            u2790 0DED  
                          _RBIE 005B                            u3575 0420  
                          u3495 0F6B                            u2871 0FA4  
                          u2791 0DEC                            u2775 0DD3  
                          _RBIF 0058                            u2960 0784  
                          u2880 0FAC                            u2961 0783  
                          u2881 0FAB                            u2970 0796  
                          _RCIE 0465                            u3595 0444  
                          u2971 0795                            _RCIF 0065  
                          _RCEN 048B                            u2895 0FB6  
                          _PCON 008E                            _PIR1 000C  
                          u2985 07A5                            _PIR2 000D  
                          u2995 07AD                            _OERR 00C1  
                          _RBPU 040F                            _RX9D 00C0  
                          _TMR0 0001                            _TMR2 0011  
                          _WCOL 00A7                            _SPEN 00C7  
                          _RSEN 0489                       __databank FFFFFFFF  
                          _TX9D 04C0                            _SREN 00C5  
                          _TRMT 04C1                            _STOP 04A4  
                          _ZERO 001A                            _TXIE 0464  
                          _WREN 0C62                            _TXIF 0064  
                          _TXEN 04C5                            _SYNC 04C4  
                          _main 0018                            btemp 007E  
              __end_of_LCDReset 0D64                            start 0000  
                  ___awdiv_sign 0057                 _LCDWriteCommand 0D2D  
               _LCDWriteFloat_c 0041                 _LCDWriteFloat_i 003C  
               _LCDWriteFloat_n 003F                 ___awmod_divisor 0054  
                  ___ftadd_exp1 0058                    ___ftadd_exp2 0057  
               ___awmod_counter 0057                    ___ftadd_cntr 0055  
               _LCDWriteInteger 02B2                ?_LCDWriteCommand 0048  
                       ?___ftge 0048                        ??___ftge 004E  
                       ?___wmul 0039                    ___awmod_sign 0056  
               __end_of___awdiv 02B2                 __end_of___ftadd 05A2  
                      ??___wmul 003D                 __end_of___awmod 0F8D  
              ?_LCDWriteInteger 0048                       stringcode 0708  
               __end_of___ftdiv 03BE                 __end_of___ftneg 0D2D  
               __end_of___ftmul 0800                 __end_of___ftsub 0D9A  
               __end_of___fttol 1000                   __end_of_Delay 0D7D  
                       _CCP1CON 0017                         _CCP2CON 001D  
                    ___ftadd_f1 004E                      ___ftadd_f2 0051  
                 _LCDWriteFloat 05A2                         _ACKSTAT 048E  
                         _C1INV 04E4                      ___ftge_ff1 0048  
                    ___ftge_ff2 004B                           _C2INV 04E5  
                         _C1OUT 04E6                           _C2OUT 04E7  
                         _ADCS0 00FE                           _ADCS1 00FF  
                         _ADCS2 04FE                           _ADDEN 00C3  
                         ?_main 0020                           _ACKEN 048C  
                         _ACKDT 048D                           _BCLIE 046B  
                         _BCLIF 006B                           _CCP1X 00BD  
                         _CCP1Y 00BC                           _CCP2X 00ED  
                         _CCP2Y 00EC                      ___ftdiv_f1 0039  
                    ___ftdiv_f2 003C                      ___ftdiv_f3 0043  
                         _EEADR 010D               ??_LCDWriteCommand 0048  
                  ___ftdiv_exp1 0041                    ___ftdiv_exp2 003F  
                         _CARRY 0018                           _EEPGD 0C67  
                         _CMCON 009C                           _T1CON 0010  
                         _T2CON 0012                      ___ftneg_f1 0051  
                       _T1CKPS0 0084                         _T1CKPS1 0085  
                    ___awtoft_c 0048                           u26210 06A3  
                         _PCFG0 04F8                           u27110 0315  
                         _PCFG1 04F9                           u26215 06A1  
                         _PCFG2 04FA                           _PCFG3 04FB  
                         u26410 06C7                           u27115 0313  
                         u26510 06E2                           u26415 06C5  
                         u26610 06EF                           u26515 06E0  
                       _T2CKPS0 0090                         _T2CKPS1 0091  
                         u26615 06ED                           _CVREN 04EF  
                         _CVROE 04EE                  ?_LCDInitialize 0039  
     _LCDWriteString_lcd_string 0048                           _RCREG 001A  
                         _RCSTA 0018                           _TMR1H 000F  
                         _TMR1L 000E                           _SPBRG 0099  
                         _PORTA 0005                           _PORTB 0006  
                       _T1OSCEN 0083                           _PORTC 0007  
                         _PORTD 0008                           _PORTE 0009  
                         _PSPIE 0467                           _PSPIF 0067  
                         _START 04A3                           _SSPM0 00A0  
                         _SSPM1 00A1                           _SSPM2 00A2  
                         _SSPM3 00A3                           _TRISA 0085  
                         _TRISB 0086                           _TRISC 0087  
                    ___ftmul_f1 0048                           _TRISD 0088  
                    ___ftmul_f2 004B                           _SSPIE 0463  
                         _TRISE 0089                      ___ftmul_f3 0051  
                         _SSPIF 0063                           _SSPEN 00A5  
                         _SSPOV 00A6               ??_LCDWriteInteger 004A  
                         _WRERR 0C63                 ??_LCDInitialize 0039  
                         _TXREG 0019                           _TXSTA 0098  
                    ___ftsub_f1 0048                      ___ftsub_f2 004B  
                         _Delay 0D64                      ___fttol_f1 0048  
                  ___ftpack_arg 005B                    ___ftpack_exp 005A  
                    ___ftunpack 0ED8              __end_of___ftunpack 0F32  
         __end_of_LCDWriteFloat 0700                         _PSPMODE 044C  
                     _main_volt 0031                         _SSPCON2 0091  
                     _LCDEnable 0D43                  ??_LCDWriteData 0052  
             __end_of_LCDEnable 0D51                  ??_LCDWriteByte 0053  
 _LCDWriteInteger_IntegerNumber 0048                         _SSPSTAT 0094  
                       _TOUTPS0 0093                         _TOUTPS1 0094  
                       _TOUTPS2 0095                         _TOUTPS3 0096  
                    ___lwtoft_c 0039                           pclath 000A  
                  ___ftmul_exp1 004F                     ?___ftunpack 005A  
                  ___ftmul_cntr 0050                           ltemp0 007E  
                    ?_LCDEnable 0055                           ttemp0 007E  
                         status 0003            _MainSystemInitialize 01E8  
                         wtemp0 007E                           wtemp1 0080  
             ___wmul_multiplier 0039                    ___fttol_exp1 004D  
                  ___fttol_lval 004E           ?_MainSystemInitialize 0039  
              ___awmod_dividend 0052            _LCDWriteData_LCDData 0052  
                   ??_LCDEnable 0055                   ___ftadd_sign1 0056  
                 ___ftadd_sign2 0054          ??_MainSystemInitialize 0039  
              ___awdiv_dividend 0052                     __stringbase 070E  
__end_of_LCDDisplayInitializing 0EA0                         ___awdiv 023E  
                       ___ftadd 0484                         ___awmod 0F32  
                       ___ftdiv 032F                         ___ftneg 0D22  
                       ___ftmul 075D                         ___ftsub 0D7D  
                       ___fttol 0F8D                        ?___awdiv 0052  
                      ?___ftadd 004E                        ?___awmod 0052  
                      ?___ftdiv 0039                        ?___ftneg 0051  
                      ?___ftmul 0048                        ?___ftsub 0048  
                      ?___fttol 0048         __end_of_LCDWriteCommand 0D38  
                  ??___ftunpack 005B                  ___wmul_product 003D  
                     ??___awdiv 0056                       ??___ftadd 0054  
                     ??___awmod 0056                       ??___ftdiv 003F  
                     ??___ftneg 0054                       ??___ftmul 004E  
                     ??___ftsub 004E                       ??___fttol 004C  
                    _Delay_time 0055                          ??_main 0020  
       __end_of_LCDWriteInteger 032F                __end_of___awtoft 023E  
              __end_of___ftpack 0484                __end_of___lwtoft 0E11  
                        ?_Delay 0055       _LCDWriteFloat_FloatNumber 0039  
                __end_of___ftge 0ED8                        stringdir 0709  
                      stringjmp 070D                        stringtab 0700  
                        _ADCON0 001F                          _ADCON1 009F  
                  _LCDWriteData 0D38                          _CCP1M0 00B8  
                        _CCP1M1 00B9                          _CCP1M2 00BA  
                        _CCP1M3 00BB                          _CCP2M0 00E8  
                        _CCP2M1 00E9                          _CCP2M2 00EA  
                        _CCP2M3 00EB                          _CCP1IE 0462  
                        _CCP1IF 0062                          _CCP2IE 0468  
                        _CCP2IF 0068                  __end_of___wmul 0DE7  
                  _LCDWriteByte 0E3C                  _LCDWriteString 0D9A  
                        _ADRESH 001E                          _EEADRH 010F  
                        _ADRESL 009E                          _EEADRL 010D  
                        _EEDATA 010C                          _CCPR1H 0016  
                        _EEDATH 010E                          _CCPR2H 001C  
                        _CCPR1L 0015                          _CCPR2L 001B  
                        _EECON1 018C                          _EECON2 018D  
  __end_of_MainSystemInitialize 01EE                    __end_of_main 01E6  
              ___awdiv_quotient 0058                   ___ftdiv_sign1 0040  
                 ___ftdiv_sign2 0042                 ?_LCDWriteString 0048  
                   ___awtoft_f1 004B                          _GODONE 00FA  
                        _CVRCON 009D                          _T1SYNC 0082  
                        _INTEDG 040E                          _PCLATH 000A  
                        _INTCON 000B            __end_of_LCDWriteData 0D43  
          __end_of_LCDWriteByte 0E68          _LCDDisplayInitializing 0E68  
                        _TMR0IE 005D                          _TMR0IF 005A  
                        _TMR1IE 0460                          _TMR1IF 0060  
                        _TMR1CS 0081                          _TMR2IE 0461  
                        _TMR2IF 0061                          _TMR1ON 0080  
                        _OPTION 0081         _LCDWriteCommand_LCDData 0048  
                        _TMR2ON 0092                          _SSPADD 0093  
                        _TRISA0 0428                ??_LCDWriteString 0048  
                        _TRISA1 0429                          _TRISB0 0430  
                        _TRISA2 042A                          _TRISB1 0431  
                        _TRISA3 042B                          _TRISC0 0438  
                        _TRISB2 0432                          _TRISA4 042C  
                        _TRISC1 0439                          _TRISB3 0433  
                        _TRISA5 042D                          _TRISD0 0440  
                        _TRISC2 043A                          _TRISB4 0434  
                        _TRISD1 0441                          _TRISC3 043B  
                        _TRISB5 0435                          _TRISE0 0448  
                        _TRISD2 0442                          _TRISC4 043C  
                        _TRISB6 0436                          _TRISE1 0449  
                        _TRISD3 0443                          _TRISC5 043D  
                        _TRISB7 0437                          _TRISE2 044A  
                        _TRISD4 0444                          _TRISC6 043E  
                        _TRISD5 0445                          _TRISC7 043F  
                        _TRISD6 0446                          _TRISD7 0447  
                        _STATUS 0003                          _SSPCON 0014  
                        _SSPBUF 0013                        _LCDReset 0D51  
                     ?_LCDReset 003A                 ___awdiv_divisor 0054  
                    ??_LCDReset 003A                          ___ftge 0EA0  
               ___awdiv_counter 0056         ?_LCDDisplayInitializing 0039  
                        ___wmul 0DBD        _LCDDisplayInitializing_i 0039  
                        _main_c 0026                          _main_f 0028  
                        _main_p 002B                          _main_q 0034  
                        _main_r 002E                          _main_x 0022  
                        _main_y 0024                          _main_z 0020  
               ___ftunpack_sign 005C                  ?_LCDWriteFloat 0039  
        __end_of_LCDWriteString 0DBD             ___wmul_multiplicand 003B  
                 _LCDInitialize 0E11                 ??_LCDWriteFloat 003C  
          _LCDWriteByte_LCDData 0053                     ___lwtoft_f1 003C  
                 ___ftmul_sign1 004E                  ___ftunpack_arg 005B  
                ___ftunpack_exp 005A                   ?_LCDWriteData 0052  
            _LCDWriteFloat_Temp 003D                   ?_LCDWriteByte 0053  
         __end_of_LCDInitialize 0E3C                   ___fttol_sign1 004C  
      ??_LCDDisplayInitializing 0039                       __Hrdata_0 007E  
                     __Hramdata 007E  
