

HI-TECH Software PICC Macro Assembler V9.60
                                                      Tue Apr 10 11:22:31 2012


     1                           	processor	16F877A
     2                           	opt	pw 79
     3                           	psect	text0,local,class=CODE,delta=2
     4                           	psect	text1,local,class=CODE,delta=2
     5                           	psect	text2,local,class=CODE,delta=2
     6                           	psect	text3,local,class=CODE,delta=2
     7                           	psect	text4,local,class=CODE,delta=2
     8                           	psect	text5,local,class=CODE,delta=2
     9                           	psect	text6,local,class=CODE,delta=2
    10                           	psect	text7,local,class=CODE,delta=2
    11                           	psect	text8,local,class=CODE,delta=2
    12                           	psect	strings,global,class=STRING,delta=2
    13                           	psect	temp,global,ovrld,class=BANK0,space=1,de
      +                          lta=1
    14  0000                     
    15  0000                     
    16  0000                     
    17  0000                     
    18  0000                     
    19  0000                     
    20  0000                     
    21  0000                     
    22  0000                     
    23  0000                     
    24                           
    25                           	psect	text0
    26  06C0                     _LCDEnable
    27                           ;LCD.c: 4: static void LCDEnable(void)
    28  06C0  0183               	clrf	3	;select bank 0
    29  06C1  1588               	bsf	8,3
    30                           ;LCD.c: 7: Delay(10);
    31  06C2  300A               	movlw	10
    32  06C3  00AF               	movwf	?_Delay
    33  06C4  01B0               	clrf	?_Delay+1
    34  06C5  26DE               	call	_Delay
    35                           ;LCD.c: 8: RD3 = 0;
    36  06C6  1188               	bcf	8,3
    37                           ;LCD.c: 9: }
    38  06C7  0008               	return	;W free
    39                           
    40                           	psect	text1
    41  06AD                     _LCDWriteCommand
    42                           ;	_LCDData assigned to ?a_LCDWriteCommand+0
    43  0000                     _LCDWriteCommand$LCDData	set	?a_LCDWriteCommand
    44                           ;_LCDData stored from w
    45  06AD  0183               	clrf	3	;select bank 0
    46  06AE  00AC               	movwf	?a_LCDWriteCommand
    47                           ;LCD.c: 11: void LCDWriteCommand(LCDubyte LCDDa
      +                          ta)
    48  06AF  1108               	bcf	8,2
    49                           ;LCD.c: 14: LCDWriteByte(LCDData);
    50  06B0  2F27               	goto	_LCDWriteByte
    51                           
    52                           	psect	text2
    53  06B1                     _LCDWriteData
    54                           ;	_LCDData assigned to ?a_LCDWriteData+0
    55  0000                     _LCDWriteData$LCDData	set	?a_LCDWriteData
    56                           ;_LCDData stored from w
    57  06B1  0183               	clrf	3	;select bank 0
    58  06B2  00AC               	movwf	?a_LCDWriteData
    59                           ;LCD.c: 17: void LCDWriteData(LCDubyte LCDData)
    60  06B3  1508               	bsf	8,2
    61                           ;LCD.c: 20: LCDWriteByte(LCDData);
    62  06B4  2F27               	goto	_LCDWriteByte
    63                           
    64                           	psect	text3
    65  0714                     _LCDWriteString
    66                           ;LCD.c: 23: void LCDWriteString(const char *lcd
      +                          _string)
    67  0714  2F1D               	goto	l5
    68  0715                     l6
    69                           ;LCD.c: 26: {
    70  0715  082B               	movf	?_LCDWriteString+1,w
    71  0716  00F7               	movwf	code_ptr+1
    72  0717  082A               	movf	?_LCDWriteString,w
    73  0718  0AAA               	incf	?_LCDWriteString
    74  0719  1903               	btfsc	3,2
    75  071A  0AAB               	incf	?_LCDWriteString+1
    76  071B  2021               	call	string_table
    77  071C  26B1               	call	_LCDWriteData
    78  071D                     l5
    79  071D  1283               	bcf	3,5
    80  071E  1303               	bcf	3,6	;carry unused
    81  071F  082B               	movf	?_LCDWriteString+1,w
    82  0720  00F7               	movwf	code_ptr+1
    83  0721  082A               	movf	?_LCDWriteString,w
    84  0722  2021               	call	string_table
    85  0723  3800               	iorlw	0
    86  0724  1903               	btfsc	3,2
    87  0725  0008               	return
    88  0726  2F15               	goto	l6
    89                           
    90                           	psect	text4
    91  06EF                     _LCDInitialize
    92                           ;LCD.c: 31: void LCDInitialize(void)
    93  06EF  3003               	movlw	3
    94  06F0  1683               	bsf	3,5
    95  06F1  1303               	bcf	3,6	;carry unused
    96  06F2  0588               	andwf	8	;volatile
    97                           ;LCD.c: 34: RD3 = 0;
    98  06F3  1283               	bcf	3,5
    99  06F4  1188               	bcf	8,3
   100                           ;LCD.c: 35: RD2 = 0;
   101  06F5  1108               	bcf	8,2
   102                           ;LCD.c: 36: PORTD &= 0x0f;
   103  06F6  300F               	movlw	15
   104  06F7  0588               	andwf	8	;volatile
   105                           ;LCD.c: 37: LCDReset();
   106  06F8  26BA               	call	_LCDReset
   107                           ;LCD.c: 38: LCDWriteCommand(0x28);
   108  06F9  3028               	movlw	40
   109  06FA  26AD               	call	_LCDWriteCommand
   110                           ;LCD.c: 39: LCDWriteCommand(0x0C);
   111  06FB  300C               	movlw	12
   112  06FC  26AD               	call	_LCDWriteCommand
   113                           ;LCD.c: 40: LCDWriteCommand(0x06);
   114  06FD  3006               	movlw	6
   115  06FE  26AD               	call	_LCDWriteCommand
   116                           ;LCD.c: 41: LCDWriteCommand(0x01);
   117  06FF  3001               	movlw	1
   118  0700  2EAD               	goto	_LCDWriteCommand
   119                           
   120                           	psect	text5
   121  06BA                     _LCDReset
   122                           ;LCD.c: 44: static void LCDReset(void)
   123  06BA  3033               	movlw	51
   124  06BB  26AD               	call	_LCDWriteCommand
   125                           ;LCD.c: 47: LCDWriteCommand(0x33);
   126  06BC  3033               	movlw	51
   127  06BD  26AD               	call	_LCDWriteCommand
   128                           ;LCD.c: 48: LCDWriteCommand(0x32);
   129  06BE  3032               	movlw	50
   130  06BF  2EAD               	goto	_LCDWriteCommand
   131                           
   132                           	psect	text6
   133  073C                     _LCDDisplayInitializing
   134                           ;	_i assigned to ?a_LCDDisplayInitializing+0
   135  0000                     _LCDDisplayInitializing$i	set	?a_LCDDisplayInit
      +                          ializing
   136                           ;LCD.c: 50: void LCDDisplayInitializing(void)
   137  073C  3037               	movlw	low u19
   138  073D  0183               	clrf	3	;select bank 0
   139  073E  00AA               	movwf	?_LCDWriteString
   140  073F  3000               	movlw	high u19
   141  0740  00AB               	movwf	?_LCDWriteString+1
   142  0741  2714               	call	_LCDWriteString
   143                           ;LCD.c: 55: LCDWriteCommand(0xC0);
   144  0742  30C0               	movlw	-64
   145  0743  26AD               	call	_LCDWriteCommand
   146                           ;LCD.c: 56: for(i = 0 ; i < 16; i++)
   147  0744  01A9               	clrf	?a_LCDDisplayInitializing
   148  0745                     l11
   149                           ;LCD.c: 57: {
   150  0745  302E               	movlw	46
   151  0746  26B1               	call	_LCDWriteData
   152                           ;LCD.c: 59: Delay(100);
   153  0747  3064               	movlw	100
   154  0748  00AF               	movwf	?_Delay
   155  0749  01B0               	clrf	?_Delay+1
   156  074A  26DE               	call	_Delay
   157  074B  0AA9               	incf	?a_LCDDisplayInitializing
   158  074C  3010               	movlw	16
   159  074D  0229               	subwf	?a_LCDDisplayInitializing,w
   160  074E  1C03               	btfss	3,0
   161  074F  2F45               	goto	l11
   162                           ;LCD.c: 60: }
   163  0750  3001               	movlw	1
   164  0751  2EAD               	goto	_LCDWriteCommand
   165                           
   166                           	psect	text7
   167  0727                     _LCDWriteByte
   168                           ;	_LCDData assigned to ?a_LCDWriteByte+0
   169  0000                     _LCDWriteByte$LCDData	set	?a_LCDWriteByte
   170                           ;_LCDData stored from w
   171  0727  0183               	clrf	3	;select bank 0
   172  0728  00AD               	movwf	?a_LCDWriteByte
   173                           ;LCD.c: 63: static void LCDWriteByte(LCDubyte L
      +                          CDData)
   174  0729  39F0               	andlw	-16
   175  072A  00AE               	movwf	?a_LCDWriteByte+1
   176  072B  0808               	movf	8,w	;volatile
   177  072C  390F               	andlw	15
   178  072D  042E               	iorwf	?a_LCDWriteByte+1,w
   179  072E  0088               	movwf	8	;volatile
   180                           ;LCD.c: 66: LCDEnable();
   181  072F  26C0               	call	_LCDEnable
   182                           ;LCD.c: 67: PORTD = (PORTD & 0x0F)|(LCDData << 
      +                          4);
   183  0730  0E2D               	swapf	?a_LCDWriteByte,w
   184  0731  39F0               	andlw	240
   185  0732  00AE               	movwf	?a_LCDWriteByte+1
   186  0733  0808               	movf	8,w	;volatile
   187  0734  390F               	andlw	15
   188  0735  042E               	iorwf	?a_LCDWriteByte+1,w
   189  0736  0088               	movwf	8	;volatile
   190                           ;LCD.c: 68: LCDEnable();
   191  0737  26C0               	call	_LCDEnable
   192                           ;LCD.c: 69: Delay(2);
   193  0738  3002               	movlw	2
   194  0739  00AF               	movwf	?_Delay
   195  073A  01B0               	clrf	?_Delay+1
   196  073B  2EDE               	goto	_Delay
   197                           
   198                           	psect	text8
   199  0752                     _LCDDisplayByte
   200                           ;	_LCDAdress assigned to ?a_LCDDisplayByte+0
   201  0000                     _LCDDisplayByte$LCDAdress	set	?a_LCDDisplayByte
   202                           ;_LCDAdress stored from w
   203  0752  0183               	clrf	3	;select bank 0
   204  0753  00AA               	movwf	?a_LCDDisplayByte
   205                           ;LCD.c: 71: void LCDDisplayByte(LCDubyte LCDAdr
      +                          ess, LCDubyte Value)
   206  0754  26AD               	call	_LCDWriteCommand
   207                           ;LCD.c: 74: if(( Value / 100 ) == 0)
   208  0755  3064               	movlw	100
   209  0756  00F1               	movwf	btemp+1
   210  0757  0829               	movf	?_LCDDisplayByte,w
   211  0758  27CA               	call	lbdiv
   212  0759  3800               	iorlw	0
   213  075A  1D03               	btfss	3,2
   214  075B  2F5E               	goto	l16
   215                           ;LCD.c: 75: LCDWriteData(0x20);
   216  075C  3020               	movlw	32
   217  075D  2F63               	goto	L1
   218  075E                     l16
   219                           ;LCD.c: 76: else
   220  075E  3064               	movlw	100
   221  075F  00F1               	movwf	btemp+1
   222  0760  0829               	movf	?_LCDDisplayByte,w
   223  0761  27CA               	call	lbdiv
   224  0762  3830               	iorlw	48
   225  0763                     L1
   226  0763  26B1               	call	_LCDWriteData
   227                           ;LCD.c: 79: if(((Value % 100) / 10) == 0)
   228  0764  3064               	movlw	100
   229  0765  00F1               	movwf	btemp+1
   230  0766  0829               	movf	?_LCDDisplayByte,w
   231  0767  27CA               	call	lbmod
   232  0768  0870               	movf	btemp,w
   233  0769  00AB               	movwf	?a_LCDDisplayByte+1
   234  076A  300A               	movlw	10
   235  076B  00F1               	movwf	btemp+1
   236  076C  082B               	movf	?a_LCDDisplayByte+1,w
   237  076D  27CA               	call	lbdiv
   238  076E  3800               	iorlw	0
   239                           ;LCD.c: 80: if(( Value / 100 ) == 0)
   240  076F  3064               	movlw	100
   241  0770  00F1               	movwf	btemp+1
   242  0771  1D03               	btfss	3,2
   243  0772  2F7C               	goto	L3
   244  0773  0829               	movf	?_LCDDisplayByte,w
   245  0774  27CA               	call	lbdiv
   246  0775  3800               	iorlw	0
   247  0776  1D03               	btfss	3,2
   248  0777  2F7A               	goto	l18
   249                           ;LCD.c: 81: LCDWriteData(0x20);
   250  0778  3020               	movlw	32
   251  0779  2F85               	goto	L2
   252                           ;LCD.c: 82: else
   253  077A                     l18
   254                           ;LCD.c: 84: else
   255  077A  3064               	movlw	100
   256  077B  00F1               	movwf	btemp+1
   257  077C                     L3
   258  077C  0829               	movf	?_LCDDisplayByte,w
   259  077D  27CA               	call	lbmod
   260  077E  0870               	movf	btemp,w
   261  077F  00AB               	movwf	?a_LCDDisplayByte+1
   262  0780  300A               	movlw	10
   263  0781  00F1               	movwf	btemp+1
   264  0782  082B               	movf	?a_LCDDisplayByte+1,w
   265  0783  27CA               	call	lbdiv
   266  0784  3830               	iorlw	48
   267  0785                     L2
   268  0785  26B1               	call	_LCDWriteData
   269                           ;LCD.c: 87: LCDWriteData((Value % 10) | 0x30);
   270  0786  300A               	movlw	10
   271  0787  00F1               	movwf	btemp+1
   272  0788  0829               	movf	?_LCDDisplayByte,w
   273  0789  27CA               	call	lbmod
   274  078A  0870               	movf	btemp,w
   275  078B  3830               	iorlw	48
   276  078C  2EB1               	goto	_LCDWriteData
   277                           
   278                           	psect	strings
   279  0000                     
   280  0000                     
   281  0000                     
   282  0000                     
   283  0000                     
   284  0000                     
   285  0000                     
   286  0000                     
   287  0000                     
   288  0000                     
   289  0000                     
   290  0000                     
   291  0000                     
   292  0000                     
   293  0000                     
   294  0000                     
   295  0000                     
   296  0000                     
   297  0000                     
   298  0000                     
   299  0000                     
   300  0000                     
   301  0000                     
   302  0000                     
   303  0000                     
   304  0000                     
   305  0000                     
   306  0000                     
   307  0000                     
   308  0000                     
   309  0000                     
   310  0000                     
   311  0000                     
   312  0000                     
   313  0000                     
   314  0000                     
   315  0000                     
   316  0000                     
   317  0000                     
   318  0000                     
   319  0000                     
   320  0000                     
   321  0000                     
   322  0000                     
   323  0000                     
   324  0000                     
   325  0000                     
   326  0000                     
   327  0000                     
   328  0000                     
   329  0000                     
   330  0000                     
   331  0000                     
   332  0000                     
   333  0000                     
   334  0000                     
   335  0000                     
   336  0000                     
   337  0000                     
   338  0000                     
   339  0000                     
   340  0000                     
   341  0000                     
   342  0000                     
   343  0000                     
   344  0000                     
   345  0000                     
   346  0000                     
   347  0000                     
   348  0000                     
   349  0000                     
   350  0000                     
   351  0000                     
   352  0000                     
   353  0000                     
   354  0000                     
   355  0000                     
   356  0000                     
   357  0000                     
   358  0000                     
   359  0000                     
   360  0000                     
   361  0000                     
   362  0000                     
   363  0000                     
   364  0000                     
   365  0000                     
   366  0000                     
   367  0000                     
   368  0000                     
   369  0000                     
   370  0000                     
   371  0000                     
   372  0000                     
   373  0000                     
   374  0000                     
   375  0000                     
   376  0000                     
   377  0000                     
   378  0000                     
   379  0000                     
   380  0000                     
   381  0000                     
   382  0000                     
   383  0000                     
   384  0000                     
   385  0000                     
   386  0000                     
   387  0000                     
   388  0000                     
   389  0000                     
   390  0000                     
   391  0000                     
   392  0000                     
   393  0000                     
   394  0000                     
   395  0000                     
   396  0000                     
   397  0000                     
   398  0000                     
   399  0000                     
   400  0000                     
   401  0000                     
   402  0000                     
   403  0000                     
   404  0000                     
   405  0000                     
   406  0000                     
   407  0000                     
   408  0000                     
   409  0000                     
   410  0000                     
   411  0000                     
   412  0000                     
   413  0000                     
   414  0000                     
   415  0000                     
   416  0000                     
   417  0000                     
   418  0000                     
   419  0000                     
   420  0000                     
   421  0000                     
   422  0000                     
   423  0000                     
   424  0000                     
   425  0000                     
   426  0000                     
   427  0000                     
   428  0000                     
   429  0000                     
   430  0000                     
   431  0000                     
   432  0000                     
   433  0000                     
   434  0000                     
   435  0000                     
   436  0000                     
   437  0000                     
   438  0000                     
   439  0000                     
   440  0000                     
   441  0000                     
   442  0000                     
   443  0000                     
   444  0000                     
   445  0000                     
   446  0000                     
   447  0000                     
   448  0000                     
   449  0000                     
   450  0000                     
   451  0000                     
   452  0000                     
   453  0000                     
   454  0000                     
   455  0000                     
   456  0000                     
   457  0000                     
   458  0000                     
   459  0000                     
   460  0000                     
   461  0000                     
   462  0000                     
   463  0000                     
   464  0000                     
   465  0000                     
   466  0000                     
   467  0000                     
   468  0000                     
   469  0000                     
   470  0000                     
   471  0000                     
   472  0000                     
   473  0000                     
   474  0000                     
   475  0000                     
   476  0000                     
   477  0000                     
   478  0000                     
   479  0000                     
   480  0000                     
   481  0000                     
   482  0000                     
   483  0000                     
   484  0000                     
   485  0000                     
   486  0000                     
   487  0000                     
   488  0000                     
   489  0000                     
   490  0000                     
   491  0000                     
   492  0000                     
   493  0000                     
   494  0000                     
   495  0000                     
   496  0000                     
   497  0000                     
   498  0000                     
   499  0000                     
   500  0000                     
   501  0000                     
   502  0000                     
   503  0000                     
   504  0000                     
   505  0000                     
   506  0000                     
   507  0000                     
   508  0000                     
   509  0000                     
   510  0000                     
   511  0000                     
   512  0000                     
   513  0000                     
   514  0000                     
   515  0000                     
   516  0000                     
   517  0000                     
   518  0000                     
   519  0000                     
   520  0000                     
   521  0000                     
   522  0000                     
   523  0000                     
   524  0000                     
   525  0000                     
   526  0000                     
   527  0000                     
   528  0000                     
   529  0000                     
   530  0000                     
   531  0000                     
   532  0000                     
   533  0000                     
   534  0000                     
   535  0000                     
   536  0000                     
   537  0000                     
   538  0000                     
   539  0000                     
   540  0000                     
   541  0000                     
   542  0000                     
   543  0000                     
   544  0000                     
   545  0000                     
   546  0000                     
   547  0000                     
   548  0000                     
   549  0000                     
   550  0000                     
   551  0000                     
   552  0000                     
   553  0000                     
   554  0000                     
   555                           ; Strings
   556  0037                     u19
   557  0037  3449               	retlw	73	;'I'
   558  0038  344E               	retlw	78	;'N'
   559  0039  3449               	retlw	73	;'I'
   560  003A  3454               	retlw	84	;'T'
   561  003B  3449               	retlw	73	;'I'
   562  003C  3441               	retlw	65	;'A'
   563  003D  344C               	retlw	76	;'L'
   564  003E  3449               	retlw	73	;'I'
   565  003F  345A               	retlw	90	;'Z'
   566  0040  3449               	retlw	73	;'I'
   567  0041  344E               	retlw	78	;'N'
   568  0042  3447               	retlw	71	;'G'
   569  0043  342E               	retlw	46
   570  0044  342E               	retlw	46
   571  0045  342E               	retlw	46
   572  0046  342E               	retlw	46
   573  0047  3400               	retlw	0
   574                           
   575                           	psect	temp
   576  0070                     btemp
                     btemp
   577  0070                     	ds	2


HI-TECH Software PICC Macro Assembler V9.60
Symbol Table                                          Tue Apr 10 11:22:31 2012

                        l5 071D                          l6 0715  
                       l11 0745                         l16 075E  
                       l18 077A                         u19 0037  
           _LCDDisplayByte 0752                       f2883 002E  
                     f2893 002B             _LCDWriteString 0714  
                     btemp 0070                       lbdiv 07CA  
                     lbmod 07CA                   _LCDReset 06BA  
           ?a_LCDWriteData 002C           ?a_LCDDisplayByte 002A  
           ?a_LCDWriteByte 002D            _LCDWriteCommand 06AD  
          ?_LCDDisplayByte 0029            ?_LCDWriteString 002A  
                    _Delay 06DE                    code_ptr 0076  
              string_table 0021                  _LCDEnable 06C0  
                    status 0003               _LCDWriteData 06B1  
             _LCDWriteByte 0727              _LCDInitialize 06EF  
        ?a_LCDWriteCommand 002C     _LCDDisplayInitializing 073C  
             used_code_ptr 0001                     ?_Delay 002F  
               used_btemp0 0001                 used_btemp1 0001  
 ?a_LCDDisplayInitializing 0029  
