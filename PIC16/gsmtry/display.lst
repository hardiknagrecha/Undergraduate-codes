

HI-TECH Software PICC Macro Assembler V9.65PL1 build 4898 
                                                      Wed Jun 27 16:31:26 2012

HI-TECH Software Omniscient Code Generator build 4898
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code 
                                 Generator build 4898"
     2                           
     3                           	processor	16F877A
     4                           clrc	macro
     5                           	bcf	status,0
     6  0000                     	endm
     7                           clrz	macro
     8                           	bcf	status,2
     9  0000                     	endm
    10                           setc	macro
    11                           	bsf	status,0
    12  0000                     	endm
    13                           setz	macro
    14                           	bsf	status,2
    15  0000                     	endm
    16                           skipc	macro
    17                           	btfss	status,0
    18  0000                     	endm
    19                           skipz	macro
    20                           	btfss	status,2
    21  0000                     	endm
    22                           skipnc	macro
    23                           	btfsc	status,0
    24  0000                     	endm
    25                           skipnz	macro
    26                           	btfsc	status,2
    27  0000                     	endm
    28  0000                     indf	equ	0
    29  0000                     indf0	equ	0
    30  0000                     pc	equ	2
    31  0000                     pcl	equ	2
    32  0000                     status	equ	3
    33  0000                     fsr	equ	4
    34  0000                     fsr0	equ	4
    35  0000                     c	equ	1
    36  0000                     z	equ	0
    37  0000                     pclath	equ	10
    38                           # 14 "C:\Users\hardik\Desktop\LCD general files
                                  (with delay)\main.h"
    39                           	psect config,class=CONFIG,delta=2 ;#
    40                           # 14 "C:\Users\hardik\Desktop\LCD general files
                                  (with delay)\main.h"
    41  2007  2F0A               	dw 0x2F0A ;#
    42                           	FNCALL _LCDWriteString,stringtab
    43                           	FNCALL _LCDWriteString,stringtab
    44                           	FNCALL _LCDWriteString,stringtab
    45                           	FNCALL _LCDWriteString,stringtab
    46                           	FNCALL _LCDWriteString,stringtab
    47                           	FNCALL _LCDWriteString,stringtab
    48                           global __tempreg
    49  0000                     __tempreg	set	32
    50                           global __Lrdata_0, __Hrdata_0
    51  0000                     __Lrdata_0	equ	0x78
    52  0000                     __Hrdata_0	equ	0x7E
    53                           global __Lramdata, __Lrdata_0, __Hramdata, __Hr
                                 data_0
    54  0000                     __Lramdata	set	__Lrdata_0
    55  0000                     __Hramdata	set	__Hrdata_0
    56                           	GLOBAL	__databank
    57  0000                     __databank	EQU	-1
    58                           	FNCALL _LCDWriteString,stringtab
    59                           	FNCALL _LCDWriteString,stringtab
    60                           	FNCALL _LCDWriteString,stringtab
    61                           	FNCALL _LCDWriteString,stringtab
    62                           	FNCALL _LCDWriteString,stringtab
    63                           	FNCALL _LCDWriteString,stringtab
    64                           	FNCALL _LCDWriteString,stringtab
    65                           	FNCALL _LCDWriteString,stringtab
    66  0000                     _LCDDisplayInitializing_i	equ	??_LCDDisplayInit
                                 ializing+0
    67                           	global	_LCDDisplayInitializing_i
    68  0000                     _LCDWriteFloat_i	equ	??_LCDWriteFloat+0
    69                           	global	_LCDWriteFloat_i
    70  0000                     _LCDWriteFloat_Temp	equ	??_LCDWriteFloat+1
    71                           	global	_LCDWriteFloat_Temp
    72  0000                     _LCDWriteFloat_n	equ	??_LCDWriteFloat+3
    73                           	global	_LCDWriteFloat_n
    74  0000                     _LCDWriteFloat_c	equ	??_LCDWriteFloat+5
    75                           	global	_LCDWriteFloat_c
    76  0000                     _LCDWriteFloat_FloatNumber	equ	?_LCDWriteFloat+
                                 0
    77                           	global	_LCDWriteFloat_FloatNumber
    78  0000                     _LCDWriteString_lcd_string	equ	??_LCDWriteStrin
                                 g+0
    79                           	global	_LCDWriteString_lcd_string
    80  0000                     ___ftge_ff1	equ	?___ftge+0
    81                           	global	___ftge_ff1
    82  0000                     ___ftge_ff2	equ	?___ftge+3
    83                           	global	___ftge_ff2
    84  0000                     ___fttol_sign1	equ	??___fttol+0
    85                           	global	___fttol_sign1
    86  0000                     ___fttol_exp1	equ	??___fttol+1
    87                           	global	___fttol_exp1
    88  0000                     ___fttol_lval	equ	??___fttol+2
    89                           	global	___fttol_lval
    90  0000                     ___fttol_f1	equ	?___fttol+0
    91                           	global	___fttol_f1
    92  0000                     _LCDWriteInteger_i	equ	??_LCDWriteInteger+0
    93                           	global	_LCDWriteInteger_i
    94  0000                     _LCDWriteInteger_c	equ	??_LCDWriteInteger+1
    95                           	global	_LCDWriteInteger_c
    96  0000                     _LCDWriteInteger_IntegerNumber	equ	?_LCDWriteIn
                                 teger+0
    97                           	global	_LCDWriteInteger_IntegerNumber
    98  0000                     ___ftsub_f1	equ	?___ftsub+0
    99                           	global	___ftsub_f1
   100  0000                     ___ftsub_f2	equ	?___ftsub+3
   101                           	global	___ftsub_f2
   102  0000                     ___ftmul_sign1	equ	??___ftmul+0
   103                           	global	___ftmul_sign1
   104  0000                     ___ftmul_exp1	equ	??___ftmul+1
   105                           	global	___ftmul_exp1
   106  0000                     ___ftmul_cntr	equ	??___ftmul+2
   107                           	global	___ftmul_cntr
   108  0000                     ___ftmul_f3	equ	??___ftmul+3
   109                           	global	___ftmul_f3
   110  0000                     ___ftmul_f1	equ	?___ftmul+0
   111                           	global	___ftmul_f1
   112  0000                     ___ftmul_f2	equ	?___ftmul+3
   113                           	global	___ftmul_f2
   114  0000                     ___awtoft_f1	equ	??___awtoft+0
   115                           	global	___awtoft_f1
   116  0000                     ___awtoft_c	equ	?___awtoft+0
   117                           	global	___awtoft_c
   118  0000                     ___awdiv_sign	equ	??___awdiv+0
   119                           	global	___awdiv_sign
   120  0000                     ___awdiv_counter	equ	??___awdiv+1
   121                           	global	___awdiv_counter
   122  0000                     ___awdiv_quotient	equ	??___awdiv+2
   123                           	global	___awdiv_quotient
   124  0000                     ___awdiv_dividend	equ	?___awdiv+0
   125                           	global	___awdiv_dividend
   126  0000                     ___awdiv_divisor	equ	?___awdiv+2
   127                           	global	___awdiv_divisor
   128  0000                     ___ftadd_sign2	equ	??___ftadd+0
   129                           	global	___ftadd_sign2
   130  0000                     ___ftadd_cntr	equ	??___ftadd+1
   131                           	global	___ftadd_cntr
   132  0000                     ___ftadd_sign1	equ	??___ftadd+2
   133                           	global	___ftadd_sign1
   134  0000                     ___ftadd_exp2	equ	??___ftadd+3
   135                           	global	___ftadd_exp2
   136  0000                     ___ftadd_exp1	equ	??___ftadd+4
   137                           	global	___ftadd_exp1
   138  0000                     ___ftadd_f1	equ	?___ftadd+0
   139                           	global	___ftadd_f1
   140  0000                     ___ftadd_f2	equ	?___ftadd+3
   141                           	global	___ftadd_f2
   142  0000                     ___awmod_sign	equ	??___awmod+0
   143                           	global	___awmod_sign
   144  0000                     ___awmod_counter	equ	??___awmod+1
   145                           	global	___awmod_counter
   146  0000                     ___awmod_dividend	equ	?___awmod+0
   147                           	global	___awmod_dividend
   148  0000                     ___awmod_divisor	equ	?___awmod+2
   149                           	global	___awmod_divisor
   150  0000                     _LCDWriteData_LCDData	equ	??_LCDWriteData+0
   151                           	global	_LCDWriteData_LCDData
   152  0000                     ___ftneg_f1	equ	?___ftneg+0
   153                           	global	___ftneg_f1
   154  0000                     ___ftpack_arg	equ	??___ftpack+0
   155                           	global	___ftpack_arg
   156  0000                     ___ftpack_exp	equ	?___ftpack+0
   157                           	global	___ftpack_exp
   158  0000                     _LCDWriteCommand_LCDData	equ	??_LCDWriteCommand
                                 +0
   159                           	global	_LCDWriteCommand_LCDData
   160  0000                     ___ftunpack_arg	equ	??___ftunpack+0
   161                           	global	___ftunpack_arg
   162  0000                     ___ftunpack_sign	equ	??___ftunpack+1
   163                           	global	___ftunpack_sign
   164  0000                     ___ftunpack_exp	equ	?___ftunpack+0
   165                           	global	___ftunpack_exp
   166  0000                     _LCDWriteByte_LCDData	equ	??_LCDWriteByte+0
   167                           	global	_LCDWriteByte_LCDData
   168  0000                     _Delay_pause	equ	??_Delay+0
   169                           	global	_Delay_pause
   170  0000                     _Delay_time	equ	?_Delay+0
   171                           	global	_Delay_time
   172                           ;Data sizes: Strings 20, constant 0, data 6, bs
                                 s 0, persistent 0 stack 40
   173                           	global	_main
   174                           	global	??_main
   175                           	global	?_main
   176                           
   177                           ; *************** function _main **************
                                 *
   178                           ; Defined at:
   179                           ;		line 6 in file "C:\Users\hardik\Desktop\LCD 
                                 general files (with delay)\main.c"
   180                           ; Parameters:
   181                           ;		None
   182                           ; Auto variables:
   183                           ;		Count       	       	type: unsigned char 
   184                           ; Return value:
   185                           ;		type: void 
   186                           ;		size: 0
   187                           ; Registers used:
   188                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
                                 th, cstack
   189                           ; Tracked objects:
   190                           ;		On entry : BFF/0
   191                           ;		On exit  : 0/0
   192                           ;		Unchanged: 0/0
   193                           ; Data sizes:
   194                           ;		Autos:    0
   195                           ;		Params:   0
   196                           ;		Temp:     0
   197                           ;		Total:    0
   198                           ; This function calls:
   199                           ;		_MainSystemInitialize
   200                           ;		_LCDDisplayInitializing
   201                           ;		_LCDWriteFloat
   202                           ;		_Delay
   203                           ;		_LCDWriteCommand
   204                           ;		_LCDWriteInteger
   205                           ; This function is called by:
   206                           ;		Startup code after reset
   207                           ; This function uses a non-reentrant model
   208                           ; 
   209                           	psect	maintext,class=CODE,delta=2
   210                           	file	"C:\Users\hardik\Desktop\LCD general file
                                 s (with delay)\main.c"
   211                           	line	6
   212                           	psect	maintext
   213                           ;main.c: 3: int i=48,j=48,k=48;
   214                           ;main.c: 5: void main(void)
   215                           ;main.c: 6: {
   216                           	
   217  0018                     _main:	
   218                           	opt stack 7
   219                           ; Regs used in _main: [wreg-fsr0h+status,2+stat
                                 us,0+pclath+cstack]
   220                           	line	8
   221                           ;main.c: 7: unsigned char Count;
   222                           ;main.c: 8: MainSystemInitialize();
   223  0018  120A  118A  2060   	fcall	_MainSystemInitialize
              120A  118A         
   224                           	line	9
   225                           ;main.c: 9: LCDDisplayInitializing();
   226  001D  120A  118A  2108   	fcall	_LCDDisplayInitializing
              120A  118A         
   227                           	line	11
   228                           ;main.c: 11: while(1)
   229                           	
   230  0022                     l50:	
   231                           	line	13
   232                           ;main.c: 12: {
   233                           ;main.c: 13: LCDWriteFloat(3.134);
   234  0022  1283               	bcf	status, 5	;RP0=0, select bank0
   235  0023  1303               	bcf	status, 6	;RP1=0, select bank0
   236                           	
   237  0024  3093               	movlw	0x93
   238  0025  00A0               	movwf	(?_LCDWriteFloat)
   239  0026  3048               	movlw	0x48
   240  0027  00A1               	movwf	(?_LCDWriteFloat+1)
   241  0028  3040               	movlw	0x40
   242  0029  00A2               	movwf	(?_LCDWriteFloat+2)
   243  002A  120A  118A  25A2   	fcall	_LCDWriteFloat
              120A  118A         
   244                           	line	14
   245                           ;main.c: 14: Delay(1000);
   246  002F  30E8               	movlw	low(03E8h)
   247  0030  1283               	bcf	status, 5	;RP0=0, select bank0
   248  0031  1303               	bcf	status, 6	;RP1=0, select bank0
   249                           	
   250  0032  00BC               	movwf	(?_Delay)
   251  0033  3003               	movlw	high(03E8h)
   252  0034  00BD               	movwf	((?_Delay))+1
   253  0035  120A  158A  27E7   	fcall	_Delay
              120A  118A         
   254                           	line	15
   255                           ;main.c: 15: LCDWriteCommand(0x01);
   256  003A  3001               	movlw	(01h)
   257  003B  120A  158A  27C9   	fcall	_LCDWriteCommand
              120A  118A         
   258                           	line	16
   259                           ;main.c: 16: LCDWriteInteger(2);
   260  0040  3002               	movlw	low(02h)
   261  0041  1283               	bcf	status, 5	;RP0=0, select bank0
   262  0042  1303               	bcf	status, 6	;RP1=0, select bank0
   263                           	
   264  0043  00AF               	movwf	(?_LCDWriteInteger)
   265  0044  3000               	movlw	high(02h)
   266  0045  00B0               	movwf	((?_LCDWriteInteger))+1
   267  0046  120A  118A  2364   	fcall	_LCDWriteInteger
              120A  118A         
   268                           	line	17
   269                           ;main.c: 17: Delay(1000);
   270  004B  30E8               	movlw	low(03E8h)
   271  004C  1283               	bcf	status, 5	;RP0=0, select bank0
   272  004D  1303               	bcf	status, 6	;RP1=0, select bank0
   273                           	
   274  004E  00BC               	movwf	(?_Delay)
   275  004F  3003               	movlw	high(03E8h)
   276  0050  00BD               	movwf	((?_Delay))+1
   277  0051  120A  158A  27E7   	fcall	_Delay
              120A  118A         
   278                           	line	18
   279                           ;main.c: 18: LCDWriteCommand(0x01);
   280  0056  3001               	movlw	(01h)
   281  0057  120A  158A  27C9   	fcall	_LCDWriteCommand
              120A  118A         
   282                           	line	19
   283                           	
   284  005C                     l49:	
   285                           	line	11
   286  005C  2822               	goto	l50
   287                           	global	start
   288  005D  120A  118A  2800   	ljmp	start
   289                           ; =============== function _main ends =========
                                 ======
   290                           
   291                           GLOBAL __end_of_main
   292  0060                     	__end_of_main:
   293                           	FNSIZE	_main,0,0
   294                           	psect	maintext
   295                           	line	21
   296                           	signat	_main,88
   297                           	global	_LCDDisplayInitializing
   298                           	global	??_LCDDisplayInitializing
   299                           	global	?_LCDDisplayInitializing
   300                           
   301                           ; *************** function _LCDDisplayInitializ
                                 ing ***************
   302                           ; Defined at:
   303                           ;		line 53 in file "C:\Users\hardik\Desktop\LCD
                                  general files (with delay)\LCD.c"
   304                           ; Parameters:
   305                           ;		None
   306                           ; Auto variables:
   307                           ;		i           	       	type: unsigned char 
   308                           ; Return value:
   309                           ;		type: void 
   310                           ;		size: 0
   311                           ; Registers used:
   312                           ;		wreg, status,2, status,0, pclath, cstack
   313                           ; Tracked objects:
   314                           ;		On entry : 0/0
   315                           ;		On exit  : 0/0
   316                           ;		Unchanged: 0/0
   317                           ; Data sizes:
   318                           ;		Autos:    1
   319                           ;		Params:   0
   320                           ;		Temp:     1
   321                           ;		Total:    2
   322                           ; This function calls:
   323                           ;		_LCDWriteString
   324                           ;		_LCDWriteCommand
   325                           ;		_LCDWriteData
   326                           ;		_Delay
   327                           ; This function is called by:
   328                           ;		_main
   329                           ; This function uses a non-reentrant model
   330                           ; 
   331                           	psect	text161,local,class=CODE,delta=2
   332                           	file	"C:\Users\hardik\Desktop\LCD general file
                                 s (with delay)\LCD.c"
   333                           	line	53
   334                           ;LCD.c: 52: void LCDDisplayInitializing(void)
   335                           ;LCD.c: 53: {
   336                           	
   337  0108                     _LCDDisplayInitializing:	
   338                           	opt stack 6
   339                           ; Regs used in _LCDDisplayInitializing: [wreg+s
                                 tatus,2+status,0+pclath+cstack]
   340                           	line	56
   341                           ;LCD.c: 55: LCDubyte i;
   342                           ;LCD.c: 56: LCDWriteString("INITIALIZING....");
   343  0108  3001               	movlw	((STR_1-__stringbase))&0ffh
   344  0109  120A  118A  208E   	fcall	_LCDWriteString
              120A  118A         
   345                           	line	57
   346                           ;LCD.c: 57: LCDWriteCommand(0xC0);
   347  010E  30C0               	movlw	(0C0h)
   348  010F  120A  158A  27C9   	fcall	_LCDWriteCommand
              120A  118A         
   349                           	line	58
   350                           ;LCD.c: 58: for(i = 0 ; i < 16; i++)
   351  0114  1003               	clrc
   352  0115  1283               	bcf	status, 5	;RP0=0, select bank0
   353  0116  1303               	bcf	status, 6	;RP1=0, select bank0
   354                           	
   355  0117  3000               	movlw	0
   356  0118  1803               	btfsc	status,0
   357  0119  3001               	movlw	1
   358  011A  00A0               	movwf	(_LCDDisplayInitializing_i)
   359  011B  291C               	goto	l18
   360                           	line	59
   361                           	
   362  011C                     l18:	
   363                           	line	60
   364                           ;LCD.c: 59: {
   365                           ;LCD.c: 60: LCDWriteData(46);
   366  011C  302E               	movlw	(02Eh)
   367  011D  120A  158A  27BE   	fcall	_LCDWriteData
              120A  118A         
   368                           	line	61
   369                           ;LCD.c: 61: Delay(100);
   370  0122  3064               	movlw	low(064h)
   371  0123  1283               	bcf	status, 5	;RP0=0, select bank0
   372  0124  1303               	bcf	status, 6	;RP1=0, select bank0
   373                           	
   374  0125  00BC               	movwf	(?_Delay)
   375  0126  3000               	movlw	high(064h)
   376  0127  00BD               	movwf	((?_Delay))+1
   377  0128  120A  158A  27E7   	fcall	_Delay
              120A  118A         
   378                           	line	58
   379  012D  3001               	movlw	(01h)
   380  012E  1283               	bcf	status, 5	;RP0=0, select bank0
   381  012F  1303               	bcf	status, 6	;RP1=0, select bank0
   382  0130  00A1               	movwf	(??_LCDDisplayInitializing+1+0)
   383                           	
   384  0131  0821               	movf	(??_LCDDisplayInitializing+1+0),w
   385  0132  07A0               	addwf	(_LCDDisplayInitializing_i),f
   386  0133  3010               	movlw	(010h)
   387                           	
   388  0134  0220               	subwf	(_LCDDisplayInitializing_i),w
   389+ 0135  1C03               	skipc
   390  0136  2938               	goto	u2241
   391  0137  2939               	goto	u2240
   392  0138                     u2241:
   393  0138  291C               	goto	l18
   394  0139                     u2240:
   395                           	
   396  0139                     l19:	
   397                           	line	63
   398                           ;LCD.c: 62: }
   399                           ;LCD.c: 63: LCDWriteCommand(0x01);
   400  0139  3001               	movlw	(01h)
   401  013A  120A  158A  27C9   	fcall	_LCDWriteCommand
              120A  118A         
   402                           	line	64
   403                           ;LCD.c: 64: }
   404  013F                     l17:	
   405  013F  0008               	return
   406                           ; =============== function _LCDDisplayInitializ
                                 ing ends ===============
   407                           
   408                           GLOBAL __end_of_LCDDisplayInitializing
   409  0140                     	__end_of_LCDDisplayInitializing:
   410                           	FNSIZE	_LCDDisplayInitializing,2,0
   411                           	signat	_LCDDisplayInitializing,88
   412                           	global	_LCDWriteFloat
   413                           	global	??_LCDWriteFloat
   414                           	global	?_LCDWriteFloat
   415                           
   416                           ; *************** function _LCDWriteFloat *****
                                 **********
   417                           ; Defined at:
   418                           ;		line 93 in file "C:\Users\hardik\Desktop\LCD
                                  general files (with delay)\LCD.c"
   419                           ; Parameters:
   420                           ;		FloatNumber 	offs:   0	type: float 
   421                           ; Auto variables:
   422                           ;		i           	       	type: unsigned char 
   423                           ;		Temp        	       	type: int 
   424                           ;		n           	       	type: int 
   425                           ;		c           	       	type: unsigned char [6]
   426                           ; Return value:
   427                           ;		type: void 
   428                           ;		size: 0
   429                           ; Registers used:
   430                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
                                 th, cstack
   431                           ; Tracked objects:
   432                           ;		On entry : 300/0
   433                           ;		On exit  : 0/0
   434                           ;		Unchanged: 0/0
   435                           ; Data sizes:
   436                           ;		Autos:   11
   437                           ;		Params:   3
   438                           ;		Temp:     1
   439                           ;		Total:   15
   440                           ; This function calls:
   441                           ;		___ftge
   442                           ;		_LCDWriteData
   443                           ;		___ftneg
   444                           ;		___fttol
   445                           ;		_LCDWriteInteger
   446                           ;		___awtoft
   447                           ;		___ftsub
   448                           ;		___ftadd
   449                           ;		___ftmul
   450                           ;		___awmod
   451                           ;		___awdiv
   452                           ;		_LCDWriteCommand
   453                           ;		_LCDWriteString
   454                           ; This function is called by:
   455                           ;		_main
   456                           ; This function uses a non-reentrant model
   457                           ; 
   458                           	psect	text162,local,class=CODE,delta=2
   459                           	file	"C:\Users\hardik\Desktop\LCD general file
                                 s (with delay)\LCD.c"
   460                           	line	93
   461                           ;LCD.c: 92: void LCDWriteFloat(float FloatNumbe
                                 r)
   462                           ;LCD.c: 93: {
   463                           	
   464  05A2                     _LCDWriteFloat:	
   465                           	opt stack 6
   466                           ; Regs used in _LCDWriteFloat: [wreg-fsr0h+stat
                                 us,2+status,0+pclath+cstack]
   467                           	line	95
   468                           ;LCD.c: 94: unsigned char c[6];
   469                           ;LCD.c: 95: unsigned char i = 0;
   470  05A2  1003               	clrc
   471                           	
   472  05A3  3000               	movlw	0
   473  05A4  1803               	btfsc	status,0
   474  05A5  3001               	movlw	1
   475  05A6  00A3               	movwf	(_LCDWriteFloat_i)
   476                           	line	97
   477                           ;LCD.c: 96: int n, Temp;
   478                           ;LCD.c: 97: if(FloatNumber < 0)
   479                           	
   480  05A7  3000               	movlw	0x0
   481  05A8  00B2               	movwf	(0+(?___ftge)+03h)
   482  05A9  3000               	movlw	0x0
   483  05AA  00B3               	movwf	(1+(?___ftge)+03h)
   484  05AB  3000               	movlw	0x0
   485  05AC  00B4               	movwf	(2+(?___ftge)+03h)
   486                           	
   487                           	
   488  05AD  0820               	movf	(_LCDWriteFloat_FloatNumber),w
   489  05AE  00AF               	movwf	(?___ftge)
   490  05AF  0821               	movf	(_LCDWriteFloat_FloatNumber+1),w
   491  05B0  00B0               	movwf	(?___ftge+1)
   492  05B1  0822               	movf	(_LCDWriteFloat_FloatNumber+2),w
   493  05B2  00B1               	movwf	(?___ftge+2)
   494  05B3  120A  118A  2140   	fcall	___ftge
              120A  118A         
   495  05B8  1803               	btfsc	status,0
   496  05B9  2DBB               	goto	u2251
   497  05BA  2DBC               	goto	u2250
   498  05BB                     u2251:
   499  05BB  2DD7               	goto	l30
   500  05BC                     u2250:
   501                           	line	99
   502                           ;LCD.c: 98: {
   503                           ;LCD.c: 99: LCDWriteData('-');
   504  05BC  302D               	movlw	(02Dh)
   505  05BD  120A  158A  27BE   	fcall	_LCDWriteData
              120A  118A         
   506                           	line	100
   507                           ;LCD.c: 100: FloatNumber = -(FloatNumber);
   508  05C2  1283               	bcf	status, 5	;RP0=0, select bank0
   509  05C3  1303               	bcf	status, 6	;RP1=0, select bank0
   510                           	
   511                           	
   512  05C4  0820               	movf	(_LCDWriteFloat_FloatNumber),w
   513  05C5  00B8               	movwf	(?___ftneg)
   514  05C6  0821               	movf	(_LCDWriteFloat_FloatNumber+1),w
   515  05C7  00B9               	movwf	(?___ftneg+1)
   516  05C8  0822               	movf	(_LCDWriteFloat_FloatNumber+2),w
   517  05C9  00BA               	movwf	(?___ftneg+2)
   518  05CA  120A  118A  2066   	fcall	___ftneg
              120A  118A         
   519  05CF  1283               	bcf	status, 5	;RP0=0, select bank0
   520  05D0  1303               	bcf	status, 6	;RP1=0, select bank0
   521                           	
   522  05D1  0838               	movf	(0+?___ftneg),w
   523  05D2  00A0               	movwf	(_LCDWriteFloat_FloatNumber)
   524  05D3  0839               	movf	(1+?___ftneg),w
   525  05D4  00A1               	movwf	(_LCDWriteFloat_FloatNumber+1)
   526  05D5  083A               	movf	(2+?___ftneg),w
   527  05D6  00A2               	movwf	(_LCDWriteFloat_FloatNumber+2)
   528                           	line	101
   529                           	
   530  05D7                     l30:	
   531                           	line	102
   532                           ;LCD.c: 101: }
   533                           ;LCD.c: 102: n = FloatNumber;
   534  05D7  1283               	bcf	status, 5	;RP0=0, select bank0
   535  05D8  1303               	bcf	status, 6	;RP1=0, select bank0
   536                           	
   537                           	
   538  05D9  0820               	movf	(_LCDWriteFloat_FloatNumber),w
   539  05DA  00AF               	movwf	(?___fttol)
   540  05DB  0821               	movf	(_LCDWriteFloat_FloatNumber+1),w
   541  05DC  00B0               	movwf	(?___fttol+1)
   542  05DD  0822               	movf	(_LCDWriteFloat_FloatNumber+2),w
   543  05DE  00B1               	movwf	(?___fttol+2)
   544  05DF  120A  118A  227D   	fcall	___fttol
              120A  118A         
   545  05E4  1283               	bcf	status, 5	;RP0=0, select bank0
   546  05E5  1303               	bcf	status, 6	;RP1=0, select bank0
   547                           	
   548  05E6  0830               	movf	(1+?___fttol),w
   549  05E7  01A7               	clrf	(_LCDWriteFloat_n+1)
   550  05E8  07A7               	addwf	(_LCDWriteFloat_n+1)
   551  05E9  082F               	movf	(0+?___fttol),w
   552  05EA  01A6               	clrf	(_LCDWriteFloat_n)
   553  05EB  07A6               	addwf	(_LCDWriteFloat_n)
   554                           
   555                           	line	103
   556                           ;LCD.c: 103: Temp = n;
   557                           	
   558                           	
   559  05EC  0827               	movf	(_LCDWriteFloat_n+1),w
   560  05ED  01A5               	clrf	(_LCDWriteFloat_Temp+1)
   561  05EE  07A5               	addwf	(_LCDWriteFloat_Temp+1)
   562  05EF  0826               	movf	(_LCDWriteFloat_n),w
   563  05F0  01A4               	clrf	(_LCDWriteFloat_Temp)
   564  05F1  07A4               	addwf	(_LCDWriteFloat_Temp)
   565                           
   566                           	line	104
   567                           ;LCD.c: 104: LCDWriteInteger(n);
   568                           	
   569                           	
   570  05F2  0827               	movf	(_LCDWriteFloat_n+1),w
   571  05F3  01B0               	clrf	(?_LCDWriteInteger+1)
   572  05F4  07B0               	addwf	(?_LCDWriteInteger+1)
   573  05F5  0826               	movf	(_LCDWriteFloat_n),w
   574  05F6  01AF               	clrf	(?_LCDWriteInteger)
   575  05F7  07AF               	addwf	(?_LCDWriteInteger)
   576                           
   577  05F8  120A  118A  2364   	fcall	_LCDWriteInteger
              120A  118A         
   578                           	line	105
   579                           ;LCD.c: 105: LCDWriteData('.');
   580  05FD  302E               	movlw	(02Eh)
   581  05FE  120A  158A  27BE   	fcall	_LCDWriteData
              120A  118A         
   582                           	line	106
   583                           ;LCD.c: 106: FloatNumber = ((FloatNumber - n) +
                                  1) * 1000;
   584  0603  1283               	bcf	status, 5	;RP0=0, select bank0
   585  0604  1303               	bcf	status, 6	;RP1=0, select bank0
   586                           	
   587                           	
   588  0605  0827               	movf	(_LCDWriteFloat_n+1),w
   589  0606  01B0               	clrf	(?___awtoft+1)
   590  0607  07B0               	addwf	(?___awtoft+1)
   591  0608  0826               	movf	(_LCDWriteFloat_n),w
   592  0609  01AF               	clrf	(?___awtoft)
   593  060A  07AF               	addwf	(?___awtoft)
   594                           
   595  060B  120A  118A  2178   	fcall	___awtoft
              120A  118A         
   596  0610  1283               	bcf	status, 5	;RP0=0, select bank0
   597  0611  1303               	bcf	status, 6	;RP1=0, select bank0
   598                           	
   599  0612  082F               	movf	(0+?___awtoft),w
   600  0613  00B2               	movwf	(0+(?___ftsub)+03h)
   601  0614  0830               	movf	(1+?___awtoft),w
   602  0615  00B3               	movwf	(1+(?___ftsub)+03h)
   603  0616  0831               	movf	(2+?___awtoft),w
   604  0617  00B4               	movwf	(2+(?___ftsub)+03h)
   605                           	
   606                           	
   607  0618  0820               	movf	(_LCDWriteFloat_FloatNumber),w
   608  0619  00AF               	movwf	(?___ftsub)
   609  061A  0821               	movf	(_LCDWriteFloat_FloatNumber+1),w
   610  061B  00B0               	movwf	(?___ftsub+1)
   611  061C  0822               	movf	(_LCDWriteFloat_FloatNumber+2),w
   612  061D  00B1               	movwf	(?___ftsub+2)
   613  061E  120A  118A  2071   	fcall	___ftsub
              120A  118A         
   614  0623  1283               	bcf	status, 5	;RP0=0, select bank0
   615  0624  1303               	bcf	status, 6	;RP1=0, select bank0
   616                           	
   617  0625  082F               	movf	(0+?___ftsub),w
   618  0626  00B5               	movwf	(?___ftadd)
   619  0627  0830               	movf	(1+?___ftsub),w
   620  0628  00B6               	movwf	(?___ftadd+1)
   621  0629  0831               	movf	(2+?___ftsub),w
   622  062A  00B7               	movwf	(?___ftadd+2)
   623                           	
   624  062B  3000               	movlw	0x0
   625  062C  00B8               	movwf	(0+(?___ftadd)+03h)
   626  062D  3080               	movlw	0x80
   627  062E  00B9               	movwf	(1+(?___ftadd)+03h)
   628  062F  303F               	movlw	0x3f
   629  0630  00BA               	movwf	(2+(?___ftadd)+03h)
   630  0631  120A  118A  2484   	fcall	___ftadd
              120A  118A         
   631  0636  1283               	bcf	status, 5	;RP0=0, select bank0
   632  0637  1303               	bcf	status, 6	;RP1=0, select bank0
   633                           	
   634  0638  0835               	movf	(0+?___ftadd),w
   635  0639  00AF               	movwf	(?___ftmul)
   636  063A  0836               	movf	(1+?___ftadd),w
   637  063B  00B0               	movwf	(?___ftmul+1)
   638  063C  0837               	movf	(2+?___ftadd),w
   639  063D  00B1               	movwf	(?___ftmul+2)
   640                           	
   641  063E  3000               	movlw	0x0
   642  063F  00B2               	movwf	(0+(?___ftmul)+03h)
   643  0640  307A               	movlw	0x7a
   644  0641  00B3               	movwf	(1+(?___ftmul)+03h)
   645  0642  3044               	movlw	0x44
   646  0643  00B4               	movwf	(2+(?___ftmul)+03h)
   647  0644  120A  118A  23E1   	fcall	___ftmul
              120A  118A         
   648  0649  1283               	bcf	status, 5	;RP0=0, select bank0
   649  064A  1303               	bcf	status, 6	;RP1=0, select bank0
   650                           	
   651  064B  082F               	movf	(0+?___ftmul),w
   652  064C  00A0               	movwf	(_LCDWriteFloat_FloatNumber)
   653  064D  0830               	movf	(1+?___ftmul),w
   654  064E  00A1               	movwf	(_LCDWriteFloat_FloatNumber+1)
   655  064F  0831               	movf	(2+?___ftmul),w
   656  0650  00A2               	movwf	(_LCDWriteFloat_FloatNumber+2)
   657                           	line	107
   658                           ;LCD.c: 107: n = FloatNumber;
   659                           	
   660                           	
   661  0651  0820               	movf	(_LCDWriteFloat_FloatNumber),w
   662  0652  00AF               	movwf	(?___fttol)
   663  0653  0821               	movf	(_LCDWriteFloat_FloatNumber+1),w
   664  0654  00B0               	movwf	(?___fttol+1)
   665  0655  0822               	movf	(_LCDWriteFloat_FloatNumber+2),w
   666  0656  00B1               	movwf	(?___fttol+2)
   667  0657  120A  118A  227D   	fcall	___fttol
              120A  118A         
   668  065C  1283               	bcf	status, 5	;RP0=0, select bank0
   669  065D  1303               	bcf	status, 6	;RP1=0, select bank0
   670                           	
   671  065E  0830               	movf	(1+?___fttol),w
   672  065F  01A7               	clrf	(_LCDWriteFloat_n+1)
   673  0660  07A7               	addwf	(_LCDWriteFloat_n+1)
   674  0661  082F               	movf	(0+?___fttol),w
   675  0662  01A6               	clrf	(_LCDWriteFloat_n)
   676  0663  07A6               	addwf	(_LCDWriteFloat_n)
   677                           
   678                           	line	109
   679                           ;LCD.c: 109: while(n > 0)
   680  0664  2E9A               	goto	l31
   681                           	
   682  0665                     l32:	
   683                           	line	111
   684                           ;LCD.c: 110: {
   685                           ;LCD.c: 111: c[i++] = (n % 10) + 48;
   686  0665  300A               	movlw	low(0Ah)
   687                           	
   688  0666  00BB               	movwf	(0+(?___awmod)+02h)
   689  0667  3000               	movlw	high(0Ah)
   690  0668  00BC               	movwf	((0+(?___awmod)+02h))+1
   691                           	
   692                           	
   693  0669  0827               	movf	(_LCDWriteFloat_n+1),w
   694  066A  01BA               	clrf	(?___awmod+1)
   695  066B  07BA               	addwf	(?___awmod+1)
   696  066C  0826               	movf	(_LCDWriteFloat_n),w
   697  066D  01B9               	clrf	(?___awmod)
   698  066E  07B9               	addwf	(?___awmod)
   699                           
   700  066F  120A  118A  2222   	fcall	___awmod
              120A  118A         
   701  0674  1283               	bcf	status, 5	;RP0=0, select bank0
   702  0675  1303               	bcf	status, 6	;RP1=0, select bank0
   703  0676  0839               	movf	(0+?___awmod),w
   704  0677  3E30               	addlw	030h
   705  0678  00AE               	movwf	(??_LCDWriteFloat+11+0)
   706                           	
   707  0679  0823               	movf	(_LCDWriteFloat_i),w
   708  067A  3E28               	addlw	(_LCDWriteFloat_c)&0ffh
   709  067B  1383               	bcf	status, 7	;select IRP bank0
   710                           	
   711  067C  0084               	movwf	fsr0
   712  067D  082E               	movf	(??_LCDWriteFloat+11+0),w
   713  067E  0080               	movwf	indf
   714  067F  3001               	movlw	(01h)
   715  0680  00AE               	movwf	(??_LCDWriteFloat+11+0)
   716                           	
   717  0681  082E               	movf	(??_LCDWriteFloat+11+0),w
   718  0682  07A3               	addwf	(_LCDWriteFloat_i),f
   719                           	line	112
   720                           ;LCD.c: 112: n /= 10;
   721  0683  300A               	movlw	low(0Ah)
   722                           	
   723  0684  00BB               	movwf	(0+(?___awdiv)+02h)
   724  0685  3000               	movlw	high(0Ah)
   725  0686  00BC               	movwf	((0+(?___awdiv)+02h))+1
   726                           	
   727                           	
   728  0687  0827               	movf	(_LCDWriteFloat_n+1),w
   729  0688  01BA               	clrf	(?___awdiv+1)
   730  0689  07BA               	addwf	(?___awdiv+1)
   731  068A  0826               	movf	(_LCDWriteFloat_n),w
   732  068B  01B9               	clrf	(?___awdiv)
   733  068C  07B9               	addwf	(?___awdiv)
   734                           
   735  068D  120A  118A  22F0   	fcall	___awdiv
              120A  118A         
   736  0692  1283               	bcf	status, 5	;RP0=0, select bank0
   737  0693  1303               	bcf	status, 6	;RP1=0, select bank0
   738                           	
   739  0694  083A               	movf	(1+?___awdiv),w
   740  0695  01A7               	clrf	(_LCDWriteFloat_n+1)
   741  0696  07A7               	addwf	(_LCDWriteFloat_n+1)
   742  0697  0839               	movf	(0+?___awdiv),w
   743  0698  01A6               	clrf	(_LCDWriteFloat_n)
   744  0699  07A6               	addwf	(_LCDWriteFloat_n)
   745                           
   746                           	line	113
   747                           	
   748  069A                     l31:	
   749                           	line	109
   750                           	
   751  069A  0827               	movf	(_LCDWriteFloat_n+1),w
   752  069B  3A80               	xorlw	80h
   753  069C  00AE               	movwf	(??_LCDWriteFloat+11+0)
   754  069D  3080               	movlw	(high(01h))^80h
   755  069E  022E               	subwf	(??_LCDWriteFloat+11+0),w
   756  069F  1D03               	skipz
   757  06A0  2EA3               	goto	u22610
   758  06A1                     u22615:
   759  06A1  3001               	movlw	low(01h)
   760  06A2  0226               	subwf	(_LCDWriteFloat_n),w
   761  06A3                     u22610:
   762                           
   763  06A3  1803               	skipnc
   764  06A4  2EA6               	goto	u2261
   765  06A5  2EA7               	goto	u2260
   766  06A6                     u2261:
   767  06A6  2E65               	goto	l32
   768  06A7                     u2260:
   769                           	
   770  06A7                     l33:	
   771                           	line	114
   772                           ;LCD.c: 113: }
   773                           ;LCD.c: 114: i -= 1;
   774                           	
   775                           	
   776  06A7  3001               	movlw	low(01h)
   777  06A8  02A3               	subwf	(_LCDWriteFloat_i),f
   778                           	line	115
   779                           ;LCD.c: 115: while(i-- > 1)
   780  06A9  2EB4               	goto	l34
   781                           	
   782  06AA                     l35:	
   783                           	line	116
   784                           ;LCD.c: 116: LCDWriteData(c[i]);
   785                           	
   786  06AA  0823               	movf	(_LCDWriteFloat_i),w
   787  06AB  3E28               	addlw	(_LCDWriteFloat_c)&0ffh
   788  06AC  1383               	bcf	status, 7	;select IRP bank0
   789                           	
   790  06AD  0084               	movwf	fsr0
   791  06AE  0800               	movf	indf,w
   792  06AF  120A  158A  27BE   	fcall	_LCDWriteData
              120A  118A         
   793                           	
   794  06B4                     l34:	
   795                           	line	115
   796                           	
   797  06B4  1283               	bcf	status, 5	;RP0=0, select bank0
   798  06B5  1303               	bcf	status, 6	;RP1=0, select bank0
   799                           	
   800  06B6  3001               	movlw	low(01h)
   801  06B7  02A3               	subwf	(_LCDWriteFloat_i),f
   802  06B8  3001               	movlw	(01h)
   803  06B9  0223               	subwf	((_LCDWriteFloat_i))&07fh,w
   804  06BA  1803               	skipnc
   805  06BB  2EBD               	goto	u2271
   806  06BC  2EBE               	goto	u2270
   807  06BD                     u2271:
   808  06BD  2EAA               	goto	l35
   809  06BE                     u2270:
   810                           	
   811  06BE                     l36:	
   812                           	line	118
   813                           ;LCD.c: 118: if(Temp < 10)
   814                           	
   815  06BE  0825               	movf	(_LCDWriteFloat_Temp+1),w
   816  06BF  3A80               	xorlw	80h
   817  06C0  00AE               	movwf	(??_LCDWriteFloat+11+0)
   818  06C1  3080               	movlw	(high(0Ah))^80h
   819  06C2  022E               	subwf	(??_LCDWriteFloat+11+0),w
   820  06C3  1D03               	skipz
   821  06C4  2EC7               	goto	u22810
   822  06C5                     u22815:
   823  06C5  300A               	movlw	low(0Ah)
   824  06C6  0224               	subwf	(_LCDWriteFloat_Temp),w
   825  06C7                     u22810:
   826                           
   827  06C7  1803               	skipnc
   828  06C8  2ECA               	goto	u2281
   829  06C9  2ECB               	goto	u2280
   830  06CA                     u2281:
   831  06CA  2ED7               	goto	l37
   832  06CB                     u2280:
   833                           	line	120
   834                           ;LCD.c: 119: {
   835                           ;LCD.c: 120: LCDWriteCommand(0xcc);
   836  06CB  30CC               	movlw	(0CCh)
   837  06CC  120A  158A  27C9   	fcall	_LCDWriteCommand
              120A  118A         
   838                           	line	121
   839                           ;LCD.c: 121: LCDWriteString("  ");
   840  06D1  3012               	movlw	((STR_2-__stringbase))&0ffh
   841  06D2  120A  118A  208E   	fcall	_LCDWriteString
              120A  118A         
   842                           	line	123
   843                           	
   844  06D7                     l37:	
   845                           	line	124
   846                           ;LCD.c: 123: }
   847                           ;LCD.c: 124: if(Temp >= 10 && Temp < 100)
   848  06D7  1283               	bcf	status, 5	;RP0=0, select bank0
   849  06D8  1303               	bcf	status, 6	;RP1=0, select bank0
   850                           	
   851  06D9  0825               	movf	(_LCDWriteFloat_Temp+1),w
   852  06DA  3A80               	xorlw	80h
   853  06DB  00AE               	movwf	(??_LCDWriteFloat+11+0)
   854  06DC  3080               	movlw	(high(0Ah))^80h
   855  06DD  022E               	subwf	(??_LCDWriteFloat+11+0),w
   856  06DE  1D03               	skipz
   857  06DF  2EE2               	goto	u22910
   858  06E0                     u22915:
   859  06E0  300A               	movlw	low(0Ah)
   860  06E1  0224               	subwf	(_LCDWriteFloat_Temp),w
   861  06E2                     u22910:
   862                           
   863  06E2  1C03               	skipc
   864  06E3  2EE5               	goto	u2291
   865  06E4  2EE6               	goto	u2290
   866  06E5                     u2291:
   867  06E5  2EFF               	goto	l38
   868  06E6                     u2290:
   869                           	
   870  06E6  0825               	movf	(_LCDWriteFloat_Temp+1),w
   871  06E7  3A80               	xorlw	80h
   872  06E8  00AE               	movwf	(??_LCDWriteFloat+11+0)
   873  06E9  3080               	movlw	(high(064h))^80h
   874  06EA  022E               	subwf	(??_LCDWriteFloat+11+0),w
   875  06EB  1D03               	skipz
   876  06EC  2EEF               	goto	u23010
   877  06ED                     u23015:
   878  06ED  3064               	movlw	low(064h)
   879  06EE  0224               	subwf	(_LCDWriteFloat_Temp),w
   880  06EF                     u23010:
   881                           
   882  06EF  1803               	skipnc
   883  06F0  2EF2               	goto	u2301
   884  06F1  2EF3               	goto	u2300
   885  06F2                     u2301:
   886  06F2  2EFF               	goto	l38
   887  06F3                     u2300:
   888                           	line	126
   889                           ;LCD.c: 125: {
   890                           ;LCD.c: 126: LCDWriteCommand(0xcd);
   891  06F3  30CD               	movlw	(0CDh)
   892  06F4  120A  158A  27C9   	fcall	_LCDWriteCommand
              120A  118A         
   893                           	line	127
   894                           ;LCD.c: 127: LCDWriteString(" ");
   895  06F9  3013               	movlw	((STR_3-__stringbase))&0ffh
   896  06FA  120A  118A  208E   	fcall	_LCDWriteString
              120A  118A         
   897                           	line	129
   898                           	
   899  06FF                     l38:	
   900                           	line	130
   901                           ;LCD.c: 129: }
   902                           ;LCD.c: 130: }
   903  06FF                     l29:	
   904  06FF  0008               	return
   905                           ; =============== function _LCDWriteFloat ends 
                                 ===============
   906                           
   907                           GLOBAL __end_of_LCDWriteFloat
   908  0700                     	__end_of_LCDWriteFloat:
   909                           	FNSIZE	_LCDWriteFloat,12,3
   910                           	signat	_LCDWriteFloat,4216
   911                           	global	_MainSystemInitialize
   912                           	global	??_MainSystemInitialize
   913                           	global	?_MainSystemInitialize
   914                           
   915                           ; *************** function _MainSystemInitializ
                                 e ***************
   916                           ; Defined at:
   917                           ;		line 24 in file "C:\Users\hardik\Desktop\LCD
                                  general files (with delay)\main.c"
   918                           ; Parameters:
   919                           ;		None
   920                           ; Auto variables:
   921                           ;		None
   922                           ; Return value:
   923                           ;		type: void 
   924                           ;		size: 0
   925                           ; Registers used:
   926                           ;		wreg, status,2, status,0, pclath, cstack
   927                           ; Tracked objects:
   928                           ;		On entry : BFF/0
   929                           ;		On exit  : 0/0
   930                           ;		Unchanged: 0/0
   931                           ; Data sizes:
   932                           ;		Autos:    0
   933                           ;		Params:   0
   934                           ;		Temp:     0
   935                           ;		Total:    0
   936                           ; This function calls:
   937                           ;		_LCDInitialize
   938                           ; This function is called by:
   939                           ;		_main
   940                           ; This function uses a non-reentrant model
   941                           ; 
   942                           	psect	text163,local,class=CODE,delta=2
   943                           	file	"C:\Users\hardik\Desktop\LCD general file
                                 s (with delay)\main.c"
   944                           	line	24
   945                           ;main.c: 23: static void MainSystemInitialize(v
                                 oid)
   946                           ;main.c: 24: {
   947                           	
   948  0060                     _MainSystemInitialize:	
   949                           	opt stack 6
   950                           ; Regs used in _MainSystemInitialize: [wreg+sta
                                 tus,2+status,0+pclath+cstack]
   951                           	line	25
   952                           ;main.c: 25: LCDInitialize();
   953  0060  120A  118A  20B1   	fcall	_LCDInitialize
              120A  118A         
   954                           	line	26
   955                           ;main.c: 26: }
   956  0065                     l52:	
   957  0065  0008               	return
   958                           ; =============== function _MainSystemInitializ
                                 e ends ===============
   959                           
   960                           GLOBAL __end_of_MainSystemInitialize
   961  0066                     	__end_of_MainSystemInitialize:
   962                           	FNSIZE	_MainSystemInitialize,0,0
   963                           	signat	_MainSystemInitialize,88
   964                           	global	_LCDWriteString
   965                           	global	??_LCDWriteString
   966                           	global	?_LCDWriteString
   967                           
   968                           ; *************** function _LCDWriteString ****
                                 ***********
   969                           ; Defined at:
   970                           ;		line 25 in file "C:\Users\hardik\Desktop\LCD
                                  general files (with delay)\LCD.c"
   971                           ; Parameters:
   972                           ;		lcd_string  	reg:   wr	type: PTR const unsig
                                 ned char ; Largest target is 17
   973                           ;		 -> STR_3(2), STR_2(3), STR_1(17), 
   974                           ; Auto variables:
   975                           ;		lcd_string  	       	type: PTR const unsigne
                                 d char ; Largest target is 17
   976                           ;		 -> STR_3(2), STR_2(3), STR_1(17), 
   977                           ; Return value:
   978                           ;		type: void 
   979                           ;		size: 0
   980                           ; Registers used:
   981                           ;		wreg, status,2, status,0, pclath, cstack
   982                           ; Tracked objects:
   983                           ;		On entry : 0/0
   984                           ;		On exit  : 0/0
   985                           ;		Unchanged: 0/0
   986                           ; Data sizes:
   987                           ;		Autos:    1
   988                           ;		Params:   0
   989                           ;		Temp:     1
   990                           ;		Total:    2
   991                           ; This function calls:
   992                           ;		_LCDWriteData
   993                           ; This function is called by:
   994                           ;		_LCDDisplayInitializing
   995                           ;		_LCDWriteFloat
   996                           ; This function uses a non-reentrant model
   997                           ; 
   998                           	psect	text164,local,class=CODE,delta=2
   999                           	file	"C:\Users\hardik\Desktop\LCD general file
                                 s (with delay)\LCD.c"
  1000                           	line	25
  1001                           ;LCD.c: 24: void LCDWriteString(const char *lcd
                                 _string)
  1002                           ;LCD.c: 25: {
  1003                           	
  1004  008E                     _LCDWriteString:	
  1005                           	opt stack 5
  1006                           ; Regs used in _LCDWriteString: [wreg+status,2+
                                 status,0+pclath+cstack]
  1007                           ;_LCDWriteString_lcd_string stored from wreg
  1008  008E  1283               	bcf	status, 5	;RP0=0, select bank0
  1009  008F  1303               	bcf	status, 6	;RP1=0, select bank0
  1010                           	
  1011  0090  00AF               	movwf	(_LCDWriteString_lcd_string)
  1012                           	line	26
  1013                           ;LCD.c: 26: while(*lcd_string)
  1014  0091  28A3               	goto	l12
  1015                           	
  1016  0092                     l13:	
  1017                           	line	28
  1018                           ;LCD.c: 27: {
  1019                           ;LCD.c: 28: LCDWriteData(*lcd_string++);
  1020                           	
  1021  0092  082F               	movf	(_LCDWriteString_lcd_string),w
  1022                           	FNCALL _LCDWriteString,stringtab
  1023  0093  120A  118A  2709   	fcall	stringdir
              120A  118A         
  1024  0098  120A  158A  27BE   	fcall	_LCDWriteData
              120A  118A         
  1025  009D  3001               	movlw	(01h)
  1026  009E  1283               	bcf	status, 5	;RP0=0, select bank0
  1027  009F  1303               	bcf	status, 6	;RP1=0, select bank0
  1028  00A0  00B0               	movwf	(??_LCDWriteString+1+0)
  1029                           	
  1030  00A1  0830               	movf	(??_LCDWriteString+1+0),w
  1031  00A2  07AF               	addwf	(_LCDWriteString_lcd_string),f
  1032                           	line	29
  1033                           	
  1034  00A3                     l12:	
  1035                           	line	26
  1036  00A3  1283               	bcf	status, 5	;RP0=0, select bank0
  1037  00A4  1303               	bcf	status, 6	;RP1=0, select bank0
  1038                           	
  1039  00A5  082F               	movf	(_LCDWriteString_lcd_string),w
  1040                           	FNCALL _LCDWriteString,stringtab
  1041  00A6  120A  118A  2709   	fcall	stringdir
              120A  118A         
  1042  00AB  3800               	iorlw	0
  1043  00AC  1D03               	skipz
  1044  00AD  28AF               	goto	u2321
  1045  00AE  28B0               	goto	u2320
  1046  00AF                     u2321:
  1047  00AF  2892               	goto	l13
  1048  00B0                     u2320:
  1049                           	
  1050  00B0                     l14:	
  1051                           	line	30
  1052                           ;LCD.c: 29: }
  1053                           ;LCD.c: 30: }
  1054  00B0                     l11:	
  1055  00B0  0008               	return
  1056                           ; =============== function _LCDWriteString ends
                                  ===============
  1057                           
  1058                           GLOBAL __end_of_LCDWriteString
  1059  00B1                     	__end_of_LCDWriteString:
  1060                           	FNSIZE	_LCDWriteString,2,0
  1061                           	signat	_LCDWriteString,4216
  1062                           	global	___ftge
  1063                           	global	??___ftge
  1064                           	global	?___ftge
  1065                           
  1066                           ; *************** function ___ftge ************
                                 ***
  1067                           ; Defined at:
  1068                           ;		line 5 in file "C:\Program Files (x86)\HI-TE
                                 CH Software\PICC\PRO\9.65\sources\ftge.c"
  1069                           ; Parameters:
  1070                           ;		ff1         	offs:   0	type: float 
  1071                           ;		ff2         	offs:   3	type: float 
  1072                           ; Auto variables:
  1073                           ;		None
  1074                           ; Return value:
  1075                           ;		type: bit 
  1076                           ;		size: 0
  1077                           ; Registers used:
  1078                           ;		wreg, status,2, status,0
  1079                           ; Tracked objects:
  1080                           ;		On entry : 300/0
  1081                           ;		On exit  : 0/0
  1082                           ;		Unchanged: 0/0
  1083                           ; Data sizes:
  1084                           ;		Autos:    0
  1085                           ;		Params:   6
  1086                           ;		Temp:     0
  1087                           ;		Total:    6
  1088                           ; This function calls:
  1089                           ;		Nothing
  1090                           ; This function is called by:
  1091                           ;		_LCDWriteFloat
  1092                           ; This function uses a non-reentrant model
  1093                           ; 
  1094                           	psect	text165,local,class=CODE,delta=2
  1095                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\ftge.c"
  1096                           	line	5
  1097                           	
  1098  0140                     ___ftge:	
  1099                           	opt stack 5
  1100                           ; Regs used in ___ftge: [wreg+status,2+status,0
                                 ]
  1101                           	line	6
  1102                           	
  1103  0140  1FB1               	btfss	(___ftge_ff1+2),(23)&7
  1104  0141  2943               	goto	u1851
  1105  0142  2944               	goto	u1850
  1106  0143                     u1851:
  1107  0143  2951               	goto	l264
  1108  0144                     u1850:
  1109                           	line	7
  1110                           	
  1111  0144  082F               	movf	(___ftge_ff1),w
  1112  0145  3C00               	sublw	low(0800000h)
  1113                           	
  1114  0146  00AF               	movwf	(___ftge_ff1)
  1115  0147  0830               	movf	(___ftge_ff1+1),w
  1116  0148  1C03               	skipc
  1117  0149  0A30               	incf	(___ftge_ff1+1),w
  1118  014A  3C00               	sublw	high(0800000h)
  1119  014B  00B0               	movwf	1+(___ftge_ff1)
  1120  014C  0831               	movf	(___ftge_ff1+2),w
  1121  014D  1C03               	skipc
  1122  014E  0A31               	incf	(___ftge_ff1+2),w
  1123  014F  3C80               	sublw	low highword(0800000h)
  1124  0150  00B1               	movwf	2+(___ftge_ff1)
  1125                           	
  1126  0151                     l264:	
  1127                           	line	8
  1128                           	
  1129  0151  1FB4               	btfss	(___ftge_ff2+2),(23)&7
  1130  0152  2954               	goto	u1861
  1131  0153  2955               	goto	u1860
  1132  0154                     u1861:
  1133  0154  2962               	goto	l265
  1134  0155                     u1860:
  1135                           	line	9
  1136                           	
  1137  0155  0832               	movf	(___ftge_ff2),w
  1138  0156  3C00               	sublw	low(0800000h)
  1139                           	
  1140  0157  00B2               	movwf	(___ftge_ff2)
  1141  0158  0833               	movf	(___ftge_ff2+1),w
  1142  0159  1C03               	skipc
  1143  015A  0A33               	incf	(___ftge_ff2+1),w
  1144  015B  3C00               	sublw	high(0800000h)
  1145  015C  00B3               	movwf	1+(___ftge_ff2)
  1146  015D  0834               	movf	(___ftge_ff2+2),w
  1147  015E  1C03               	skipc
  1148  015F  0A34               	incf	(___ftge_ff2+2),w
  1149  0160  3C80               	sublw	low highword(0800000h)
  1150  0161  00B4               	movwf	2+(___ftge_ff2)
  1151                           	
  1152  0162                     l265:	
  1153                           	line	10
  1154                           	
  1155  0162  3080               	movlw	080h
  1156  0163  06B1               	xorwf	(___ftge_ff1+2),f
  1157                           	line	11
  1158                           	
  1159  0164  3080               	movlw	080h
  1160  0165  06B4               	xorwf	(___ftge_ff2+2),f
  1161                           	line	12
  1162                           	
  1163                           	
  1164  0166  0834               	movf	(___ftge_ff2+2),w
  1165  0167  0231               	subwf	(___ftge_ff1+2),w
  1166  0168  1D03               	skipz
  1167  0169  2970               	goto	u1875
  1168  016A  0833               	movf	(___ftge_ff2+1),w
  1169  016B  0230               	subwf	(___ftge_ff1+1),w
  1170  016C  1D03               	skipz
  1171  016D  2970               	goto	u1875
  1172  016E  0832               	movf	(___ftge_ff2),w
  1173  016F  022F               	subwf	(___ftge_ff1),w
  1174  0170                     u1875:
  1175  0170  1803               	skipnc
  1176  0171  2973               	goto	u1887
  1177  0172  2975               	goto	u1888
  1178  0173                     u1887:
  1179  0173  1403               	bsf	status,0
  1180  0174  2976               	goto	u1889
  1181  0175                     u1888:
  1182  0175  1003               	bcf	status,0
  1183  0176                     u1889:
  1184  0176  2977               	goto	l263
  1185                           	line	13
  1186  0177                     l263:	
  1187  0177  0008               	return
  1188                           ; =============== function ___ftge ends =======
                                 ========
  1189                           
  1190                           GLOBAL __end_of___ftge
  1191  0178                     	__end_of___ftge:
  1192                           	FNSIZE	___ftge,0,6
  1193                           	signat	___ftge,8312
  1194                           	global	___fttol
  1195                           	global	??___fttol
  1196                           	global	?___fttol
  1197                           
  1198                           ; *************** function ___fttol ***********
                                 ****
  1199                           ; Defined at:
  1200                           ;		line 16 in file "C:\Program Files (x86)\HI-T
                                 ECH Software\PICC\PRO\9.65\sources\fttol.c"
  1201                           ; Parameters:
  1202                           ;		f1          	offs:   0	type: float 
  1203                           ; Auto variables:
  1204                           ;		sign1       	       	type: unsigned char 
  1205                           ;		exp1        	       	type: unsigned char 
  1206                           ;		lval        	       	type: unsigned long 
  1207                           ; Return value:
  1208                           ;		type: long 
  1209                           ;		size: 4
  1210                           ; Registers used:
  1211                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
                                 th, cstack
  1212                           ; Tracked objects:
  1213                           ;		On entry : 300/0
  1214                           ;		On exit  : 0/0
  1215                           ;		Unchanged: 0/0
  1216                           ; Data sizes:
  1217                           ;		Autos:    6
  1218                           ;		Params:   4
  1219                           ;		Temp:     1
  1220                           ;		Total:   11
  1221                           ; This function calls:
  1222                           ;		___ftunpack
  1223                           ; This function is called by:
  1224                           ;		_LCDWriteFloat
  1225                           ; This function uses a non-reentrant model
  1226                           ; 
  1227                           	psect	text166,local,class=CODE,delta=2
  1228                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\fttol.c"
  1229                           	line	16
  1230                           	
  1231  027D                     ___fttol:	
  1232                           	opt stack 5
  1233                           ; Regs used in ___fttol: [wreg-fsr0h+status,2+s
                                 tatus,0+pclath+cstack]
  1234                           	line	20
  1235                           	
  1236  027D  3034               	movlw	((___fttol_exp1))&0ffh
  1237                           	
  1238  027E  00C1               	movwf	(?___ftunpack)
  1239                           	
  1240  027F  302F               	movlw	((___fttol_f1))&0ffh
  1241  0280  120A  118A  21C8   	fcall	___ftunpack
              120A  118A         
  1242  0285  1283               	bcf	status, 5	;RP0=0, select bank0
  1243  0286  1303               	bcf	status, 6	;RP1=0, select bank0
  1244                           	
  1245  0287  00B3               	movwf	(___fttol_sign1)
  1246                           	line	21
  1247                           	
  1248  0288  082F               	movf	(___fttol_f1),w
  1249                           	
  1250  0289  00B5               	movwf	(___fttol_lval)
  1251  028A  0830               	movf	(___fttol_f1+1),w
  1252  028B  00B6               	movwf	((___fttol_lval))+1
  1253                           	
  1254  028C  0831               	movf	(___fttol_f1+2),w
  1255  028D  00B7               	movwf	((___fttol_lval))+2
  1256                           	
  1257  028E  01B8               	clrf	3+(___fttol_lval)
  1258                           	line	22
  1259                           	
  1260                           	
  1261  028F  308E               	movlw	low(08Eh)
  1262  0290  02B4               	subwf	(___fttol_exp1),f
  1263                           	line	23
  1264                           	
  1265  0291  1FB4               	btfss	(___fttol_exp1),7
  1266  0292  2A94               	goto	u1631
  1267  0293  2A95               	goto	u1630
  1268  0294                     u1631:
  1269  0294  2AB7               	goto	l195
  1270  0295                     u1630:
  1271                           	line	24
  1272                           	
  1273  0295  0834               	movf	(___fttol_exp1),w
  1274  0296  3A80               	xorlw	80h
  1275  0297  3E8F               	addlw	-((-15)^80h)
  1276  0298  1803               	skipnc
  1277  0299  2A9B               	goto	u1641
  1278  029A  2A9C               	goto	u1640
  1279  029B                     u1641:
  1280  029B  2AA5               	goto	l199
  1281  029C                     u1640:
  1282                           	line	25
  1283                           	
  1284  029C  3000               	movlw	0
  1285  029D  00B2               	movwf	(?___fttol+3)
  1286  029E  3000               	movlw	0
  1287  029F  00B1               	movwf	(?___fttol+2)
  1288  02A0  3000               	movlw	0
  1289  02A1  00B0               	movwf	(?___fttol+1)
  1290  02A2  3000               	movlw	0
  1291  02A3  00AF               	movwf	(?___fttol)
  1292                           
  1293  02A4  2AEF               	goto	l194
  1294                           	line	26
  1295                           	
  1296  02A5                     l199:	
  1297                           	line	27
  1298                           	
  1299  02A5  3001               	movlw	01h
  1300  02A6                     u1655:
  1301  02A6  1003               	clrc
  1302  02A7  0CB8               	rrf	(___fttol_lval+3),f
  1303  02A8  0CB7               	rrf	(___fttol_lval+2),f
  1304  02A9  0CB6               	rrf	(___fttol_lval+1),f
  1305  02AA  0CB5               	rrf	(___fttol_lval),f
  1306  02AB  3EFF               	addlw	-1
  1307  02AC  1D03               	skipz
  1308  02AD  2AA6               	goto	u1655
  1309                           
  1310                           	line	28
  1311  02AE  3001               	movlw	(01h)
  1312  02AF  00B9               	movwf	(??___fttol+6+0)
  1313                           	
  1314  02B0  0839               	movf	(??___fttol+6+0),w
  1315  02B1  07B4               	addwf	(___fttol_exp1),f
  1316  02B2  1D03               	btfss	status,2
  1317  02B3  2AB5               	goto	u1661
  1318  02B4  2AB6               	goto	u1660
  1319  02B5                     u1661:
  1320  02B5  2AA5               	goto	l199
  1321  02B6                     u1660:
  1322                           	
  1323  02B6                     l198:	
  1324                           	line	29
  1325  02B6  2AD7               	goto	l200
  1326                           	
  1327  02B7                     l195:	
  1328                           	line	30
  1329  02B7  3020               	movlw	(020h)
  1330                           	
  1331  02B8  0234               	subwf	(___fttol_exp1),w
  1332  02B9  1C03               	skipc
  1333  02BA  2ABC               	goto	u1671
  1334  02BB  2ABD               	goto	u1670
  1335  02BC                     u1671:
  1336  02BC  2AC6               	goto	l201
  1337  02BD                     u1670:
  1338                           	line	31
  1339                           	
  1340  02BD  3000               	movlw	0
  1341  02BE  00B2               	movwf	(?___fttol+3)
  1342  02BF  3000               	movlw	0
  1343  02C0  00B1               	movwf	(?___fttol+2)
  1344  02C1  3000               	movlw	0
  1345  02C2  00B0               	movwf	(?___fttol+1)
  1346  02C3  3000               	movlw	0
  1347  02C4  00AF               	movwf	(?___fttol)
  1348                           
  1349  02C5  2AEF               	goto	l194
  1350                           	
  1351  02C6                     l201:	
  1352                           	line	32
  1353  02C6  2AD2               	goto	l202
  1354                           	
  1355  02C7                     l203:	
  1356                           	line	33
  1357                           	
  1358  02C7  3001               	movlw	01h
  1359  02C8  00B9               	movwf	(??___fttol+6+0)
  1360  02C9                     u1685:
  1361  02C9  1003               	clrc
  1362  02CA  0DB5               	rlf	(___fttol_lval),f
  1363  02CB  0DB6               	rlf	(___fttol_lval+1),f
  1364  02CC  0DB7               	rlf	(___fttol_lval+2),f
  1365  02CD  0DB8               	rlf	(___fttol_lval+3),f
  1366  02CE  0BB9               	decfsz	(??___fttol+6+0)
  1367  02CF  2AC9               	goto	u1685
  1368                           	line	34
  1369                           	
  1370                           	
  1371  02D0  3001               	movlw	low(01h)
  1372  02D1  02B4               	subwf	(___fttol_exp1),f
  1373                           	line	35
  1374                           	
  1375  02D2                     l202:	
  1376                           	line	32
  1377                           	
  1378  02D2  08B4               	movf	(___fttol_exp1),f
  1379  02D3  1D03               	skipz
  1380  02D4  2AD6               	goto	u1691
  1381  02D5  2AD7               	goto	u1690
  1382  02D6                     u1691:
  1383  02D6  2AC7               	goto	l203
  1384  02D7                     u1690:
  1385                           	
  1386  02D7                     l204:	
  1387                           	line	36
  1388                           	
  1389  02D7                     l200:	
  1390                           	line	37
  1391                           	
  1392  02D7  08B3               	movf	(___fttol_sign1),f
  1393  02D8  1D03               	skipz
  1394  02D9  2ADB               	goto	u1700
  1395  02DA  2AE6               	goto	l205
  1396  02DB                     u1700:
  1397                           	line	38
  1398                           	
  1399  02DB  09B5               	comf	(___fttol_lval),f
  1400  02DC  09B6               	comf	(___fttol_lval+1),f
  1401  02DD  09B7               	comf	(___fttol_lval+2),f
  1402  02DE  09B8               	comf	(___fttol_lval+3),f
  1403  02DF  0AB5               	incf	(___fttol_lval),f
  1404  02E0  1903               	skipnz
  1405  02E1  0AB6               	incf	(___fttol_lval+1),f
  1406  02E2  1903               	skipnz
  1407  02E3  0AB7               	incf	(___fttol_lval+2),f
  1408  02E4  1903               	skipnz
  1409  02E5  0AB8               	incf	(___fttol_lval+3),f
  1410                           	
  1411                           	
  1412  02E6                     l205:	
  1413                           	line	39
  1414                           	
  1415                           	
  1416  02E6  0838               	movf	(___fttol_lval+3),w
  1417  02E7  00B2               	movwf	(?___fttol+3)
  1418  02E8  0837               	movf	(___fttol_lval+2),w
  1419  02E9  00B1               	movwf	(?___fttol+2)
  1420  02EA  0836               	movf	(___fttol_lval+1),w
  1421  02EB  00B0               	movwf	(?___fttol+1)
  1422  02EC  0835               	movf	(___fttol_lval),w
  1423  02ED  00AF               	movwf	(?___fttol)
  1424                           
  1425  02EE  2AEF               	goto	l194
  1426                           	line	40
  1427  02EF                     l194:	
  1428  02EF  0008               	return
  1429                           ; =============== function ___fttol ends ======
                                 =========
  1430                           
  1431                           GLOBAL __end_of___fttol
  1432  02F0                     	__end_of___fttol:
  1433                           	FNSIZE	___fttol,7,4
  1434                           	signat	___fttol,4220
  1435                           	global	_LCDWriteInteger
  1436                           	global	??_LCDWriteInteger
  1437                           	global	?_LCDWriteInteger
  1438                           
  1439                           ; *************** function _LCDWriteInteger ***
                                 ************
  1440                           ; Defined at:
  1441                           ;		line 132 in file "C:\Users\hardik\Desktop\LC
                                 D general files (with delay)\LCD.c"
  1442                           ; Parameters:
  1443                           ;		IntegerNumbe	offs:   0	type: int 
  1444                           ; Auto variables:
  1445                           ;		i           	       	type: unsigned char 
  1446                           ;		c           	       	type: unsigned char [6]
  1447                           ; Return value:
  1448                           ;		type: void 
  1449                           ;		size: 0
  1450                           ; Registers used:
  1451                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
                                 th, cstack
  1452                           ; Tracked objects:
  1453                           ;		On entry : 300/0
  1454                           ;		On exit  : 0/0
  1455                           ;		Unchanged: 0/0
  1456                           ; Data sizes:
  1457                           ;		Autos:    7
  1458                           ;		Params:   2
  1459                           ;		Temp:     1
  1460                           ;		Total:   10
  1461                           ; This function calls:
  1462                           ;		_LCDWriteData
  1463                           ;		___awmod
  1464                           ;		___awdiv
  1465                           ; This function is called by:
  1466                           ;		_LCDWriteFloat
  1467                           ;		_main
  1468                           ; This function uses a non-reentrant model
  1469                           ; 
  1470                           	psect	text167,local,class=CODE,delta=2
  1471                           	file	"C:\Users\hardik\Desktop\LCD general file
                                 s (with delay)\LCD.c"
  1472                           	line	132
  1473                           ;LCD.c: 131: void LCDWriteInteger(int IntegerNu
                                 mber)
  1474                           ;LCD.c: 132: {
  1475                           	
  1476  0364                     _LCDWriteInteger:	
  1477                           	opt stack 5
  1478                           ; Regs used in _LCDWriteInteger: [wreg-fsr0h+st
                                 atus,2+status,0+pclath+cstack]
  1479                           	line	134
  1480                           ;LCD.c: 133: unsigned char c[6];
  1481                           ;LCD.c: 134: unsigned char i = 0;
  1482  0364  1003               	clrc
  1483                           	
  1484  0365  3000               	movlw	0
  1485  0366  1803               	btfsc	status,0
  1486  0367  3001               	movlw	1
  1487  0368  00B1               	movwf	(_LCDWriteInteger_i)
  1488                           	line	136
  1489                           ;LCD.c: 136: if(IntegerNumber < 0)
  1490                           	
  1491  0369  1FB0               	btfss	(_LCDWriteInteger_IntegerNumber+1),7
  1492  036A  2B6C               	goto	u2331
  1493  036B  2B6D               	goto	u2330
  1494  036C                     u2331:
  1495  036C  2B7A               	goto	l40
  1496  036D                     u2330:
  1497                           	line	138
  1498                           ;LCD.c: 137: {
  1499                           ;LCD.c: 138: LCDWriteData('-');
  1500  036D  302D               	movlw	(02Dh)
  1501  036E  120A  158A  27BE   	fcall	_LCDWriteData
              120A  118A         
  1502                           	line	139
  1503                           ;LCD.c: 139: IntegerNumber = - (IntegerNumber);
  1504  0373  1283               	bcf	status, 5	;RP0=0, select bank0
  1505  0374  1303               	bcf	status, 6	;RP1=0, select bank0
  1506                           	
  1507  0375  09AF               	comf	(_LCDWriteInteger_IntegerNumber),f
  1508  0376  09B0               	comf	(_LCDWriteInteger_IntegerNumber+1),f
  1509  0377  0AAF               	incf	(_LCDWriteInteger_IntegerNumber),f
  1510  0378  1903               	skipnz
  1511  0379  0AB0               	incf	(_LCDWriteInteger_IntegerNumber+1),f
  1512                           	
  1513                           	line	140
  1514                           	
  1515  037A                     l40:	
  1516                           	line	142
  1517                           ;LCD.c: 140: }
  1518                           ;LCD.c: 142: if(IntegerNumber == 0)
  1519                           	
  1520  037A  0830               	movf	((_LCDWriteInteger_IntegerNumber+1)),w
  1521  037B  042F               	iorwf	((_LCDWriteInteger_IntegerNumber)),w
  1522  037C  1D03               	skipz
  1523  037D  2B7F               	goto	u2341
  1524  037E  2B80               	goto	u2340
  1525  037F                     u2341:
  1526  037F  2B86               	goto	l41
  1527  0380                     u2340:
  1528                           	line	143
  1529                           ;LCD.c: 143: LCDWriteData(0x30);
  1530  0380  3030               	movlw	(030h)
  1531  0381  120A  158A  27BE   	fcall	_LCDWriteData
              120A  118A         
  1532                           	
  1533  0386                     l41:	
  1534                           	line	145
  1535                           ;LCD.c: 145: while( IntegerNumber > 0)
  1536  0386  2BBC               	goto	l42
  1537                           	
  1538  0387                     l43:	
  1539                           	line	147
  1540                           ;LCD.c: 146: {
  1541                           ;LCD.c: 147: c[i++] = ((IntegerNumber % 10) | 0
                                 x30);
  1542  0387  300A               	movlw	low(0Ah)
  1543                           	
  1544  0388  00BB               	movwf	(0+(?___awmod)+02h)
  1545  0389  3000               	movlw	high(0Ah)
  1546  038A  00BC               	movwf	((0+(?___awmod)+02h))+1
  1547                           	
  1548                           	
  1549  038B  0830               	movf	(_LCDWriteInteger_IntegerNumber+1),w
  1550  038C  01BA               	clrf	(?___awmod+1)
  1551  038D  07BA               	addwf	(?___awmod+1)
  1552  038E  082F               	movf	(_LCDWriteInteger_IntegerNumber),w
  1553  038F  01B9               	clrf	(?___awmod)
  1554  0390  07B9               	addwf	(?___awmod)
  1555                           
  1556  0391  120A  118A  2222   	fcall	___awmod
              120A  118A         
  1557  0396  1283               	bcf	status, 5	;RP0=0, select bank0
  1558  0397  1303               	bcf	status, 6	;RP1=0, select bank0
  1559  0398  0839               	movf	(0+?___awmod),w
  1560  0399  3830               	iorlw	030h
  1561  039A  00B8               	movwf	(??_LCDWriteInteger+7+0)
  1562                           	
  1563  039B  0831               	movf	(_LCDWriteInteger_i),w
  1564  039C  3E32               	addlw	(_LCDWriteInteger_c)&0ffh
  1565  039D  1383               	bcf	status, 7	;select IRP bank0
  1566                           	
  1567  039E  0084               	movwf	fsr0
  1568  039F  0838               	movf	(??_LCDWriteInteger+7+0),w
  1569  03A0  0080               	movwf	indf
  1570  03A1  3001               	movlw	(01h)
  1571  03A2  00B8               	movwf	(??_LCDWriteInteger+7+0)
  1572                           	
  1573  03A3  0838               	movf	(??_LCDWriteInteger+7+0),w
  1574  03A4  07B1               	addwf	(_LCDWriteInteger_i),f
  1575                           	line	148
  1576                           ;LCD.c: 148: IntegerNumber /= 10;
  1577  03A5  300A               	movlw	low(0Ah)
  1578                           	
  1579  03A6  00BB               	movwf	(0+(?___awdiv)+02h)
  1580  03A7  3000               	movlw	high(0Ah)
  1581  03A8  00BC               	movwf	((0+(?___awdiv)+02h))+1
  1582                           	
  1583                           	
  1584  03A9  0830               	movf	(_LCDWriteInteger_IntegerNumber+1),w
  1585  03AA  01BA               	clrf	(?___awdiv+1)
  1586  03AB  07BA               	addwf	(?___awdiv+1)
  1587  03AC  082F               	movf	(_LCDWriteInteger_IntegerNumber),w
  1588  03AD  01B9               	clrf	(?___awdiv)
  1589  03AE  07B9               	addwf	(?___awdiv)
  1590                           
  1591  03AF  120A  118A  22F0   	fcall	___awdiv
              120A  118A         
  1592  03B4  1283               	bcf	status, 5	;RP0=0, select bank0
  1593  03B5  1303               	bcf	status, 6	;RP1=0, select bank0
  1594                           	
  1595  03B6  083A               	movf	(1+?___awdiv),w
  1596  03B7  01B0               	clrf	(_LCDWriteInteger_IntegerNumber+1)
  1597  03B8  07B0               	addwf	(_LCDWriteInteger_IntegerNumber+1)
  1598  03B9  0839               	movf	(0+?___awdiv),w
  1599  03BA  01AF               	clrf	(_LCDWriteInteger_IntegerNumber)
  1600  03BB  07AF               	addwf	(_LCDWriteInteger_IntegerNumber)
  1601                           
  1602                           	line	149
  1603                           	
  1604  03BC                     l42:	
  1605                           	line	145
  1606  03BC  1283               	bcf	status, 5	;RP0=0, select bank0
  1607  03BD  1303               	bcf	status, 6	;RP1=0, select bank0
  1608                           	
  1609  03BE  0830               	movf	(_LCDWriteInteger_IntegerNumber+1),w
  1610  03BF  3A80               	xorlw	80h
  1611  03C0  00B8               	movwf	(??_LCDWriteInteger+7+0)
  1612  03C1  3080               	movlw	(high(01h))^80h
  1613  03C2  0238               	subwf	(??_LCDWriteInteger+7+0),w
  1614  03C3  1D03               	skipz
  1615  03C4  2BC7               	goto	u23510
  1616  03C5                     u23515:
  1617  03C5  3001               	movlw	low(01h)
  1618  03C6  022F               	subwf	(_LCDWriteInteger_IntegerNumber),w
  1619  03C7                     u23510:
  1620                           
  1621  03C7  1803               	skipnc
  1622  03C8  2BCA               	goto	u2351
  1623  03C9  2BCB               	goto	u2350
  1624  03CA                     u2351:
  1625  03CA  2B87               	goto	l43
  1626  03CB                     u2350:
  1627                           	
  1628  03CB                     l44:	
  1629                           	line	151
  1630                           ;LCD.c: 149: }
  1631                           ;LCD.c: 151: while(i-- > 0)
  1632  03CB  2BD6               	goto	l45
  1633                           	
  1634  03CC                     l46:	
  1635                           	line	152
  1636                           ;LCD.c: 152: LCDWriteData(c[i]);
  1637                           	
  1638  03CC  0831               	movf	(_LCDWriteInteger_i),w
  1639  03CD  3E32               	addlw	(_LCDWriteInteger_c)&0ffh
  1640  03CE  1383               	bcf	status, 7	;select IRP bank0
  1641                           	
  1642  03CF  0084               	movwf	fsr0
  1643  03D0  0800               	movf	indf,w
  1644  03D1  120A  158A  27BE   	fcall	_LCDWriteData
              120A  118A         
  1645                           	
  1646  03D6                     l45:	
  1647                           	line	151
  1648                           	
  1649  03D6  1283               	bcf	status, 5	;RP0=0, select bank0
  1650  03D7  1303               	bcf	status, 6	;RP1=0, select bank0
  1651                           	
  1652  03D8  3001               	movlw	low(01h)
  1653  03D9  02B1               	subwf	(_LCDWriteInteger_i),f
  1654  03DA  0831               	movf	((_LCDWriteInteger_i))&07fh,w
  1655  03DB  3AFF               	xorlw	0FFh
  1656  03DC  1D03               	skipz
  1657  03DD  2BDF               	goto	u2361
  1658  03DE  2BE0               	goto	u2360
  1659  03DF                     u2361:
  1660  03DF  2BCC               	goto	l46
  1661  03E0                     u2360:
  1662                           	
  1663  03E0                     l47:	
  1664                           	line	155
  1665                           ;LCD.c: 155: }
  1666  03E0                     l39:	
  1667  03E0  0008               	return
  1668                           ; =============== function _LCDWriteInteger end
                                 s ===============
  1669                           
  1670                           GLOBAL __end_of_LCDWriteInteger
  1671  03E1                     	__end_of_LCDWriteInteger:
  1672                           	FNSIZE	_LCDWriteInteger,8,2
  1673                           	signat	_LCDWriteInteger,4216
  1674                           	global	_LCDInitialize
  1675                           	global	??_LCDInitialize
  1676                           	global	?_LCDInitialize
  1677                           
  1678                           ; *************** function _LCDInitialize *****
                                 **********
  1679                           ; Defined at:
  1680                           ;		line 34 in file "C:\Users\hardik\Desktop\LCD
                                  general files (with delay)\LCD.c"
  1681                           ; Parameters:
  1682                           ;		None
  1683                           ; Auto variables:
  1684                           ;		None
  1685                           ; Return value:
  1686                           ;		type: void 
  1687                           ;		size: 0
  1688                           ; Registers used:
  1689                           ;		wreg, status,2, status,0, pclath, cstack
  1690                           ; Tracked objects:
  1691                           ;		On entry : BFF/0
  1692                           ;		On exit  : 0/0
  1693                           ;		Unchanged: 0/0
  1694                           ; Data sizes:
  1695                           ;		Autos:    0
  1696                           ;		Params:   0
  1697                           ;		Temp:     1
  1698                           ;		Total:    1
  1699                           ; This function calls:
  1700                           ;		_LCDReset
  1701                           ;		_LCDWriteCommand
  1702                           ; This function is called by:
  1703                           ;		_MainSystemInitialize
  1704                           ; This function uses a non-reentrant model
  1705                           ; 
  1706                           	psect	text168,local,class=CODE,delta=2
  1707                           	file	"C:\Users\hardik\Desktop\LCD general file
                                 s (with delay)\LCD.c"
  1708                           	line	34
  1709                           ;LCD.c: 33: void LCDInitialize(void)
  1710                           ;LCD.c: 34: {
  1711                           	
  1712  00B1                     _LCDInitialize:	
  1713                           	opt stack 5
  1714                           ; Regs used in _LCDInitialize: [wreg+status,2+s
                                 tatus,0+pclath+cstack]
  1715                           	line	35
  1716                           ;LCD.c: 35: TRISD = TRISD & 0x03;
  1717  00B1  1683               	bsf	status, 5	;RP0=1, select bank1
  1718  00B2  1303               	bcf	status, 6	;RP1=0, select bank1
  1719                           	
  1720  00B3  0808               	movf	(136)^080h,w	;volatile
  1721  00B4  3903               	andlw	03h
  1722                           	
  1723  00B5  0088               	movwf	(136)^080h	;volatile
  1724                           	line	36
  1725                           ;LCD.c: 36: RD3 = 0;
  1726  00B6  1283               	bcf	status, 5	;RP0=0, select bank0
  1727  00B7  1303               	bcf	status, 6	;RP1=0, select bank0
  1728  00B8  1188               	bcf	(67/8),(67)&7
  1729                           	line	37
  1730                           ;LCD.c: 37: RD2 = 0;
  1731  00B9  1108               	bcf	(66/8),(66)&7
  1732                           	line	38
  1733                           ;LCD.c: 38: PORTD &= 0x0f;
  1734  00BA  300F               	movlw	(0Fh)
  1735  00BB  00A0               	movwf	(??_LCDInitialize+0+0)
  1736                           	
  1737  00BC  0820               	movf	(??_LCDInitialize+0+0),w
  1738  00BD  0588               	andwf	(8),f	;volatile
  1739                           	line	39
  1740                           ;LCD.c: 39: LCDReset();
  1741  00BE  120A  158A  27D4   	fcall	_LCDReset
              120A  118A         
  1742                           	line	40
  1743                           ;LCD.c: 40: LCDWriteCommand(0x28);
  1744  00C3  3028               	movlw	(028h)
  1745  00C4  120A  158A  27C9   	fcall	_LCDWriteCommand
              120A  118A         
  1746                           	line	41
  1747                           ;LCD.c: 41: LCDWriteCommand(0x0C);
  1748  00C9  300C               	movlw	(0Ch)
  1749  00CA  120A  158A  27C9   	fcall	_LCDWriteCommand
              120A  118A         
  1750                           	line	42
  1751                           ;LCD.c: 42: LCDWriteCommand(0x06);
  1752  00CF  3006               	movlw	(06h)
  1753  00D0  120A  158A  27C9   	fcall	_LCDWriteCommand
              120A  118A         
  1754                           	line	43
  1755                           ;LCD.c: 43: LCDWriteCommand(0x01);
  1756  00D5  3001               	movlw	(01h)
  1757  00D6  120A  158A  27C9   	fcall	_LCDWriteCommand
              120A  118A         
  1758                           	line	45
  1759                           ;LCD.c: 45: }
  1760  00DB                     l15:	
  1761  00DB  0008               	return
  1762                           ; =============== function _LCDInitialize ends 
                                 ===============
  1763                           
  1764                           GLOBAL __end_of_LCDInitialize
  1765  00DC                     	__end_of_LCDInitialize:
  1766                           	FNSIZE	_LCDInitialize,1,0
  1767                           	signat	_LCDInitialize,88
  1768                           	global	___ftsub
  1769                           	global	??___ftsub
  1770                           	global	?___ftsub
  1771                           
  1772                           ; *************** function ___ftsub ***********
                                 ****
  1773                           ; Defined at:
  1774                           ;		line 17 in file "C:\Program Files (x86)\HI-T
                                 ECH Software\PICC\PRO\9.65\sources\ftsub.c"
  1775                           ; Parameters:
  1776                           ;		f1          	offs:   0	type: float 
  1777                           ;		f2          	offs:   3	type: float 
  1778                           ; Auto variables:
  1779                           ;		None
  1780                           ; Return value:
  1781                           ;		type: float 
  1782                           ;		size: 3
  1783                           ; Registers used:
  1784                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
                                 th, cstack
  1785                           ; Tracked objects:
  1786                           ;		On entry : 300/0
  1787                           ;		On exit  : 0/0
  1788                           ;		Unchanged: 0/0
  1789                           ; Data sizes:
  1790                           ;		Autos:    0
  1791                           ;		Params:   6
  1792                           ;		Temp:     0
  1793                           ;		Total:    6
  1794                           ; This function calls:
  1795                           ;		___ftadd
  1796                           ; This function is called by:
  1797                           ;		_LCDWriteFloat
  1798                           ; This function uses a non-reentrant model
  1799                           ; 
  1800                           	psect	text169,local,class=CODE,delta=2
  1801                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\ftsub.c"
  1802                           	line	17
  1803                           	
  1804  0071                     ___ftsub:	
  1805                           	opt stack 5
  1806                           ; Regs used in ___ftsub: [wreg-fsr0h+status,2+s
                                 tatus,0+pclath+cstack]
  1807                           	line	18
  1808                           	
  1809  0071  3080               	movlw	080h
  1810  0072  06B4               	xorwf	(___ftsub_f2+2),f
  1811                           	line	19
  1812                           	
  1813                           	
  1814  0073  0832               	movf	(___ftsub_f2),w
  1815  0074  00B8               	movwf	(0+(?___ftadd)+03h)
  1816  0075  0833               	movf	(___ftsub_f2+1),w
  1817  0076  00B9               	movwf	(1+(?___ftadd)+03h)
  1818  0077  0834               	movf	(___ftsub_f2+2),w
  1819  0078  00BA               	movwf	(2+(?___ftadd)+03h)
  1820                           	
  1821                           	
  1822  0079  082F               	movf	(___ftsub_f1),w
  1823  007A  00B5               	movwf	(?___ftadd)
  1824  007B  0830               	movf	(___ftsub_f1+1),w
  1825  007C  00B6               	movwf	(?___ftadd+1)
  1826  007D  0831               	movf	(___ftsub_f1+2),w
  1827  007E  00B7               	movwf	(?___ftadd+2)
  1828  007F  120A  118A  2484   	fcall	___ftadd
              120A  118A         
  1829  0084  1283               	bcf	status, 5	;RP0=0, select bank0
  1830  0085  1303               	bcf	status, 6	;RP1=0, select bank0
  1831                           	
  1832  0086  0835               	movf	(0+?___ftadd),w
  1833  0087  00AF               	movwf	(?___ftsub)
  1834  0088  0836               	movf	(1+?___ftadd),w
  1835  0089  00B0               	movwf	(?___ftsub+1)
  1836  008A  0837               	movf	(2+?___ftadd),w
  1837  008B  00B1               	movwf	(?___ftsub+2)
  1838  008C  288D               	goto	l127
  1839                           	line	20
  1840  008D                     l127:	
  1841  008D  0008               	return
  1842                           ; =============== function ___ftsub ends ======
                                 =========
  1843                           
  1844                           GLOBAL __end_of___ftsub
  1845  008E                     	__end_of___ftsub:
  1846                           	FNSIZE	___ftsub,0,6
  1847                           	signat	___ftsub,8315
  1848                           	global	___ftmul
  1849                           	global	??___ftmul
  1850                           	global	?___ftmul
  1851                           
  1852                           ; *************** function ___ftmul ***********
                                 ****
  1853                           ; Defined at:
  1854                           ;		line 18 in file "C:\Program Files (x86)\HI-T
                                 ECH Software\PICC\PRO\9.65\sources\ftmul.c"
  1855                           ; Parameters:
  1856                           ;		f1          	offs:   0	type: float 
  1857                           ;		f2          	offs:   3	type: float 
  1858                           ; Auto variables:
  1859                           ;		sign1       	       	type: unsigned char 
  1860                           ;		exp1        	       	type: unsigned char 
  1861                           ;		cntr        	       	type: unsigned char 
  1862                           ;		f3          	       	type: float 
  1863                           ; Return value:
  1864                           ;		type: float 
  1865                           ;		size: 3
  1866                           ; Registers used:
  1867                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
                                 th, cstack
  1868                           ; Tracked objects:
  1869                           ;		On entry : 300/0
  1870                           ;		On exit  : 0/0
  1871                           ;		Unchanged: 0/0
  1872                           ; Data sizes:
  1873                           ;		Autos:    6
  1874                           ;		Params:   6
  1875                           ;		Temp:     1
  1876                           ;		Total:   13
  1877                           ; This function calls:
  1878                           ;		___ftunpack
  1879                           ;		___ftpack
  1880                           ; This function is called by:
  1881                           ;		_LCDWriteFloat
  1882                           ; This function uses a non-reentrant model
  1883                           ; 
  1884                           	psect	text170,local,class=CODE,delta=2
  1885                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\ftmul.c"
  1886                           	line	18
  1887                           	
  1888  03E1                     ___ftmul:	
  1889                           	opt stack 5
  1890                           ; Regs used in ___ftmul: [wreg-fsr0h+status,2+s
                                 tatus,0+pclath+cstack]
  1891                           	line	22
  1892                           	
  1893  03E1  3000               	movlw	0
  1894  03E2  00B8               	movwf	(___ftmul_f3)
  1895  03E3  3000               	movlw	0
  1896  03E4  00B9               	movwf	(___ftmul_f3+1)
  1897  03E5  3000               	movlw	0
  1898  03E6  00BA               	movwf	(___ftmul_f3+2)
  1899                           	line	23
  1900                           	
  1901  03E7  3036               	movlw	((___ftmul_exp1))&0ffh
  1902                           	
  1903  03E8  00C1               	movwf	(?___ftunpack)
  1904                           	
  1905  03E9  302F               	movlw	((___ftmul_f1))&0ffh
  1906  03EA  120A  118A  21C8   	fcall	___ftunpack
              120A  118A         
  1907  03EF  1283               	bcf	status, 5	;RP0=0, select bank0
  1908  03F0  1303               	bcf	status, 6	;RP1=0, select bank0
  1909                           	
  1910  03F1  00B5               	movwf	(___ftmul_sign1)
  1911                           	line	24
  1912                           	
  1913  03F2  3037               	movlw	((___ftmul_cntr))&0ffh
  1914                           	
  1915  03F3  00C1               	movwf	(?___ftunpack)
  1916                           	
  1917  03F4  3032               	movlw	((___ftmul_f2))&0ffh
  1918  03F5  120A  118A  21C8   	fcall	___ftunpack
              120A  118A         
  1919  03FA  1283               	bcf	status, 5	;RP0=0, select bank0
  1920  03FB  1303               	bcf	status, 6	;RP1=0, select bank0
  1921  03FC  00BB               	movwf	(??___ftmul+6+0)
  1922                           	
  1923  03FD  083B               	movf	(??___ftmul+6+0),w
  1924  03FE  06B5               	xorwf	(___ftmul_sign1),f
  1925                           	line	25
  1926                           	
  1927  03FF  08B7               	movf	(___ftmul_cntr),f
  1928  0400  1D03               	skipz
  1929  0401  2C03               	goto	u1320
  1930  0402  2C08               	goto	l600000778
  1931  0403                     u1320:
  1932                           	
  1933  0403  08B6               	movf	(___ftmul_exp1),f
  1934  0404  1D03               	skipz
  1935  0405  2C07               	goto	u1331
  1936  0406  2C08               	goto	u1330
  1937  0407                     u1331:
  1938  0407  2C0F               	goto	l137
  1939  0408                     u1330:
  1940                           	
  1941  0408                     l600000778:	
  1942                           	line	26
  1943                           	
  1944                           	
  1945  0408  0838               	movf	(___ftmul_f3),w
  1946  0409  00AF               	movwf	(?___ftmul)
  1947  040A  0839               	movf	(___ftmul_f3+1),w
  1948  040B  00B0               	movwf	(?___ftmul+1)
  1949  040C  083A               	movf	(___ftmul_f3+2),w
  1950  040D  00B1               	movwf	(?___ftmul+2)
  1951  040E  2C83               	goto	l136
  1952                           	
  1953  040F                     l137:	
  1954                           	line	27
  1955                           	
  1956  040F  0837               	movf	(___ftmul_cntr),w
  1957  0410  3E7B               	addlw	07Bh
  1958  0411  00BB               	movwf	(??___ftmul+6+0)
  1959                           	
  1960  0412  083B               	movf	(??___ftmul+6+0),w
  1961  0413  07B6               	addwf	(___ftmul_exp1),f
  1962                           	line	28
  1963  0414  3007               	movlw	(07h)
  1964                           	
  1965  0415  00B7               	movwf	(___ftmul_cntr)
  1966                           	line	29
  1967                           	
  1968  0416                     l140:	
  1969                           	line	30
  1970                           	
  1971  0416  1C2F               	btfss	(___ftmul_f1),(0)&7
  1972  0417  2C19               	goto	u1341
  1973  0418  2C1A               	goto	u1340
  1974  0419                     u1341:
  1975  0419  2C28               	goto	l141
  1976  041A                     u1340:
  1977                           	line	31
  1978                           	
  1979                           	
  1980  041A  0832               	movf	(___ftmul_f2),w
  1981  041B  07B8               	addwf	(___ftmul_f3),f
  1982  041C  0833               	movf	(___ftmul_f2+1),w
  1983  041D  1103               	clrz
  1984  041E  1803               	skipnc
  1985  041F  0A33               	incf	(___ftmul_f2+1),w
  1986  0420  1D03               	skipz
  1987  0421  07B9               	addwf	(___ftmul_f3+1),f
  1988  0422  0834               	movf	(___ftmul_f2+2),w
  1989  0423  1103               	clrz
  1990  0424  1803               	skipnc
  1991  0425  0A34               	incf	(___ftmul_f2+2),w
  1992  0426  1D03               	skipz
  1993  0427  07BA               	addwf	(___ftmul_f3+2),f
  1994                           	
  1995  0428                     l141:	
  1996                           	line	32
  1997                           	
  1998  0428  3001               	movlw	01h
  1999  0429                     u1355:
  2000  0429  1003               	clrc
  2001  042A  0CB1               	rrf	(___ftmul_f1+2),f
  2002  042B  0CB0               	rrf	(___ftmul_f1+1),f
  2003  042C  0CAF               	rrf	(___ftmul_f1),f
  2004  042D  3EFF               	addlw	-1
  2005  042E  1D03               	skipz
  2006  042F  2C29               	goto	u1355
  2007                           
  2008                           	line	33
  2009                           	
  2010  0430  3001               	movlw	01h
  2011  0431                     u1365:
  2012  0431  1003               	clrc
  2013  0432  0DB2               	rlf	(___ftmul_f2),f
  2014  0433  0DB3               	rlf	(___ftmul_f2+1),f
  2015  0434  0DB4               	rlf	(___ftmul_f2+2),f
  2016  0435  3EFF               	addlw	-1
  2017  0436  1D03               	skipz
  2018  0437  2C31               	goto	u1365
  2019                           	line	34
  2020                           	
  2021                           	
  2022  0438  3001               	movlw	low(01h)
  2023  0439  02B7               	subwf	(___ftmul_cntr),f
  2024  043A  1D03               	btfss	status,2
  2025  043B  2C3D               	goto	u1371
  2026  043C  2C3E               	goto	u1370
  2027  043D                     u1371:
  2028  043D  2C16               	goto	l140
  2029  043E                     u1370:
  2030                           	
  2031  043E                     l139:	
  2032                           	line	35
  2033  043E  3009               	movlw	(09h)
  2034                           	
  2035  043F  00B7               	movwf	(___ftmul_cntr)
  2036                           	line	36
  2037                           	
  2038  0440                     l144:	
  2039                           	line	37
  2040                           	
  2041  0440  1C2F               	btfss	(___ftmul_f1),(0)&7
  2042  0441  2C43               	goto	u1381
  2043  0442  2C44               	goto	u1380
  2044  0443                     u1381:
  2045  0443  2C52               	goto	l145
  2046  0444                     u1380:
  2047                           	line	38
  2048                           	
  2049                           	
  2050  0444  0832               	movf	(___ftmul_f2),w
  2051  0445  07B8               	addwf	(___ftmul_f3),f
  2052  0446  0833               	movf	(___ftmul_f2+1),w
  2053  0447  1103               	clrz
  2054  0448  1803               	skipnc
  2055  0449  0A33               	incf	(___ftmul_f2+1),w
  2056  044A  1D03               	skipz
  2057  044B  07B9               	addwf	(___ftmul_f3+1),f
  2058  044C  0834               	movf	(___ftmul_f2+2),w
  2059  044D  1103               	clrz
  2060  044E  1803               	skipnc
  2061  044F  0A34               	incf	(___ftmul_f2+2),w
  2062  0450  1D03               	skipz
  2063  0451  07BA               	addwf	(___ftmul_f3+2),f
  2064                           	
  2065  0452                     l145:	
  2066                           	line	39
  2067                           	
  2068  0452  3001               	movlw	01h
  2069  0453                     u1395:
  2070  0453  1003               	clrc
  2071  0454  0CB1               	rrf	(___ftmul_f1+2),f
  2072  0455  0CB0               	rrf	(___ftmul_f1+1),f
  2073  0456  0CAF               	rrf	(___ftmul_f1),f
  2074  0457  3EFF               	addlw	-1
  2075  0458  1D03               	skipz
  2076  0459  2C53               	goto	u1395
  2077                           
  2078                           	line	40
  2079                           	
  2080  045A  3001               	movlw	01h
  2081  045B                     u1405:
  2082  045B  1003               	clrc
  2083  045C  0CBA               	rrf	(___ftmul_f3+2),f
  2084  045D  0CB9               	rrf	(___ftmul_f3+1),f
  2085  045E  0CB8               	rrf	(___ftmul_f3),f
  2086  045F  3EFF               	addlw	-1
  2087  0460  1D03               	skipz
  2088  0461  2C5B               	goto	u1405
  2089                           
  2090                           	line	41
  2091                           	
  2092                           	
  2093  0462  3001               	movlw	low(01h)
  2094  0463  02B7               	subwf	(___ftmul_cntr),f
  2095  0464  1D03               	btfss	status,2
  2096  0465  2C67               	goto	u1411
  2097  0466  2C68               	goto	u1410
  2098  0467                     u1411:
  2099  0467  2C40               	goto	l144
  2100  0468                     u1410:
  2101                           	
  2102  0468                     l143:	
  2103                           	line	42
  2104                           	
  2105  0468  0836               	movf	(___ftmul_exp1),w
  2106                           	
  2107  0469  00C1               	movwf	(?___ftpack)
  2108                           	
  2109  046A  3038               	movlw	((___ftmul_f3))&0ffh
  2110  046B  120A  118A  2729   	fcall	___ftpack
              120A  118A         
  2111                           	line	43
  2112  0470  1283               	bcf	status, 5	;RP0=0, select bank0
  2113  0471  1303               	bcf	status, 6	;RP1=0, select bank0
  2114                           	
  2115  0472  08B5               	movf	(___ftmul_sign1),f
  2116  0473  1D03               	skipz
  2117  0474  2C76               	goto	u1420
  2118  0475  2C7C               	goto	l146
  2119  0476                     u1420:
  2120                           	line	44
  2121                           	
  2122  0476  3000               	movlw	0
  2123  0477  04B8               	iorwf	(___ftmul_f3),f
  2124  0478  3000               	movlw	0
  2125  0479  04B9               	iorwf	(___ftmul_f3+1),f
  2126  047A  3080               	movlw	080h
  2127  047B  04BA               	iorwf	(___ftmul_f3+2),f
  2128                           	
  2129  047C                     l146:	
  2130                           	line	45
  2131                           	
  2132                           	
  2133  047C  0838               	movf	(___ftmul_f3),w
  2134  047D  00AF               	movwf	(?___ftmul)
  2135  047E  0839               	movf	(___ftmul_f3+1),w
  2136  047F  00B0               	movwf	(?___ftmul+1)
  2137  0480  083A               	movf	(___ftmul_f3+2),w
  2138  0481  00B1               	movwf	(?___ftmul+2)
  2139  0482  2C83               	goto	l136
  2140                           	line	46
  2141  0483                     l136:	
  2142  0483  0008               	return
  2143                           ; =============== function ___ftmul ends ======
                                 =========
  2144                           
  2145                           GLOBAL __end_of___ftmul
  2146  0484                     	__end_of___ftmul:
  2147                           	FNSIZE	___ftmul,7,6
  2148                           	signat	___ftmul,8315
  2149                           	global	___awtoft
  2150                           	global	??___awtoft
  2151                           	global	?___awtoft
  2152                           
  2153                           ; *************** function ___awtoft **********
                                 *****
  2154                           ; Defined at:
  2155                           ;		line 16 in file "C:\Program Files (x86)\HI-T
                                 ECH Software\PICC\PRO\9.65\sources\awtoft.c"
  2156                           ; Parameters:
  2157                           ;		c           	offs:   0	type: int 
  2158                           ; Auto variables:
  2159                           ;		f1          	       	type: float 
  2160                           ; Return value:
  2161                           ;		type: float 
  2162                           ;		size: 3
  2163                           ; Registers used:
  2164                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
                                 th, cstack
  2165                           ; Tracked objects:
  2166                           ;		On entry : 300/0
  2167                           ;		On exit  : 0/0
  2168                           ;		Unchanged: 0/0
  2169                           ; Data sizes:
  2170                           ;		Autos:    3
  2171                           ;		Params:   3
  2172                           ;		Temp:     3
  2173                           ;		Total:    9
  2174                           ; This function calls:
  2175                           ;		___ftpack
  2176                           ;		___ftneg
  2177                           ; This function is called by:
  2178                           ;		_LCDWriteFloat
  2179                           ; This function uses a non-reentrant model
  2180                           ; 
  2181                           	psect	text171,local,class=CODE,delta=2
  2182                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\awtoft.c"
  2183                           	line	16
  2184                           	
  2185  0178                     ___awtoft:	
  2186                           	opt stack 5
  2187                           ; Regs used in ___awtoft: [wreg-fsr0h+status,2+
                                 status,0+pclath+cstack]
  2188                           	line	19
  2189                           	
  2190  0178  0830               	movf	((___awtoft_c+1)),w
  2191  0179  042F               	iorwf	((___awtoft_c)),w
  2192  017A  1D03               	skipz
  2193  017B  297D               	goto	u1711
  2194  017C  297E               	goto	u1710
  2195  017D                     u1711:
  2196  017D  2985               	goto	l214
  2197  017E                     u1710:
  2198                           	line	20
  2199                           	
  2200  017E  3000               	movlw	0x0
  2201  017F  00AF               	movwf	(?___awtoft)
  2202  0180  3000               	movlw	0x0
  2203  0181  00B0               	movwf	(?___awtoft+1)
  2204  0182  3000               	movlw	0x0
  2205  0183  00B1               	movwf	(?___awtoft+2)
  2206  0184  29C7               	goto	l213
  2207                           	
  2208  0185                     l214:	
  2209                           	line	21
  2210                           	
  2211  0185  082F               	movf	(___awtoft_c),w
  2212  0186  00B5               	movwf	(??___awtoft+3+0)
  2213  0187  0830               	movf	(___awtoft_c+1),w
  2214  0188  00B6               	movwf	(??___awtoft+3+0+1)
  2215  0189  3000               	movlw	0
  2216  018A  1BB6               	btfsc	(??___awtoft+3+0+1),7
  2217  018B  30FF               	movlw	255
  2218  018C  00B7               	movwf	(??___awtoft+3+0+2)
  2219                           	
  2220  018D  0835               	movf	(??___awtoft+3+0),w
  2221  018E  00B2               	movwf	(___awtoft_f1)
  2222  018F  0836               	movf	(??___awtoft+3+1),w
  2223  0190  00B3               	movwf	(___awtoft_f1+1)
  2224  0191  0837               	movf	(??___awtoft+3+2),w
  2225  0192  00B4               	movwf	(___awtoft_f1+2)
  2226                           	line	22
  2227                           	
  2228  0193  1FB0               	btfss	(___awtoft_c+1),7
  2229  0194  2996               	goto	u1721
  2230  0195  2997               	goto	u1720
  2231  0196                     u1721:
  2232  0196  299F               	goto	l215
  2233  0197                     u1720:
  2234                           	line	23
  2235                           	
  2236  0197  09B2               	comf	(___awtoft_f1),f
  2237  0198  09B3               	comf	(___awtoft_f1+1),f
  2238  0199  09B4               	comf	(___awtoft_f1+2),f
  2239  019A  0AB2               	incf	(___awtoft_f1),f
  2240  019B  1903               	skipnz
  2241  019C  0AB3               	incf	(___awtoft_f1+1),f
  2242  019D  1903               	skipnz
  2243  019E  0AB4               	incf	(___awtoft_f1+2),f
  2244                           	
  2245                           	
  2246  019F                     l215:	
  2247                           	line	24
  2248  019F  308E               	movlw	(08Eh)
  2249                           	
  2250  01A0  00C1               	movwf	(?___ftpack)
  2251                           	
  2252  01A1  3032               	movlw	((___awtoft_f1))&0ffh
  2253  01A2  120A  118A  2729   	fcall	___ftpack
              120A  118A         
  2254                           	line	25
  2255  01A7  1283               	bcf	status, 5	;RP0=0, select bank0
  2256  01A8  1303               	bcf	status, 6	;RP1=0, select bank0
  2257                           	
  2258  01A9  1FB0               	btfss	(___awtoft_c+1),7
  2259  01AA  29AC               	goto	u1731
  2260  01AB  29AD               	goto	u1730
  2261  01AC                     u1731:
  2262  01AC  29C0               	goto	l216
  2263  01AD                     u1730:
  2264                           	line	26
  2265                           	
  2266                           	
  2267  01AD  0832               	movf	(___awtoft_f1),w
  2268  01AE  00B8               	movwf	(?___ftneg)
  2269  01AF  0833               	movf	(___awtoft_f1+1),w
  2270  01B0  00B9               	movwf	(?___ftneg+1)
  2271  01B1  0834               	movf	(___awtoft_f1+2),w
  2272  01B2  00BA               	movwf	(?___ftneg+2)
  2273  01B3  120A  118A  2066   	fcall	___ftneg
              120A  118A         
  2274  01B8  1283               	bcf	status, 5	;RP0=0, select bank0
  2275  01B9  1303               	bcf	status, 6	;RP1=0, select bank0
  2276                           	
  2277  01BA  0838               	movf	(0+?___ftneg),w
  2278  01BB  00B2               	movwf	(___awtoft_f1)
  2279  01BC  0839               	movf	(1+?___ftneg),w
  2280  01BD  00B3               	movwf	(___awtoft_f1+1)
  2281  01BE  083A               	movf	(2+?___ftneg),w
  2282  01BF  00B4               	movwf	(___awtoft_f1+2)
  2283                           	
  2284  01C0                     l216:	
  2285                           	line	27
  2286                           	
  2287                           	
  2288  01C0  0832               	movf	(___awtoft_f1),w
  2289  01C1  00AF               	movwf	(?___awtoft)
  2290  01C2  0833               	movf	(___awtoft_f1+1),w
  2291  01C3  00B0               	movwf	(?___awtoft+1)
  2292  01C4  0834               	movf	(___awtoft_f1+2),w
  2293  01C5  00B1               	movwf	(?___awtoft+2)
  2294  01C6  29C7               	goto	l213
  2295                           	line	28
  2296  01C7                     l213:	
  2297  01C7  0008               	return
  2298                           ; =============== function ___awtoft ends =====
                                 ==========
  2299                           
  2300                           GLOBAL __end_of___awtoft
  2301  01C8                     	__end_of___awtoft:
  2302                           	FNSIZE	___awtoft,6,3
  2303                           	signat	___awtoft,4219
  2304                           	global	___awdiv
  2305                           	global	??___awdiv
  2306                           	global	?___awdiv
  2307                           
  2308                           ; *************** function ___awdiv ***********
                                 ****
  2309                           ; Defined at:
  2310                           ;		line 5 in file "C:\Program Files (x86)\HI-TE
                                 CH Software\PICC\PRO\9.65\sources\awdiv.c"
  2311                           ; Parameters:
  2312                           ;		dividend    	offs:   0	type: int 
  2313                           ;		divisor     	offs:   2	type: int 
  2314                           ; Auto variables:
  2315                           ;		counter     	       	type: unsigned char 
  2316                           ;		sign        	       	type: unsigned char 
  2317                           ;		quotient    	       	type: int 
  2318                           ; Return value:
  2319                           ;		type: int 
  2320                           ;		size: 2
  2321                           ; Registers used:
  2322                           ;		wreg, status,2, status,0
  2323                           ; Tracked objects:
  2324                           ;		On entry : B00/0
  2325                           ;		On exit  : 0/0
  2326                           ;		Unchanged: 0/0
  2327                           ; Data sizes:
  2328                           ;		Autos:    4
  2329                           ;		Params:   4
  2330                           ;		Temp:     1
  2331                           ;		Total:    9
  2332                           ; This function calls:
  2333                           ;		Nothing
  2334                           ; This function is called by:
  2335                           ;		_LCDWriteFloat
  2336                           ;		_LCDWriteInteger
  2337                           ; This function uses a non-reentrant model
  2338                           ; 
  2339                           	psect	text172,local,class=CODE,delta=2
  2340                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\awdiv.c"
  2341                           	line	5
  2342                           	
  2343  02F0                     ___awdiv:	
  2344                           	opt stack 4
  2345                           ; Regs used in ___awdiv: [wreg+status,2+status,
                                 0]
  2346                           	line	9
  2347  02F0  1003               	clrc
  2348                           	
  2349  02F1  3000               	movlw	0
  2350  02F2  1803               	btfsc	status,0
  2351  02F3  3001               	movlw	1
  2352  02F4  00BD               	movwf	(___awdiv_sign)
  2353                           	line	10
  2354                           	
  2355  02F5  1FBC               	btfss	(___awdiv_divisor+1),7
  2356  02F6  2AF8               	goto	u1741
  2357  02F7  2AF9               	goto	u1740
  2358  02F8                     u1741:
  2359  02F8  2B01               	goto	l218
  2360  02F9                     u1740:
  2361                           	line	11
  2362                           	
  2363  02F9  09BB               	comf	(___awdiv_divisor),f
  2364  02FA  09BC               	comf	(___awdiv_divisor+1),f
  2365  02FB  0ABB               	incf	(___awdiv_divisor),f
  2366  02FC  1903               	skipnz
  2367  02FD  0ABC               	incf	(___awdiv_divisor+1),f
  2368                           	
  2369                           	line	12
  2370                           	
  2371  02FE  01BD               	clrf	(___awdiv_sign)
  2372  02FF  1403               	bsf	status,0
  2373  0300  0DBD               	rlf	(___awdiv_sign),f
  2374                           	line	13
  2375                           	
  2376  0301                     l218:	
  2377                           	line	14
  2378                           	
  2379  0301  1FBA               	btfss	(___awdiv_dividend+1),7
  2380  0302  2B04               	goto	u1751
  2381  0303  2B05               	goto	u1750
  2382  0304                     u1751:
  2383  0304  2B0E               	goto	l219
  2384  0305                     u1750:
  2385                           	line	15
  2386                           	
  2387  0305  09B9               	comf	(___awdiv_dividend),f
  2388  0306  09BA               	comf	(___awdiv_dividend+1),f
  2389  0307  0AB9               	incf	(___awdiv_dividend),f
  2390  0308  1903               	skipnz
  2391  0309  0ABA               	incf	(___awdiv_dividend+1),f
  2392                           	
  2393                           	line	16
  2394  030A  3001               	movlw	(01h)
  2395  030B  00C1               	movwf	(??___awdiv+4+0)
  2396                           	
  2397  030C  0841               	movf	(??___awdiv+4+0),w
  2398  030D  06BD               	xorwf	(___awdiv_sign),f
  2399                           	line	17
  2400                           	
  2401  030E                     l219:	
  2402                           	line	18
  2403  030E  3000               	movlw	low(0)
  2404                           	
  2405  030F  00BF               	movwf	(___awdiv_quotient)
  2406  0310  3000               	movlw	high(0)
  2407  0311  00C0               	movwf	((___awdiv_quotient))+1
  2408                           	line	19
  2409                           	
  2410  0312  083C               	movf	(___awdiv_divisor+1),w
  2411  0313  043B               	iorwf	(___awdiv_divisor),w
  2412  0314  1903               	skipnz
  2413  0315  2B17               	goto	u1761
  2414  0316  2B18               	goto	u1760
  2415  0317                     u1761:
  2416  0317  2B53               	goto	l220
  2417  0318                     u1760:
  2418                           	line	20
  2419                           	
  2420  0318  01BE               	clrf	(___awdiv_counter)
  2421  0319  1403               	bsf	status,0
  2422  031A  0DBE               	rlf	(___awdiv_counter),f
  2423                           	line	21
  2424  031B  2B27               	goto	l221
  2425                           	
  2426  031C                     l222:	
  2427                           	line	22
  2428                           	
  2429  031C  3001               	movlw	01h
  2430  031D                     u1775:
  2431  031D  1003               	clrc
  2432  031E  0DBB               	rlf	(___awdiv_divisor),f
  2433  031F  0DBC               	rlf	(___awdiv_divisor+1),f
  2434  0320  3EFF               	addlw	-1
  2435  0321  1D03               	skipz
  2436  0322  2B1D               	goto	u1775
  2437                           	line	23
  2438  0323  3001               	movlw	(01h)
  2439  0324  00C1               	movwf	(??___awdiv+4+0)
  2440                           	
  2441  0325  0841               	movf	(??___awdiv+4+0),w
  2442  0326  07BE               	addwf	(___awdiv_counter),f
  2443                           	line	24
  2444                           	
  2445  0327                     l221:	
  2446                           	line	21
  2447                           	
  2448  0327  1FBC               	btfss	(___awdiv_divisor+1),(15)&7
  2449  0328  2B2A               	goto	u1781
  2450  0329  2B2B               	goto	u1780
  2451  032A                     u1781:
  2452  032A  2B1C               	goto	l222
  2453  032B                     u1780:
  2454                           	
  2455  032B                     l223:	
  2456                           	line	25
  2457                           	
  2458  032B                     l226:	
  2459                           	line	26
  2460                           	
  2461  032B  3001               	movlw	01h
  2462  032C                     u1795:
  2463  032C  1003               	clrc
  2464  032D  0DBF               	rlf	(___awdiv_quotient),f
  2465  032E  0DC0               	rlf	(___awdiv_quotient+1),f
  2466  032F  3EFF               	addlw	-1
  2467  0330  1D03               	skipz
  2468  0331  2B2C               	goto	u1795
  2469                           	line	27
  2470                           	
  2471                           	
  2472  0332  083C               	movf	(___awdiv_divisor+1),w
  2473  0333  023A               	subwf	(___awdiv_dividend+1),w
  2474  0334  1D03               	skipz
  2475  0335  2B38               	goto	u1805
  2476  0336  083B               	movf	(___awdiv_divisor),w
  2477  0337  0239               	subwf	(___awdiv_dividend),w
  2478  0338                     u1805:
  2479  0338  1C03               	skipc
  2480  0339  2B3B               	goto	u1801
  2481  033A  2B3C               	goto	u1800
  2482  033B                     u1801:
  2483  033B  2B46               	goto	l227
  2484  033C                     u1800:
  2485                           	line	28
  2486                           	
  2487                           	
  2488  033C  083B               	movf	(___awdiv_divisor),w
  2489  033D  02B9               	subwf	(___awdiv_dividend),f
  2490  033E  083C               	movf	(___awdiv_divisor+1),w
  2491  033F  1C03               	skipc
  2492  0340  03BA               	decf	(___awdiv_dividend+1),f
  2493  0341  02BA               	subwf	(___awdiv_dividend+1),f
  2494                           	line	29
  2495                           	
  2496  0342  3001               	movlw	low(01h)
  2497  0343  04BF               	iorwf	(___awdiv_quotient),f
  2498  0344  3000               	movlw	high(01h)
  2499  0345  04C0               	iorwf	(___awdiv_quotient+1),f
  2500                           	line	30
  2501                           	
  2502  0346                     l227:	
  2503                           	line	31
  2504                           	
  2505  0346  3001               	movlw	01h
  2506  0347                     u1815:
  2507  0347  1003               	clrc
  2508  0348  0CBC               	rrf	(___awdiv_divisor+1),f
  2509  0349  0CBB               	rrf	(___awdiv_divisor),f
  2510  034A  3EFF               	addlw	-1
  2511  034B  1D03               	skipz
  2512  034C  2B47               	goto	u1815
  2513                           	line	32
  2514                           	
  2515                           	
  2516  034D  3001               	movlw	low(01h)
  2517  034E  02BE               	subwf	(___awdiv_counter),f
  2518  034F  1D03               	btfss	status,2
  2519  0350  2B52               	goto	u1821
  2520  0351  2B53               	goto	u1820
  2521  0352                     u1821:
  2522  0352  2B2B               	goto	l226
  2523  0353                     u1820:
  2524                           	
  2525  0353                     l225:	
  2526                           	line	33
  2527                           	
  2528  0353                     l220:	
  2529                           	line	34
  2530                           	
  2531  0353  08BD               	movf	(___awdiv_sign),f
  2532  0354  1D03               	skipz
  2533  0355  2B57               	goto	u1830
  2534  0356  2B5C               	goto	l228
  2535  0357                     u1830:
  2536                           	line	35
  2537                           	
  2538  0357  09BF               	comf	(___awdiv_quotient),f
  2539  0358  09C0               	comf	(___awdiv_quotient+1),f
  2540  0359  0ABF               	incf	(___awdiv_quotient),f
  2541  035A  1903               	skipnz
  2542  035B  0AC0               	incf	(___awdiv_quotient+1),f
  2543                           	
  2544                           	
  2545  035C                     l228:	
  2546                           	line	36
  2547                           	
  2548                           	
  2549  035C  0840               	movf	(___awdiv_quotient+1),w
  2550  035D  01BA               	clrf	(?___awdiv+1)
  2551  035E  07BA               	addwf	(?___awdiv+1)
  2552  035F  083F               	movf	(___awdiv_quotient),w
  2553  0360  01B9               	clrf	(?___awdiv)
  2554  0361  07B9               	addwf	(?___awdiv)
  2555                           
  2556  0362  2B63               	goto	l217
  2557                           	line	37
  2558  0363                     l217:	
  2559  0363  0008               	return
  2560                           ; =============== function ___awdiv ends ======
                                 =========
  2561                           
  2562                           GLOBAL __end_of___awdiv
  2563  0364                     	__end_of___awdiv:
  2564                           	FNSIZE	___awdiv,5,4
  2565                           	signat	___awdiv,8314
  2566                           	global	___ftadd
  2567                           	global	??___ftadd
  2568                           	global	?___ftadd
  2569                           
  2570                           ; *************** function ___ftadd ***********
                                 ****
  2571                           ; Defined at:
  2572                           ;		line 17 in file "C:\Program Files (x86)\HI-T
                                 ECH Software\PICC\PRO\9.65\sources\ftadd.c"
  2573                           ; Parameters:
  2574                           ;		f1          	offs:   0	type: float 
  2575                           ;		f2          	offs:   3	type: float 
  2576                           ; Auto variables:
  2577                           ;		sign2       	       	type: unsigned char 
  2578                           ;		cntr        	       	type: unsigned char 
  2579                           ;		sign1       	       	type: unsigned char 
  2580                           ;		exp2        	       	type: unsigned char 
  2581                           ;		exp1        	       	type: unsigned char 
  2582                           ; Return value:
  2583                           ;		type: float 
  2584                           ;		size: 3
  2585                           ; Registers used:
  2586                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pcla
                                 th, cstack
  2587                           ; Tracked objects:
  2588                           ;		On entry : 300/0
  2589                           ;		On exit  : 0/0
  2590                           ;		Unchanged: 0/0
  2591                           ; Data sizes:
  2592                           ;		Autos:    5
  2593                           ;		Params:   6
  2594                           ;		Temp:     1
  2595                           ;		Total:   12
  2596                           ; This function calls:
  2597                           ;		___ftunpack
  2598                           ;		___ftpack
  2599                           ; This function is called by:
  2600                           ;		_LCDWriteFloat
  2601                           ;		___ftsub
  2602                           ; This function uses a non-reentrant model
  2603                           ; 
  2604                           	psect	text173,local,class=CODE,delta=2
  2605                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\ftadd.c"
  2606                           	line	17
  2607                           	
  2608  0484                     ___ftadd:	
  2609                           	opt stack 4
  2610                           ; Regs used in ___ftadd: [wreg-fsr0h+status,2+s
                                 tatus,0+pclath+cstack]
  2611                           	line	20
  2612  0484  2C85               	goto	l96
  2613                           	line	21
  2614                           	
  2615  0485                     l96:	
  2616                           	line	22
  2617                           	
  2618  0485  303F               	movlw	((___ftadd_exp1))&0ffh
  2619                           	
  2620  0486  00C1               	movwf	(?___ftunpack)
  2621                           	
  2622  0487  3035               	movlw	((___ftadd_f1))&0ffh
  2623  0488  120A  118A  21C8   	fcall	___ftunpack
              120A  118A         
  2624  048D  1283               	bcf	status, 5	;RP0=0, select bank0
  2625  048E  1303               	bcf	status, 6	;RP1=0, select bank0
  2626                           	
  2627  048F  00BD               	movwf	(___ftadd_sign1)
  2628                           	line	23
  2629                           	
  2630  0490  08BF               	movf	(___ftadd_exp1),f
  2631  0491  1D03               	skipz
  2632  0492  2C94               	goto	u1121
  2633  0493  2C95               	goto	u1120
  2634  0494                     u1121:
  2635  0494  2C9C               	goto	l97
  2636  0495                     u1120:
  2637                           	line	24
  2638                           	
  2639                           	
  2640  0495  0838               	movf	(___ftadd_f2),w
  2641  0496  00B5               	movwf	(?___ftadd)
  2642  0497  0839               	movf	(___ftadd_f2+1),w
  2643  0498  00B6               	movwf	(?___ftadd+1)
  2644  0499  083A               	movf	(___ftadd_f2+2),w
  2645  049A  00B7               	movwf	(?___ftadd+2)
  2646  049B  2DA1               	goto	l95
  2647                           	
  2648  049C                     l97:	
  2649                           	line	25
  2650                           	
  2651  049C  303E               	movlw	((___ftadd_exp2))&0ffh
  2652                           	
  2653  049D  00C1               	movwf	(?___ftunpack)
  2654                           	
  2655  049E  3038               	movlw	((___ftadd_f2))&0ffh
  2656  049F  120A  118A  21C8   	fcall	___ftunpack
              120A  118A         
  2657  04A4  1283               	bcf	status, 5	;RP0=0, select bank0
  2658  04A5  1303               	bcf	status, 6	;RP1=0, select bank0
  2659                           	
  2660  04A6  00BB               	movwf	(___ftadd_sign2)
  2661                           	line	26
  2662                           	
  2663  04A7  08BE               	movf	(___ftadd_exp2),f
  2664  04A8  1D03               	skipz
  2665  04A9  2CAB               	goto	u1130
  2666  04AA  2D90               	goto	l98
  2667  04AB                     u1130:
  2668                           	line	27
  2669  04AB  3006               	movlw	(06h)
  2670                           	
  2671  04AC  00BC               	movwf	(___ftadd_cntr)
  2672                           	line	29
  2673                           	
  2674  04AD  083E               	movf	(___ftadd_exp2),w
  2675                           	
  2676  04AE  023F               	subwf	(___ftadd_exp1),w
  2677  04AF  1803               	skipnc
  2678  04B0  2CB2               	goto	u1141
  2679  04B1  2CB3               	goto	u1140
  2680  04B2                     u1141:
  2681  04B2  2CF2               	goto	l99
  2682  04B3                     u1140:
  2683                           	line	30
  2684                           	
  2685                           	
  2686  04B3  083E               	movf	(___ftadd_exp2),w
  2687  04B4  00C0               	movwf	(??___ftadd+5+0)
  2688  04B5  083F               	movf	(___ftadd_exp1),w
  2689  04B6  02C0               	subwf	(??___ftadd+5+0),f
  2690  04B7  3019               	movlw	(019h)
  2691  04B8  0240               	subwf	0+(??___ftadd+5+0),w
  2692  04B9  1C03               	skipc
  2693  04BA  2CBC               	goto	u1151
  2694  04BB  2CBD               	goto	u1150
  2695  04BC                     u1151:
  2696  04BC  2CC8               	goto	l104
  2697  04BD                     u1150:
  2698                           	line	32
  2699                           	
  2700  04BD  3000               	movlw	0
  2701  04BE  00B5               	movwf	(___ftadd_f1)
  2702  04BF  3000               	movlw	0
  2703  04C0  00B6               	movwf	(___ftadd_f1+1)
  2704  04C1  3000               	movlw	0
  2705  04C2  00B7               	movwf	(___ftadd_f1+2)
  2706                           	line	33
  2707                           	
  2708  04C3  083E               	movf	(___ftadd_exp2),w
  2709                           	
  2710  04C4  00BF               	movwf	(___ftadd_exp1)
  2711                           	line	34
  2712                           	
  2713  04C5  083B               	movf	(___ftadd_sign2),w
  2714                           	
  2715  04C6  00BD               	movwf	(___ftadd_sign1)
  2716                           	line	35
  2717  04C7  2CF1               	goto	l101
  2718                           	line	38
  2719                           	
  2720  04C8                     l104:	
  2721                           	line	39
  2722                           	
  2723  04C8  3001               	movlw	01h
  2724  04C9                     u1165:
  2725  04C9  1003               	clrc
  2726  04CA  0DB8               	rlf	(___ftadd_f2),f
  2727  04CB  0DB9               	rlf	(___ftadd_f2+1),f
  2728  04CC  0DBA               	rlf	(___ftadd_f2+2),f
  2729  04CD  3EFF               	addlw	-1
  2730  04CE  1D03               	skipz
  2731  04CF  2CC9               	goto	u1165
  2732                           	line	40
  2733                           	
  2734                           	
  2735  04D0  3001               	movlw	low(01h)
  2736  04D1  02BE               	subwf	(___ftadd_exp2),f
  2737                           	line	41
  2738                           	
  2739                           	
  2740  04D2  083E               	movf	(___ftadd_exp2),w
  2741  04D3  063F               	xorwf	(___ftadd_exp1),w
  2742  04D4  1903               	skipnz
  2743  04D5  2CD7               	goto	u1171
  2744  04D6  2CD8               	goto	u1170
  2745  04D7                     u1171:
  2746  04D7  2CDE               	goto	l103
  2747  04D8                     u1170:
  2748                           	
  2749                           	
  2750  04D8  3001               	movlw	low(01h)
  2751  04D9  02BC               	subwf	(___ftadd_cntr),f
  2752  04DA  1D03               	btfss	status,2
  2753  04DB  2CDD               	goto	u1181
  2754  04DC  2CDE               	goto	u1180
  2755  04DD                     u1181:
  2756  04DD  2CC8               	goto	l104
  2757  04DE                     u1180:
  2758                           	
  2759  04DE                     l600000776:	
  2760                           	
  2761  04DE                     l103:	
  2762                           	line	42
  2763  04DE  2CEB               	goto	l105
  2764                           	
  2765  04DF                     l106:	
  2766                           	line	43
  2767                           	
  2768  04DF  3001               	movlw	01h
  2769  04E0                     u1195:
  2770  04E0  1003               	clrc
  2771  04E1  0CB7               	rrf	(___ftadd_f1+2),f
  2772  04E2  0CB6               	rrf	(___ftadd_f1+1),f
  2773  04E3  0CB5               	rrf	(___ftadd_f1),f
  2774  04E4  3EFF               	addlw	-1
  2775  04E5  1D03               	skipz
  2776  04E6  2CE0               	goto	u1195
  2777                           
  2778                           	line	44
  2779  04E7  3001               	movlw	(01h)
  2780  04E8  00C0               	movwf	(??___ftadd+5+0)
  2781                           	
  2782  04E9  0840               	movf	(??___ftadd+5+0),w
  2783  04EA  07BF               	addwf	(___ftadd_exp1),f
  2784                           	line	45
  2785                           	
  2786  04EB                     l105:	
  2787                           	line	42
  2788                           	
  2789                           	
  2790  04EB  083F               	movf	(___ftadd_exp1),w
  2791  04EC  063E               	xorwf	(___ftadd_exp2),w
  2792  04ED  1D03               	skipz
  2793  04EE  2CF0               	goto	u1201
  2794  04EF  2CF1               	goto	u1200
  2795  04F0                     u1201:
  2796  04F0  2CDF               	goto	l106
  2797  04F1                     u1200:
  2798                           	
  2799  04F1                     l107:	
  2800                           	line	46
  2801                           	
  2802  04F1                     l101:	
  2803                           	line	47
  2804  04F1  2D32               	goto	l108
  2805                           	
  2806  04F2                     l99:	
  2807                           	
  2808                           	
  2809  04F2  083F               	movf	(___ftadd_exp1),w
  2810  04F3  063E               	xorwf	(___ftadd_exp2),w
  2811  04F4  1903               	skipnz
  2812  04F5  2CF7               	goto	u1211
  2813  04F6  2CF8               	goto	u1210
  2814  04F7                     u1211:
  2815  04F7  2D32               	goto	l108
  2816  04F8                     u1210:
  2817                           	line	48
  2818                           	
  2819                           	
  2820  04F8  083F               	movf	(___ftadd_exp1),w
  2821  04F9  00C0               	movwf	(??___ftadd+5+0)
  2822  04FA  083E               	movf	(___ftadd_exp2),w
  2823  04FB  02C0               	subwf	(??___ftadd+5+0),f
  2824  04FC  3019               	movlw	(019h)
  2825  04FD  0240               	subwf	0+(??___ftadd+5+0),w
  2826  04FE  1C03               	skipc
  2827  04FF  2D01               	goto	u1221
  2828  0500  2D02               	goto	u1220
  2829  0501                     u1221:
  2830  0501  2D09               	goto	l114
  2831  0502                     u1220:
  2832                           	line	49
  2833                           	
  2834  0502  3000               	movlw	0
  2835  0503  00B8               	movwf	(___ftadd_f2)
  2836  0504  3000               	movlw	0
  2837  0505  00B9               	movwf	(___ftadd_f2+1)
  2838  0506  3000               	movlw	0
  2839  0507  00BA               	movwf	(___ftadd_f2+2)
  2840  0508  2D32               	goto	l108
  2841                           	line	53
  2842                           	
  2843  0509                     l114:	
  2844                           	line	54
  2845                           	
  2846  0509  3001               	movlw	01h
  2847  050A                     u1235:
  2848  050A  1003               	clrc
  2849  050B  0DB5               	rlf	(___ftadd_f1),f
  2850  050C  0DB6               	rlf	(___ftadd_f1+1),f
  2851  050D  0DB7               	rlf	(___ftadd_f1+2),f
  2852  050E  3EFF               	addlw	-1
  2853  050F  1D03               	skipz
  2854  0510  2D0A               	goto	u1235
  2855                           	line	55
  2856                           	
  2857                           	
  2858  0511  3001               	movlw	low(01h)
  2859  0512  02BF               	subwf	(___ftadd_exp1),f
  2860                           	line	56
  2861                           	
  2862                           	
  2863  0513  083E               	movf	(___ftadd_exp2),w
  2864  0514  063F               	xorwf	(___ftadd_exp1),w
  2865  0515  1903               	skipnz
  2866  0516  2D18               	goto	u1241
  2867  0517  2D19               	goto	u1240
  2868  0518                     u1241:
  2869  0518  2D1F               	goto	l113
  2870  0519                     u1240:
  2871                           	
  2872                           	
  2873  0519  3001               	movlw	low(01h)
  2874  051A  02BC               	subwf	(___ftadd_cntr),f
  2875  051B  1D03               	btfss	status,2
  2876  051C  2D1E               	goto	u1251
  2877  051D  2D1F               	goto	u1250
  2878  051E                     u1251:
  2879  051E  2D09               	goto	l114
  2880  051F                     u1250:
  2881                           	
  2882  051F                     l600000777:	
  2883                           	
  2884  051F                     l113:	
  2885                           	line	57
  2886  051F  2D2C               	goto	l115
  2887                           	
  2888  0520                     l116:	
  2889                           	line	58
  2890                           	
  2891  0520  3001               	movlw	01h
  2892  0521                     u1265:
  2893  0521  1003               	clrc
  2894  0522  0CBA               	rrf	(___ftadd_f2+2),f
  2895  0523  0CB9               	rrf	(___ftadd_f2+1),f
  2896  0524  0CB8               	rrf	(___ftadd_f2),f
  2897  0525  3EFF               	addlw	-1
  2898  0526  1D03               	skipz
  2899  0527  2D21               	goto	u1265
  2900                           
  2901                           	line	59
  2902  0528  3001               	movlw	(01h)
  2903  0529  00C0               	movwf	(??___ftadd+5+0)
  2904                           	
  2905  052A  0840               	movf	(??___ftadd+5+0),w
  2906  052B  07BE               	addwf	(___ftadd_exp2),f
  2907                           	line	60
  2908                           	
  2909  052C                     l115:	
  2910                           	line	57
  2911                           	
  2912                           	
  2913  052C  083F               	movf	(___ftadd_exp1),w
  2914  052D  063E               	xorwf	(___ftadd_exp2),w
  2915  052E  1D03               	skipz
  2916  052F  2D31               	goto	u1271
  2917  0530  2D32               	goto	u1270
  2918  0531                     u1271:
  2919  0531  2D20               	goto	l116
  2920  0532                     u1270:
  2921                           	
  2922  0532                     l117:	
  2923                           	line	61
  2924                           	
  2925  0532                     l111:	
  2926                           	line	62
  2927                           	
  2928  0532                     l109:	
  2929                           	line	63
  2930                           	
  2931  0532                     l108:	
  2932                           	
  2933  0532  08BD               	movf	(___ftadd_sign1),f
  2934  0533  1D03               	skipz
  2935  0534  2D36               	goto	u1280
  2936  0535  2D4A               	goto	l118
  2937  0536                     u1280:
  2938                           	line	64
  2939                           	
  2940  0536  30FF               	movlw	0FFh
  2941  0537  06B5               	xorwf	(___ftadd_f1),f
  2942  0538  30FF               	movlw	0FFh
  2943  0539  06B6               	xorwf	(___ftadd_f1+1),f
  2944  053A  30FF               	movlw	0FFh
  2945  053B  06B7               	xorwf	(___ftadd_f1+2),f
  2946                           	line	65
  2947                           	
  2948  053C  3001               	movlw	01h
  2949  053D  07B5               	addwf	(___ftadd_f1),f
  2950  053E  3000               	movlw	0
  2951  053F  1103               	clrz
  2952  0540  1803               	skipnc
  2953  0541  3E01               	addlw	1
  2954  0542  1D03               	skipz
  2955  0543  07B6               	addwf	(___ftadd_f1+1),f
  2956  0544  3000               	movlw	0
  2957  0545  1103               	clrz
  2958  0546  1803               	skipnc
  2959  0547  3E01               	addlw	1
  2960  0548  1D03               	skipz
  2961  0549  07B7               	addwf	(___ftadd_f1+2),f
  2962                           	line	66
  2963                           	
  2964  054A                     l118:	
  2965                           	line	67
  2966                           	
  2967  054A  08BB               	movf	(___ftadd_sign2),f
  2968  054B  1D03               	skipz
  2969  054C  2D4E               	goto	u1290
  2970  054D  2D62               	goto	l119
  2971  054E                     u1290:
  2972                           	line	68
  2973                           	
  2974  054E  30FF               	movlw	0FFh
  2975  054F  06B8               	xorwf	(___ftadd_f2),f
  2976  0550  30FF               	movlw	0FFh
  2977  0551  06B9               	xorwf	(___ftadd_f2+1),f
  2978  0552  30FF               	movlw	0FFh
  2979  0553  06BA               	xorwf	(___ftadd_f2+2),f
  2980                           	line	69
  2981                           	
  2982  0554  3001               	movlw	01h
  2983  0555  07B8               	addwf	(___ftadd_f2),f
  2984  0556  3000               	movlw	0
  2985  0557  1103               	clrz
  2986  0558  1803               	skipnc
  2987  0559  3E01               	addlw	1
  2988  055A  1D03               	skipz
  2989  055B  07B9               	addwf	(___ftadd_f2+1),f
  2990  055C  3000               	movlw	0
  2991  055D  1103               	clrz
  2992  055E  1803               	skipnc
  2993  055F  3E01               	addlw	1
  2994  0560  1D03               	skipz
  2995  0561  07BA               	addwf	(___ftadd_f2+2),f
  2996                           	line	70
  2997                           	
  2998  0562                     l119:	
  2999                           	line	71
  3000  0562  1003               	clrc
  3001                           	
  3002  0563  3000               	movlw	0
  3003  0564  1803               	btfsc	status,0
  3004  0565  3001               	movlw	1
  3005  0566  00BD               	movwf	(___ftadd_sign1)
  3006                           	line	72
  3007                           	
  3008                           	
  3009  0567  0838               	movf	(___ftadd_f2),w
  3010  0568  07B5               	addwf	(___ftadd_f1),f
  3011  0569  0839               	movf	(___ftadd_f2+1),w
  3012  056A  1103               	clrz
  3013  056B  1803               	skipnc
  3014  056C  0A39               	incf	(___ftadd_f2+1),w
  3015  056D  1D03               	skipz
  3016  056E  07B6               	addwf	(___ftadd_f1+1),f
  3017  056F  083A               	movf	(___ftadd_f2+2),w
  3018  0570  1103               	clrz
  3019  0571  1803               	skipnc
  3020  0572  0A3A               	incf	(___ftadd_f2+2),w
  3021  0573  1D03               	skipz
  3022  0574  07B7               	addwf	(___ftadd_f1+2),f
  3023                           	line	73
  3024                           	
  3025  0575  1FB7               	btfss	(___ftadd_f1+2),(23)&7
  3026  0576  2D78               	goto	u1301
  3027  0577  2D79               	goto	u1300
  3028  0578                     u1301:
  3029  0578  2D90               	goto	l98
  3030  0579                     u1300:
  3031                           	line	74
  3032                           	
  3033  0579  30FF               	movlw	0FFh
  3034  057A  06B5               	xorwf	(___ftadd_f1),f
  3035  057B  30FF               	movlw	0FFh
  3036  057C  06B6               	xorwf	(___ftadd_f1+1),f
  3037  057D  30FF               	movlw	0FFh
  3038  057E  06B7               	xorwf	(___ftadd_f1+2),f
  3039                           	line	75
  3040                           	
  3041  057F  3001               	movlw	01h
  3042  0580  07B5               	addwf	(___ftadd_f1),f
  3043  0581  3000               	movlw	0
  3044  0582  1103               	clrz
  3045  0583  1803               	skipnc
  3046  0584  3E01               	addlw	1
  3047  0585  1D03               	skipz
  3048  0586  07B6               	addwf	(___ftadd_f1+1),f
  3049  0587  3000               	movlw	0
  3050  0588  1103               	clrz
  3051  0589  1803               	skipnc
  3052  058A  3E01               	addlw	1
  3053  058B  1D03               	skipz
  3054  058C  07B7               	addwf	(___ftadd_f1+2),f
  3055                           	line	76
  3056                           	
  3057  058D  01BD               	clrf	(___ftadd_sign1)
  3058  058E  1403               	bsf	status,0
  3059  058F  0DBD               	rlf	(___ftadd_sign1),f
  3060                           	line	77
  3061                           	
  3062  0590                     l120:	
  3063                           	line	78
  3064                           	
  3065  0590                     l98:	
  3066                           	line	79
  3067                           	
  3068  0590  083F               	movf	(___ftadd_exp1),w
  3069                           	
  3070  0591  00C1               	movwf	(?___ftpack)
  3071                           	
  3072  0592  3035               	movlw	((___ftadd_f1))&0ffh
  3073  0593  120A  118A  2729   	fcall	___ftpack
              120A  118A         
  3074                           	line	80
  3075  0598  1283               	bcf	status, 5	;RP0=0, select bank0
  3076  0599  1303               	bcf	status, 6	;RP1=0, select bank0
  3077                           	
  3078  059A  08BD               	movf	(___ftadd_sign1),f
  3079  059B  1D03               	skipz
  3080  059C  2D9E               	goto	u1310
  3081  059D  2DA0               	goto	l121
  3082  059E                     u1310:
  3083                           	line	81
  3084                           	
  3085  059E  3080               	movlw	080h
  3086  059F  06B7               	xorwf	(___ftadd_f1+2),f
  3087                           	
  3088  05A0                     l121:	
  3089                           	line	82
  3090  05A0  2DA1               	goto	l95
  3091                           	line	83
  3092  05A1                     l95:	
  3093  05A1  0008               	return
  3094                           ; =============== function ___ftadd ends ======
                                 =========
  3095                           
  3096                           GLOBAL __end_of___ftadd
  3097  05A2                     	__end_of___ftadd:
  3098                           	FNSIZE	___ftadd,6,6
  3099                           	signat	___ftadd,8315
  3100                           	global	___awmod
  3101                           	global	??___awmod
  3102                           	global	?___awmod
  3103                           
  3104                           ; *************** function ___awmod ***********
                                 ****
  3105                           ; Defined at:
  3106                           ;		line 5 in file "C:\Program Files (x86)\HI-TE
                                 CH Software\PICC\PRO\9.65\sources\awmod.c"
  3107                           ; Parameters:
  3108                           ;		dividend    	offs:   0	type: int 
  3109                           ;		divisor     	offs:   2	type: int 
  3110                           ; Auto variables:
  3111                           ;		sign        	       	type: unsigned char 
  3112                           ;		counter     	       	type: unsigned char 
  3113                           ; Return value:
  3114                           ;		type: int 
  3115                           ;		size: 2
  3116                           ; Registers used:
  3117                           ;		wreg, status,2, status,0
  3118                           ; Tracked objects:
  3119                           ;		On entry : 300/0
  3120                           ;		On exit  : 0/0
  3121                           ;		Unchanged: 0/0
  3122                           ; Data sizes:
  3123                           ;		Autos:    2
  3124                           ;		Params:   4
  3125                           ;		Temp:     1
  3126                           ;		Total:    7
  3127                           ; This function calls:
  3128                           ;		Nothing
  3129                           ; This function is called by:
  3130                           ;		_LCDWriteFloat
  3131                           ;		_LCDWriteInteger
  3132                           ; This function uses a non-reentrant model
  3133                           ; 
  3134                           	psect	text174,local,class=CODE,delta=2
  3135                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\awmod.c"
  3136                           	line	5
  3137                           	
  3138  0222                     ___awmod:	
  3139                           	opt stack 4
  3140                           ; Regs used in ___awmod: [wreg+status,2+status,
                                 0]
  3141                           	line	8
  3142  0222  1003               	clrc
  3143                           	
  3144  0223  3000               	movlw	0
  3145  0224  1803               	btfsc	status,0
  3146  0225  3001               	movlw	1
  3147  0226  00BD               	movwf	(___awmod_sign)
  3148                           	line	9
  3149                           	
  3150  0227  1FBA               	btfss	(___awmod_dividend+1),7
  3151  0228  2A2A               	goto	u1891
  3152  0229  2A2B               	goto	u1890
  3153  022A                     u1891:
  3154  022A  2A33               	goto	l300
  3155  022B                     u1890:
  3156                           	line	10
  3157                           	
  3158  022B  09B9               	comf	(___awmod_dividend),f
  3159  022C  09BA               	comf	(___awmod_dividend+1),f
  3160  022D  0AB9               	incf	(___awmod_dividend),f
  3161  022E  1903               	skipnz
  3162  022F  0ABA               	incf	(___awmod_dividend+1),f
  3163                           	
  3164                           	line	11
  3165                           	
  3166  0230  01BD               	clrf	(___awmod_sign)
  3167  0231  1403               	bsf	status,0
  3168  0232  0DBD               	rlf	(___awmod_sign),f
  3169                           	line	12
  3170                           	
  3171  0233                     l300:	
  3172                           	line	13
  3173                           	
  3174  0233  1FBC               	btfss	(___awmod_divisor+1),7
  3175  0234  2A36               	goto	u1901
  3176  0235  2A37               	goto	u1900
  3177  0236                     u1901:
  3178  0236  2A3C               	goto	l301
  3179  0237                     u1900:
  3180                           	line	14
  3181                           	
  3182  0237  09BB               	comf	(___awmod_divisor),f
  3183  0238  09BC               	comf	(___awmod_divisor+1),f
  3184  0239  0ABB               	incf	(___awmod_divisor),f
  3185  023A  1903               	skipnz
  3186  023B  0ABC               	incf	(___awmod_divisor+1),f
  3187                           	
  3188                           	
  3189  023C                     l301:	
  3190                           	line	15
  3191                           	
  3192  023C  083C               	movf	(___awmod_divisor+1),w
  3193  023D  043B               	iorwf	(___awmod_divisor),w
  3194  023E  1903               	skipnz
  3195  023F  2A41               	goto	u1911
  3196  0240  2A42               	goto	u1910
  3197  0241                     u1911:
  3198  0241  2A72               	goto	l302
  3199  0242                     u1910:
  3200                           	line	16
  3201                           	
  3202  0242  01BE               	clrf	(___awmod_counter)
  3203  0243  1403               	bsf	status,0
  3204  0244  0DBE               	rlf	(___awmod_counter),f
  3205                           	line	17
  3206  0245  2A51               	goto	l303
  3207                           	
  3208  0246                     l304:	
  3209                           	line	18
  3210                           	
  3211  0246  3001               	movlw	01h
  3212  0247                     u1925:
  3213  0247  1003               	clrc
  3214  0248  0DBB               	rlf	(___awmod_divisor),f
  3215  0249  0DBC               	rlf	(___awmod_divisor+1),f
  3216  024A  3EFF               	addlw	-1
  3217  024B  1D03               	skipz
  3218  024C  2A47               	goto	u1925
  3219                           	line	19
  3220  024D  3001               	movlw	(01h)
  3221  024E  00BF               	movwf	(??___awmod+2+0)
  3222                           	
  3223  024F  083F               	movf	(??___awmod+2+0),w
  3224  0250  07BE               	addwf	(___awmod_counter),f
  3225                           	line	20
  3226                           	
  3227  0251                     l303:	
  3228                           	line	17
  3229                           	
  3230  0251  1FBC               	btfss	(___awmod_divisor+1),(15)&7
  3231  0252  2A54               	goto	u1931
  3232  0253  2A55               	goto	u1930
  3233  0254                     u1931:
  3234  0254  2A46               	goto	l304
  3235  0255                     u1930:
  3236                           	
  3237  0255                     l305:	
  3238                           	line	21
  3239                           	
  3240  0255                     l308:	
  3241                           	line	22
  3242                           	
  3243                           	
  3244  0255  083C               	movf	(___awmod_divisor+1),w
  3245  0256  023A               	subwf	(___awmod_dividend+1),w
  3246  0257  1D03               	skipz
  3247  0258  2A5B               	goto	u1945
  3248  0259  083B               	movf	(___awmod_divisor),w
  3249  025A  0239               	subwf	(___awmod_dividend),w
  3250  025B                     u1945:
  3251  025B  1C03               	skipc
  3252  025C  2A5E               	goto	u1941
  3253  025D  2A5F               	goto	u1940
  3254  025E                     u1941:
  3255  025E  2A65               	goto	l309
  3256  025F                     u1940:
  3257                           	line	23
  3258                           	
  3259                           	
  3260  025F  083B               	movf	(___awmod_divisor),w
  3261  0260  02B9               	subwf	(___awmod_dividend),f
  3262  0261  083C               	movf	(___awmod_divisor+1),w
  3263  0262  1C03               	skipc
  3264  0263  03BA               	decf	(___awmod_dividend+1),f
  3265  0264  02BA               	subwf	(___awmod_dividend+1),f
  3266                           	
  3267  0265                     l309:	
  3268                           	line	24
  3269                           	
  3270  0265  3001               	movlw	01h
  3271  0266                     u1955:
  3272  0266  1003               	clrc
  3273  0267  0CBC               	rrf	(___awmod_divisor+1),f
  3274  0268  0CBB               	rrf	(___awmod_divisor),f
  3275  0269  3EFF               	addlw	-1
  3276  026A  1D03               	skipz
  3277  026B  2A66               	goto	u1955
  3278                           	line	25
  3279                           	
  3280                           	
  3281  026C  3001               	movlw	low(01h)
  3282  026D  02BE               	subwf	(___awmod_counter),f
  3283  026E  1D03               	btfss	status,2
  3284  026F  2A71               	goto	u1961
  3285  0270  2A72               	goto	u1960
  3286  0271                     u1961:
  3287  0271  2A55               	goto	l308
  3288  0272                     u1960:
  3289                           	
  3290  0272                     l307:	
  3291                           	line	26
  3292                           	
  3293  0272                     l302:	
  3294                           	line	27
  3295                           	
  3296  0272  08BD               	movf	(___awmod_sign),f
  3297  0273  1D03               	skipz
  3298  0274  2A76               	goto	u1970
  3299  0275  2A7B               	goto	l310
  3300  0276                     u1970:
  3301                           	line	28
  3302                           	
  3303  0276  09B9               	comf	(___awmod_dividend),f
  3304  0277  09BA               	comf	(___awmod_dividend+1),f
  3305  0278  0AB9               	incf	(___awmod_dividend),f
  3306  0279  1903               	skipnz
  3307  027A  0ABA               	incf	(___awmod_dividend+1),f
  3308                           	
  3309                           	
  3310  027B                     l310:	
  3311                           	line	29
  3312  027B  2A7C               	goto	l299
  3313                           	line	30
  3314  027C                     l299:	
  3315  027C  0008               	return
  3316                           ; =============== function ___awmod ends ======
                                 =========
  3317                           
  3318                           GLOBAL __end_of___awmod
  3319  027D                     	__end_of___awmod:
  3320                           	FNSIZE	___awmod,3,4
  3321                           	signat	___awmod,8314
  3322                           	global	_LCDWriteData
  3323                           	global	??_LCDWriteData
  3324                           	global	?_LCDWriteData
  3325                           
  3326                           ; *************** function _LCDWriteData ******
                                 *********
  3327                           ; Defined at:
  3328                           ;		line 18 in file "C:\Users\hardik\Desktop\LCD
                                  general files (with delay)\LCD.c"
  3329                           ; Parameters:
  3330                           ;		LCDData     	reg:   wr	type: unsigned char 
  3331                           ; Auto variables:
  3332                           ;		LCDData     	       	type: unsigned char 
  3333                           ; Return value:
  3334                           ;		type: void 
  3335                           ;		size: 0
  3336                           ; Registers used:
  3337                           ;		wreg, status,2, status,0, pclath, cstack
  3338                           ; Tracked objects:
  3339                           ;		On entry : 0/0
  3340                           ;		On exit  : 0/0
  3341                           ;		Unchanged: 0/0
  3342                           ; Data sizes:
  3343                           ;		Autos:    1
  3344                           ;		Params:   0
  3345                           ;		Temp:     0
  3346                           ;		Total:    1
  3347                           ; This function calls:
  3348                           ;		_LCDWriteByte
  3349                           ; This function is called by:
  3350                           ;		_LCDWriteString
  3351                           ;		_LCDDisplayInitializing
  3352                           ;		_LCDWriteFloat
  3353                           ;		_LCDWriteInteger
  3354                           ; This function uses a non-reentrant model
  3355                           ; 
  3356                           	psect	text175,local,class=CODE,delta=2
  3357                           	file	"C:\Users\hardik\Desktop\LCD general file
                                 s (with delay)\LCD.c"
  3358                           	line	18
  3359                           ;LCD.c: 17: void LCDWriteData(LCDubyte LCDData)
  3360                           ;LCD.c: 18: {
  3361                           	
  3362  0FBE                     _LCDWriteData:	
  3363                           	opt stack 4
  3364                           ; Regs used in _LCDWriteData: [wreg+status,2+st
                                 atus,0+pclath+cstack]
  3365                           ;_LCDWriteData_LCDData stored from wreg
  3366  0FBE  1283               	bcf	status, 5	;RP0=0, select bank0
  3367  0FBF  1303               	bcf	status, 6	;RP1=0, select bank0
  3368                           	
  3369  0FC0  00B9               	movwf	(_LCDWriteData_LCDData)
  3370                           	line	19
  3371                           ;LCD.c: 19: RD2 = 1;
  3372  0FC1  1508               	bsf	(66/8),(66)&7
  3373                           	line	20
  3374                           ;LCD.c: 20: LCDWriteByte(LCDData);
  3375                           	
  3376  0FC2  0839               	movf	(_LCDWriteData_LCDData),w
  3377  0FC3  120A  118A  20DC   	fcall	_LCDWriteByte
              120A  158A         
  3378                           	line	21
  3379                           ;LCD.c: 21: }
  3380  0FC8                     l10:	
  3381  0FC8  0008               	return
  3382                           ; =============== function _LCDWriteData ends =
                                 ==============
  3383                           
  3384                           GLOBAL __end_of_LCDWriteData
  3385  0FC9                     	__end_of_LCDWriteData:
  3386                           	FNSIZE	_LCDWriteData,1,0
  3387                           	signat	_LCDWriteData,4216
  3388                           	global	_LCDReset
  3389                           	global	??_LCDReset
  3390                           	global	?_LCDReset
  3391                           
  3392                           ; *************** function _LCDReset **********
                                 *****
  3393                           ; Defined at:
  3394                           ;		line 47 in file "C:\Users\hardik\Desktop\LCD
                                  general files (with delay)\LCD.c"
  3395                           ; Parameters:
  3396                           ;		None
  3397                           ; Auto variables:
  3398                           ;		None
  3399                           ; Return value:
  3400                           ;		type: void 
  3401                           ;		size: 0
  3402                           ; Registers used:
  3403                           ;		wreg, status,2, status,0, pclath, cstack
  3404                           ; Tracked objects:
  3405                           ;		On entry : BFF/0
  3406                           ;		On exit  : 0/0
  3407                           ;		Unchanged: 0/0
  3408                           ; Data sizes:
  3409                           ;		Autos:    0
  3410                           ;		Params:   0
  3411                           ;		Temp:     0
  3412                           ;		Total:    0
  3413                           ; This function calls:
  3414                           ;		_LCDWriteCommand
  3415                           ; This function is called by:
  3416                           ;		_LCDInitialize
  3417                           ; This function uses a non-reentrant model
  3418                           ; 
  3419                           	psect	text176,local,class=CODE,delta=2
  3420                           	file	"C:\Users\hardik\Desktop\LCD general file
                                 s (with delay)\LCD.c"
  3421                           	line	47
  3422                           ;LCD.c: 46: static void LCDReset(void)
  3423                           ;LCD.c: 47: {
  3424                           	
  3425  0FD4                     _LCDReset:	
  3426                           	opt stack 4
  3427                           ; Regs used in _LCDReset: [wreg+status,2+status
                                 ,0+pclath+cstack]
  3428                           	line	48
  3429                           ;LCD.c: 48: LCDWriteCommand(0x33);
  3430  0FD4  3033               	movlw	(033h)
  3431  0FD5  120A  158A  27C9   	fcall	_LCDWriteCommand
              120A  158A         
  3432                           	line	49
  3433                           ;LCD.c: 49: LCDWriteCommand(0x33);
  3434  0FDA  3033               	movlw	(033h)
  3435  0FDB  120A  158A  27C9   	fcall	_LCDWriteCommand
              120A  158A         
  3436                           	line	50
  3437                           ;LCD.c: 50: LCDWriteCommand(0x32);
  3438  0FE0  3032               	movlw	(032h)
  3439  0FE1  120A  158A  27C9   	fcall	_LCDWriteCommand
              120A  158A         
  3440                           	line	51
  3441                           ;LCD.c: 51: }
  3442  0FE6                     l16:	
  3443  0FE6  0008               	return
  3444                           ; =============== function _LCDReset ends =====
                                 ==========
  3445                           
  3446                           GLOBAL __end_of_LCDReset
  3447  0FE7                     	__end_of_LCDReset:
  3448                           	FNSIZE	_LCDReset,0,0
  3449                           	signat	_LCDReset,88
  3450                           	global	___ftneg
  3451                           	global	??___ftneg
  3452                           	global	?___ftneg
  3453                           
  3454                           ; *************** function ___ftneg ***********
                                 ****
  3455                           ; Defined at:
  3456                           ;		line 16 in file "C:\Program Files (x86)\HI-T
                                 ECH Software\PICC\PRO\9.65\sources\ftneg.c"
  3457                           ; Parameters:
  3458                           ;		f1          	offs:   0	type: float 
  3459                           ; Auto variables:
  3460                           ;		None
  3461                           ; Return value:
  3462                           ;		type: float 
  3463                           ;		size: 3
  3464                           ; Registers used:
  3465                           ;		wreg
  3466                           ; Tracked objects:
  3467                           ;		On entry : 300/0
  3468                           ;		On exit  : 0/0
  3469                           ;		Unchanged: 0/0
  3470                           ; Data sizes:
  3471                           ;		Autos:    0
  3472                           ;		Params:   3
  3473                           ;		Temp:     0
  3474                           ;		Total:    3
  3475                           ; This function calls:
  3476                           ;		Nothing
  3477                           ; This function is called by:
  3478                           ;		_LCDWriteFloat
  3479                           ;		___awtoft
  3480                           ; This function uses a non-reentrant model
  3481                           ; 
  3482                           	psect	text177,local,class=CODE,delta=2
  3483                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\ftneg.c"
  3484                           	line	16
  3485                           	
  3486  0066                     ___ftneg:	
  3487                           	opt stack 4
  3488                           ; Regs used in ___ftneg: [wreg]
  3489                           	line	17
  3490                           	
  3491  0066  083A               	movf	(___ftneg_f1+2),w
  3492  0067  0439               	iorwf	(___ftneg_f1+1),w
  3493  0068  0438               	iorwf	(___ftneg_f1),w
  3494  0069  1903               	skipnz
  3495  006A  286C               	goto	u1841
  3496  006B  286D               	goto	u1840
  3497  006C                     u1841:
  3498  006C  286F               	goto	l239
  3499  006D                     u1840:
  3500                           	line	18
  3501                           	
  3502  006D  3080               	movlw	080h
  3503  006E  06BA               	xorwf	(___ftneg_f1+2),f
  3504                           	
  3505  006F                     l239:	
  3506                           	line	19
  3507  006F  2870               	goto	l238
  3508                           	line	20
  3509  0070                     l238:	
  3510  0070  0008               	return
  3511                           ; =============== function ___ftneg ends ======
                                 =========
  3512                           
  3513                           GLOBAL __end_of___ftneg
  3514  0071                     	__end_of___ftneg:
  3515                           	FNSIZE	___ftneg,0,3
  3516                           	signat	___ftneg,4219
  3517                           	global	___ftpack
  3518                           	global	??___ftpack
  3519                           	global	?___ftpack
  3520                           
  3521                           ; *************** function ___ftpack **********
                                 *****
  3522                           ; Defined at:
  3523                           ;		line 33 in file "C:\Program Files (x86)\HI-T
                                 ECH Software\PICC\PRO\9.65\sources\float.c"
  3524                           ; Parameters:
  3525                           ;		arg         	reg:   wr	type: PTR unsigned um
                                 ; Largest target is 3
  3526                           ;		 -> __lttoft_f1(3), __attoft_f1(3), __lltoft
                                 _f1(3), __altoft_f1(3), 
  3527                           ;		 -> __lwtoft_f1(3), __awtoft_f1(3), __abtoft
                                 _f1(3), __lbtoft_f1(3), 
  3528                           ;		 -> __ftmul_f3(3), __ftdiv_f3(3), __ftadd_f1
                                 (3), 
  3529                           ;		exp         	offs:   0	type: unsigned char 
  3530                           ; Auto variables:
  3531                           ;		arg         	       	type: PTR unsigned um; 
                                 Largest target is 3
  3532                           ;		 -> __lttoft_f1(3), __attoft_f1(3), __lltoft
                                 _f1(3), __altoft_f1(3), 
  3533                           ;		 -> __lwtoft_f1(3), __awtoft_f1(3), __abtoft
                                 _f1(3), __lbtoft_f1(3), 
  3534                           ;		 -> __ftmul_f3(3), __ftdiv_f3(3), __ftadd_f1
                                 (3), 
  3535                           ; Return value:
  3536                           ;		type: void 
  3537                           ;		size: 0
  3538                           ; Registers used:
  3539                           ;		wreg, fsr0l, fsr0h, status,2, status,0
  3540                           ; Tracked objects:
  3541                           ;		On entry : 300/0
  3542                           ;		On exit  : 0/0
  3543                           ;		Unchanged: 0/0
  3544                           ; Data sizes:
  3545                           ;		Autos:    1
  3546                           ;		Params:   1
  3547                           ;		Temp:     3
  3548                           ;		Total:    5
  3549                           ; This function calls:
  3550                           ;		Nothing
  3551                           ; This function is called by:
  3552                           ;		___ftadd
  3553                           ;		___ftmul
  3554                           ;		___awtoft
  3555                           ; This function uses a non-reentrant model
  3556                           ; 
  3557                           	psect	text178,local,class=CODE,delta=2
  3558                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\float.c"
  3559                           	line	33
  3560                           	
  3561  0729                     ___ftpack:	
  3562                           	opt stack 3
  3563                           ; Regs used in ___ftpack: [wreg-fsr0h+status,2+
                                 status,0]
  3564                           ;___ftpack_arg stored from wreg
  3565                           	
  3566  0729  00C2               	movwf	(___ftpack_arg)
  3567                           	line	34
  3568                           	
  3569  072A  08C1               	movf	(___ftpack_exp),f
  3570  072B  1D03               	skipz
  3571  072C  2F2E               	goto	u2010
  3572  072D  2F40               	goto	l600000782
  3573  072E                     u2010:
  3574                           	
  3575  072E  0842               	movf	(___ftpack_arg),w
  3576  072F  0084               	movwf	fsr0
  3577  0730  1383               	bcf	status, 7	;select IRP bank0
  3578  0731  0800               	movf	indf,w
  3579  0732  00C3               	movwf	(??___ftpack+1+0)
  3580  0733  0A84               	incf	fsr0,f
  3581  0734  0800               	movf	indf,w
  3582  0735  00C4               	movwf	(??___ftpack+1+0+1)
  3583  0736  0A84               	incf	fsr0,f
  3584  0737  0800               	movf	indf,w
  3585  0738  00C5               	movwf	(??___ftpack+1+0+2)
  3586  0739  0845               	movf	2+(??___ftpack+1+0),w
  3587  073A  0444               	iorwf	1+(??___ftpack+1+0),w
  3588  073B  0443               	iorwf	0+(??___ftpack+1+0),w
  3589  073C  1D03               	skipz
  3590  073D  2F3F               	goto	u2021
  3591  073E  2F40               	goto	u2020
  3592  073F                     u2021:
  3593  073F  2F4C               	goto	l391
  3594  0740                     u2020:
  3595                           	
  3596  0740                     l600000782:	
  3597                           	line	35
  3598                           	
  3599  0740  0842               	movf	(___ftpack_arg),w
  3600  0741  0084               	movwf	fsr0
  3601  0742  3000               	movlw	0
  3602  0743  1383               	bcf	status, 7	;select IRP bank0
  3603  0744  0080               	movwf	indf
  3604  0745  0A84               	incf	fsr0,f
  3605  0746  3000               	movlw	0
  3606  0747  0080               	movwf	indf
  3607  0748  0A84               	incf	fsr0,f
  3608  0749  3000               	movlw	0
  3609  074A  0080               	movwf	indf
  3610                           	line	36
  3611  074B  2FEE               	goto	l390
  3612                           	line	37
  3613                           	
  3614  074C                     l391:	
  3615                           	line	38
  3616  074C  2F5F               	goto	l392
  3617                           	
  3618  074D                     l393:	
  3619                           	line	39
  3620  074D  3001               	movlw	(01h)
  3621  074E  00C3               	movwf	(??___ftpack+1+0)
  3622                           	
  3623  074F  0843               	movf	(??___ftpack+1+0),w
  3624  0750  07C1               	addwf	(___ftpack_exp),f
  3625                           	line	40
  3626                           	
  3627  0751  0842               	movf	(___ftpack_arg),w
  3628  0752  0084               	movwf	fsr0
  3629  0753  3001               	movlw	01h
  3630  0754  00C3               	movwf	(??___ftpack+1+0)
  3631  0755                     u2035:
  3632  0755  0A84               	incf	fsr0,f
  3633  0756  0A84               	incf	fsr0,f
  3634  0757  1003               	clrc
  3635  0758  0C80               	rrf	indf,f
  3636  0759  0384               	decf	fsr0,f
  3637  075A  0C80               	rrf	indf,f
  3638  075B  0384               	decf	fsr0,f
  3639  075C  0C80               	rrf	indf,f
  3640  075D  0BC3               	decfsz	(??___ftpack+1+0)
  3641  075E  2F55               	goto	u2035
  3642                           	line	41
  3643                           	
  3644  075F                     l392:	
  3645                           	line	38
  3646                           	
  3647  075F  0842               	movf	(___ftpack_arg),w
  3648  0760  0084               	movwf	fsr0
  3649  0761  3000               	movlw	0
  3650  0762  0500               	andwf	indf,w
  3651  0763  00C3               	movwf	??___ftpack+1+0
  3652  0764  0A84               	incf	fsr0,f
  3653  0765  3000               	movlw	0
  3654  0766  0500               	andwf	indf,w
  3655  0767  00C4               	movwf	??___ftpack+1+0+1
  3656  0768  0A84               	incf	fsr0,f
  3657  0769  30FE               	movlw	0FEh
  3658  076A  0500               	andwf	indf,w
  3659  076B  00C5               	movwf	??___ftpack+1+0+2
  3660  076C  0845               	movf	??___ftpack+1+2,w
  3661  076D  0444               	iorwf	??___ftpack+1+1,w
  3662  076E  0443               	iorwf	??___ftpack+1+0,w
  3663  076F  1D03               	skipz
  3664  0770  2F72               	goto	u2041
  3665  0771  2F73               	goto	u2040
  3666  0772                     u2041:
  3667  0772  2F4D               	goto	l393
  3668  0773                     u2040:
  3669                           	
  3670  0773                     l394:	
  3671                           	line	42
  3672  0773  2F95               	goto	l395
  3673                           	
  3674  0774                     l396:	
  3675                           	line	43
  3676  0774  3001               	movlw	(01h)
  3677  0775  00C3               	movwf	(??___ftpack+1+0)
  3678                           	
  3679  0776  0843               	movf	(??___ftpack+1+0),w
  3680  0777  07C1               	addwf	(___ftpack_exp),f
  3681                           	line	44
  3682                           	
  3683  0778  0842               	movf	(___ftpack_arg),w
  3684  0779  0084               	movwf	fsr0
  3685  077A  3001               	movlw	01h
  3686  077B  0780               	addwf	indf,f
  3687  077C  0A84               	incf	fsr0,f
  3688  077D  3000               	movlw	0
  3689  077E  1803               	skipnc
  3690  077F  3E01               	addlw	1
  3691  0780  1D03               	skipz
  3692  0781  0780               	addwf	indf,f
  3693  0782  0A84               	incf	fsr0,f
  3694  0783  3000               	movlw	0
  3695  0784  1803               	skipnc
  3696  0785  3E01               	addlw	1
  3697  0786  0780               	addwf	indf,f
  3698                           	line	45
  3699                           	
  3700  0787  0842               	movf	(___ftpack_arg),w
  3701  0788  0084               	movwf	fsr0
  3702  0789  3001               	movlw	01h
  3703  078A  00C3               	movwf	(??___ftpack+1+0)
  3704  078B                     u2055:
  3705  078B  0A84               	incf	fsr0,f
  3706  078C  0A84               	incf	fsr0,f
  3707  078D  1003               	clrc
  3708  078E  0C80               	rrf	indf,f
  3709  078F  0384               	decf	fsr0,f
  3710  0790  0C80               	rrf	indf,f
  3711  0791  0384               	decf	fsr0,f
  3712  0792  0C80               	rrf	indf,f
  3713  0793  0BC3               	decfsz	(??___ftpack+1+0)
  3714  0794  2F8B               	goto	u2055
  3715                           	line	46
  3716                           	
  3717  0795                     l395:	
  3718                           	line	42
  3719                           	
  3720  0795  0842               	movf	(___ftpack_arg),w
  3721  0796  0084               	movwf	fsr0
  3722  0797  3000               	movlw	0
  3723  0798  0500               	andwf	indf,w
  3724  0799  00C3               	movwf	??___ftpack+1+0
  3725  079A  0A84               	incf	fsr0,f
  3726  079B  3000               	movlw	0
  3727  079C  0500               	andwf	indf,w
  3728  079D  00C4               	movwf	??___ftpack+1+0+1
  3729  079E  0A84               	incf	fsr0,f
  3730  079F  30FF               	movlw	0FFh
  3731  07A0  0500               	andwf	indf,w
  3732  07A1  00C5               	movwf	??___ftpack+1+0+2
  3733  07A2  0845               	movf	??___ftpack+1+2,w
  3734  07A3  0444               	iorwf	??___ftpack+1+1,w
  3735  07A4  0443               	iorwf	??___ftpack+1+0,w
  3736  07A5  1D03               	skipz
  3737  07A6  2FA8               	goto	u2061
  3738  07A7  2FA9               	goto	u2060
  3739  07A8                     u2061:
  3740  07A8  2F74               	goto	l396
  3741  07A9                     u2060:
  3742                           	
  3743  07A9                     l397:	
  3744                           	line	47
  3745  07A9  2FBA               	goto	l398
  3746                           	
  3747  07AA                     l399:	
  3748                           	line	48
  3749                           	
  3750                           	
  3751  07AA  3001               	movlw	low(01h)
  3752  07AB  02C1               	subwf	(___ftpack_exp),f
  3753                           	line	49
  3754                           	
  3755  07AC  0842               	movf	(___ftpack_arg),w
  3756  07AD  0084               	movwf	fsr0
  3757  07AE  3001               	movlw	01h
  3758  07AF                     u2075:
  3759  07AF  1003               	clrc
  3760  07B0  0D80               	rlf	indf,f
  3761  07B1  0A84               	incf	fsr0,f
  3762  07B2  0D80               	rlf	indf,f
  3763  07B3  0A84               	incf	fsr0,f
  3764  07B4  0D80               	rlf	indf,f
  3765  07B5  0384               	decf	fsr0,f
  3766  07B6  0384               	decf	fsr0,f
  3767  07B7  3EFF               	addlw	-1
  3768  07B8  1D03               	skipz
  3769  07B9  2FAF               	goto	u2075
  3770                           	line	50
  3771                           	
  3772  07BA                     l398:	
  3773                           	line	47
  3774                           	
  3775  07BA  0842               	movf	(___ftpack_arg),w
  3776  07BB  0084               	movwf	fsr0
  3777  07BC  0800               	movf	indf,w
  3778  07BD  00C3               	movwf	(??___ftpack+1+0)
  3779  07BE  0A84               	incf	fsr0,f
  3780  07BF  0800               	movf	indf,w
  3781  07C0  00C4               	movwf	(??___ftpack+1+0+1)
  3782  07C1  0A84               	incf	fsr0,f
  3783  07C2  0800               	movf	indf,w
  3784  07C3  00C5               	movwf	(??___ftpack+1+0+2)
  3785  07C4  1FC4               	btfss	1+(??___ftpack+1+0),(15)&7
  3786  07C5  2FC7               	goto	u2081
  3787  07C6  2FC8               	goto	u2080
  3788  07C7                     u2081:
  3789  07C7  2FAA               	goto	l399
  3790  07C8                     u2080:
  3791                           	
  3792  07C8                     l400:	
  3793                           	line	51
  3794                           	
  3795  07C8  1841               	btfsc	(___ftpack_exp),(0)&7
  3796  07C9  2FCB               	goto	u2091
  3797  07CA  2FCC               	goto	u2090
  3798  07CB                     u2091:
  3799  07CB  2FD6               	goto	l401
  3800  07CC                     u2090:
  3801                           	line	52
  3802                           	
  3803  07CC  0842               	movf	(___ftpack_arg),w
  3804  07CD  0084               	movwf	fsr0
  3805  07CE  30FF               	movlw	0FFh
  3806  07CF  0580               	andwf	indf,f
  3807  07D0  0A84               	incf	fsr0,f
  3808  07D1  307F               	movlw	07Fh
  3809  07D2  0580               	andwf	indf,f
  3810  07D3  0A84               	incf	fsr0,f
  3811  07D4  30FF               	movlw	0FFh
  3812  07D5  0580               	andwf	indf,f
  3813                           	
  3814  07D6                     l401:	
  3815                           	line	53
  3816                           	
  3817  07D6  1003               	clrc
  3818  07D7  0CC1               	rrf	(___ftpack_exp),f
  3819                           
  3820                           	line	54
  3821                           	
  3822  07D8  0841               	movf	(___ftpack_exp),w
  3823  07D9  00C3               	movwf	(??___ftpack+1+0)
  3824  07DA  01C4               	clrf	(??___ftpack+1+0+1)
  3825  07DB  01C5               	clrf	(??___ftpack+1+0+2)
  3826  07DC  3010               	movlw	010h
  3827  07DD                     u2105:
  3828  07DD  1003               	clrc
  3829  07DE  0DC3               	rlf	(??___ftpack+1+0),f
  3830  07DF  0DC4               	rlf	(??___ftpack+1+1),f
  3831  07E0  0DC5               	rlf	(??___ftpack+1+2),f
  3832  07E1                     u2100:
  3833  07E1  3EFF               	addlw	-1
  3834  07E2  1D03               	skipz
  3835  07E3  2FDD               	goto	u2105
  3836                           	
  3837  07E4  0842               	movf	(___ftpack_arg),w
  3838  07E5  0084               	movwf	fsr0
  3839  07E6  0843               	movf	(??___ftpack+1+0),w
  3840  07E7  0480               	iorwf	indf,f
  3841  07E8  0A84               	incf	fsr0,f
  3842  07E9  0844               	movf	(??___ftpack+1+1),w
  3843  07EA  0480               	iorwf	indf,f
  3844  07EB  0A84               	incf	fsr0,f
  3845  07EC  0845               	movf	(??___ftpack+1+2),w
  3846  07ED  0480               	iorwf	indf,f
  3847                           	line	55
  3848  07EE                     l390:	
  3849  07EE  0008               	return
  3850                           ; =============== function ___ftpack ends =====
                                 ==========
  3851                           
  3852                           GLOBAL __end_of___ftpack
  3853  07EF                     	__end_of___ftpack:
  3854                           	FNSIZE	___ftpack,4,1
  3855                           	signat	___ftpack,8312
  3856                           	global	_LCDWriteCommand
  3857                           	global	??_LCDWriteCommand
  3858                           	global	?_LCDWriteCommand
  3859                           
  3860                           ; *************** function _LCDWriteCommand ***
                                 ************
  3861                           ; Defined at:
  3862                           ;		line 12 in file "C:\Users\hardik\Desktop\LCD
                                  general files (with delay)\LCD.c"
  3863                           ; Parameters:
  3864                           ;		LCDData     	reg:   wr	type: unsigned char 
  3865                           ; Auto variables:
  3866                           ;		LCDData     	       	type: unsigned char 
  3867                           ; Return value:
  3868                           ;		type: void 
  3869                           ;		size: 0
  3870                           ; Registers used:
  3871                           ;		wreg, status,2, status,0, pclath, cstack
  3872                           ; Tracked objects:
  3873                           ;		On entry : 0/0
  3874                           ;		On exit  : 0/0
  3875                           ;		Unchanged: 0/0
  3876                           ; Data sizes:
  3877                           ;		Autos:    1
  3878                           ;		Params:   0
  3879                           ;		Temp:     0
  3880                           ;		Total:    1
  3881                           ; This function calls:
  3882                           ;		_LCDWriteByte
  3883                           ; This function is called by:
  3884                           ;		_LCDInitialize
  3885                           ;		_LCDReset
  3886                           ;		_LCDDisplayInitializing
  3887                           ;		_LCDWriteFloat
  3888                           ;		_main
  3889                           ; This function uses a non-reentrant model
  3890                           ; 
  3891                           	psect	text179,local,class=CODE,delta=2
  3892                           	file	"C:\Users\hardik\Desktop\LCD general file
                                 s (with delay)\LCD.c"
  3893                           	line	12
  3894                           ;LCD.c: 11: void LCDWriteCommand(LCDubyte LCDDa
                                 ta)
  3895                           ;LCD.c: 12: {
  3896                           	
  3897  0FC9                     _LCDWriteCommand:	
  3898                           	opt stack 3
  3899                           ; Regs used in _LCDWriteCommand: [wreg+status,2
                                 +status,0+pclath+cstack]
  3900                           ;_LCDWriteCommand_LCDData stored from wreg
  3901  0FC9  1283               	bcf	status, 5	;RP0=0, select bank0
  3902  0FCA  1303               	bcf	status, 6	;RP1=0, select bank0
  3903                           	
  3904  0FCB  00AF               	movwf	(_LCDWriteCommand_LCDData)
  3905                           	line	13
  3906                           ;LCD.c: 13: RD2 = 0;
  3907  0FCC  1108               	bcf	(66/8),(66)&7
  3908                           	line	14
  3909                           ;LCD.c: 14: LCDWriteByte(LCDData);
  3910                           	
  3911  0FCD  082F               	movf	(_LCDWriteCommand_LCDData),w
  3912  0FCE  120A  118A  20DC   	fcall	_LCDWriteByte
              120A  158A         
  3913                           	line	15
  3914                           ;LCD.c: 15: }
  3915  0FD3                     l9:	
  3916  0FD3  0008               	return
  3917                           ; =============== function _LCDWriteCommand end
                                 s ===============
  3918                           
  3919                           GLOBAL __end_of_LCDWriteCommand
  3920  0FD4                     	__end_of_LCDWriteCommand:
  3921                           	FNSIZE	_LCDWriteCommand,1,0
  3922                           	signat	_LCDWriteCommand,4216
  3923                           	global	___ftunpack
  3924                           	global	??___ftunpack
  3925                           	global	?___ftunpack
  3926                           
  3927                           ; *************** function ___ftunpack ********
                                 *******
  3928                           ; Defined at:
  3929                           ;		line 13 in file "C:\Program Files (x86)\HI-T
                                 ECH Software\PICC\PRO\9.65\sources\float.c"
  3930                           ; Parameters:
  3931                           ;		arg         	reg:   wr	type: PTR unsigned um
                                 ; Largest target is 3
  3932                           ;		 -> __fttol_f1(3), __ftmul_f2(3), __ftmul_f1
                                 (3), __ftdiv_f2(3), 
  3933                           ;		 -> __ftdiv_f1(3), __ftadd_f2(3), __ftadd_f1
                                 (3), 
  3934                           ;		exp         	offs:   0	type: PTR unsigned ch
                                 ar ; Largest target is 1
  3935                           ;		 -> __fttol_exp1(1), __ftmul_cntr(1), __ftmu
                                 l_exp1(1), __ftdiv_exp2(1), 
  3936                           ;		 -> __ftdiv_exp1(1), __ftadd_exp2(1), __ftad
                                 d_exp1(1), 
  3937                           ; Auto variables:
  3938                           ;		arg         	       	type: PTR unsigned um; 
                                 Largest target is 3
  3939                           ;		 -> __fttol_f1(3), __ftmul_f2(3), __ftmul_f1
                                 (3), __ftdiv_f2(3), 
  3940                           ;		 -> __ftdiv_f1(3), __ftadd_f2(3), __ftadd_f1
                                 (3), 
  3941                           ;		sign        	       	type: unsigned char 
  3942                           ; Return value:
  3943                           ;		type: unsigned char 
  3944                           ;		size: 1
  3945                           ; Registers used:
  3946                           ;		wreg, fsr0l, fsr0h, status,2, status,0
  3947                           ; Tracked objects:
  3948                           ;		On entry : 300/0
  3949                           ;		On exit  : 0/0
  3950                           ;		Unchanged: 0/0
  3951                           ; Data sizes:
  3952                           ;		Autos:    2
  3953                           ;		Params:   1
  3954                           ;		Temp:     4
  3955                           ;		Total:    7
  3956                           ; This function calls:
  3957                           ;		Nothing
  3958                           ; This function is called by:
  3959                           ;		___ftadd
  3960                           ;		___ftmul
  3961                           ;		___fttol
  3962                           ; This function uses a non-reentrant model
  3963                           ; 
  3964                           	psect	text180,local,class=CODE,delta=2
  3965                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.65\sources\float.c"
  3966                           	line	13
  3967                           	
  3968  01C8                     ___ftunpack:	
  3969                           	opt stack 3
  3970                           ; Regs used in ___ftunpack: [wreg-fsr0h+status,
                                 2+status,0]
  3971                           ;___ftunpack_arg stored from wreg
  3972                           	line	16
  3973                           	
  3974  01C8  00C2               	movwf	(___ftunpack_arg)
  3975                           	
  3976  01C9  0842               	movf	(___ftunpack_arg),w
  3977  01CA  0084               	movwf	fsr0
  3978  01CB  1383               	bcf	status, 7	;select IRP bank0
  3979  01CC  0800               	movf	indf,w
  3980  01CD  00C4               	movwf	(??___ftunpack+2+0)
  3981  01CE  0A84               	incf	fsr0,f
  3982  01CF  0800               	movf	indf,w
  3983  01D0  00C5               	movwf	(??___ftunpack+2+0+1)
  3984  01D1  0A84               	incf	fsr0,f
  3985  01D2  0800               	movf	indf,w
  3986  01D3  00C6               	movwf	(??___ftunpack+2+0+2)
  3987  01D4  300F               	movlw	0Fh
  3988  01D5                     u1985:
  3989  01D5  1003               	clrc
  3990  01D6  0CC6               	rrf	(??___ftunpack+2+2),f
  3991  01D7  0CC5               	rrf	(??___ftunpack+2+1),f
  3992  01D8  0CC4               	rrf	(??___ftunpack+2+0),f
  3993  01D9                     u1980:
  3994  01D9  3EFF               	addlw	-1
  3995  01DA  1D03               	skipz
  3996  01DB  29D5               	goto	u1985
  3997  01DC  0844               	movf	(??___ftunpack+2+0),w
  3998                           	
  3999  01DD  00C3               	movwf	(___ftunpack_sign)
  4000  01DE  00C7               	movwf	(??___ftunpack+5+0)
  4001                           	
  4002  01DF  0841               	movf	(___ftunpack_exp),w
  4003  01E0  0084               	movwf	fsr0
  4004  01E1  0847               	movf	(??___ftunpack+5+0),w
  4005  01E2  0080               	movwf	indf
  4006                           	line	17
  4007                           	
  4008  01E3  08C3               	movf	(___ftunpack_sign),f
  4009  01E4  1D03               	skipz
  4010  01E5  29E7               	goto	u1991
  4011  01E6  29E8               	goto	u1990
  4012  01E7                     u1991:
  4013  01E7  29F4               	goto	l388
  4014  01E8                     u1990:
  4015                           	line	18
  4016                           	
  4017  01E8  0842               	movf	(___ftunpack_arg),w
  4018  01E9  0084               	movwf	fsr0
  4019  01EA  3000               	movlw	0
  4020  01EB  0080               	movwf	indf
  4021  01EC  0A84               	incf	fsr0,f
  4022  01ED  3000               	movlw	0
  4023  01EE  0080               	movwf	indf
  4024  01EF  0A84               	incf	fsr0,f
  4025  01F0  3000               	movlw	0
  4026  01F1  0080               	movwf	indf
  4027                           	line	19
  4028  01F2  3000               	movlw	(0)
  4029  01F3  2A21               	goto	l387
  4030                           	line	20
  4031                           	
  4032  01F4                     l388:	
  4033                           	line	21
  4034  01F4  1003               	clrc
  4035                           	
  4036  01F5  3000               	movlw	0
  4037  01F6  1803               	btfsc	status,0
  4038  01F7  3001               	movlw	1
  4039  01F8  00C3               	movwf	(___ftunpack_sign)
  4040                           	line	22
  4041                           	
  4042  01F9  0842               	movf	(___ftunpack_arg),w
  4043  01FA  0084               	movwf	fsr0
  4044  01FB  3000               	movlw	0
  4045  01FC  0480               	iorwf	indf,f
  4046  01FD  0A84               	incf	fsr0,f
  4047  01FE  3080               	movlw	080h
  4048  01FF  0480               	iorwf	indf,f
  4049  0200  0A84               	incf	fsr0,f
  4050  0201  3000               	movlw	0
  4051  0202  0480               	iorwf	indf,f
  4052                           	line	23
  4053                           	
  4054  0203  0842               	movf	(___ftunpack_arg),w
  4055  0204  0084               	movwf	fsr0
  4056  0205  0800               	movf	indf,w
  4057  0206  00C4               	movwf	(??___ftunpack+2+0)
  4058  0207  0A84               	incf	fsr0,f
  4059  0208  0800               	movf	indf,w
  4060  0209  00C5               	movwf	(??___ftunpack+2+0+1)
  4061  020A  0A84               	incf	fsr0,f
  4062  020B  0800               	movf	indf,w
  4063  020C  00C6               	movwf	(??___ftunpack+2+0+2)
  4064  020D  1FC6               	btfss	2+(??___ftunpack+2+0),(23)&7
  4065  020E  2A10               	goto	u2001
  4066  020F  2A11               	goto	u2000
  4067  0210                     u2001:
  4068  0210  2A15               	goto	l389
  4069  0211                     u2000:
  4070                           	line	24
  4071  0211  3001               	movlw	(01h)
  4072  0212  00C4               	movwf	(??___ftunpack+2+0)
  4073                           	
  4074  0213  0844               	movf	(??___ftunpack+2+0),w
  4075  0214  07C3               	addwf	(___ftunpack_sign),f
  4076                           	
  4077  0215                     l389:	
  4078                           	line	25
  4079                           	
  4080  0215  0842               	movf	(___ftunpack_arg),w
  4081  0216  0084               	movwf	fsr0
  4082  0217  30FF               	movlw	0FFh
  4083  0218  0580               	andwf	indf,f
  4084  0219  0A84               	incf	fsr0,f
  4085  021A  30FF               	movlw	0FFh
  4086  021B  0580               	andwf	indf,f
  4087  021C  0A84               	incf	fsr0,f
  4088  021D  3000               	movlw	0
  4089  021E  0580               	andwf	indf,f
  4090                           	line	26
  4091                           	
  4092  021F  0843               	movf	(___ftunpack_sign),w
  4093  0220  2A21               	goto	l387
  4094                           	line	27
  4095  0221                     l387:	
  4096  0221  0008               	return
  4097                           ; =============== function ___ftunpack ends ===
                                 ============
  4098                           
  4099                           GLOBAL __end_of___ftunpack
  4100  0222                     	__end_of___ftunpack:
  4101                           	FNSIZE	___ftunpack,6,1
  4102                           	signat	___ftunpack,8313
  4103                           	global	_LCDWriteByte
  4104                           	global	??_LCDWriteByte
  4105                           	global	?_LCDWriteByte
  4106                           
  4107                           ; *************** function _LCDWriteByte ******
                                 *********
  4108                           ; Defined at:
  4109                           ;		line 66 in file "C:\Users\hardik\Desktop\LCD
                                  general files (with delay)\LCD.c"
  4110                           ; Parameters:
  4111                           ;		LCDData     	reg:   wr	type: unsigned char 
  4112                           ; Auto variables:
  4113                           ;		LCDData     	       	type: unsigned char 
  4114                           ; Return value:
  4115                           ;		type: void 
  4116                           ;		size: 0
  4117                           ; Registers used:
  4118                           ;		wreg, status,2, status,0, pclath, cstack
  4119                           ; Tracked objects:
  4120                           ;		On entry : 300/0
  4121                           ;		On exit  : 0/0
  4122                           ;		Unchanged: 0/0
  4123                           ; Data sizes:
  4124                           ;		Autos:    1
  4125                           ;		Params:   0
  4126                           ;		Temp:     1
  4127                           ;		Total:    2
  4128                           ; This function calls:
  4129                           ;		_LCDEnable
  4130                           ;		_Delay
  4131                           ; This function is called by:
  4132                           ;		_LCDWriteCommand
  4133                           ;		_LCDWriteData
  4134                           ; This function uses a non-reentrant model
  4135                           ; 
  4136                           	psect	text181,local,class=CODE,delta=2
  4137                           	file	"C:\Users\hardik\Desktop\LCD general file
                                 s (with delay)\LCD.c"
  4138                           	line	66
  4139                           ;LCD.c: 65: static void LCDWriteByte(LCDubyte L
                                 CDData)
  4140                           ;LCD.c: 66: {
  4141                           	
  4142  00DC                     _LCDWriteByte:	
  4143                           	opt stack 2
  4144                           ; Regs used in _LCDWriteByte: [wreg+status,2+st
                                 atus,0+pclath+cstack]
  4145                           ;_LCDWriteByte_LCDData stored from wreg
  4146                           	
  4147  00DC  00BA               	movwf	(_LCDWriteByte_LCDData)
  4148                           	line	67
  4149                           ;LCD.c: 67: PORTD = (PORTD & 0x0F)|(LCDData & 0
                                 xF0);
  4150                           	
  4151  00DD  083A               	movf	(_LCDWriteByte_LCDData),w
  4152  00DE  39F0               	andlw	0F0h
  4153  00DF  00BB               	movwf	(??_LCDWriteByte+1+0)
  4154                           	
  4155  00E0  0808               	movf	(8),w	;volatile
  4156  00E1  390F               	andlw	0Fh
  4157  00E2  043B               	iorwf	(??_LCDWriteByte+1+0),w
  4158                           	
  4159  00E3  0088               	movwf	(8)	;volatile
  4160                           	line	68
  4161                           ;LCD.c: 68: LCDEnable();
  4162  00E4  120A  118A  27EF   	fcall	_LCDEnable
              120A  118A         
  4163                           	line	69
  4164                           ;LCD.c: 69: PORTD = (PORTD & 0x0F)|(LCDData << 
                                 4);
  4165  00E9  1283               	bcf	status, 5	;RP0=0, select bank0
  4166  00EA  1303               	bcf	status, 6	;RP1=0, select bank0
  4167                           	
  4168  00EB  083A               	movf	(_LCDWriteByte_LCDData),w
  4169  00EC  00BB               	movwf	(??_LCDWriteByte+1+0)
  4170  00ED  3004               	movlw	04h
  4171  00EE                     u2315:
  4172  00EE  1003               	clrc
  4173  00EF  0DBB               	rlf	(??_LCDWriteByte+1+0),f
  4174  00F0  3EFF               	addlw	-1
  4175  00F1  1D03               	skipz
  4176  00F2  28EE               	goto	u2315
  4177                           	
  4178  00F3  0808               	movf	(8),w	;volatile
  4179  00F4  390F               	andlw	0Fh
  4180  00F5  043B               	iorwf	0+(??_LCDWriteByte+1+0),w
  4181                           	
  4182  00F6  0088               	movwf	(8)	;volatile
  4183                           	line	70
  4184                           ;LCD.c: 70: LCDEnable();
  4185  00F7  120A  118A  27EF   	fcall	_LCDEnable
              120A  118A         
  4186                           	line	71
  4187                           ;LCD.c: 71: Delay(2);
  4188  00FC  3002               	movlw	low(02h)
  4189  00FD  1283               	bcf	status, 5	;RP0=0, select bank0
  4190  00FE  1303               	bcf	status, 6	;RP1=0, select bank0
  4191                           	
  4192  00FF  00BC               	movwf	(?_Delay)
  4193  0100  3000               	movlw	high(02h)
  4194  0101  00BD               	movwf	((?_Delay))+1
  4195  0102  120A  158A  27E7   	fcall	_Delay
              120A  118A         
  4196                           	line	72
  4197                           ;LCD.c: 72: }
  4198  0107                     l21:	
  4199  0107  0008               	return
  4200                           ; =============== function _LCDWriteByte ends =
                                 ==============
  4201                           
  4202                           GLOBAL __end_of_LCDWriteByte
  4203  0108                     	__end_of_LCDWriteByte:
  4204                           	FNSIZE	_LCDWriteByte,2,0
  4205                           	signat	_LCDWriteByte,4216
  4206                           	global	_LCDEnable
  4207                           	global	??_LCDEnable
  4208                           	global	?_LCDEnable
  4209                           
  4210                           ; *************** function _LCDEnable *********
                                 ******
  4211                           ; Defined at:
  4212                           ;		line 5 in file "C:\Users\hardik\Desktop\LCD 
                                 general files (with delay)\LCD.c"
  4213                           ; Parameters:
  4214                           ;		None
  4215                           ; Auto variables:
  4216                           ;		None
  4217                           ; Return value:
  4218                           ;		type: void 
  4219                           ;		size: 0
  4220                           ; Registers used:
  4221                           ;		wreg, status,2, status,0, pclath, cstack
  4222                           ; Tracked objects:
  4223                           ;		On entry : 300/0
  4224                           ;		On exit  : 0/0
  4225                           ;		Unchanged: 0/0
  4226                           ; Data sizes:
  4227                           ;		Autos:    0
  4228                           ;		Params:   0
  4229                           ;		Temp:     0
  4230                           ;		Total:    0
  4231                           ; This function calls:
  4232                           ;		_Delay
  4233                           ; This function is called by:
  4234                           ;		_LCDWriteByte
  4235                           ; This function uses a non-reentrant model
  4236                           ; 
  4237                           	psect	text182,local,class=CODE,delta=2
  4238                           	file	"C:\Users\hardik\Desktop\LCD general file
                                 s (with delay)\LCD.c"
  4239                           	line	5
  4240                           ;LCD.c: 4: static void LCDEnable(void)
  4241                           ;LCD.c: 5: {
  4242                           	
  4243  07EF                     _LCDEnable:	
  4244                           	opt stack 1
  4245                           ; Regs used in _LCDEnable: [wreg+status,2+statu
                                 s,0+pclath+cstack]
  4246                           	line	6
  4247                           ;LCD.c: 6: RD3 = 1;
  4248  07EF  1588               	bsf	(67/8),(67)&7
  4249                           	line	7
  4250                           ;LCD.c: 7: Delay(10);
  4251  07F0  300A               	movlw	low(0Ah)
  4252                           	
  4253  07F1  00BC               	movwf	(?_Delay)
  4254  07F2  3000               	movlw	high(0Ah)
  4255  07F3  00BD               	movwf	((?_Delay))+1
  4256  07F4  120A  158A  27E7   	fcall	_Delay
              120A  118A         
  4257                           	line	8
  4258                           ;LCD.c: 8: RD3 = 0;
  4259  07F9  1283               	bcf	status, 5	;RP0=0, select bank0
  4260  07FA  1303               	bcf	status, 6	;RP1=0, select bank0
  4261  07FB  1188               	bcf	(67/8),(67)&7
  4262                           	line	9
  4263                           ;LCD.c: 9: }
  4264  07FC                     l8:	
  4265  07FC  0008               	return
  4266                           ; =============== function _LCDEnable ends ====
                                 ===========
  4267                           
  4268                           GLOBAL __end_of_LCDEnable
  4269  07FD                     	__end_of_LCDEnable:
  4270                           	FNSIZE	_LCDEnable,0,0
  4271                           	signat	_LCDEnable,88
  4272                           	global	_Delay
  4273                           	global	??_Delay
  4274                           	global	?_Delay
  4275                           
  4276                           ; *************** function _Delay *************
                                 **
  4277                           ; Defined at:
  4278                           ;		line 4 in file "C:\Users\hardik\Desktop\LCD 
                                 general files (with delay)\delay.c"
  4279                           ; Parameters:
  4280                           ;		time        	offs:   0	type: unsigned int 
  4281                           ; Auto variables:
  4282                           ;		pause       	       	type: unsigned char 
  4283                           ; Return value:
  4284                           ;		type: void 
  4285                           ;		size: 0
  4286                           ; Registers used:
  4287                           ;		wreg, status,2, status,0
  4288                           ; Tracked objects:
  4289                           ;		On entry : 300/0
  4290                           ;		On exit  : 0/0
  4291                           ;		Unchanged: 0/0
  4292                           ; Data sizes:
  4293                           ;		Autos:    1
  4294                           ;		Params:   2
  4295                           ;		Temp:     0
  4296                           ;		Total:    3
  4297                           ; This function calls:
  4298                           ;		Nothing
  4299                           ; This function is called by:
  4300                           ;		_LCDEnable
  4301                           ;		_LCDDisplayInitializing
  4302                           ;		_LCDWriteByte
  4303                           ;		_main
  4304                           ; This function uses a non-reentrant model
  4305                           ; 
  4306                           	psect	text183,local,class=CODE,delta=2
  4307                           	file	"C:\Users\hardik\Desktop\LCD general file
                                 s (with delay)\delay.c"
  4308                           	line	4
  4309                           ;delay.c: 3: void Delay(unsigned int time)
  4310                           ;delay.c: 4: {
  4311                           	
  4312  0FE7                     _Delay:	
  4313                           	opt stack 0
  4314                           ; Regs used in _Delay: [wreg+status,2+status,0]
  4315                           	line	6
  4316                           ;delay.c: 5: unsigned char pause;
  4317                           ;delay.c: 6: while( time > 0)
  4318  0FE7  2FF9               	goto	l2
  4319                           	
  4320  0FE8                     l3:	
  4321                           	line	8
  4322                           ;delay.c: 7: {
  4323                           ;delay.c: 8: pause = 255;
  4324                           	
  4325  0FE8  01BE               	clrf	(_Delay_pause)
  4326  0FE9  03BE               	decf	(_Delay_pause),f
  4327                           	line	9
  4328                           ;delay.c: 9: while(pause--);
  4329  0FEA  2FEB               	goto	l5
  4330                           	
  4331  0FEB                     l5:	
  4332                           	
  4333                           	
  4334  0FEB  3001               	movlw	low(01h)
  4335  0FEC  02BE               	subwf	(_Delay_pause),f
  4336  0FED  083E               	movf	((_Delay_pause))&07fh,w
  4337  0FEE  3AFF               	xorlw	0FFh
  4338  0FEF  1D03               	skipz
  4339  0FF0  2FF2               	goto	u2371
  4340  0FF1  2FF3               	goto	u2370
  4341  0FF2                     u2371:
  4342  0FF2  2FEB               	goto	l5
  4343  0FF3                     u2370:
  4344+                          	
  4345+ 0FF3                     l7:	
  4346+                          	line	10
  4347+                          ;delay.c: 10: time--;
  4348+                          	
  4349+ 0FF3  3001               	movlw	low(01h)
  4350+ 0FF4  02BC               	subwf	(_Delay_time),f
  4351+ 0FF5  3000               	movlw	high(01h)
  4352+ 0FF6  1C03               	skipc
  4353+ 0FF7  03BD               	decf	(_Delay_time+1),f
  4354+ 0FF8  02BD               	subwf	(_Delay_time+1),f
  4355+                          	line	11
  4356+                          	
  4357+ 0FF9                     l2:	
  4358+                          	line	6
  4359+                          	
  4360+ 0FF9  083D               	movf	((_Delay_time+1)),w
  4361+ 0FFA  043C               	iorwf	((_Delay_time)),w
  4362+ 0FFB  1D03               	skipz
  4363+ 0FFC  2FFE               	goto	u2381
  4364+ 0FFD  2FFF               	goto	u2380
  4365+ 0FFE                     u2381:
  4366+ 0FFE  2FE8               	goto	l3
  4367+ 0FFF                     u2380:
  4368+                          	
  4369+ 0FFF                     l4:	
  4370+                          	line	12
  4371+                          ;delay.c: 11: }
  4372+                          ;delay.c: 12: }
  4373+ 0FFF                     l1:	
  4374+ 0FFF  0008               	return
  4375+                          ; =============== function _Delay ends ========
      +                          =======
  4376+                          
  4377+                          GLOBAL __end_of_Delay
  4378+ 1000                     	__end_of_Delay:
  4379+                          	FNSIZE	_Delay,1,2
  4380+                          	signat	_Delay,4216
  4381+                          	FNCALL	_main,_MainSystemInitialize
  4382+                          	FNCALL	_main,_LCDDisplayInitializing
  4383+                          	FNCALL	_main,_LCDWriteFloat
  4384+                          	FNCALL	_main,_Delay
  4385+                          	FNCALL	_main,_LCDWriteCommand
  4386+                          	FNCALL	_main,_LCDWriteInteger
  4387+                          	FNCALL	_LCDDisplayInitializing,_LCDWriteString
  4388+                          	FNCALL	_LCDDisplayInitializing,_LCDWriteComman
      +                          d
  4389+                          	FNCALL	_LCDDisplayInitializing,_LCDWriteData
  4390+                          	FNCALL	_LCDDisplayInitializing,_Delay
  4391+                          	FNCALL	_LCDWriteFloat,___ftge
  4392+                          	FNCALL	_LCDWriteFloat,_LCDWriteData
  4393+                          	FNCALL	_LCDWriteFloat,___ftneg
  4394+                          	FNCALL	_LCDWriteFloat,___fttol
  4395+                          	FNCALL	_LCDWriteFloat,_LCDWriteInteger
  4396+                          	FNCALL	_LCDWriteFloat,___awtoft
  4397+                          	FNCALL	_LCDWriteFloat,___ftsub
  4398+                          	FNCALL	_LCDWriteFloat,___ftadd
  4399+                          	FNCALL	_LCDWriteFloat,___ftmul
  4400+                          	FNCALL	_LCDWriteFloat,___awmod
  4401+                          	FNCALL	_LCDWriteFloat,___awdiv
  4402+                          	FNCALL	_LCDWriteFloat,_LCDWriteCommand
  4403+                          	FNCALL	_LCDWriteFloat,_LCDWriteString
  4404+                          	FNCALL	_MainSystemInitialize,_LCDInitialize
  4405+                          	FNCALL	_LCDWriteString,_LCDWriteData
  4406+                          	FNCALL	___fttol,___ftunpack
  4407+                          	FNCALL	_LCDWriteInteger,_LCDWriteData
  4408+                          	FNCALL	_LCDWriteInteger,___awmod
  4409+                          	FNCALL	_LCDWriteInteger,___awdiv
  4410+                          	FNCALL	_LCDInitialize,_LCDReset
  4411+                          	FNCALL	_LCDInitialize,_LCDWriteCommand
  4412+                          	FNCALL	___ftsub,___ftadd
  4413+                          	FNCALL	___ftmul,___ftunpack
  4414+                          	FNCALL	___ftmul,___ftpack
  4415+                          	FNCALL	___awtoft,___ftpack
  4416+                          	FNCALL	___awtoft,___ftneg
  4417+                          	FNCALL	___ftadd,___ftunpack
  4418+                          	FNCALL	___ftadd,___ftpack
  4419+                          	FNCALL	_LCDWriteData,_LCDWriteByte
  4420+                          	FNCALL	_LCDReset,_LCDWriteCommand
  4421+                          	FNCALL	_LCDWriteCommand,_LCDWriteByte
  4422+                          	FNCALL	_LCDWriteByte,_LCDEnable
  4423+                          	FNCALL	_LCDWriteByte,_Delay
  4424+                          	FNCALL	_LCDEnable,_Delay
  4425+                          	FNROOT	_main
  4426+                          ;	FNARG	___ftsub,___awtoft
  4427+                          ;	FNARG	___ftsub,___ftneg
  4428+                          ;	FNARG	___ftadd,___awtoft
  4429+                          ;	FNARG	___ftadd,___ftneg
  4430+                          ;	FNARG	___ftmul,___ftadd
  4431+                          ;	FNARG	___ftmul,___ftsub
  4432+                          ;	FNARG	___ftmul,___awtoft
  4433+                          ;	FNARG	___ftmul,___ftneg
  4434+                          	global	_i
  4435+                          	global	_i
  4436+                          	psect	common,class=COMMON,space=1
  4437+                          
  4438+                          	DABS	1,120,2	;_i
  4439+ 0000                     	_i	set	0x78
  4440+                          
  4441+                          	global	_j
  4442+                          	global	_j
  4443+                          
  4444+                          	DABS	1,122,2	;_j
  4445+ 0000                     	_j	set	0x7A
  4446+                          
  4447+                          	global	_k
  4448+                          	global	_k
  4449+                          
  4450+                          	DABS	1,124,2	;_k
  4451+ 0000                     	_k	set	0x7C
  4452+                          
  4453+                          	psect	idata,class=CODE,delta=2,space=0
  4454+                          	file	"C:\Users\hardik\Desktop\LCD general file
      +                          s (with delay)\main.c"
  4455+                          	line	3
  4456+                          
  4457+                          ;initializer for _i
  4458+ 0723  3430               	retlw	030h
  4459+ 0724  3400               	retlw	0
  4460+                          
  4461+                          ;initializer for _j
  4462+ 0725  3430               	retlw	030h
  4463+ 0726  3400               	retlw	0
  4464+                          
  4465+                          ;initializer for _k
  4466+ 0727  3430               	retlw	030h
  4467+ 0728  3400               	retlw	0
  4468+                          	psect	strings,class=CODE,delta=2,reloc=256
  4469+                          	global	stringdir,stringtab,__stringbase,string
      +                          jmp
  4470+ 0700                     stringtab:
  4471+ 0700  00FE               	movwf	(btemp)&07Fh
  4472+ 0701  1FFE               	btfss	(btemp)&07Fh,7
  4473+ 0702  2F08               	goto	stringcode
  4474+ 0703  1383               	bcf	status,7
  4475+ 0704  187E               	btfsc	btemp&7Fh,0
  4476+ 0705  1783               	bsf	status,7
  4477+ 0706  0800               	movf	indf,w
  4478+ 0707  0008               	return
  4479+ 0708                     stringcode:
  4480+ 0708  0804               	movf	fsr,w
  4481+ 0709                     stringdir:
  4482+ 0709  00FE               movwf btemp&07Fh
  4483+ 070A  3007               movlw high(stringdir)
  4484+ 070B  008A               movwf pclath
  4485+ 070C  087E               movf btemp&07Fh,w
  4486+ 070D                     stringjmp:
  4487+ 070D  0782               	addwf pc
  4488+ 070E                     __stringbase:
  4489+ 070E  3400               	retlw	0
  4490+                          	global	_ADCON0
  4491+                          	global	_ADCON0
  4492+ 0000                     	_ADCON0	set	0x1F
  4493+                          
  4494+                          	global	_ADCON1
  4495+                          	global	_ADCON1
  4496+ 0000                     	_ADCON1	set	0x9F
  4497+                          
  4498+                          	global	_ADRESH
  4499+                          	global	_ADRESH
  4500+ 0000                     	_ADRESH	set	0x1E
  4501+                          
  4502+                          	global	_ADRESL
  4503+                          	global	_ADRESL
  4504+ 0000                     	_ADRESL	set	0x9E
  4505+                          
  4506+                          	global	_CCP1CON
  4507+                          	global	_CCP1CON
  4508+ 0000                     	_CCP1CON	set	0x17
  4509+                          
  4510+                          	global	_CCP2CON
  4511+                          	global	_CCP2CON
  4512+ 0000                     	_CCP2CON	set	0x1D
  4513+                          
  4514+                          	global	_CCPR1H
  4515+                          	global	_CCPR1H
  4516+ 0000                     	_CCPR1H	set	0x16
  4517+                          
  4518+                          	global	_CCPR1L
  4519+                          	global	_CCPR1L
  4520+ 0000                     	_CCPR1L	set	0x15
  4521+                          
  4522+                          	global	_CCPR2H
  4523+                          	global	_CCPR2H
  4524+ 0000                     	_CCPR2H	set	0x1C
  4525+                          
  4526+                          	global	_CCPR2L
  4527+                          	global	_CCPR2L
  4528+ 0000                     	_CCPR2L	set	0x1B
  4529+                          
  4530+                          	global	_CMCON
  4531+                          	global	_CMCON
  4532+ 0000                     	_CMCON	set	0x9C
  4533+                          
  4534+                          	global	_CVRCON
  4535+                          	global	_CVRCON
  4536+ 0000                     	_CVRCON	set	0x9D
  4537+                          
  4538+                          	global	_EEADR
  4539+                          	global	_EEADR
  4540+ 0000                     	_EEADR	set	0x10D
  4541+                          
  4542+                          	global	_EEADRH
  4543+                          	global	_EEADRH
  4544+ 0000                     	_EEADRH	set	0x10F
  4545+                          
  4546+                          	global	_EEADRL
  4547+                          	global	_EEADRL
  4548+ 0000                     	_EEADRL	set	0x10D
  4549+                          
  4550+                          	global	_EECON1
  4551+                          	global	_EECON1
  4552+ 0000                     	_EECON1	set	0x18C
  4553+                          
  4554+                          	global	_EECON2
  4555+                          	global	_EECON2
  4556+ 0000                     	_EECON2	set	0x18D
  4557+                          
  4558+                          	global	_EEDATA
  4559+                          	global	_EEDATA
  4560+ 0000                     	_EEDATA	set	0x10C
  4561+                          
  4562+                          	global	_EEDATH
  4563+                          	global	_EEDATH
  4564+ 0000                     	_EEDATH	set	0x10E
  4565+                          
  4566+                          	global	_FSR
  4567+                          	global	_FSR
  4568+ 0000                     	_FSR	set	0x4
  4569+                          
  4570+                          	global	_INDF
  4571+                          	global	_INDF
  4572+ 0000                     	_INDF	set	0x0
  4573+                          
  4574+                          	global	_INTCON
  4575+                          	global	_INTCON
  4576+ 0000                     	_INTCON	set	0xB
  4577+                          
  4578+                          	global	_OPTION
  4579+                          	global	_OPTION
  4580+ 0000                     	_OPTION	set	0x81
  4581+                          
  4582+                          	global	_PCL
  4583+                          	global	_PCL
  4584+ 0000                     	_PCL	set	0x2
  4585+                          
  4586+                          	global	_PCLATH
  4587+                          	global	_PCLATH
  4588+ 0000                     	_PCLATH	set	0xA
  4589+                          
  4590+                          	global	_PCON
  4591+                          	global	_PCON
  4592+ 0000                     	_PCON	set	0x8E
  4593+                          
  4594+                          	global	_PIE1
  4595+                          	global	_PIE1
  4596+ 0000                     	_PIE1	set	0x8C
  4597+                          
  4598+                          	global	_PIE2
  4599+                          	global	_PIE2
  4600+ 0000                     	_PIE2	set	0x8D
  4601+                          
  4602+                          	global	_PIR1
  4603+                          	global	_PIR1
  4604+ 0000                     	_PIR1	set	0xC
  4605+                          
  4606+                          	global	_PIR2
  4607+                          	global	_PIR2
  4608+ 0000                     	_PIR2	set	0xD
  4609+                          
  4610+                          	global	_PORTA
  4611+                          	global	_PORTA
  4612+ 0000                     	_PORTA	set	0x5
  4613+                          
  4614+                          	global	_PORTB
  4615+                          	global	_PORTB
  4616+ 0000                     	_PORTB	set	0x6
  4617+                          
  4618+                          	global	_PORTC
  4619+                          	global	_PORTC
  4620+ 0000                     	_PORTC	set	0x7
  4621+                          
  4622+                          	global	_PORTD
  4623+ 0000                     	_PORTD	set	0x8
  4624+                          
  4625+                          	global	_PORTE
  4626+                          	global	_PORTE
  4627+ 0000                     	_PORTE	set	0x9
  4628+                          
  4629+                          	global	_PR2
  4630+                          	global	_PR2
  4631+ 0000                     	_PR2	set	0x92
  4632+                          
  4633+                          	global	_RCREG
  4634+                          	global	_RCREG
  4635+ 0000                     	_RCREG	set	0x1A
  4636+                          
  4637+                          	global	_RCSTA
  4638+                          	global	_RCSTA
  4639+ 0000                     	_RCSTA	set	0x18
  4640+                          
  4641+                          	global	_SPBRG
  4642+                          	global	_SPBRG
  4643+ 0000                     	_SPBRG	set	0x99
  4644+                          
  4645+                          	global	_SSPADD
  4646+                          	global	_SSPADD
  4647+ 0000                     	_SSPADD	set	0x93
  4648+                          
  4649+                          	global	_SSPBUF
  4650+                          	global	_SSPBUF
  4651+ 0000                     	_SSPBUF	set	0x13
  4652+                          
  4653+                          	global	_SSPCON
  4654+                          	global	_SSPCON
  4655+ 0000                     	_SSPCON	set	0x14
  4656+                          
  4657+                          	global	_SSPCON2
  4658+                          	global	_SSPCON2
  4659+ 0000                     	_SSPCON2	set	0x91
  4660+                          
  4661+                          	global	_SSPSTAT
  4662+                          	global	_SSPSTAT
  4663+ 0000                     	_SSPSTAT	set	0x94
  4664+                          
  4665+                          	global	_STATUS
  4666+                          	global	_STATUS
  4667+ 0000                     	_STATUS	set	0x3
  4668+                          
  4669+                          	global	_T1CON
  4670+                          	global	_T1CON
  4671+ 0000                     	_T1CON	set	0x10
  4672+                          
  4673+                          	global	_T2CON
  4674+                          	global	_T2CON
  4675+ 0000                     	_T2CON	set	0x12
  4676+                          
  4677+                          	global	_TMR0
  4678+                          	global	_TMR0
  4679+ 0000                     	_TMR0	set	0x1
  4680+                          
  4681+                          	global	_TMR1H
  4682+                          	global	_TMR1H
  4683+ 0000                     	_TMR1H	set	0xF
  4684+                          
  4685+                          	global	_TMR1L
  4686+                          	global	_TMR1L
  4687+ 0000                     	_TMR1L	set	0xE
  4688+                          
  4689+                          	global	_TMR2
  4690+                          	global	_TMR2
  4691+ 0000                     	_TMR2	set	0x11
  4692+                          
  4693+                          	global	_TRISA
  4694+                          	global	_TRISA
  4695+ 0000                     	_TRISA	set	0x85
  4696+                          
  4697+                          	global	_TRISB
  4698+                          	global	_TRISB
  4699+ 0000                     	_TRISB	set	0x86
  4700+                          
  4701+                          	global	_TRISC
  4702+                          	global	_TRISC
  4703+ 0000                     	_TRISC	set	0x87
  4704+                          
  4705+                          	global	_TRISD
  4706+ 0000                     	_TRISD	set	0x88
  4707+                          
  4708+                          	global	_TRISE
  4709+                          	global	_TRISE
  4710+ 0000                     	_TRISE	set	0x89
  4711+                          
  4712+                          	global	_TXREG
  4713+                          	global	_TXREG
  4714+ 0000                     	_TXREG	set	0x19
  4715+                          
  4716+                          	global	_TXSTA
  4717+                          	global	_TXSTA
  4718+ 0000                     	_TXSTA	set	0x98
  4719+                          
  4720+                          	global	_ACKDT
  4721+                          	global	_ACKDT
  4722+ 0000                     	_ACKDT	set	0x48D	;byte address: 0x91
  4723+                          
  4724+                          	global	_ACKEN
  4725+                          	global	_ACKEN
  4726+ 0000                     	_ACKEN	set	0x48C	;byte address: 0x91
  4727+                          
  4728+                          	global	_ACKSTAT
  4729+                          	global	_ACKSTAT
  4730+ 0000                     	_ACKSTAT	set	0x48E	;byte address: 0x91
  4731+                          
  4732+                          	global	_ADCS0
  4733+                          	global	_ADCS0
  4734+ 0000                     	_ADCS0	set	0xFE	;byte address: 0x1F
  4735+                          
  4736+                          	global	_ADCS1
  4737+                          	global	_ADCS1
  4738+ 0000                     	_ADCS1	set	0xFF	;byte address: 0x1F
  4739+                          
  4740+                          	global	_ADCS2
  4741+                          	global	_ADCS2
  4742+ 0000                     	_ADCS2	set	0x4FE	;byte address: 0x9F
  4743+                          
  4744+                          	global	_ADDEN
  4745+                          	global	_ADDEN
  4746+ 0000                     	_ADDEN	set	0xC3	;byte address: 0x18
  4747+                          
  4748+                          	global	_ADFM
  4749+                          	global	_ADFM
  4750+ 0000                     	_ADFM	set	0x4FF	;byte address: 0x9F
  4751+                          
  4752+                          	global	_ADGO
  4753+                          	global	_ADGO
  4754+ 0000                     	_ADGO	set	0xFA	;byte address: 0x1F
  4755+                          
  4756+                          	global	_ADIE
  4757+                          	global	_ADIE
  4758+ 0000                     	_ADIE	set	0x466	;byte address: 0x8C
  4759+                          
  4760+                          	global	_ADIF
  4761+                          	global	_ADIF
  4762+ 0000                     	_ADIF	set	0x66	;byte address: 0xC
  4763+                          
  4764+                          	global	_ADON
  4765+                          	global	_ADON
  4766+ 0000                     	_ADON	set	0xF8	;byte address: 0x1F
  4767+                          
  4768+                          	global	_BCLIE
  4769+                          	global	_BCLIE
  4770+ 0000                     	_BCLIE	set	0x46B	;byte address: 0x8D
  4771+                          
  4772+                          	global	_BCLIF
  4773+                          	global	_BCLIF
  4774+ 0000                     	_BCLIF	set	0x6B	;byte address: 0xD
  4775+                          
  4776+                          	global	_BF
  4777+                          	global	_BF
  4778+ 0000                     	_BF	set	0x4A0	;byte address: 0x94
  4779+                          
  4780+                          	global	_BOR
  4781+                          	global	_BOR
  4782+ 0000                     	_BOR	set	0x470	;byte address: 0x8E
  4783+                          
  4784+                          	global	_BRGH
  4785+                          	global	_BRGH
  4786+ 0000                     	_BRGH	set	0x4C2	;byte address: 0x98
  4787+                          
  4788+                          	global	_C1INV
  4789+                          	global	_C1INV
  4790+ 0000                     	_C1INV	set	0x4E4	;byte address: 0x9C
  4791+                          
  4792+                          	global	_C1OUT
  4793+                          	global	_C1OUT
  4794+ 0000                     	_C1OUT	set	0x4E6	;byte address: 0x9C
  4795+                          
  4796+                          	global	_C2INV
  4797+                          	global	_C2INV
  4798+ 0000                     	_C2INV	set	0x4E5	;byte address: 0x9C
  4799+                          
  4800+                          	global	_C2OUT
  4801+                          	global	_C2OUT
  4802+ 0000                     	_C2OUT	set	0x4E7	;byte address: 0x9C
  4803+                          
  4804+                          	global	_CARRY
  4805+                          	global	_CARRY
  4806+ 0000                     	_CARRY	set	0x18	;byte address: 0x3
  4807+                          
  4808+                          	global	_CCP1IE
  4809+                          	global	_CCP1IE
  4810+ 0000                     	_CCP1IE	set	0x462	;byte address: 0x8C
  4811+                          
  4812+                          	global	_CCP1IF
  4813+                          	global	_CCP1IF
  4814+ 0000                     	_CCP1IF	set	0x62	;byte address: 0xC
  4815+                          
  4816+                          	global	_CCP1M0
  4817+                          	global	_CCP1M0
  4818+ 0000                     	_CCP1M0	set	0xB8	;byte address: 0x17
  4819+                          
  4820+                          	global	_CCP1M1
  4821+                          	global	_CCP1M1
  4822+ 0000                     	_CCP1M1	set	0xB9	;byte address: 0x17
  4823+                          
  4824+                          	global	_CCP1M2
  4825+                          	global	_CCP1M2
  4826+ 0000                     	_CCP1M2	set	0xBA	;byte address: 0x17
  4827+                          
  4828+                          	global	_CCP1M3
  4829+                          	global	_CCP1M3
  4830+ 0000                     	_CCP1M3	set	0xBB	;byte address: 0x17
  4831+                          
  4832+                          	global	_CCP1X
  4833+                          	global	_CCP1X
  4834+ 0000                     	_CCP1X	set	0xBD	;byte address: 0x17
  4835+                          
  4836+                          	global	_CCP1Y
  4837+                          	global	_CCP1Y
  4838+ 0000                     	_CCP1Y	set	0xBC	;byte address: 0x17
  4839+                          
  4840+                          	global	_CCP2IE
  4841+                          	global	_CCP2IE
  4842+ 0000                     	_CCP2IE	set	0x468	;byte address: 0x8D
  4843+                          
  4844+                          	global	_CCP2IF
  4845+                          	global	_CCP2IF
  4846+ 0000                     	_CCP2IF	set	0x68	;byte address: 0xD
  4847+                          
  4848+                          	global	_CCP2M0
  4849+                          	global	_CCP2M0
  4850+ 0000                     	_CCP2M0	set	0xE8	;byte address: 0x1D
  4851+                          
  4852+                          	global	_CCP2M1
  4853+                          	global	_CCP2M1
  4854+ 0000                     	_CCP2M1	set	0xE9	;byte address: 0x1D
  4855+                          
  4856+                          	global	_CCP2M2
  4857+                          	global	_CCP2M2
  4858+ 0000                     	_CCP2M2	set	0xEA	;byte address: 0x1D
  4859+                          
  4860+                          	global	_CCP2M3
  4861+                          	global	_CCP2M3
  4862+ 0000                     	_CCP2M3	set	0xEB	;byte address: 0x1D
  4863+                          
  4864+                          	global	_CCP2X
  4865+                          	global	_CCP2X
  4866+ 0000                     	_CCP2X	set	0xED	;byte address: 0x1D
  4867+                          
  4868+                          	global	_CCP2Y
  4869+                          	global	_CCP2Y
  4870+ 0000                     	_CCP2Y	set	0xEC	;byte address: 0x1D
  4871+                          
  4872+                          	global	_CHS0
  4873+                          	global	_CHS0
  4874+ 0000                     	_CHS0	set	0xFB	;byte address: 0x1F
  4875+                          
  4876+                          	global	_CHS1
  4877+                          	global	_CHS1
  4878+ 0000                     	_CHS1	set	0xFC	;byte address: 0x1F
  4879+                          
  4880+                          	global	_CHS2
  4881+                          	global	_CHS2
  4882+ 0000                     	_CHS2	set	0xFD	;byte address: 0x1F
  4883+                          
  4884+                          	global	_CIS
  4885+                          	global	_CIS
  4886+ 0000                     	_CIS	set	0x4E3	;byte address: 0x9C
  4887+                          
  4888+                          	global	_CKE
  4889+                          	global	_CKE
  4890+ 0000                     	_CKE	set	0x4A6	;byte address: 0x94
  4891+                          
  4892+                          	global	_CKP
  4893+                          	global	_CKP
  4894+ 0000                     	_CKP	set	0xA4	;byte address: 0x14
  4895+                          
  4896+                          	global	_CM0
  4897+                          	global	_CM0
  4898+ 0000                     	_CM0	set	0x4E0	;byte address: 0x9C
  4899+                          
  4900+                          	global	_CM1
  4901+                          	global	_CM1
  4902+ 0000                     	_CM1	set	0x4E1	;byte address: 0x9C
  4903+                          
  4904+                          	global	_CM2
  4905+                          	global	_CM2
  4906+ 0000                     	_CM2	set	0x4E2	;byte address: 0x9C
  4907+                          
  4908+                          	global	_CMIE
  4909+                          	global	_CMIE
  4910+ 0000                     	_CMIE	set	0x46E	;byte address: 0x8D
  4911+                          
  4912+                          	global	_CMIF
  4913+                          	global	_CMIF
  4914+ 0000                     	_CMIF	set	0x6E	;byte address: 0xD
  4915+                          
  4916+                          	global	_CREN
  4917+                          	global	_CREN
  4918+ 0000                     	_CREN	set	0xC4	;byte address: 0x18
  4919+                          
  4920+                          	global	_CSRC
  4921+                          	global	_CSRC
  4922+ 0000                     	_CSRC	set	0x4C7	;byte address: 0x98
  4923+                          
  4924+                          	global	_CVR0
  4925+                          	global	_CVR0
  4926+ 0000                     	_CVR0	set	0x4E8	;byte address: 0x9D
  4927+                          
  4928+                          	global	_CVR1
  4929+                          	global	_CVR1
  4930+ 0000                     	_CVR1	set	0x4E9	;byte address: 0x9D
  4931+                          
  4932+                          	global	_CVR2
  4933+                          	global	_CVR2
  4934+ 0000                     	_CVR2	set	0x4EA	;byte address: 0x9D
  4935+                          
  4936+                          	global	_CVR3
  4937+                          	global	_CVR3
  4938+ 0000                     	_CVR3	set	0x4EB	;byte address: 0x9D
  4939+                          
  4940+                          	global	_CVREN
  4941+                          	global	_CVREN
  4942+ 0000                     	_CVREN	set	0x4EF	;byte address: 0x9D
  4943+                          
  4944+                          	global	_CVROE
  4945+                          	global	_CVROE
  4946+ 0000                     	_CVROE	set	0x4EE	;byte address: 0x9D
  4947+                          
  4948+                          	global	_CVRR
  4949+                          	global	_CVRR
  4950+ 0000                     	_CVRR	set	0x4ED	;byte address: 0x9D
  4951+                          
  4952+                          	global	_DA
  4953+                          	global	_DA
  4954+ 0000                     	_DA	set	0x4A5	;byte address: 0x94
  4955+                          
  4956+                          	global	_DC
  4957+                          	global	_DC
  4958+ 0000                     	_DC	set	0x19	;byte address: 0x3
  4959+                          
  4960+                          	global	_EEIE
  4961+                          	global	_EEIE
  4962+ 0000                     	_EEIE	set	0x46C	;byte address: 0x8D
  4963+                          
  4964+                          	global	_EEIF
  4965+                          	global	_EEIF
  4966+ 0000                     	_EEIF	set	0x6C	;byte address: 0xD
  4967+                          
  4968+                          	global	_EEPGD
  4969+                          	global	_EEPGD
  4970+ 0000                     	_EEPGD	set	0xC67	;byte address: 0x18C
  4971+                          
  4972+                          	global	_FERR
  4973+                          	global	_FERR
  4974+ 0000                     	_FERR	set	0xC2	;byte address: 0x18
  4975+                          
  4976+                          	global	_GCEN
  4977+                          	global	_GCEN
  4978+ 0000                     	_GCEN	set	0x48F	;byte address: 0x91
  4979+                          
  4980+                          	global	_GIE
  4981+                          	global	_GIE
  4982+ 0000                     	_GIE	set	0x5F	;byte address: 0xB
  4983+                          
  4984+                          	global	_GODONE
  4985+                          	global	_GODONE
  4986+ 0000                     	_GODONE	set	0xFA	;byte address: 0x1F
  4987+                          
  4988+                          	global	_IBF
  4989+                          	global	_IBF
  4990+ 0000                     	_IBF	set	0x44F	;byte address: 0x89
  4991+                          
  4992+                          	global	_IBOV
  4993+                          	global	_IBOV
  4994+ 0000                     	_IBOV	set	0x44D	;byte address: 0x89
  4995+                          
  4996+                          	global	_INTE
  4997+                          	global	_INTE
  4998+ 0000                     	_INTE	set	0x5C	;byte address: 0xB
  4999+                          
  5000+                          	global	_INTEDG
  5001+                          	global	_INTEDG
  5002+ 0000                     	_INTEDG	set	0x40E	;byte address: 0x81
  5003+                          
  5004+                          	global	_INTF
  5005+                          	global	_INTF
  5006+ 0000                     	_INTF	set	0x59	;byte address: 0xB
  5007+                          
  5008+                          	global	_IRP
  5009+                          	global	_IRP
  5010+ 0000                     	_IRP	set	0x1F	;byte address: 0x3
  5011+                          
  5012+                          	global	_OBF
  5013+                          	global	_OBF
  5014+ 0000                     	_OBF	set	0x44E	;byte address: 0x89
  5015+                          
  5016+                          	global	_OERR
  5017+                          	global	_OERR
  5018+ 0000                     	_OERR	set	0xC1	;byte address: 0x18
  5019+                          
  5020+                          	global	_PCFG0
  5021+                          	global	_PCFG0
  5022+ 0000                     	_PCFG0	set	0x4F8	;byte address: 0x9F
  5023+                          
  5024+                          	global	_PCFG1
  5025+                          	global	_PCFG1
  5026+ 0000                     	_PCFG1	set	0x4F9	;byte address: 0x9F
  5027+                          
  5028+                          	global	_PCFG2
  5029+                          	global	_PCFG2
  5030+ 0000                     	_PCFG2	set	0x4FA	;byte address: 0x9F
  5031+                          
  5032+                          	global	_PCFG3
  5033+                          	global	_PCFG3
  5034+ 0000                     	_PCFG3	set	0x4FB	;byte address: 0x9F
  5035+                          
  5036+                          	global	_PD
  5037+                          	global	_PD
  5038+ 0000                     	_PD	set	0x1B	;byte address: 0x3
  5039+                          
  5040+                          	global	_PEIE
  5041+                          	global	_PEIE
  5042+ 0000                     	_PEIE	set	0x5E	;byte address: 0xB
  5043+                          
  5044+                          	global	_PEN
  5045+                          	global	_PEN
  5046+ 0000                     	_PEN	set	0x48A	;byte address: 0x91
  5047+                          
  5048+                          	global	_POR
  5049+                          	global	_POR
  5050+ 0000                     	_POR	set	0x471	;byte address: 0x8E
  5051+                          
  5052+                          	global	_PS0
  5053+                          	global	_PS0
  5054+ 0000                     	_PS0	set	0x408	;byte address: 0x81
  5055+                          
  5056+                          	global	_PS1
  5057+                          	global	_PS1
  5058+ 0000                     	_PS1	set	0x409	;byte address: 0x81
  5059+                          
  5060+                          	global	_PS2
  5061+                          	global	_PS2
  5062+ 0000                     	_PS2	set	0x40A	;byte address: 0x81
  5063+                          
  5064+                          	global	_PSA
  5065+                          	global	_PSA
  5066+ 0000                     	_PSA	set	0x40B	;byte address: 0x81
  5067+                          
  5068+                          	global	_PSPIE
  5069+                          	global	_PSPIE
  5070+ 0000                     	_PSPIE	set	0x467	;byte address: 0x8C
  5071+                          
  5072+                          	global	_PSPIF
  5073+                          	global	_PSPIF
  5074+ 0000                     	_PSPIF	set	0x67	;byte address: 0xC
  5075+                          
  5076+                          	global	_PSPMODE
  5077+                          	global	_PSPMODE
  5078+ 0000                     	_PSPMODE	set	0x44C	;byte address: 0x89
  5079+                          
  5080+                          	global	_RA0
  5081+                          	global	_RA0
  5082+ 0000                     	_RA0	set	0x28	;byte address: 0x5
  5083+                          
  5084+                          	global	_RA1
  5085+                          	global	_RA1
  5086+ 0000                     	_RA1	set	0x29	;byte address: 0x5
  5087+                          
  5088+                          	global	_RA2
  5089+                          	global	_RA2
  5090+ 0000                     	_RA2	set	0x2A	;byte address: 0x5
  5091+                          
  5092+                          	global	_RA3
  5093+                          	global	_RA3
  5094+ 0000                     	_RA3	set	0x2B	;byte address: 0x5
  5095+                          
  5096+                          	global	_RA4
  5097+                          	global	_RA4
  5098+ 0000                     	_RA4	set	0x2C	;byte address: 0x5
  5099+                          
  5100+                          	global	_RA5
  5101+                          	global	_RA5
  5102+ 0000                     	_RA5	set	0x2D	;byte address: 0x5
  5103+                          
  5104+                          	global	_RB0
  5105+                          	global	_RB0
  5106+ 0000                     	_RB0	set	0x30	;byte address: 0x6
  5107+                          
  5108+                          	global	_RB1
  5109+                          	global	_RB1
  5110+ 0000                     	_RB1	set	0x31	;byte address: 0x6
  5111+                          
  5112+                          	global	_RB2
  5113+                          	global	_RB2
  5114+ 0000                     	_RB2	set	0x32	;byte address: 0x6
  5115+                          
  5116+                          	global	_RB3
  5117+                          	global	_RB3
  5118+ 0000                     	_RB3	set	0x33	;byte address: 0x6
  5119+                          
  5120+                          	global	_RB4
  5121+                          	global	_RB4
  5122+ 0000                     	_RB4	set	0x34	;byte address: 0x6
  5123+                          
  5124+                          	global	_RB5
  5125+                          	global	_RB5
  5126+ 0000                     	_RB5	set	0x35	;byte address: 0x6
  5127+                          
  5128+                          	global	_RB6
  5129+                          	global	_RB6
  5130+ 0000                     	_RB6	set	0x36	;byte address: 0x6
  5131+                          
  5132+                          	global	_RB7
  5133+                          	global	_RB7
  5134+ 0000                     	_RB7	set	0x37	;byte address: 0x6
  5135+                          
  5136+                          	global	_RBIE
  5137+                          	global	_RBIE
  5138+ 0000                     	_RBIE	set	0x5B	;byte address: 0xB
  5139+                          
  5140+                          	global	_RBIF
  5141+                          	global	_RBIF
  5142+ 0000                     	_RBIF	set	0x58	;byte address: 0xB
  5143+                          
  5144+                          	global	_RBPU
  5145+                          	global	_RBPU
  5146+ 0000                     	_RBPU	set	0x40F	;byte address: 0x81
  5147+                          
  5148+                          	global	_RC0
  5149+                          	global	_RC0
  5150+ 0000                     	_RC0	set	0x38	;byte address: 0x7
  5151+                          
  5152+                          	global	_RC1
  5153+                          	global	_RC1
  5154+ 0000                     	_RC1	set	0x39	;byte address: 0x7
  5155+                          
  5156+                          	global	_RC2
  5157+                          	global	_RC2
  5158+ 0000                     	_RC2	set	0x3A	;byte address: 0x7
  5159+                          
  5160+                          	global	_RC3
  5161+                          	global	_RC3
  5162+ 0000                     	_RC3	set	0x3B	;byte address: 0x7
  5163+                          
  5164+                          	global	_RC4
  5165+                          	global	_RC4
  5166+ 0000                     	_RC4	set	0x3C	;byte address: 0x7
  5167+                          
  5168+                          	global	_RC5
  5169+                          	global	_RC5
  5170+ 0000                     	_RC5	set	0x3D	;byte address: 0x7
  5171+                          
  5172+                          	global	_RC6
  5173+                          	global	_RC6
  5174+ 0000                     	_RC6	set	0x3E	;byte address: 0x7
  5175+                          
  5176+                          	global	_RC7
  5177+                          	global	_RC7
  5178+ 0000                     	_RC7	set	0x3F	;byte address: 0x7
  5179+                          
  5180+                          	global	_RCEN
  5181+                          	global	_RCEN
  5182+ 0000                     	_RCEN	set	0x48B	;byte address: 0x91
  5183+                          
  5184+                          	global	_RCIE
  5185+                          	global	_RCIE
  5186+ 0000                     	_RCIE	set	0x465	;byte address: 0x8C
  5187+                          
  5188+                          	global	_RCIF
  5189+                          	global	_RCIF
  5190+ 0000                     	_RCIF	set	0x65	;byte address: 0xC
  5191+                          
  5192+                          	global	_RD
  5193+                          	global	_RD
  5194+ 0000                     	_RD	set	0xC60	;byte address: 0x18C
  5195+                          
  5196+                          	global	_RD0
  5197+                          	global	_RD0
  5198+ 0000                     	_RD0	set	0x40	;byte address: 0x8
  5199+                          
  5200+                          	global	_RD1
  5201+                          	global	_RD1
  5202+ 0000                     	_RD1	set	0x41	;byte address: 0x8
  5203+                          
  5204+                          	global	_RD2
  5205+ 0000                     	_RD2	set	0x42	;byte address: 0x8
  5206+                          
  5207+                          	global	_RD3
  5208+ 0000                     	_RD3	set	0x43	;byte address: 0x8
  5209+                          
  5210+                          	global	_RD4
  5211+                          	global	_RD4
  5212+ 0000                     	_RD4	set	0x44	;byte address: 0x8
  5213+                          
  5214+                          	global	_RD5
  5215+                          	global	_RD5
  5216+ 0000                     	_RD5	set	0x45	;byte address: 0x8
  5217+                          
  5218+                          	global	_RD6
  5219+                          	global	_RD6
  5220+ 0000                     	_RD6	set	0x46	;byte address: 0x8
  5221+                          
  5222+                          	global	_RD7
  5223+                          	global	_RD7
  5224+ 0000                     	_RD7	set	0x47	;byte address: 0x8
  5225+                          
  5226+                          	global	_RE0
  5227+                          	global	_RE0
  5228+ 0000                     	_RE0	set	0x48	;byte address: 0x9
  5229+                          
  5230+                          	global	_RE1
  5231+                          	global	_RE1
  5232+ 0000                     	_RE1	set	0x49	;byte address: 0x9
  5233+                          
  5234+                          	global	_RE2
  5235+                          	global	_RE2
  5236+ 0000                     	_RE2	set	0x4A	;byte address: 0x9
  5237+                          
  5238+                          	global	_RP0
  5239+                          	global	_RP0
  5240+ 0000                     	_RP0	set	0x1D	;byte address: 0x3
  5241+                          
  5242+                          	global	_RP1
  5243+                          	global	_RP1
  5244+ 0000                     	_RP1	set	0x1E	;byte address: 0x3
  5245+                          
  5246+                          	global	_RSEN
  5247+                          	global	_RSEN
  5248+ 0000                     	_RSEN	set	0x489	;byte address: 0x91
  5249+                          
  5250+                          	global	_RW
  5251+                          	global	_RW
  5252+ 0000                     	_RW	set	0x4A2	;byte address: 0x94
  5253+                          
  5254+                          	global	_RX9
  5255+                          	global	_RX9
  5256+ 0000                     	_RX9	set	0xC6	;byte address: 0x18
  5257+                          
  5258+                          	global	_RX9D
  5259+                          	global	_RX9D
  5260+ 0000                     	_RX9D	set	0xC0	;byte address: 0x18
  5261+                          
  5262+                          	global	_SEN
  5263+                          	global	_SEN
  5264+ 0000                     	_SEN	set	0x488	;byte address: 0x91
  5265+                          
  5266+                          	global	_SMP
  5267+                          	global	_SMP
  5268+ 0000                     	_SMP	set	0x4A7	;byte address: 0x94
  5269+                          
  5270+                          	global	_SPEN
  5271+                          	global	_SPEN
  5272+ 0000                     	_SPEN	set	0xC7	;byte address: 0x18
  5273+                          
  5274+                          	global	_SREN
  5275+                          	global	_SREN
  5276+ 0000                     	_SREN	set	0xC5	;byte address: 0x18
  5277+                          
  5278+                          	global	_SSPEN
  5279+                          	global	_SSPEN
  5280+ 0000                     	_SSPEN	set	0xA5	;byte address: 0x14
  5281+                          
  5282+                          	global	_SSPIE
  5283+                          	global	_SSPIE
  5284+ 0000                     	_SSPIE	set	0x463	;byte address: 0x8C
  5285+                          
  5286+                          	global	_SSPIF
  5287+                          	global	_SSPIF
  5288+ 0000                     	_SSPIF	set	0x63	;byte address: 0xC
  5289+                          
  5290+                          	global	_SSPM0
  5291+                          	global	_SSPM0
  5292+ 0000                     	_SSPM0	set	0xA0	;byte address: 0x14
  5293+                          
  5294+                          	global	_SSPM1
  5295+                          	global	_SSPM1
  5296+ 0000                     	_SSPM1	set	0xA1	;byte address: 0x14
  5297+                          
  5298+                          	global	_SSPM2
  5299+                          	global	_SSPM2
  5300+ 0000                     	_SSPM2	set	0xA2	;byte address: 0x14
  5301+                          
  5302+                          	global	_SSPM3
  5303+                          	global	_SSPM3
  5304+ 0000                     	_SSPM3	set	0xA3	;byte address: 0x14
  5305+                          
  5306+                          	global	_SSPOV
  5307+                          	global	_SSPOV
  5308+ 0000                     	_SSPOV	set	0xA6	;byte address: 0x14
  5309+                          
  5310+                          	global	_START
  5311+                          	global	_START
  5312+ 0000                     	_START	set	0x4A3	;byte address: 0x94
  5313+                          
  5314+                          	global	_STOP
  5315+                          	global	_STOP
  5316+ 0000                     	_STOP	set	0x4A4	;byte address: 0x94
  5317+                          
  5318+                          	global	_SYNC
  5319+                          	global	_SYNC
  5320+ 0000                     	_SYNC	set	0x4C4	;byte address: 0x98
  5321+                          
  5322+                          	global	_T0CS
  5323+                          	global	_T0CS
  5324+ 0000                     	_T0CS	set	0x40D	;byte address: 0x81
  5325+                          
  5326+                          	global	_T0IE
  5327+                          	global	_T0IE
  5328+ 0000                     	_T0IE	set	0x5D	;byte address: 0xB
  5329+                          
  5330+                          	global	_T0IF
  5331+                          	global	_T0IF
  5332+ 0000                     	_T0IF	set	0x5A	;byte address: 0xB
  5333+                          
  5334+                          	global	_T0SE
  5335+                          	global	_T0SE
  5336+ 0000                     	_T0SE	set	0x40C	;byte address: 0x81
  5337+                          
  5338+                          	global	_T1CKPS0
  5339+                          	global	_T1CKPS0
  5340+ 0000                     	_T1CKPS0	set	0x84	;byte address: 0x10
  5341+                          
  5342+                          	global	_T1CKPS1
  5343+                          	global	_T1CKPS1
  5344+ 0000                     	_T1CKPS1	set	0x85	;byte address: 0x10
  5345+                          
  5346+                          	global	_T1OSCEN
  5347+                          	global	_T1OSCEN
  5348+ 0000                     	_T1OSCEN	set	0x83	;byte address: 0x10
  5349+                          
  5350+                          	global	_T1SYNC
  5351+                          	global	_T1SYNC
  5352+ 0000                     	_T1SYNC	set	0x82	;byte address: 0x10
  5353+                          
  5354+                          	global	_T2CKPS0
  5355+                          	global	_T2CKPS0
  5356+ 0000                     	_T2CKPS0	set	0x90	;byte address: 0x12
  5357+                          
  5358+                          	global	_T2CKPS1
  5359+                          	global	_T2CKPS1
  5360+ 0000                     	_T2CKPS1	set	0x91	;byte address: 0x12
  5361+                          
  5362+                          	global	_TMR0IE
  5363+                          	global	_TMR0IE
  5364+ 0000                     	_TMR0IE	set	0x5D	;byte address: 0xB
  5365+                          
  5366+                          	global	_TMR0IF
  5367+                          	global	_TMR0IF
  5368+ 0000                     	_TMR0IF	set	0x5A	;byte address: 0xB
  5369+                          
  5370+                          	global	_TMR1CS
  5371+                          	global	_TMR1CS
  5372+ 0000                     	_TMR1CS	set	0x81	;byte address: 0x10
  5373+                          
  5374+                          	global	_TMR1IE
  5375+                          	global	_TMR1IE
  5376+ 0000                     	_TMR1IE	set	0x460	;byte address: 0x8C
  5377+                          
  5378+                          	global	_TMR1IF
  5379+                          	global	_TMR1IF
  5380+ 0000                     	_TMR1IF	set	0x60	;byte address: 0xC
  5381+                          
  5382+                          	global	_TMR1ON
  5383+                          	global	_TMR1ON
  5384+ 0000                     	_TMR1ON	set	0x80	;byte address: 0x10
  5385+                          
  5386+                          	global	_TMR2IE
  5387+                          	global	_TMR2IE
  5388+ 0000                     	_TMR2IE	set	0x461	;byte address: 0x8C
  5389+                          
  5390+                          	global	_TMR2IF
  5391+                          	global	_TMR2IF
  5392+ 0000                     	_TMR2IF	set	0x61	;byte address: 0xC
  5393+                          
  5394+                          	global	_TMR2ON
  5395+                          	global	_TMR2ON
  5396+ 0000                     	_TMR2ON	set	0x92	;byte address: 0x12
  5397+                          
  5398+                          	global	_TO
  5399+                          	global	_TO
  5400+ 0000                     	_TO	set	0x1C	;byte address: 0x3
  5401+                          
  5402+                          	global	_TOUTPS0
  5403+                          	global	_TOUTPS0
  5404+ 0000                     	_TOUTPS0	set	0x93	;byte address: 0x12
  5405+                          
  5406+                          	global	_TOUTPS1
  5407+                          	global	_TOUTPS1
  5408+ 0000                     	_TOUTPS1	set	0x94	;byte address: 0x12
  5409+                          
  5410+                          	global	_TOUTPS2
  5411+                          	global	_TOUTPS2
  5412+ 0000                     	_TOUTPS2	set	0x95	;byte address: 0x12
  5413+                          
  5414+                          	global	_TOUTPS3
  5415+                          	global	_TOUTPS3
  5416+ 0000                     	_TOUTPS3	set	0x96	;byte address: 0x12
  5417+                          
  5418+                          	global	_TRISA0
  5419+                          	global	_TRISA0
  5420+ 0000                     	_TRISA0	set	0x428	;byte address: 0x85
  5421+                          
  5422+                          	global	_TRISA1
  5423+                          	global	_TRISA1
  5424+ 0000                     	_TRISA1	set	0x429	;byte address: 0x85
  5425+                          
  5426+                          	global	_TRISA2
  5427+                          	global	_TRISA2
  5428+ 0000                     	_TRISA2	set	0x42A	;byte address: 0x85
  5429+                          
  5430+                          	global	_TRISA3
  5431+                          	global	_TRISA3
  5432+ 0000                     	_TRISA3	set	0x42B	;byte address: 0x85
  5433+                          
  5434+                          	global	_TRISA4
  5435+                          	global	_TRISA4
  5436+ 0000                     	_TRISA4	set	0x42C	;byte address: 0x85
  5437+                          
  5438+                          	global	_TRISA5
  5439+                          	global	_TRISA5
  5440+ 0000                     	_TRISA5	set	0x42D	;byte address: 0x85
  5441+                          
  5442+                          	global	_TRISB0
  5443+                          	global	_TRISB0
  5444+ 0000                     	_TRISB0	set	0x430	;byte address: 0x86
  5445+                          
  5446+                          	global	_TRISB1
  5447+                          	global	_TRISB1
  5448+ 0000                     	_TRISB1	set	0x431	;byte address: 0x86
  5449+                          
  5450+                          	global	_TRISB2
  5451+                          	global	_TRISB2
  5452+ 0000                     	_TRISB2	set	0x432	;byte address: 0x86
  5453+                          
  5454+                          	global	_TRISB3
  5455+                          	global	_TRISB3
  5456+ 0000                     	_TRISB3	set	0x433	;byte address: 0x86
  5457+                          
  5458+                          	global	_TRISB4
  5459+                          	global	_TRISB4
  5460+ 0000                     	_TRISB4	set	0x434	;byte address: 0x86
  5461+                          
  5462+                          	global	_TRISB5
  5463+                          	global	_TRISB5
  5464+ 0000                     	_TRISB5	set	0x435	;byte address: 0x86
  5465+                          
  5466+                          	global	_TRISB6
  5467+                          	global	_TRISB6
  5468+ 0000                     	_TRISB6	set	0x436	;byte address: 0x86
  5469+                          
  5470+                          	global	_TRISB7
  5471+                          	global	_TRISB7
  5472+ 0000                     	_TRISB7	set	0x437	;byte address: 0x86
  5473+                          
  5474+                          	global	_TRISC0
  5475+                          	global	_TRISC0
  5476+ 0000                     	_TRISC0	set	0x438	;byte address: 0x87
  5477+                          
  5478+                          	global	_TRISC1
  5479+                          	global	_TRISC1
  5480+ 0000                     	_TRISC1	set	0x439	;byte address: 0x87
  5481+                          
  5482+                          	global	_TRISC2
  5483+                          	global	_TRISC2
  5484+ 0000                     	_TRISC2	set	0x43A	;byte address: 0x87
  5485+                          
  5486+                          	global	_TRISC3
  5487+                          	global	_TRISC3
  5488+ 0000                     	_TRISC3	set	0x43B	;byte address: 0x87
  5489                           
  5490                           	global	_TRISC4
  5491                           	global	_TRISC4
  5492  0000                     	_TRISC4	set	0x43C	;byte address: 0x87
  5493                           
  5494                           	global	_TRISC5
  5495                           	global	_TRISC5
  5496  0000                     	_TRISC5	set	0x43D	;byte address: 0x87
  5497                           
  5498                           	global	_TRISC6
  5499                           	global	_TRISC6
  5500  0000                     	_TRISC6	set	0x43E	;byte address: 0x87
  5501                           
  5502                           	global	_TRISC7
  5503                           	global	_TRISC7
  5504  0000                     	_TRISC7	set	0x43F	;byte address: 0x87
  5505                           
  5506                           	global	_TRISD0
  5507                           	global	_TRISD0
  5508  0000                     	_TRISD0	set	0x440	;byte address: 0x88
  5509                           
  5510                           	global	_TRISD1
  5511                           	global	_TRISD1
  5512  0000                     	_TRISD1	set	0x441	;byte address: 0x88
  5513                           
  5514                           	global	_TRISD2
  5515                           	global	_TRISD2
  5516  0000                     	_TRISD2	set	0x442	;byte address: 0x88
  5517                           
  5518                           	global	_TRISD3
  5519                           	global	_TRISD3
  5520  0000                     	_TRISD3	set	0x443	;byte address: 0x88
  5521                           
  5522                           	global	_TRISD4
  5523                           	global	_TRISD4
  5524  0000                     	_TRISD4	set	0x444	;byte address: 0x88
  5525                           
  5526                           	global	_TRISD5
  5527                           	global	_TRISD5
  5528  0000                     	_TRISD5	set	0x445	;byte address: 0x88
  5529                           
  5530                           	global	_TRISD6
  5531                           	global	_TRISD6
  5532  0000                     	_TRISD6	set	0x446	;byte address: 0x88
  5533                           
  5534                           	global	_TRISD7
  5535                           	global	_TRISD7
  5536  0000                     	_TRISD7	set	0x447	;byte address: 0x88
  5537                           
  5538                           	global	_TRISE0
  5539                           	global	_TRISE0
  5540  0000                     	_TRISE0	set	0x448	;byte address: 0x89
  5541                           
  5542                           	global	_TRISE1
  5543                           	global	_TRISE1
  5544  0000                     	_TRISE1	set	0x449	;byte address: 0x89
  5545                           
  5546                           	global	_TRISE2
  5547                           	global	_TRISE2
  5548  0000                     	_TRISE2	set	0x44A	;byte address: 0x89
  5549                           
  5550                           	global	_TRMT
  5551                           	global	_TRMT
  5552  0000                     	_TRMT	set	0x4C1	;byte address: 0x98
  5553                           
  5554                           	global	_TX9
  5555                           	global	_TX9
  5556  0000                     	_TX9	set	0x4C6	;byte address: 0x98
  5557                           
  5558                           	global	_TX9D
  5559                           	global	_TX9D
  5560  0000                     	_TX9D	set	0x4C0	;byte address: 0x98
  5561                           
  5562                           	global	_TXEN
  5563                           	global	_TXEN
  5564  0000                     	_TXEN	set	0x4C5	;byte address: 0x98
  5565                           
  5566                           	global	_TXIE
  5567                           	global	_TXIE
  5568  0000                     	_TXIE	set	0x464	;byte address: 0x8C
  5569                           
  5570                           	global	_TXIF
  5571                           	global	_TXIF
  5572  0000                     	_TXIF	set	0x64	;byte address: 0xC
  5573                           
  5574                           	global	_UA
  5575                           	global	_UA
  5576  0000                     	_UA	set	0x4A1	;byte address: 0x94
  5577                           
  5578                           	global	_WCOL
  5579                           	global	_WCOL
  5580  0000                     	_WCOL	set	0xA7	;byte address: 0x14
  5581                           
  5582                           	global	_WR
  5583                           	global	_WR
  5584  0000                     	_WR	set	0xC61	;byte address: 0x18C
  5585                           
  5586                           	global	_WREN
  5587                           	global	_WREN
  5588  0000                     	_WREN	set	0xC62	;byte address: 0x18C
  5589                           
  5590                           	global	_WRERR
  5591                           	global	_WRERR
  5592  0000                     	_WRERR	set	0xC63	;byte address: 0x18C
  5593                           
  5594                           	global	_ZERO
  5595                           	global	_ZERO
  5596  0000                     	_ZERO	set	0x1A	;byte address: 0x3
  5597                           
  5598                           	
  5599  070F                     STR_1:	
  5600  070F  3449               	retlw	73	;'I'
  5601  0710  344E               	retlw	78	;'N'
  5602  0711  3449               	retlw	73	;'I'
  5603  0712  3454               	retlw	84	;'T'
  5604  0713  3449               	retlw	73	;'I'
  5605  0714  3441               	retlw	65	;'A'
  5606  0715  344C               	retlw	76	;'L'
  5607  0716  3449               	retlw	73	;'I'
  5608  0717  345A               	retlw	90	;'Z'
  5609  0718  3449               	retlw	73	;'I'
  5610  0719  344E               	retlw	78	;'N'
  5611  071A  3447               	retlw	71	;'G'
  5612  071B  342E               	retlw	46	;'.'
  5613  071C  342E               	retlw	46	;'.'
  5614  071D  342E               	retlw	46	;'.'
  5615  071E  342E               	retlw	46	;'.'
  5616  071F  3400               	retlw	0
  5617                           	
  5618  0720                     STR_2:	
  5619  0720  3420               	retlw	32	;' '
  5620  0721  3420               	retlw	32	;' '
  5621  0722  3400               	retlw	0
  5622  0000                     STR_3	equ	STR_2+1
  5623                           	PSECT	fnauto0,class=BANK0,space=1
  5624                           	FNCONF	fnauto0,??,?
  5625                           
  5626                           	DABS	1,126,2	;btemp
  5627                           	global	btemp
  5628  0000                     	btemp set 07Eh
  5629                           	global	wtemp0
  5630  0000                     	wtemp0 set btemp
  5631                           	global	wtemp1
  5632  0000                     	wtemp1 set btemp+2
  5633                           	global	ttemp0
  5634  0000                     	ttemp0 set btemp
  5635                           	global	ltemp0
  5636  0000                     	ltemp0 set btemp
  5637                           apbank macro
  5638                           	bcf	status,5
  5639                           	bcf	status,6
  5640  0020                     	endm


HI-TECH Software PICC Macro Assembler V9.65PL1 build 4898 
Symbol Table                                          Wed Jun 27 16:31:26 2012

                             l1 0FFF                               l2 0FF9  
                             l3 0FE8                               l4 0FFF  
                             l5 0FEB                               l7 0FF3  
                             l8 07FC                               l9 0FD3  
                     __Lrdata_0 0078                               _i 0078  
                             _j 007A                               _k 007C  
                             pc 0002                       __Lramdata 0078  
             _LCDWriteInteger_c 0032               _LCDWriteInteger_i 0031  
                            l10 0FC8                              l11 00B0  
                            l12 00A3                              _DA 04A5  
                            l21 0107                              l13 0092  
                            _BF 04A0                              l14 00B0  
                            l30 05D7                              _DC 0019  
                            l15 00DB                              l31 069A  
                            l16 0FE6                              l40 037A  
                            l32 0665                              l41 0386  
                            l33 06A7                              l17 013F  
                            l42 03BC                              l34 06B4  
                            l18 011C                              l50 0022  
                            l43 0387                              l35 06AA  
                            l19 0139                              l44 03CB  
                            l52 0065                              l36 06BE  
                            l45 03D6                              l29 06FF  
                            l37 06D7                              l46 03CC  
                            l38 06FF                              l39 03E0  
                            l47 03E0                              l49 005C  
                            l95 05A1                              l96 0485  
                            l97 049C                              l98 0590  
                            l99 04F2                              _PD 001B  
                            _RD 0C60                              _UA 04A1  
                            _TO 001C                              _RW 04A2  
                            _WR 0C61                              fsr 0004  
                           l101 04F1                             l111 0532  
                           l103 04DE                             l120 0590  
                           l104 04C8                             l200 02D7  
                           l121 05A0                             l113 051F  
                           l105 04EB                             l201 02C6  
                           l114 0509                             l106 04DF  
                           l202 02D2                             l115 052C  
                           l107 04F1                             l203 02C7  
                           l300 0233                             l116 0520  
                           l108 0532                             l220 0353  
                           l140 0416                             l204 02D7  
                           l301 023C                             l109 0532  
                           l117 0532                             l221 0327  
                           l213 01C7                             l141 0428  
                           l205 02E6                             l310 027B  
                           l302 0272                             l118 054A  
                           l222 031C                             l214 0185  
                           l303 0251                             l119 0562  
                           l223 032B                             l215 019F  
                           l143 0468                             l127 008D  
                           l400 07C8                             l304 0246  
                           l216 01C0                             l144 0440  
                           l136 0483                             l401 07D6  
                           l305 0255                             l217 0363  
                           l225 0353                             l145 0452  
                           l137 040F                             l226 032B  
                           l218 0301                             l146 047C  
                           l307 0272                             l227 0346  
                           l219 030E                             l139 043E  
                           l308 0255                             l228 035C  
                           l309 0265                             l238 0070  
                           l239 006F                             l263 0177  
                           l264 0151                             l265 0162  
                           l194 02EF                             l195 02B7  
                           _CM0 04E0                             l390 07EE  
                           l198 02B6                             _CM1 04E1  
                           l391 074C                             l199 02A5  
                           _CM2 04E2                             l392 075F  
                           l393 074D                             l394 0773  
                           l387 0221                             l395 0795  
                           l299 027C                             l388 01F4  
                           l396 0774                             l389 0215  
                           l397 07A9                             l398 07BA  
                           l399 07AA                             _CKE 04A6  
                           _IBF 044F                             _CIS 04E3  
                      ___awtoft 0178                             _CKP 00A4  
                           _GIE 005F                             _BOR 0470  
                           _RA0 0028                        ___ftpack 0729  
                           _RA1 0029                             _RB0 0030  
                           _RA2 002A                             _RB1 0031  
                           _RA3 002B                             _RC0 0038  
                           _RB2 0032                             _RA4 002C  
                           _RC1 0039                             _RB3 0033  
                           _RA5 002D                             _RD0 0040  
                           _RC2 003A                             _RB4 0034  
                           _RD1 0041                             _RC3 003B  
                           _RB5 0035                             _RE0 0048  
                           _RD2 0042                             _RC4 003C  
                           _RB6 0036                             _RE1 0049  
                           _RD3 0043                             _RC5 003D  
                           _RB7 0037                             _RE2 004A  
                           _RD4 0044                             _RC6 003E  
                           _RD5 0045                             _RC7 003F  
                           _RD6 0046                             _OBF 044E  
                           _RD7 0047                             _FSR 0004  
                           _PCL 0002                             _PS0 0408  
                           _PR2 0092                             _PS1 0409  
                           _RP0 001D                             _PS2 040A  
                           _PEN 048A                             _IRP 001F  
                           _RP1 001E                             _SEN 0488  
                           _PSA 040B                             _POR 0471  
                           _RX9 00C6                             _SMP 04A7  
                           _TX9 04C6                       l600000782 0740  
                     l600000776 04DE                       l600000777 051F  
                     l600000778 0408                       ?___awtoft 002F  
                     ?___ftpack 0041                             fsr0 0004  
                           indf 0000                         ??_Delay 003E  
                    ??___awtoft 0032                      ??___ftpack 0042  
                   _Delay_pause 003E                            _ADIE 0466  
                          _ADIF 0066                            _ADFM 04FF  
                          _ADGO 00FA                        __tempreg 0020  
                          _ADON 00F8                            _CHS0 00FB  
                          _CHS1 00FC                            _CHS2 00FD  
                          _EEIE 046C                            _EEIF 006C  
                          STR_1 070F                            STR_2 0720  
                          STR_3 0721                            _GCEN 048F  
                          _CMIE 046E                            _CMIF 006E  
                          _BRGH 04C2                            _T0IE 005D  
                          _T0IF 005A                            _CREN 00C4  
                          _T0CS 040D                            _FERR 00C2  
                          u2000 0211                            u1200 04F1  
                          u1120 0495                            u2001 0210  
                          u1201 04F0                            u1121 0494  
                          u2010 072E                            u1210 04F8  
                          u1130 04AB                            u1211 04F7  
                          _IBOV 044D                            _CVR0 04E8  
                          u2100 07E1                            u2020 0740  
                          u1300 0579                            u1220 0502  
                          u1140 04B3                            _CVR1 04E9  
                          u2021 073F                            u1301 0578  
                          u1221 0501                            u1141 04B2  
                          _CVR2 04EA                            u1310 059E  
                          u1150 04BD                            _CVR3 04EB  
                          u1151 04BC                            u2040 0773  
                          u1240 0519                            u1320 0403  
                          u2105 07DD                            u2041 0772  
                          u1241 0518                            u1250 051F  
                          u1170 04D8                            u1410 0468  
                          u1330 0408                            _T0SE 040C  
                          _CSRC 04C7                            u2035 0755  
                          u1251 051E                            u1235 050A  
                          u1171 04D7                            u1411 0467  
                          u1331 0407                            u2060 07A9  
                          u1180 04DE                            u1420 0476  
                          u1340 041A                            u2300 06F3  
                          u2061 07A8                            u1181 04DD  
                          u1165 04C9                            u1405 045B  
                          u1341 0419                            u2301 06F2  
                          _INDF 0000                            u1270 0532  
                          u2055 078B                            u1271 0531  
                          u2080 07C8                            u1280 0536  
                          u2320 00B0                            u2240 0139  
                          u2081 07C7                            u1265 0521  
                          u2321 00AF                            u2241 0138  
                          u2090 07CC                            u1290 054E  
                          u1370 043E                            u2330 036D  
                          u2250 05BC                            u2315 00EE  
                          u2091 07CB                            u2075 07AF  
                          u1195 04E0                            u1371 043D  
                          u1355 0429                            u2331 036C  
                          u2251 05BB                            u1380 0444  
                          u2340 0380                            u1700 02DB  
                          u2260 06A7                            u1381 0443  
                          u1365 0431                            u2341 037F  
                          u2261 06A6                            u1710 017E  
                          u2350 03CB                            u1630 0295  
                          u2270 06BE                            u1711 017D  
                          u2351 03CA                            u1631 0294  
                          u2271 06BD                            u1800 033C  
                          u1720 0197                            u2360 03E0  
                          u1640 029C                            u2280 06CB  
                          u1801 033B                            u1721 0196  
                          u2361 03DF                            u1641 029B  
                          u2281 06CA                            u2370 0FF3  
                          u1730 01AD                            u2290 06E6  
                          u2371 0FF2                            u1731 01AC  
                          u1395 0453                            u2291 06E5  
                          u2380 0FFF                            u1900 0237  
                          u1820 0353                            u1740 02F9  
                          u1660 02B6                            u2381 0FFE  
                          u1901 0236                            u1821 0352  
                          u1805 0338                            u1741 02F8  
                          u1661 02B5                            u1910 0242  
                          u1830 0357                            u1750 0305  
                          u1670 02BD                            _PIE1 008C  
                          u1911 0241                            u1815 0347  
                          u1751 0304                            u1671 02BC  
                          u1655 02A6                            _PIE2 008D  
                          u1840 006D                            u1760 0318  
                          u1841 006C                            u1761 0317  
                          u1930 0255                            u1690 02D7  
                          u1850 0144                            u1931 0254  
                          u1691 02D6                            u1851 0143  
                          u1940 025F                            u1780 032B  
                          u1860 0155                            u1941 025E  
                          u1925 0247                            u1781 032A  
                          u1685 02C9                            u1861 0154  
                          _CVRR 04ED                            u1775 031D  
                          u1960 0272                            u1961 0271  
                          u1945 025B                            u1970 0276  
                          u1890 022B                            _PEIE 005E  
                          u1955 0266                            u1891 022A  
                          u1795 032C                            u1875 0170  
                          u1980 01D9                            _INTE 005C  
                          _INTF 0059                            u1990 01E8  
                          _RBIE 005B                            u1991 01E7  
                          u1887 0173                            _RBIF 0058  
                          u1888 0175                            u1985 01D5  
                          u1889 0176                            _RCIE 0465  
                          _RCIF 0065                            _RCEN 048B  
                          _PCON 008E                            _PIR1 000C  
                          _PIR2 000D                            _OERR 00C1  
                          _RBPU 040F                            _RX9D 00C0  
                          _TMR0 0001                            _TMR2 0011  
                          _WCOL 00A7                            _SPEN 00C7  
                          _RSEN 0489                       __databank FFFFFFFF  
                          _TX9D 04C0                            _SREN 00C5  
                          _TRMT 04C1                            _STOP 04A4  
                          _ZERO 001A                            _TXIE 0464  
                          _WREN 0C62                            _TXIF 0064  
                          _TXEN 04C5                            _SYNC 04C4  
                          _main 0018                            btemp 007E  
              __end_of_LCDReset 0FE7                            start 0000  
                  ___awdiv_sign 003D                 _LCDWriteCommand 0FC9  
               _LCDWriteFloat_c 0028                 _LCDWriteFloat_i 0023  
               _LCDWriteFloat_n 0026                 ___awmod_divisor 003B  
                  ___ftadd_exp1 003F                    ___ftadd_exp2 003E  
               ___awmod_counter 003E                    ___ftadd_cntr 003C  
               _LCDWriteInteger 0364                ?_LCDWriteCommand 002F  
                       ?___ftge 002F                        ??___ftge 0035  
                  ___awmod_sign 003D                 __end_of___awdiv 0364  
               __end_of___ftadd 05A2                 __end_of___awmod 027D  
              ?_LCDWriteInteger 002F                       stringcode 0708  
               __end_of___ftneg 0071                 __end_of___ftmul 0484  
               __end_of___ftsub 008E                 __end_of___fttol 02F0  
                 __end_of_Delay 1000                         _CCP1CON 0017  
                       _CCP2CON 001D                      ___ftadd_f1 0035  
                    ___ftadd_f2 0038                   _LCDWriteFloat 05A2  
                       _ACKSTAT 048E                           _C1INV 04E4  
                    ___ftge_ff1 002F                      ___ftge_ff2 0032  
                         _C2INV 04E5                           _C1OUT 04E6  
                         _C2OUT 04E7                           _ADCS0 00FE  
                         _ADCS1 00FF                           _ADCS2 04FE  
                         _ADDEN 00C3                           ?_main 0020  
                         _ACKEN 048C                           _ACKDT 048D  
                         _BCLIE 046B                           _BCLIF 006B  
                         _CCP1X 00BD                           _CCP1Y 00BC  
                         _CCP2X 00ED                           _CCP2Y 00EC  
                         _EEADR 010D               ??_LCDWriteCommand 002F  
                         _CARRY 0018                           _EEPGD 0C67  
                         _CMCON 009C                           _T1CON 0010  
                         _T2CON 0012                           u23010 06EF  
                         u23015 06ED                      ___ftneg_f1 0038  
                         u22610 06A3                         _T1CKPS0 0084  
                       _T1CKPS1 0085                           u23510 03C7  
                         u22615 06A1                           u22810 06C7  
                         u23515 03C5                      ___awtoft_c 002F  
                         u22910 06E2                           u22815 06C5  
                         u22915 06E0                           _PCFG0 04F8  
                         _PCFG1 04F9                           _PCFG2 04FA  
                         _PCFG3 04FB                         _T2CKPS0 0090  
                       _T2CKPS1 0091                           _CVREN 04EF  
                         _CVROE 04EE                  ?_LCDInitialize 0020  
     _LCDWriteString_lcd_string 002F                           _RCREG 001A  
                         _RCSTA 0018                           _TMR1H 000F  
                         _TMR1L 000E                           _SPBRG 0099  
                         _PORTA 0005                           _PORTB 0006  
                       _T1OSCEN 0083                           _PORTC 0007  
                         _PORTD 0008                           _PORTE 0009  
                         _PSPIE 0467                           _PSPIF 0067  
                         _START 04A3                           _SSPM0 00A0  
                         _SSPM1 00A1                           _SSPM2 00A2  
                         _SSPM3 00A3                           _TRISA 0085  
                         _TRISB 0086                           _TRISC 0087  
                    ___ftmul_f1 002F                           _TRISD 0088  
                    ___ftmul_f2 0032                           _SSPIE 0463  
                         _TRISE 0089                      ___ftmul_f3 0038  
                         _SSPIF 0063                           _SSPEN 00A5  
                         _SSPOV 00A6               ??_LCDWriteInteger 0031  
                         _WRERR 0C63                 ??_LCDInitialize 0020  
                         _TXREG 0019                           _TXSTA 0098  
                    ___ftsub_f1 002F                      ___ftsub_f2 0032  
                         _Delay 0FE7                      ___fttol_f1 002F  
                  ___ftpack_arg 0042                    ___ftpack_exp 0041  
                    ___ftunpack 01C8              __end_of___ftunpack 0222  
         __end_of_LCDWriteFloat 0700                         _PSPMODE 044C  
                       _SSPCON2 0091                       _LCDEnable 07EF  
                ??_LCDWriteData 0039               __end_of_LCDEnable 07FD  
                ??_LCDWriteByte 003A   _LCDWriteInteger_IntegerNumber 002F  
                       _SSPSTAT 0094                         _TOUTPS0 0093  
                       _TOUTPS1 0094                         _TOUTPS2 0095  
                       _TOUTPS3 0096                           pclath 000A  
                  ___ftmul_exp1 0036                     ?___ftunpack 0041  
                  ___ftmul_cntr 0037                           ltemp0 007E  
                    ?_LCDEnable 003C                           ttemp0 007E  
                         status 0003            _MainSystemInitialize 0060  
                         wtemp0 007E                           wtemp1 0080  
                  ___fttol_exp1 0034                    ___fttol_lval 0035  
         ?_MainSystemInitialize 0020                ___awmod_dividend 0039  
          _LCDWriteData_LCDData 0039                     ??_LCDEnable 003C  
                 ___ftadd_sign1 003D                   ___ftadd_sign2 003B  
        ??_MainSystemInitialize 0020                ___awdiv_dividend 0039  
                   __stringbase 070E  __end_of_LCDDisplayInitializing 0140  
                       ___awdiv 02F0                         ___ftadd 0484  
                       ___awmod 0222                         ___ftneg 0066  
                       ___ftmul 03E1                         ___ftsub 0071  
                       ___fttol 027D                        ?___awdiv 0039  
                      ?___ftadd 0035                        ?___awmod 0039  
                      ?___ftneg 0038                        ?___ftmul 002F  
                      ?___ftsub 002F                        ?___fttol 002F  
       __end_of_LCDWriteCommand 0FD4                    ??___ftunpack 0042  
                     ??___awdiv 003D                       ??___ftadd 003B  
                     ??___awmod 003D                       ??___ftneg 003B  
                     ??___ftmul 0035                       ??___ftsub 0035  
                     ??___fttol 0033                      _Delay_time 003C  
                        ??_main 0020         __end_of_LCDWriteInteger 03E1  
              __end_of___awtoft 01C8                __end_of___ftpack 07EF  
                        ?_Delay 003C       _LCDWriteFloat_FloatNumber 0020  
                __end_of___ftge 0178                        stringdir 0709  
                      stringjmp 070D                        stringtab 0700  
                        _ADCON0 001F                          _ADCON1 009F  
                  _LCDWriteData 0FBE                          _CCP1M0 00B8  
                        _CCP1M1 00B9                          _CCP1M2 00BA  
                        _CCP1M3 00BB                          _CCP2M0 00E8  
                        _CCP2M1 00E9                          _CCP2M2 00EA  
                        _CCP2M3 00EB                          _CCP1IE 0462  
                        _CCP1IF 0062                          _CCP2IE 0468  
                        _CCP2IF 0068                    _LCDWriteByte 00DC  
                _LCDWriteString 008E                          _ADRESH 001E  
                        _EEADRH 010F                          _ADRESL 009E  
                        _EEADRL 010D                          _EEDATA 010C  
                        _CCPR1H 0016                          _EEDATH 010E  
                        _CCPR2H 001C                          _CCPR1L 0015  
                        _CCPR2L 001B                          _EECON1 018C  
                        _EECON2 018D    __end_of_MainSystemInitialize 0066  
                  __end_of_main 0060                ___awdiv_quotient 003F  
               ?_LCDWriteString 002F                     ___awtoft_f1 0032  
                        _GODONE 00FA                          _CVRCON 009D  
                        _T1SYNC 0082                          _INTEDG 040E  
                        _PCLATH 000A                          _INTCON 000B  
          __end_of_LCDWriteData 0FC9            __end_of_LCDWriteByte 0108  
        _LCDDisplayInitializing 0108                          _TMR0IE 005D  
                        _TMR0IF 005A                          _TMR1IE 0460  
                        _TMR1IF 0060                          _TMR1CS 0081  
                        _TMR2IE 0461                          _TMR2IF 0061  
                        _TMR1ON 0080                          _OPTION 0081  
       _LCDWriteCommand_LCDData 002F                          _TMR2ON 0092  
                        _SSPADD 0093                          _TRISA0 0428  
              ??_LCDWriteString 002F                          _TRISA1 0429  
                        _TRISB0 0430                          _TRISA2 042A  
                        _TRISB1 0431                          _TRISA3 042B  
                        _TRISC0 0438                          _TRISB2 0432  
                        _TRISA4 042C                          _TRISC1 0439  
                        _TRISB3 0433                          _TRISA5 042D  
                        _TRISD0 0440                          _TRISC2 043A  
                        _TRISB4 0434                          _TRISD1 0441  
                        _TRISC3 043B                          _TRISB5 0435  
                        _TRISE0 0448                          _TRISD2 0442  
                        _TRISC4 043C                          _TRISB6 0436  
                        _TRISE1 0449                          _TRISD3 0443  
                        _TRISC5 043D                          _TRISB7 0437  
                        _TRISE2 044A                          _TRISD4 0444  
                        _TRISC6 043E                          _TRISD5 0445  
                        _TRISC7 043F                          _TRISD6 0446  
                        _TRISD7 0447                          _STATUS 0003  
                        _SSPCON 0014                          _SSPBUF 0013  
                      _LCDReset 0FD4                       ?_LCDReset 0021  
               ___awdiv_divisor 003B                      ??_LCDReset 0021  
                        ___ftge 0140                 ___awdiv_counter 003E  
       ?_LCDDisplayInitializing 0020        _LCDDisplayInitializing_i 0020  
               ___ftunpack_sign 0043                  ?_LCDWriteFloat 0020  
        __end_of_LCDWriteString 00B1                   _LCDInitialize 00B1  
               ??_LCDWriteFloat 0023            _LCDWriteByte_LCDData 003A  
                 ___ftmul_sign1 0035                  ___ftunpack_arg 0042  
                ___ftunpack_exp 0041                   ?_LCDWriteData 0039  
            _LCDWriteFloat_Temp 0024                   ?_LCDWriteByte 003A  
         __end_of_LCDInitialize 00DC                   ___fttol_sign1 0033  
      ??_LCDDisplayInitializing 0020                       __Hrdata_0 007E  
                     __Hramdata 007E  
